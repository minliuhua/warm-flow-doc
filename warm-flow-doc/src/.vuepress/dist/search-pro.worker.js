const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":1377,\"nextId\":1377,\"documentIds\":{\"0\":\"0\",\"1\":\"0#👍友情链接\",\"2\":\"1\",\"3\":\"2\",\"4\":\"3\",\"5\":\"3#为开源项目点一个star\",\"6\":\"3#为社区处理问题\",\"7\":\"3#改进社区文档-文档仓库\",\"8\":\"3#贡献代码\",\"9\":\"3#如何成为项目贡献者\",\"10\":\"3#项目贡献者待遇\",\"11\":\"4\",\"12\":\"4#_1、项目介绍\",\"13\":\"4#_2、开源协议\",\"14\":\"4#_3、应用场景\",\"15\":\"4#_4、支持数据库类型\",\"16\":\"4#_5、支持orm框架类型\",\"17\":\"4#_6、演示地址\",\"18\":\"4#_7、特别赞助\",\"19\":\"4#_8、你可以请作者喝杯咖啡表示鼓励\",\"20\":\"5\",\"21\":\"5#交流群\",\"22\":\"6\",\"23\":\"6#_1、学习视频\",\"24\":\"6#_2、博文\",\"25\":\"7\",\"26\":\"8\",\"27\":\"8#vip群\",\"28\":\"8#私人服务\",\"29\":\"8#特别赞助\",\"30\":\"9\",\"31\":\"10\",\"32\":\"10#演示图\",\"33\":\"10#_1、新增定义\",\"34\":\"10#_2、流程设计\",\"35\":\"10#_2、1节点设置\",\"36\":\"10#_2、2跳转线设置\",\"37\":\"10#_3、开启流程实例\",\"38\":\"10#_4、提交流程\",\"39\":\"10#_5、办理流程\",\"40\":\"10#_6、驳回流程\",\"41\":\"11\",\"42\":\"12\",\"43\":\"12#步骤一-fork项目到自己仓库\",\"44\":\"12#步骤二-基于dev分支-新建一个此pr功能点的专属分支\",\"45\":\"12#步骤三-使用git工具-将自己仓库的项目拉去到本地做代码编写\",\"46\":\"12#步骤四-使用idea打开项目-切换到新建的功能分支\",\"47\":\"12#步骤五-设置创建类的模板\",\"48\":\"12#步骤六-将编写好的代码-提交到自己的远程仓库\",\"49\":\"12#步骤七-创建pr申请-此操作在自己仓库或者要pr的仓库都可以\",\"50\":\"12#步骤八-等待作者评审-按要求更改-直到没有问题后被作者合并\",\"51\":\"13\",\"52\":\"13#捐赠列表\",\"53\":\"14\",\"54\":\"14#_1、id精度丢失\",\"55\":\"14#方案1-处理长度过长的long类型\",\"56\":\"14#方案2-序列化所有long类型\",\"57\":\"14#方案3-通过yml配置\",\"58\":\"14#方案4-自定义id生成策略\",\"59\":\"14#_2、流程图片中文乱码\",\"60\":\"14#linux环境-安装中文字体\",\"61\":\"14#docker环境-安装中文字体\",\"62\":\"14#_3、flowautoconfig-initflow-未加载\",\"63\":\"14#_4、监听器未执行或者类型转换异常\",\"64\":\"14#_5、hh-vue切换mybaits-plus\",\"65\":\"14#_6、导入依赖包失败\",\"66\":\"14#_6-1、可尝试切换maven版本-感谢【一拳打爆常大宝】\",\"67\":\"14#_7、-stackoverflowerror-错误\",\"68\":\"15\",\"69\":\"15#未来发布计划\",\"70\":\"15#vx-x-x\",\"71\":\"15#开发中计划\",\"72\":\"15#v1-3-5\",\"73\":\"15#更新日志-1\",\"74\":\"15#v1-3-4-2024-11-25\",\"75\":\"15#v1-3-3-2024-11-12\",\"76\":\"15#v1-3-1-2024-11-01\",\"77\":\"15#v1-3-0-2024-10-23\",\"78\":\"15#v1-2-10-2024-09-26\",\"79\":\"15#v1-2-8-2024-09-25\",\"80\":\"15#v1-2-7-2024-09-03\",\"81\":\"15#v1-2-6-2024-08-28\",\"82\":\"15#v1-2-4-2024-08-14\",\"83\":\"15#v1-2-3-2024-06-28\",\"84\":\"15#v1-2-1-2024-06-28\",\"85\":\"15#v1-2-0-2024-06-13\",\"86\":\"15#v1-1-9-2024-05-08\",\"87\":\"15#v1-1-7-2024-04-27\",\"88\":\"15#v1-1-6-2024-04-23\",\"89\":\"15#v1-1-5-2024-04-17\",\"90\":\"15#v1-1-4-2024-04-07\",\"91\":\"15#v1-1-3-2024-04-02\",\"92\":\"15#v1-1-2-2024-03-27\",\"93\":\"15#v1-1-1-2024-03-22\",\"94\":\"15#v1-1-0-2024-03-21\",\"95\":\"15#v1-0-4-2024-03-06\",\"96\":\"15#v1-0-3-2024-03-05\",\"97\":\"15#v1-0-2-2023-12-31\",\"98\":\"15#v1-0-0-2023-12-28\",\"99\":\"16\",\"100\":\"16#_1、defservice流程定义接口\",\"101\":\"16#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"102\":\"16#_1-2、新增流程定义-并初始化流程节点和流程跳转数据\",\"103\":\"16#_1-3、导入流程定义、流程节点和流程跳转数据\",\"104\":\"16#_1-4、保存流程节点和流程跳转数据\",\"105\":\"16#_1-5、保存流程节点和流程跳转数据\",\"106\":\"16#_1-6、导出流程定义\",\"107\":\"16#_1-7、获取流程定义\",\"108\":\"16#_1-8、删除\",\"109\":\"16#_1-9、发布\",\"110\":\"16#_1-10、取消发布\",\"111\":\"16#_1-11、复制流程\",\"112\":\"16#_1-12、获取流程图\",\"113\":\"16#_1-13、激活流程\",\"114\":\"16#_1-14、挂起流程\",\"115\":\"16#_1-15、获取流程定义\",\"116\":\"16#_1-16、查询流程设计所需的数据-比如流程图渲染-导出流程定义\",\"117\":\"16#_2、insservice流程实例接口\",\"118\":\"16#_2-1、开启流程\",\"119\":\"16#_2-2、流程跳转\",\"120\":\"16#_2-3、终止流程\",\"121\":\"16#_2-4、删除流程实例\",\"122\":\"16#_2-5、激活实例\",\"123\":\"16#_2-6、挂起实例\",\"124\":\"16#_2-7、根据流程定义id集合-查询流程实例集合\",\"125\":\"16#_3、taskservice待办任务接口\",\"126\":\"16#_3-1、流程跳转\",\"127\":\"16#_3-2、终止流程\",\"128\":\"16#_3-3、转办\",\"129\":\"16#_3-4、委派\",\"130\":\"16#_3-5、加签\",\"131\":\"16#_3-6、减签\",\"132\":\"16#_3-7、修改办理人\",\"133\":\"16#_4、nodeservice节点接口\",\"134\":\"16#_4-1、获取下一个节点列表\",\"135\":\"16#_5、公共api接口\",\"136\":\"16#_5-1、根据id查询\",\"137\":\"16#_5-2、根据ids主键集合查询\",\"138\":\"16#_5-3、分页查询\",\"139\":\"16#_5-4、查询列表\",\"140\":\"16#_5-5、查询列表-可排序\",\"141\":\"16#_5-6、查询一条记录\",\"142\":\"16#_5-7、获取总数量\",\"143\":\"16#_5-8、判断是否存在\",\"144\":\"16#_5-8、新增\",\"145\":\"16#_5-9、根据id修改\",\"146\":\"16#_5-10、根据id删除\",\"147\":\"16#_5-11、根据entity删除\",\"148\":\"16#_5-12、根据ids批量删除\",\"149\":\"16#_5-13、批量新增\",\"150\":\"16#_5-14、批量新增\",\"151\":\"16#_5-15、批量更新\",\"152\":\"16#_5-16、id设置正序排列\",\"153\":\"16#_5-17、创建时间设置正序排列\",\"154\":\"16#_5-18、更新时间设置正序排列\",\"155\":\"16#_5-19、设置正序排列\",\"156\":\"16#_5-20、设置倒序排列\",\"157\":\"16#_5-21、用户自定义排序方案\",\"158\":\"17\",\"159\":\"17#_1、流程协作规则\",\"160\":\"17#_2、使用演示\",\"161\":\"17#_2-1、或签\",\"162\":\"17#_2-2、票签签\",\"163\":\"17#_2-3、会签\",\"164\":\"18\",\"165\":\"18#_1、内置表达式\",\"166\":\"18#_2、匹配规则\",\"167\":\"19\",\"168\":\"19#_1、表达式公共接口\",\"169\":\"19#_2、注册表达式实现类\",\"170\":\"19#_3、条件表达式\",\"171\":\"19#_3-1、条件表达式接口\",\"172\":\"19#_3-2、条件表达式抽象类\",\"173\":\"19#_3-3、条件表达式实现类\",\"174\":\"20\",\"175\":\"20#_1、spring\",\"176\":\"20#_1-1、yaml配置方式\",\"177\":\"20#_1-2、bean配置方式\",\"178\":\"20#_2、solon\",\"179\":\"20#_2-1、yaml配置方式\",\"180\":\"20#_2-1、bean配置方式\",\"181\":\"21\",\"182\":\"21#_1、开启流程\",\"183\":\"21#_2、流程跳转\",\"184\":\"21#_3、其他请查阅核心api\",\"185\":\"22\",\"186\":\"22#_1、自定义填充器-并继承datafillhandler\",\"187\":\"22#_2、注入bean\",\"188\":\"22#_2-1、通过-component方式注入\",\"189\":\"22#_2-2、yaml配置方式\",\"190\":\"22#_2-3、-configuration-bean配置方式\",\"191\":\"23\",\"192\":\"23#_1-引入依赖\",\"193\":\"23#springboot\",\"194\":\"23#solon\",\"195\":\"23#_2-后端放行部分路径\",\"196\":\"23#_2-1-spring-security-放行配置\",\"197\":\"23#_2-2-shiro-放行配置\",\"198\":\"23#_2-3-sa-token-放行配置\",\"199\":\"23#_3-前端加载设计器\",\"200\":\"23#_3-2-vue2-引入\",\"201\":\"23#_3-3-vue3-引入\",\"202\":\"23#_3-4-react版本-引入\",\"203\":\"23#_3-5-前后端不分离版本\",\"204\":\"23#_4-设计器办理人权限数据接入\",\"205\":\"23#_4-1-办理人权限选择弹框页面\",\"206\":\"23#_4-2-实现接口获取以上页面办理人权限数据\",\"207\":\"23#_4-2-1-handlerselectservice接口\",\"208\":\"23#_4-2-2-handlerselectserviceimpl实现类\",\"209\":\"23#_5-共享后端权限-如token\",\"210\":\"24\",\"211\":\"24#_1-下载设计器源码-改造\",\"212\":\"24#_2-源码调试\",\"213\":\"24#_3-部署\",\"214\":\"24#_3-1-先排除原依赖的前端代码\",\"215\":\"24#_3-2-设计器不分离部署-部署方案一\",\"216\":\"24#_3-3-设计器独立部署-分离部署-部署方案二\",\"217\":\"25\",\"218\":\"25#_1、表达式公共接口\",\"219\":\"25#_2、注册表达式实现类\",\"220\":\"25#_3、办理人变量表达式\",\"221\":\"25#_3-1、办理人变量表达式接口\",\"222\":\"25#_3-2、办理人变量表达式实现类\",\"223\":\"25#_4-监听器表达式\",\"224\":\"25#_4-1、监听器表达式接口\",\"225\":\"25#_4-2、监听器表达式实现类\",\"226\":\"25#_5、条件表达式\",\"227\":\"25#_5-1、条件表达式接口\",\"228\":\"25#_5-2、条件表达式抽象类\",\"229\":\"25#_5-3、条件表达式实现类\",\"230\":\"26\",\"231\":\"27\",\"232\":\"28\",\"233\":\"28#_1、变更支持的类型\",\"234\":\"28#_2、接口描述\",\"235\":\"28#_3、代码示例\",\"236\":\"29\",\"237\":\"29#json库扩展-1\",\"238\":\"30\",\"239\":\"30#_1、监听器大类\",\"240\":\"30#_2、监听器小类\",\"241\":\"30#_3、监听器设置\",\"242\":\"30#_4、匹配规则\",\"243\":\"30#_5、监听器生命周期图\",\"244\":\"30#_5、节点和流程监听器\",\"245\":\"30#_5-1、实现以下接口\",\"246\":\"30#_5-2、开始监听器实现类例子\",\"247\":\"30#_5-3、完成监听器实现类例子\",\"248\":\"30#_5-4、分派监听器实现类例子\",\"249\":\"30#_5-5、创建监听器\",\"250\":\"30#_5-6、页面配置全局或节点监听器\",\"251\":\"30#_5-6-1、节点监听器-流程节点配置\",\"252\":\"30#_5-6-1、流程监听器-流程定义配置\",\"253\":\"30#_6、全局监听器\",\"254\":\"30#_7、监听器参数使用\",\"255\":\"31\",\"256\":\"31#_1、表达式公共接口\",\"257\":\"31#_2、注册表达式实现类\",\"258\":\"31#_3-监听器表达式\",\"259\":\"31#_3-1、监听器表达式接口\",\"260\":\"31#_3-2、监听器表达式实现类\",\"261\":\"32\",\"262\":\"32#_1、mybatis-plus\",\"263\":\"32#_1-1、spring\",\"264\":\"32#_1-2、solon\",\"265\":\"32#_2、通用逻辑删除\",\"266\":\"33\",\"267\":\"33#_1、mybatis-plus\",\"268\":\"33#_2、jpa\",\"269\":\"33#_3、mybatis-flex\",\"270\":\"34\",\"271\":\"34#_1、permissionhandler接口\",\"272\":\"34#_2、编写permissionhandler实现类\",\"273\":\"35\",\"274\":\"35#_1、术语\",\"275\":\"35#_2、通用规则\",\"276\":\"35#_3、流程状态\",\"277\":\"35#_4、串行网关规则\",\"278\":\"35#_5、并行网关规则\",\"279\":\"36\",\"280\":\"36#_1、导入sql-按需求执行\",\"281\":\"36#_2、官网流程定义案例xml\",\"282\":\"36#_3、maven依赖\",\"283\":\"36#_3-1、mybatis\",\"284\":\"36#_3-2、mybatis-plus\",\"285\":\"36#_3-3、jpa\",\"286\":\"36#_3-4、mybatis-flex\",\"287\":\"36#_3-5、easy-query\",\"288\":\"36#_4、代码示例\",\"289\":\"36#_4-1、部署流程\",\"290\":\"36#_4-2、发布流程\",\"291\":\"36#_4-3、开启流程\",\"292\":\"36#_4-4、流程流转\",\"293\":\"36#_5、设计器引入\",\"294\":\"36#_6、初学者推荐学习路线\",\"295\":\"36#_6-1、推荐集成案例hh-vue\",\"296\":\"36#_6-2、推荐学习视频\",\"297\":\"37\",\"298\":\"37#表清单\",\"299\":\"37#表字段明细\",\"300\":\"37#flow-definition-流程定义表\",\"301\":\"37#flow-his-task-历史任务记录表\",\"302\":\"37#flow-instance-流程实例表\",\"303\":\"37#flow-node-流程结点表\",\"304\":\"37#flow-skip-结点跳转关联表\",\"305\":\"37#flow-task-待办任务表\",\"306\":\"37#flow-user-流程用户表\",\"307\":\"38\",\"308\":\"38#_1、mybatis-plus\",\"309\":\"38#_1-1、spring\",\"310\":\"38#_1-2、solon\",\"311\":\"38#_2、通用多租户\",\"312\":\"38#_2-1、yaml配置方式\",\"313\":\"38#_2-2、bean配置方式\",\"314\":\"38#_2-3、-component配置方式\",\"315\":\"39\",\"316\":\"40\",\"317\":\"40#_1、特点\",\"318\":\"40#_2、内置表达式\",\"319\":\"40#_3、匹配规则\",\"320\":\"40#_4、变量替换时机\",\"321\":\"40#_5、默认办理人变量策略\",\"322\":\"40#前端页面设置变量\",\"323\":\"40#后端代码设置变量\",\"324\":\"40#_6、spel办理人变量策略\",\"325\":\"40#前端页面设置变量-1\",\"326\":\"40#后端代码设置变量-1\",\"327\":\"40#_7、办理人选择项接口\",\"328\":\"41\",\"329\":\"41#_1、表达式公共接口\",\"330\":\"41#_2、注册表达式实现类\",\"331\":\"41#_3、办理人变量表达式\",\"332\":\"41#_3-1、办理人变量表达式接口\",\"333\":\"41#_3-2、办理人变量表达式实现类\",\"334\":\"42\",\"335\":\"42#_1、defservice流程定义接口\",\"336\":\"42#_1-1、导入流程定义\",\"337\":\"42#_1-2、保存流程定义\",\"338\":\"42#_1-3、导出流程定义\",\"339\":\"42#_1-4、获取流程定义\",\"340\":\"42#_1-5、删除\",\"341\":\"42#_1-6、发布\",\"342\":\"42#_1-7、取消发布\",\"343\":\"42#_1-8、复制流程\",\"344\":\"42#_1-9、获取流程图\",\"345\":\"42#_1-10、激活流程\",\"346\":\"42#_1-11、挂起流程\",\"347\":\"42#_2、insservice流程实例接口\",\"348\":\"42#_2-1、开启流程\",\"349\":\"42#_2-2、流程跳转\",\"350\":\"42#_2-3、终止流程\",\"351\":\"42#_2-4、删除流程实例\",\"352\":\"42#_2-5、激活实例\",\"353\":\"42#_2-6、挂起实例\",\"354\":\"42#_3、taskservice待办任务接口\",\"355\":\"42#_3-1、流程跳转\",\"356\":\"42#_3-2、终止流程\",\"357\":\"42#_3-3、转办\",\"358\":\"42#_3-4、委派\",\"359\":\"42#_3-5、加签\",\"360\":\"42#_3-6、减签\",\"361\":\"42#_3-7、修改办理人\",\"362\":\"42#_4、nodeservice节点接口\",\"363\":\"42#_4-1、获取下一个节点列表\",\"364\":\"42#_5、公共api接口\",\"365\":\"42#_5-1、根据id查询\",\"366\":\"42#_5-2、根据ids主键集合查询\",\"367\":\"42#_5-3、分页查询\",\"368\":\"42#_5-4、查询列表\",\"369\":\"42#_5-5、查询列表-可排序\",\"370\":\"42#_5-6、查询一条记录\",\"371\":\"42#_5-7、获取总数量\",\"372\":\"42#_5-8、判断是否存在\",\"373\":\"42#_5-8、新增\",\"374\":\"42#_5-9、根据id修改\",\"375\":\"42#_5-10、根据id删除\",\"376\":\"42#_5-11、根据entity删除\",\"377\":\"42#_5-12、根据ids批量删除\",\"378\":\"42#_5-13、批量新增\",\"379\":\"42#_5-14、批量新增\",\"380\":\"42#_5-15、批量更新\",\"381\":\"42#_5-16、id设置正序排列\",\"382\":\"42#_5-17、创建时间设置正序排列\",\"383\":\"42#_5-18、更新时间设置正序排列\",\"384\":\"42#_5-19、设置正序排列\",\"385\":\"42#_5-20、设置倒序排列\",\"386\":\"42#_5-21、用户自定义排序方案\",\"387\":\"43\",\"388\":\"43#_1、spring\",\"389\":\"43#_1-1、yaml配置方式\",\"390\":\"43#_1-2、bean配置方式\",\"391\":\"43#_2、solon\",\"392\":\"43#_2-1、yaml配置方式\",\"393\":\"43#_2-1、bean配置方式\",\"394\":\"44\",\"395\":\"44#_1、开启流程\",\"396\":\"44#_2、流程跳转\",\"397\":\"44#_3、其他请查阅核心api\",\"398\":\"45\",\"399\":\"45#_1、自定义填充器-并继承datafillhandler\",\"400\":\"45#_2、注入bean\",\"401\":\"45#_2-1、通过-component方式注入\",\"402\":\"45#_2-2、yaml配置方式\",\"403\":\"45#_2-3、-configuration-bean配置方式\",\"404\":\"46\",\"405\":\"46#_1、内置表达式\",\"406\":\"46#_2、spring-expression-language-spel\",\"407\":\"46#_3、自定义表达式\",\"408\":\"47\",\"409\":\"48\",\"410\":\"49\",\"411\":\"49#json库扩展-1\",\"412\":\"50\",\"413\":\"50#_1、监听器类型\",\"414\":\"50#_2、流程监听器和节点监听器\",\"415\":\"50#_2、监听器生命周期图\",\"416\":\"50#_3、监听器使用\",\"417\":\"50#_3-1、实现以下接口\",\"418\":\"50#_3-2、开始监听器实现类例子\",\"419\":\"50#_3-3、完成监听器实现类例子\",\"420\":\"50#_3-4、分派监听器实现类例子\",\"421\":\"50#_3-5、创建监听器\",\"422\":\"50#_3-6、页面配置全局或节点监听器\",\"423\":\"50#_3-6-1、节点监听器-流程节点配置\",\"424\":\"50#_3-6-1、流程监听器-流程定义配置\",\"425\":\"50#_4、监听器参数使用\",\"426\":\"51\",\"427\":\"51#_1、mybatis-plus\",\"428\":\"51#_1-1、spring\",\"429\":\"51#_1-2、solon\",\"430\":\"51#_2、通用逻辑删除\",\"431\":\"52\",\"432\":\"52#_1、mybatis-plus\",\"433\":\"52#_2、jpa\",\"434\":\"52#_3、mybatis-flex\",\"435\":\"53\",\"436\":\"53#演示图\",\"437\":\"53#_1、新增定义\",\"438\":\"53#_2、流程设计\",\"439\":\"53#_2、1节点设置\",\"440\":\"53#_2、2跳转线设置\",\"441\":\"53#_3、开启流程实例\",\"442\":\"53#_4、提交流程\",\"443\":\"53#_5、办理流程\",\"444\":\"53#_6、驳回流程\",\"445\":\"54\",\"446\":\"54#_1、术语\",\"447\":\"54#_2、通用规则\",\"448\":\"54#_3、流程状态\",\"449\":\"54#_4、串行网关规则\",\"450\":\"54#_5、并行网关规则\",\"451\":\"54#_6、流程协作规则\",\"452\":\"55\",\"453\":\"56\",\"454\":\"56#_1、导入sql-按需求执行\",\"455\":\"56#_2、官网流程定义案例xml\",\"456\":\"56#_3、maven依赖\",\"457\":\"56#_3-1、mybatis\",\"458\":\"56#_3-2、mybatis-plus\",\"459\":\"56#_3-3、jpa\",\"460\":\"56#_3-4、mybatis-flex\",\"461\":\"56#_3-5、easy-query\",\"462\":\"56#_4、支持数据库类型\",\"463\":\"56#_5、支持orm框架类型\",\"464\":\"56#_6、代码示例\",\"465\":\"56#_7、部署流程\",\"466\":\"56#_8、发布流程\",\"467\":\"56#_9、开启流程\",\"468\":\"56#_10、流程流转\",\"469\":\"56#_11、初学者推荐学习路线\",\"470\":\"56#_11-1、推荐集成案例hh-vue\",\"471\":\"56#_11-2、推荐学习视频\",\"472\":\"57\",\"473\":\"57#表清单\",\"474\":\"57#表字段明细\",\"475\":\"57#flow-definition-流程定义表\",\"476\":\"57#flow-his-task-历史任务记录表\",\"477\":\"57#flow-instance-流程实例表\",\"478\":\"57#flow-node-流程结点表\",\"479\":\"57#flow-skip-结点跳转关联表\",\"480\":\"57#flow-task-待办任务表\",\"481\":\"57#flow-user-流程用户表\",\"482\":\"58\",\"483\":\"58#_1、mybatis-plus\",\"484\":\"58#_1-1、spring\",\"485\":\"58#_1-2、solon\",\"486\":\"58#_2、通用多租户\",\"487\":\"58#_2-1、yaml配置方式\",\"488\":\"58#_2-2、bean配置方式\",\"489\":\"58#_2-3、-component配置方式\",\"490\":\"59\",\"491\":\"60\",\"492\":\"60#_1、内置表达式\",\"493\":\"60#_2、变量替换时机\",\"494\":\"60#_3、默认办理人变量策略\",\"495\":\"60#前端页面设置变量\",\"496\":\"60#后端代码设置变量\",\"497\":\"60#_4、spel办理人变量策略\",\"498\":\"60#前端页面设置变量-1\",\"499\":\"60#后端代码设置变量-1\",\"500\":\"60#_5、扩展\",\"501\":\"61\",\"502\":\"61#_1、defservice流程定义接口\",\"503\":\"61#_1-1、导入流程定义\",\"504\":\"61#_1-2、保存流程定义\",\"505\":\"61#_1-3、保存流程定义\",\"506\":\"61#_1-4、导出流程定义\",\"507\":\"61#_1-5、获取流程定义\",\"508\":\"61#_1-6、删除\",\"509\":\"61#_1-7、发布\",\"510\":\"61#_1-8、取消发布\",\"511\":\"61#_1-9、复制流程\",\"512\":\"61#_1-10、获取流程图\",\"513\":\"61#_1-11、激活流程\",\"514\":\"61#_1-12、挂起流程\",\"515\":\"61#_2、insservice流程实例接口\",\"516\":\"61#_2-1、开启流程\",\"517\":\"61#_2-2、流程跳转\",\"518\":\"61#_2-3、终止流程\",\"519\":\"61#_2-4、删除流程实例\",\"520\":\"61#_2-5、激活实例\",\"521\":\"61#_2-6、挂起实例\",\"522\":\"61#_3、taskservice待办任务接口\",\"523\":\"61#_3-1、流程跳转\",\"524\":\"61#_3-2、终止流程\",\"525\":\"61#_3-3、转办\",\"526\":\"61#_3-4、委派\",\"527\":\"61#_3-5、加签\",\"528\":\"61#_3-6、减签\",\"529\":\"61#_3-7、修改办理人\",\"530\":\"61#_4、nodeservice节点接口\",\"531\":\"61#_4-1、获取下一个节点列表\",\"532\":\"61#_5、公共api接口\",\"533\":\"61#_5-1、根据id查询\",\"534\":\"61#_5-2、根据ids主键集合查询\",\"535\":\"61#_5-3、分页查询\",\"536\":\"61#_5-4、查询列表\",\"537\":\"61#_5-5、查询列表-可排序\",\"538\":\"61#_5-6、查询一条记录\",\"539\":\"61#_5-7、获取总数量\",\"540\":\"61#_5-8、判断是否存在\",\"541\":\"61#_5-8、新增\",\"542\":\"61#_5-9、根据id修改\",\"543\":\"61#_5-10、根据id删除\",\"544\":\"61#_5-11、根据entity删除\",\"545\":\"61#_5-12、根据ids批量删除\",\"546\":\"61#_5-13、批量新增\",\"547\":\"61#_5-14、批量新增\",\"548\":\"61#_5-15、批量更新\",\"549\":\"61#_5-16、id设置正序排列\",\"550\":\"61#_5-17、创建时间设置正序排列\",\"551\":\"61#_5-18、更新时间设置正序排列\",\"552\":\"61#_5-19、设置正序排列\",\"553\":\"61#_5-20、设置倒序排列\",\"554\":\"61#_5-21、用户自定义排序方案\",\"555\":\"62\",\"556\":\"62#_1、spring\",\"557\":\"62#_1-1、yaml配置方式\",\"558\":\"62#_1-2、bean配置方式\",\"559\":\"62#_2、solon\",\"560\":\"62#_2-1、yaml配置方式\",\"561\":\"62#_2-1、bean配置方式\",\"562\":\"63\",\"563\":\"63#_1、开启流程\",\"564\":\"63#_2、流程跳转\",\"565\":\"63#_3、其他请查阅核心api\",\"566\":\"64\",\"567\":\"64#_1、自定义填充器-并继承datafillhandler\",\"568\":\"64#_2、注入bean\",\"569\":\"64#_2-1、通过-component方式注入\",\"570\":\"64#_2-2、yaml配置方式\",\"571\":\"64#_2-3、-configuration-bean配置方式\",\"572\":\"65\",\"573\":\"65#_1-引入依赖\",\"574\":\"65#_2-后端放行部分路径\",\"575\":\"65#_2-1-spring-security-放行配置\",\"576\":\"65#_2-2-shiro-放行配置\",\"577\":\"65#_2-3-sa-token-放行配置\",\"578\":\"65#_3-前端加载设计器\",\"579\":\"65#_3-1-nginx-代理配置\",\"580\":\"65#_3-2-vue2-引入\",\"581\":\"65#_3-3-vue3-引入\",\"582\":\"65#_3-4-react版本-引入\",\"583\":\"65#_3-5-前后端不分离版本\",\"584\":\"65#_4-设计器办理人权限数据接入\",\"585\":\"65#_4-1-办理人权限选择弹框页面\",\"586\":\"65#_4-2-实现接口获取以上页面办理人权限数据\",\"587\":\"65#_4-2-1-handlerselectservice接口\",\"588\":\"65#_4-2-2-handlerselectserviceimpl实现类\",\"589\":\"66\",\"590\":\"66#_1、内置表达式\",\"591\":\"66#_2、spring-expression-language-spel\",\"592\":\"66#_3、自定义表达式\",\"593\":\"67\",\"594\":\"68\",\"595\":\"69\",\"596\":\"69#json库扩展-1\",\"597\":\"70\",\"598\":\"70#_1、监听器类型\",\"599\":\"70#_2、流程监听器和节点监听器\",\"600\":\"70#_2、监听器生命周期图\",\"601\":\"70#_3、监听器使用\",\"602\":\"70#_3-1、实现以下接口\",\"603\":\"70#_3-2、开始监听器实现类例子\",\"604\":\"70#_3-3、完成监听器实现类例子\",\"605\":\"70#_3-4、分派监听器实现类例子\",\"606\":\"70#_3-5、创建监听器\",\"607\":\"70#_3-6、页面配置全局或节点监听器\",\"608\":\"70#_3-6-1、节点监听器-流程节点配置\",\"609\":\"70#_3-6-1、流程监听器-流程定义配置\",\"610\":\"70#_4、监听器参数使用\",\"611\":\"71\",\"612\":\"71#_1、mybatis-plus\",\"613\":\"71#_1-1、spring\",\"614\":\"71#_1-2、solon\",\"615\":\"71#_2、通用逻辑删除\",\"616\":\"72\",\"617\":\"72#_1、mybatis-plus\",\"618\":\"72#_2、jpa\",\"619\":\"72#_3、mybatis-flex\",\"620\":\"73\",\"621\":\"73#演示图\",\"622\":\"73#_1、新增定义\",\"623\":\"73#_2、流程设计\",\"624\":\"73#_2、1节点设置\",\"625\":\"73#_2、2跳转线设置\",\"626\":\"73#_3、开启流程实例\",\"627\":\"73#_4、提交流程\",\"628\":\"73#_5、办理流程\",\"629\":\"73#_6、驳回流程\",\"630\":\"74\",\"631\":\"74#_1、术语\",\"632\":\"74#_2、通用规则\",\"633\":\"74#_3、流程状态\",\"634\":\"74#_4、串行网关规则\",\"635\":\"74#_5、并行网关规则\",\"636\":\"74#_6、流程协作规则\",\"637\":\"75\",\"638\":\"76\",\"639\":\"76#_1、导入sql-按需求执行\",\"640\":\"76#_2、官网流程定义案例xml\",\"641\":\"76#_3、maven依赖\",\"642\":\"76#_3-1、mybatis\",\"643\":\"76#_3-2、mybatis-plus\",\"644\":\"76#_3-3、jpa\",\"645\":\"76#_3-4、mybatis-flex\",\"646\":\"76#_3-5、easy-query\",\"647\":\"76#_4、支持数据库类型\",\"648\":\"76#_5、支持orm框架类型\",\"649\":\"76#_6、代码示例\",\"650\":\"76#_7、部署流程\",\"651\":\"76#_8、发布流程\",\"652\":\"76#_9、开启流程\",\"653\":\"76#_10、流程流转\",\"654\":\"76#_11、初学者推荐学习路线\",\"655\":\"76#_11-1、推荐集成案例hh-vue\",\"656\":\"76#_11-2、推荐学习视频\",\"657\":\"77\",\"658\":\"77#表清单\",\"659\":\"77#表字段明细\",\"660\":\"77#flow-definition-流程定义表\",\"661\":\"77#flow-his-task-历史任务记录表\",\"662\":\"77#flow-instance-流程实例表\",\"663\":\"77#flow-node-流程结点表\",\"664\":\"77#flow-skip-结点跳转关联表\",\"665\":\"77#flow-task-待办任务表\",\"666\":\"77#flow-user-流程用户表\",\"667\":\"78\",\"668\":\"78#_1、mybatis-plus\",\"669\":\"78#_1-1、spring\",\"670\":\"78#_1-2、solon\",\"671\":\"78#_2、通用多租户\",\"672\":\"78#_2-1、yaml配置方式\",\"673\":\"78#_2-2、bean配置方式\",\"674\":\"78#_2-3、-component配置方式\",\"675\":\"79\",\"676\":\"80\",\"677\":\"80#_1、内置表达式\",\"678\":\"80#_2、变量替换时机\",\"679\":\"80#_3、默认办理人变量策略\",\"680\":\"80#前端页面设置变量\",\"681\":\"80#后端代码设置变量\",\"682\":\"80#_4、spel办理人变量策略\",\"683\":\"80#前端页面设置变量-1\",\"684\":\"80#后端代码设置变量-1\",\"685\":\"80#_5、扩展\",\"686\":\"81\",\"687\":\"81#_1、defservice流程定义接口\",\"688\":\"81#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"689\":\"81#_1-1、新增流程定义、流程节点和流程跳转数据\",\"690\":\"81#_1-2、保存流程节点和流程跳转数据\",\"691\":\"81#_1-3、保存流程节点和流程跳转数据\",\"692\":\"81#_1-4、导出流程定义\",\"693\":\"81#_1-5、获取流程定义\",\"694\":\"81#_1-6、删除\",\"695\":\"81#_1-7、发布\",\"696\":\"81#_1-8、取消发布\",\"697\":\"81#_1-9、复制流程\",\"698\":\"81#_1-10、获取流程图\",\"699\":\"81#_1-11、激活流程\",\"700\":\"81#_1-12、挂起流程\",\"701\":\"81#_2、insservice流程实例接口\",\"702\":\"81#_2-1、开启流程\",\"703\":\"81#_2-2、流程跳转\",\"704\":\"81#_2-3、终止流程\",\"705\":\"81#_2-4、删除流程实例\",\"706\":\"81#_2-5、激活实例\",\"707\":\"81#_2-6、挂起实例\",\"708\":\"81#_3、taskservice待办任务接口\",\"709\":\"81#_3-1、流程跳转\",\"710\":\"81#_3-2、终止流程\",\"711\":\"81#_3-3、转办\",\"712\":\"81#_3-4、委派\",\"713\":\"81#_3-5、加签\",\"714\":\"81#_3-6、减签\",\"715\":\"81#_3-7、修改办理人\",\"716\":\"81#_4、nodeservice节点接口\",\"717\":\"81#_4-1、获取下一个节点列表\",\"718\":\"81#_5、公共api接口\",\"719\":\"81#_5-1、根据id查询\",\"720\":\"81#_5-2、根据ids主键集合查询\",\"721\":\"81#_5-3、分页查询\",\"722\":\"81#_5-4、查询列表\",\"723\":\"81#_5-5、查询列表-可排序\",\"724\":\"81#_5-6、查询一条记录\",\"725\":\"81#_5-7、获取总数量\",\"726\":\"81#_5-8、判断是否存在\",\"727\":\"81#_5-8、新增\",\"728\":\"81#_5-9、根据id修改\",\"729\":\"81#_5-10、根据id删除\",\"730\":\"81#_5-11、根据entity删除\",\"731\":\"81#_5-12、根据ids批量删除\",\"732\":\"81#_5-13、批量新增\",\"733\":\"81#_5-14、批量新增\",\"734\":\"81#_5-15、批量更新\",\"735\":\"81#_5-16、id设置正序排列\",\"736\":\"81#_5-17、创建时间设置正序排列\",\"737\":\"81#_5-18、更新时间设置正序排列\",\"738\":\"81#_5-19、设置正序排列\",\"739\":\"81#_5-20、设置倒序排列\",\"740\":\"81#_5-21、用户自定义排序方案\",\"741\":\"82\",\"742\":\"82#_1、spring\",\"743\":\"82#_1-1、yaml配置方式\",\"744\":\"82#_1-2、bean配置方式\",\"745\":\"82#_2、solon\",\"746\":\"82#_2-1、yaml配置方式\",\"747\":\"82#_2-1、bean配置方式\",\"748\":\"83\",\"749\":\"83#_1、开启流程\",\"750\":\"83#_2、流程跳转\",\"751\":\"83#_3、其他请查阅核心api\",\"752\":\"84\",\"753\":\"84#_1、自定义填充器-并继承datafillhandler\",\"754\":\"84#_2、注入bean\",\"755\":\"84#_2-1、通过-component方式注入\",\"756\":\"84#_2-2、yaml配置方式\",\"757\":\"84#_2-3、-configuration-bean配置方式\",\"758\":\"85\",\"759\":\"85#_1-引入依赖\",\"760\":\"85#_2-后端放行部分路径\",\"761\":\"85#_2-1-spring-security-放行配置\",\"762\":\"85#_2-2-shiro-放行配置\",\"763\":\"85#_2-3-sa-token-放行配置\",\"764\":\"85#_3-前端加载设计器\",\"765\":\"85#_3-2-vue2-引入\",\"766\":\"85#_3-3-vue3-引入\",\"767\":\"85#_3-4-react版本-引入\",\"768\":\"85#_3-5-前后端不分离版本\",\"769\":\"85#_4-设计器办理人权限数据接入\",\"770\":\"85#_4-1-办理人权限选择弹框页面\",\"771\":\"85#_4-2-实现接口获取以上页面办理人权限数据\",\"772\":\"85#_4-2-1-handlerselectservice接口\",\"773\":\"85#_4-2-2-handlerselectserviceimpl实现类\",\"774\":\"86\",\"775\":\"86#_1、内置表达式\",\"776\":\"86#_2、spring-expression-language-spel\",\"777\":\"86#_3、自定义表达式\",\"778\":\"87\",\"779\":\"88\",\"780\":\"89\",\"781\":\"89#json库扩展-1\",\"782\":\"90\",\"783\":\"90#_1、监听器类型\",\"784\":\"90#_2、流程监听器和节点监听器\",\"785\":\"90#_2、监听器生命周期图\",\"786\":\"90#_3、监听器使用\",\"787\":\"90#_3-1、实现以下接口\",\"788\":\"90#_3-2、开始监听器实现类例子\",\"789\":\"90#_3-3、完成监听器实现类例子\",\"790\":\"90#_3-4、分派监听器实现类例子\",\"791\":\"90#_3-5、创建监听器\",\"792\":\"90#_3-6、页面配置全局或节点监听器\",\"793\":\"90#_3-6-1、节点监听器-流程节点配置\",\"794\":\"90#_3-6-1、流程监听器-流程定义配置\",\"795\":\"90#_4、监听器参数使用\",\"796\":\"91\",\"797\":\"91#_1、mybatis-plus\",\"798\":\"91#_1-1、spring\",\"799\":\"91#_1-2、solon\",\"800\":\"91#_2、通用逻辑删除\",\"801\":\"92\",\"802\":\"92#_1、mybatis-plus\",\"803\":\"92#_2、jpa\",\"804\":\"92#_3、mybatis-flex\",\"805\":\"93\",\"806\":\"93#演示图\",\"807\":\"93#_1、新增定义\",\"808\":\"93#_2、流程设计\",\"809\":\"93#_2、1节点设置\",\"810\":\"93#_2、2跳转线设置\",\"811\":\"93#_3、开启流程实例\",\"812\":\"93#_4、提交流程\",\"813\":\"93#_5、办理流程\",\"814\":\"93#_6、驳回流程\",\"815\":\"94\",\"816\":\"94#_1、术语\",\"817\":\"94#_2、通用规则\",\"818\":\"94#_3、流程状态\",\"819\":\"94#_4、串行网关规则\",\"820\":\"94#_5、并行网关规则\",\"821\":\"94#_6、流程协作规则\",\"822\":\"95\",\"823\":\"96\",\"824\":\"96#_1、导入sql-按需求执行\",\"825\":\"96#_2、官网流程定义案例xml\",\"826\":\"96#_3、maven依赖\",\"827\":\"96#_3-1、mybatis\",\"828\":\"96#_3-2、mybatis-plus\",\"829\":\"96#_3-3、jpa\",\"830\":\"96#_3-4、mybatis-flex\",\"831\":\"96#_3-5、easy-query\",\"832\":\"96#_4、支持数据库类型\",\"833\":\"96#_5、支持orm框架类型\",\"834\":\"96#_6、设计器引入\",\"835\":\"96#_7、代码示例\",\"836\":\"96#_7-1、部署流程\",\"837\":\"96#_7-2、发布流程\",\"838\":\"96#_7-3、开启流程\",\"839\":\"96#_7-4、流程流转\",\"840\":\"96#_8、初学者推荐学习路线\",\"841\":\"96#_8-1、推荐集成案例hh-vue\",\"842\":\"96#_8-2、推荐学习视频\",\"843\":\"97\",\"844\":\"97#表清单\",\"845\":\"97#表字段明细\",\"846\":\"97#flow-definition-流程定义表\",\"847\":\"97#flow-his-task-历史任务记录表\",\"848\":\"97#flow-instance-流程实例表\",\"849\":\"97#flow-node-流程结点表\",\"850\":\"97#flow-skip-结点跳转关联表\",\"851\":\"97#flow-task-待办任务表\",\"852\":\"97#flow-user-流程用户表\",\"853\":\"98\",\"854\":\"98#_1、mybatis-plus\",\"855\":\"98#_1-1、spring\",\"856\":\"98#_1-2、solon\",\"857\":\"98#_2、通用多租户\",\"858\":\"98#_2-1、yaml配置方式\",\"859\":\"98#_2-2、bean配置方式\",\"860\":\"98#_2-3、-component配置方式\",\"861\":\"99\",\"862\":\"100\",\"863\":\"100#_1、内置表达式\",\"864\":\"100#_2、变量替换时机\",\"865\":\"100#_3、默认办理人变量策略\",\"866\":\"100#前端页面设置变量\",\"867\":\"100#后端代码设置变量\",\"868\":\"100#_4、spel办理人变量策略\",\"869\":\"100#前端页面设置变量-1\",\"870\":\"100#后端代码设置变量-1\",\"871\":\"100#_5、扩展\",\"872\":\"101\",\"873\":\"101#_1、defservice流程定义接口\",\"874\":\"101#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"875\":\"101#_1-1、导入流程定义、流程节点和流程跳转数据\",\"876\":\"101#_1-2、保存流程节点和流程跳转数据\",\"877\":\"101#_1-3、保存流程节点和流程跳转数据\",\"878\":\"101#_1-4、导出流程定义\",\"879\":\"101#_1-5、获取流程定义\",\"880\":\"101#_1-6、删除\",\"881\":\"101#_1-7、发布\",\"882\":\"101#_1-8、取消发布\",\"883\":\"101#_1-9、复制流程\",\"884\":\"101#_1-10、获取流程图\",\"885\":\"101#_1-11、激活流程\",\"886\":\"101#_1-12、挂起流程\",\"887\":\"101#_2、insservice流程实例接口\",\"888\":\"101#_2-1、开启流程\",\"889\":\"101#_2-2、流程跳转\",\"890\":\"101#_2-3、终止流程\",\"891\":\"101#_2-4、删除流程实例\",\"892\":\"101#_2-5、激活实例\",\"893\":\"101#_2-6、挂起实例\",\"894\":\"101#_3、taskservice待办任务接口\",\"895\":\"101#_3-1、流程跳转\",\"896\":\"101#_3-2、终止流程\",\"897\":\"101#_3-3、转办\",\"898\":\"101#_3-4、委派\",\"899\":\"101#_3-5、加签\",\"900\":\"101#_3-6、减签\",\"901\":\"101#_3-7、修改办理人\",\"902\":\"101#_4、nodeservice节点接口\",\"903\":\"101#_4-1、获取下一个节点列表\",\"904\":\"101#_5、公共api接口\",\"905\":\"101#_5-1、根据id查询\",\"906\":\"101#_5-2、根据ids主键集合查询\",\"907\":\"101#_5-3、分页查询\",\"908\":\"101#_5-4、查询列表\",\"909\":\"101#_5-5、查询列表-可排序\",\"910\":\"101#_5-6、查询一条记录\",\"911\":\"101#_5-7、获取总数量\",\"912\":\"101#_5-8、判断是否存在\",\"913\":\"101#_5-8、新增\",\"914\":\"101#_5-9、根据id修改\",\"915\":\"101#_5-10、根据id删除\",\"916\":\"101#_5-11、根据entity删除\",\"917\":\"101#_5-12、根据ids批量删除\",\"918\":\"101#_5-13、批量新增\",\"919\":\"101#_5-14、批量新增\",\"920\":\"101#_5-15、批量更新\",\"921\":\"101#_5-16、id设置正序排列\",\"922\":\"101#_5-17、创建时间设置正序排列\",\"923\":\"101#_5-18、更新时间设置正序排列\",\"924\":\"101#_5-19、设置正序排列\",\"925\":\"101#_5-20、设置倒序排列\",\"926\":\"101#_5-21、用户自定义排序方案\",\"927\":\"102\",\"928\":\"102#_1、spring\",\"929\":\"102#_1-1、yaml配置方式\",\"930\":\"102#_1-2、bean配置方式\",\"931\":\"102#_2、solon\",\"932\":\"102#_2-1、yaml配置方式\",\"933\":\"102#_2-1、bean配置方式\",\"934\":\"103\",\"935\":\"103#_1、开启流程\",\"936\":\"103#_2、流程跳转\",\"937\":\"103#_3、其他请查阅核心api\",\"938\":\"104\",\"939\":\"104#_1、自定义填充器-并继承datafillhandler\",\"940\":\"104#_2、注入bean\",\"941\":\"104#_2-1、通过-component方式注入\",\"942\":\"104#_2-2、yaml配置方式\",\"943\":\"104#_2-3、-configuration-bean配置方式\",\"944\":\"105\",\"945\":\"105#_1-引入依赖\",\"946\":\"105#_2-后端放行部分路径\",\"947\":\"105#_2-1-spring-security-放行配置\",\"948\":\"105#_2-2-shiro-放行配置\",\"949\":\"105#_2-3-sa-token-放行配置\",\"950\":\"105#_3-前端加载设计器\",\"951\":\"105#_3-2-vue2-引入\",\"952\":\"105#_3-3-vue3-引入\",\"953\":\"105#_3-4-react版本-引入\",\"954\":\"105#_3-5-前后端不分离版本\",\"955\":\"105#_4-设计器办理人权限数据接入\",\"956\":\"105#_4-1-办理人权限选择弹框页面\",\"957\":\"105#_4-2-实现接口获取以上页面办理人权限数据\",\"958\":\"105#_4-2-1-handlerselectservice接口\",\"959\":\"105#_4-2-2-handlerselectserviceimpl实现类\",\"960\":\"105#_5-共享后端权限-如token\",\"961\":\"105#_6-设计器二开\",\"962\":\"105#_6-1-下载设计器源码-改造\",\"963\":\"105#_6-2-源码调试\",\"964\":\"105#_6-3-部署\",\"965\":\"105#_6-3-1-先排除原依赖的前端代码\",\"966\":\"105#_6-3-2-设计器不分离部署-部署方案一\",\"967\":\"105#_6-3-2-设计器独立部署-分离部署-部署方案二\",\"968\":\"106\",\"969\":\"106#_1、内置表达式\",\"970\":\"106#_2、spring-expression-language-spel\",\"971\":\"106#_3、自定义表达式\",\"972\":\"107\",\"973\":\"108\",\"974\":\"109\",\"975\":\"109#json库扩展-1\",\"976\":\"110\",\"977\":\"110#_1、监听器类型\",\"978\":\"110#_2、流程监听器和节点监听器\",\"979\":\"110#_2、监听器生命周期图\",\"980\":\"110#_3、监听器使用\",\"981\":\"110#_3-1、实现以下接口\",\"982\":\"110#_3-2、开始监听器实现类例子\",\"983\":\"110#_3-3、完成监听器实现类例子\",\"984\":\"110#_3-4、分派监听器实现类例子\",\"985\":\"110#_3-5、创建监听器\",\"986\":\"110#_3-6、页面配置全局或节点监听器\",\"987\":\"110#_3-6-1、节点监听器-流程节点配置\",\"988\":\"110#_3-6-1、流程监听器-流程定义配置\",\"989\":\"110#_4、监听器参数使用\",\"990\":\"111\",\"991\":\"111#_1、mybatis-plus\",\"992\":\"111#_1-1、spring\",\"993\":\"111#_1-2、solon\",\"994\":\"111#_2、通用逻辑删除\",\"995\":\"112\",\"996\":\"112#_1、mybatis-plus\",\"997\":\"112#_2、jpa\",\"998\":\"112#_3、mybatis-flex\",\"999\":\"113\",\"1000\":\"113#演示图\",\"1001\":\"113#_1、新增定义\",\"1002\":\"113#_2、流程设计\",\"1003\":\"113#_2、1节点设置\",\"1004\":\"113#_2、2跳转线设置\",\"1005\":\"113#_3、开启流程实例\",\"1006\":\"113#_4、提交流程\",\"1007\":\"113#_5、办理流程\",\"1008\":\"113#_6、驳回流程\",\"1009\":\"114\",\"1010\":\"114#_1、术语\",\"1011\":\"114#_2、通用规则\",\"1012\":\"114#_3、流程状态\",\"1013\":\"114#_4、串行网关规则\",\"1014\":\"114#_5、并行网关规则\",\"1015\":\"114#_6、流程协作规则\",\"1016\":\"115\",\"1017\":\"116\",\"1018\":\"116#_1、导入sql-按需求执行\",\"1019\":\"116#_2、官网流程定义案例xml\",\"1020\":\"116#_3、maven依赖\",\"1021\":\"116#_3-1、mybatis\",\"1022\":\"116#_3-2、mybatis-plus\",\"1023\":\"116#_3-3、jpa\",\"1024\":\"116#_3-4、mybatis-flex\",\"1025\":\"116#_3-5、easy-query\",\"1026\":\"116#_4、支持数据库类型\",\"1027\":\"116#_5、支持orm框架类型\",\"1028\":\"116#_6、设计器引入\",\"1029\":\"116#_7、代码示例\",\"1030\":\"116#_7-1、部署流程\",\"1031\":\"116#_7-2、发布流程\",\"1032\":\"116#_7-3、开启流程\",\"1033\":\"116#_7-4、流程流转\",\"1034\":\"116#_8、初学者推荐学习路线\",\"1035\":\"116#_8-1、推荐集成案例hh-vue\",\"1036\":\"116#_8-2、推荐学习视频\",\"1037\":\"117\",\"1038\":\"117#表清单\",\"1039\":\"117#表字段明细\",\"1040\":\"117#flow-definition-流程定义表\",\"1041\":\"117#flow-his-task-历史任务记录表\",\"1042\":\"117#flow-instance-流程实例表\",\"1043\":\"117#flow-node-流程结点表\",\"1044\":\"117#flow-skip-结点跳转关联表\",\"1045\":\"117#flow-task-待办任务表\",\"1046\":\"117#flow-user-流程用户表\",\"1047\":\"118\",\"1048\":\"118#_1、mybatis-plus\",\"1049\":\"118#_1-1、spring\",\"1050\":\"118#_1-2、solon\",\"1051\":\"118#_2、通用多租户\",\"1052\":\"118#_2-1、yaml配置方式\",\"1053\":\"118#_2-2、bean配置方式\",\"1054\":\"118#_2-3、-component配置方式\",\"1055\":\"119\",\"1056\":\"120\",\"1057\":\"120#_1、内置表达式\",\"1058\":\"120#_2、变量替换时机\",\"1059\":\"120#_3、默认办理人变量策略\",\"1060\":\"120#前端页面设置变量\",\"1061\":\"120#后端代码设置变量\",\"1062\":\"120#_4、spel办理人变量策略\",\"1063\":\"120#前端页面设置变量-1\",\"1064\":\"120#后端代码设置变量-1\",\"1065\":\"120#_5、扩展\",\"1066\":\"121\",\"1067\":\"121#_1、defservice流程定义接口\",\"1068\":\"121#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"1069\":\"121#_1-2、新增流程定义-并初始化流程节点和流程跳转数据\",\"1070\":\"121#_1-3、导入流程定义、流程节点和流程跳转数据\",\"1071\":\"121#_1-4、保存流程节点和流程跳转数据\",\"1072\":\"121#_1-5、保存流程节点和流程跳转数据\",\"1073\":\"121#_1-6、导出流程定义\",\"1074\":\"121#_1-7、获取流程定义\",\"1075\":\"121#_1-8、删除\",\"1076\":\"121#_1-9、发布\",\"1077\":\"121#_1-10、取消发布\",\"1078\":\"121#_1-11、复制流程\",\"1079\":\"121#_1-12、获取流程图\",\"1080\":\"121#_1-13、激活流程\",\"1081\":\"121#_1-14、挂起流程\",\"1082\":\"121#_2、insservice流程实例接口\",\"1083\":\"121#_2-1、开启流程\",\"1084\":\"121#_2-2、流程跳转\",\"1085\":\"121#_2-3、终止流程\",\"1086\":\"121#_2-4、删除流程实例\",\"1087\":\"121#_2-5、激活实例\",\"1088\":\"121#_2-6、挂起实例\",\"1089\":\"121#_2-7、根据流程定义id集合-查询流程实例集合\",\"1090\":\"121#_3、taskservice待办任务接口\",\"1091\":\"121#_3-1、流程跳转\",\"1092\":\"121#_3-2、终止流程\",\"1093\":\"121#_3-3、转办\",\"1094\":\"121#_3-4、委派\",\"1095\":\"121#_3-5、加签\",\"1096\":\"121#_3-6、减签\",\"1097\":\"121#_3-7、修改办理人\",\"1098\":\"121#_4、nodeservice节点接口\",\"1099\":\"121#_4-1、获取下一个节点列表\",\"1100\":\"121#_5、公共api接口\",\"1101\":\"121#_5-1、根据id查询\",\"1102\":\"121#_5-2、根据ids主键集合查询\",\"1103\":\"121#_5-3、分页查询\",\"1104\":\"121#_5-4、查询列表\",\"1105\":\"121#_5-5、查询列表-可排序\",\"1106\":\"121#_5-6、查询一条记录\",\"1107\":\"121#_5-7、获取总数量\",\"1108\":\"121#_5-8、判断是否存在\",\"1109\":\"121#_5-8、新增\",\"1110\":\"121#_5-9、根据id修改\",\"1111\":\"121#_5-10、根据id删除\",\"1112\":\"121#_5-11、根据entity删除\",\"1113\":\"121#_5-12、根据ids批量删除\",\"1114\":\"121#_5-13、批量新增\",\"1115\":\"121#_5-14、批量新增\",\"1116\":\"121#_5-15、批量更新\",\"1117\":\"121#_5-16、id设置正序排列\",\"1118\":\"121#_5-17、创建时间设置正序排列\",\"1119\":\"121#_5-18、更新时间设置正序排列\",\"1120\":\"121#_5-19、设置正序排列\",\"1121\":\"121#_5-20、设置倒序排列\",\"1122\":\"121#_5-21、用户自定义排序方案\",\"1123\":\"122\",\"1124\":\"122#_1、内置表达式\",\"1125\":\"122#_2、匹配规则\",\"1126\":\"123\",\"1127\":\"123#_1、spring\",\"1128\":\"123#_1-1、yaml配置方式\",\"1129\":\"123#_1-2、bean配置方式\",\"1130\":\"123#_2、solon\",\"1131\":\"123#_2-1、yaml配置方式\",\"1132\":\"123#_2-1、bean配置方式\",\"1133\":\"124\",\"1134\":\"124#_1、开启流程\",\"1135\":\"124#_2、流程跳转\",\"1136\":\"124#_3、其他请查阅核心api\",\"1137\":\"125\",\"1138\":\"125#_1、自定义填充器-并继承datafillhandler\",\"1139\":\"125#_2、注入bean\",\"1140\":\"125#_2-1、通过-component方式注入\",\"1141\":\"125#_2-2、yaml配置方式\",\"1142\":\"125#_2-3、-configuration-bean配置方式\",\"1143\":\"126\",\"1144\":\"126#_1-引入依赖\",\"1145\":\"126#springboot\",\"1146\":\"126#solon\",\"1147\":\"126#_2-后端放行部分路径\",\"1148\":\"126#_2-1-spring-security-放行配置\",\"1149\":\"126#_2-2-shiro-放行配置\",\"1150\":\"126#_2-3-sa-token-放行配置\",\"1151\":\"126#_3-前端加载设计器\",\"1152\":\"126#_3-2-vue2-引入\",\"1153\":\"126#_3-3-vue3-引入\",\"1154\":\"126#_3-4-react版本-引入\",\"1155\":\"126#_3-5-前后端不分离版本\",\"1156\":\"126#_4-设计器办理人权限数据接入\",\"1157\":\"126#_4-1-办理人权限选择弹框页面\",\"1158\":\"126#_4-2-实现接口获取以上页面办理人权限数据\",\"1159\":\"126#_4-2-1-handlerselectservice接口\",\"1160\":\"126#_4-2-2-handlerselectserviceimpl实现类\",\"1161\":\"126#_5-共享后端权限-如token\",\"1162\":\"127\",\"1163\":\"127#_1-下载设计器源码-改造\",\"1164\":\"127#_2-源码调试\",\"1165\":\"127#_3-部署\",\"1166\":\"127#_3-1-先排除原依赖的前端代码\",\"1167\":\"127#_3-2-设计器不分离部署-部署方案一\",\"1168\":\"127#_3-3-设计器独立部署-分离部署-部署方案二\",\"1169\":\"128\",\"1170\":\"128#_1、内置表达式\",\"1171\":\"128#_2、spring-expression-language-spel\",\"1172\":\"128#_3、自定义表达式\",\"1173\":\"129\",\"1174\":\"129#_1、表达式公共接口\",\"1175\":\"129#_2、注册表达式实现类\",\"1176\":\"129#_3、办理人变量表达式\",\"1177\":\"129#_3-1、办理人变量表达式接口\",\"1178\":\"129#_3-2、办理人变量表达式实现类\",\"1179\":\"129#_4-监听器表达式\",\"1180\":\"129#_4-1、监听器表达式接口\",\"1181\":\"129#_4-2、监听器表达式实现类\",\"1182\":\"129#_5、条件表达式\",\"1183\":\"129#_5-1、条件表达式接口\",\"1184\":\"129#_5-2、条件表达式抽象类\",\"1185\":\"129#_5-3、条件表达式实现类\",\"1186\":\"130\",\"1187\":\"131\",\"1188\":\"132\",\"1189\":\"132#json库扩展-1\",\"1190\":\"133\",\"1191\":\"133#_1、监听器大类\",\"1192\":\"133#_2、监听器小类\",\"1193\":\"133#_3、监听器设置\",\"1194\":\"133#_4、匹配规则\",\"1195\":\"133#_5、监听器生命周期图\",\"1196\":\"133#_5、节点和流程监听器\",\"1197\":\"133#_5-1、实现以下接口\",\"1198\":\"133#_5-2、开始监听器实现类例子\",\"1199\":\"133#_5-3、完成监听器实现类例子\",\"1200\":\"133#_5-4、分派监听器实现类例子\",\"1201\":\"133#_5-5、创建监听器\",\"1202\":\"133#_5-6、页面配置全局或节点监听器\",\"1203\":\"133#_5-6-1、节点监听器-流程节点配置\",\"1204\":\"133#_5-6-1、流程监听器-流程定义配置\",\"1205\":\"133#_6、全局监听器\",\"1206\":\"133#_7、监听器参数使用\",\"1207\":\"134\",\"1208\":\"134#_1、mybatis-plus\",\"1209\":\"134#_1-1、spring\",\"1210\":\"134#_1-2、solon\",\"1211\":\"134#_2、通用逻辑删除\",\"1212\":\"135\",\"1213\":\"135#_1、mybatis-plus\",\"1214\":\"135#_2、jpa\",\"1215\":\"135#_3、mybatis-flex\",\"1216\":\"136\",\"1217\":\"136#_1、permissionhandler接口\",\"1218\":\"136#_2、编写permissionhandler实现类\",\"1219\":\"137\",\"1220\":\"137#演示图\",\"1221\":\"137#_1、新增定义\",\"1222\":\"137#_2、流程设计\",\"1223\":\"137#_2、1节点设置\",\"1224\":\"137#_2、2跳转线设置\",\"1225\":\"137#_3、开启流程实例\",\"1226\":\"137#_4、提交流程\",\"1227\":\"137#_5、办理流程\",\"1228\":\"137#_6、驳回流程\",\"1229\":\"138\",\"1230\":\"138#_1、术语\",\"1231\":\"138#_2、通用规则\",\"1232\":\"138#_3、流程状态\",\"1233\":\"138#_4、串行网关规则\",\"1234\":\"138#_5、并行网关规则\",\"1235\":\"138#_6、流程协作规则\",\"1236\":\"139\",\"1237\":\"139#_1、术语\",\"1238\":\"139#_2、通用规则\",\"1239\":\"139#_3、流程状态\",\"1240\":\"139#_4、串行网关规则\",\"1241\":\"139#_5、并行网关规则\",\"1242\":\"139#_6、流程协作规则\",\"1243\":\"140\",\"1244\":\"140#_1、导入sql-按需求执行\",\"1245\":\"140#_2、官网流程定义案例xml\",\"1246\":\"140#_3、maven依赖\",\"1247\":\"140#_3-1、mybatis\",\"1248\":\"140#_3-2、mybatis-plus\",\"1249\":\"140#_3-3、jpa\",\"1250\":\"140#_3-4、mybatis-flex\",\"1251\":\"140#_3-5、easy-query\",\"1252\":\"140#_4、代码示例\",\"1253\":\"140#_4-1、部署流程\",\"1254\":\"140#_4-2、发布流程\",\"1255\":\"140#_4-3、开启流程\",\"1256\":\"140#_4-4、流程流转\",\"1257\":\"140#_5、设计器引入\",\"1258\":\"140#_6、初学者推荐学习路线\",\"1259\":\"140#_6-1、推荐集成案例hh-vue\",\"1260\":\"140#_6-2、推荐学习视频\",\"1261\":\"141\",\"1262\":\"141#表清单\",\"1263\":\"141#表字段明细\",\"1264\":\"141#flow-definition-流程定义表\",\"1265\":\"141#flow-his-task-历史任务记录表\",\"1266\":\"141#flow-instance-流程实例表\",\"1267\":\"141#flow-node-流程结点表\",\"1268\":\"141#flow-skip-结点跳转关联表\",\"1269\":\"141#flow-task-待办任务表\",\"1270\":\"141#flow-user-流程用户表\",\"1271\":\"142\",\"1272\":\"142#_1、mybatis-plus\",\"1273\":\"142#_1-1、spring\",\"1274\":\"142#_1-2、solon\",\"1275\":\"142#_2、通用多租户\",\"1276\":\"142#_2-1、yaml配置方式\",\"1277\":\"142#_2-2、bean配置方式\",\"1278\":\"142#_2-3、-component配置方式\",\"1279\":\"143\",\"1280\":\"144\",\"1281\":\"144#_1、特点\",\"1282\":\"144#_2、内置表达式\",\"1283\":\"144#_3、匹配规则\",\"1284\":\"144#_4、变量替换时机\",\"1285\":\"144#_5、默认办理人变量策略\",\"1286\":\"144#前端页面设置变量\",\"1287\":\"144#后端代码设置变量\",\"1288\":\"144#_6、spel办理人变量策略\",\"1289\":\"144#前端页面设置变量-1\",\"1290\":\"144#后端代码设置变量-1\",\"1291\":\"145\",\"1292\":\"145#_1、仓库地址\",\"1293\":\"145#_2、以下为简短案例\",\"1294\":\"145#_2-1、部署流程\",\"1295\":\"145#_2-2、发布流程\",\"1296\":\"145#_2-3、开启流程\",\"1297\":\"145#_2-4、流程流转\",\"1298\":\"145#_3、设计器引入\",\"1299\":\"145#_4、项目介绍\",\"1300\":\"145#_5、演示地址\",\"1301\":\"145#_6、官网\",\"1302\":\"146\",\"1303\":\"146#_1、老群被干没了-新群\",\"1304\":\"146#_2、详细更新内容\",\"1305\":\"146#_3、项目介绍\",\"1306\":\"146#_4、演示地址\",\"1307\":\"146#_7、官网\",\"1308\":\"147\",\"1309\":\"147#_1-引入依赖\",\"1310\":\"147#_2-后端放行部分路径\",\"1311\":\"147#_3-前端加载设计器\",\"1312\":\"147#_4-设计器办理人权限数据接入\",\"1313\":\"147#_4-1-办理人权限选择弹框页面\",\"1314\":\"147#_4-2-实现接口获取以上页面办理人权限数据\",\"1315\":\"147#_4-2-1-handlerselectservice接口\",\"1316\":\"147#_5、项目介绍\",\"1317\":\"147#_6、演示地址\",\"1318\":\"147#_7、官网\",\"1319\":\"148\",\"1320\":\"148#_1-引入依赖\",\"1321\":\"148#_2-后端放行部分路径\",\"1322\":\"148#_3-前端加载设计器\",\"1323\":\"148#_4-设计器办理人权限数据接入\",\"1324\":\"148#_4-1-办理人权限选择弹框页面\",\"1325\":\"148#_4-2-实现接口获取以上页面办理人权限数据\",\"1326\":\"148#_4-2-1-handlerselectservice接口\",\"1327\":\"148#_5、项目介绍\",\"1328\":\"148#_6、演示地址\",\"1329\":\"148#_7、官网\",\"1330\":\"149\",\"1331\":\"149#_1-引入依赖\",\"1332\":\"149#_2-后端放行部分路径\",\"1333\":\"149#_3-前端加载设计器\",\"1334\":\"149#_4-设计器办理人权限数据接入\",\"1335\":\"149#_4-1-办理人权限选择弹框页面\",\"1336\":\"149#_4-2-实现接口获取以上页面办理人权限数据\",\"1337\":\"149#_4-2-1-handlerselectservice接口\",\"1338\":\"149#_5、项目介绍\",\"1339\":\"149#_6、演示地址\",\"1340\":\"149#_7、官网\",\"1341\":\"150\",\"1342\":\"150#_1、仓库地址\",\"1343\":\"150#_2、以下为简短案例\",\"1344\":\"150#_2-1、部署流程\",\"1345\":\"150#_2-2、发布流程\",\"1346\":\"150#_2-3、开启流程\",\"1347\":\"150#_2-4、流程流转\",\"1348\":\"150#_3、设计器引入\",\"1349\":\"150#_4、项目介绍\",\"1350\":\"150#_5、演示地址\",\"1351\":\"150#_6、官网\",\"1352\":\"151\",\"1353\":\"151#_1、老群被干没了-新群\",\"1354\":\"151#_2、详细更新内容\",\"1355\":\"151#_3、项目介绍\",\"1356\":\"151#_4、演示地址\",\"1357\":\"151#_7、官网\",\"1358\":\"152\",\"1359\":\"153\",\"1360\":\"154\",\"1361\":\"155\",\"1362\":\"156\",\"1363\":\"157\",\"1364\":\"158\",\"1365\":\"159\",\"1366\":\"160\",\"1367\":\"161\",\"1368\":\"162\",\"1369\":\"163\",\"1370\":\"164\",\"1371\":\"165\",\"1372\":\"166\",\"1373\":\"167\",\"1374\":\"168\",\"1375\":\"169\",\"1376\":\"170\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1],\"2\":[1,92],\"3\":[1],\"4\":[1],\"5\":[1,13],\"6\":[1,10],\"7\":[1,10],\"8\":[1,12],\"9\":[1,11],\"10\":[1,5],\"11\":[1],\"12\":[2,68],\"13\":[2,30],\"14\":[2,51],\"15\":[2,9],\"16\":[2,7],\"17\":[2,7],\"18\":[2,2],\"19\":[2,1],\"20\":[1],\"21\":[1,8],\"22\":[1],\"23\":[2,11],\"24\":[2,2],\"25\":[1,29],\"26\":[1],\"27\":[1,22],\"28\":[1,6],\"29\":[1,6],\"30\":[1,8],\"31\":[1,3],\"32\":[1],\"33\":[2,7],\"34\":[2],\"35\":[2,7],\"36\":[2,5],\"37\":[2,4],\"38\":[2,4],\"39\":[2,1],\"40\":[2,1],\"41\":[1,35],\"42\":[1],\"43\":[2,1],\"44\":[3],\"45\":[3,1],\"46\":[3,1],\"47\":[2,4],\"48\":[3,22],\"49\":[4,1],\"50\":[4,1],\"51\":[1,6],\"52\":[1,53],\"53\":[1],\"54\":[2,6],\"55\":[2,92],\"56\":[2,1],\"57\":[2,17],\"58\":[2,4],\"59\":[2],\"60\":[2,51],\"61\":[2,11],\"62\":[4,24],\"63\":[2,14],\"64\":[4,101],\"65\":[2],\"66\":[6,5],\"67\":[3,3],\"68\":[1,4],\"69\":[1],\"70\":[2,10],\"71\":[1],\"72\":[3,17],\"73\":[1],\"74\":[6,64],\"75\":[5,26],\"76\":[6,75],\"77\":[6,25],\"78\":[6,8],\"79\":[6,60],\"80\":[6,12],\"81\":[6,42],\"82\":[6,118],\"83\":[6,4],\"84\":[6,46],\"85\":[6,21],\"86\":[6,17],\"87\":[6,5],\"88\":[6,8],\"89\":[6,26],\"90\":[6,12],\"91\":[6,5],\"92\":[6,10],\"93\":[5,4],\"94\":[6,9],\"95\":[6,3],\"96\":[6,5],\"97\":[6,4],\"98\":[5,35],\"99\":[1],\"100\":[2],\"101\":[3,3],\"102\":[4,3],\"103\":[4,3],\"104\":[3,9],\"105\":[3,6],\"106\":[3,6],\"107\":[3,6],\"108\":[3,3],\"109\":[3,3],\"110\":[3,3],\"111\":[3,3],\"112\":[3,3],\"113\":[3,4],\"114\":[3,6],\"115\":[3,6],\"116\":[5,6],\"117\":[2],\"118\":[3,22],\"119\":[2,40],\"120\":[3,29],\"121\":[3,4],\"122\":[3,4],\"123\":[3,6],\"124\":[4,4],\"125\":[2],\"126\":[3,40],\"127\":[3,29],\"128\":[2,28],\"129\":[3,28],\"130\":[3,26],\"131\":[3,25],\"132\":[3,35],\"133\":[2],\"134\":[3,22],\"135\":[2],\"136\":[3,4],\"137\":[3,4],\"138\":[3,7],\"139\":[3,4],\"140\":[3,8],\"141\":[3,4],\"142\":[3,4],\"143\":[3,4],\"144\":[3,4],\"145\":[3,4],\"146\":[3,4],\"147\":[3,4],\"148\":[3,4],\"149\":[3,4],\"150\":[3,6],\"151\":[3,4],\"152\":[3,2],\"153\":[3,2],\"154\":[3,2],\"155\":[3,4],\"156\":[3,4],\"157\":[3,4],\"158\":[3,7],\"159\":[2,8],\"160\":[2],\"161\":[3],\"162\":[2],\"163\":[3],\"164\":[1,4],\"165\":[2,34],\"166\":[2,75],\"167\":[1,4],\"168\":[2,56],\"169\":[2,6],\"170\":[2,1],\"171\":[3,28],\"172\":[3,54],\"173\":[2,33],\"174\":[1],\"175\":[2],\"176\":[2,80],\"177\":[3,27],\"178\":[2],\"179\":[3,69],\"180\":[3,20],\"181\":[1,11],\"182\":[2,37],\"183\":[2,19],\"184\":[2],\"185\":[1,6],\"186\":[3,32],\"187\":[2],\"188\":[4],\"189\":[2,17],\"190\":[4,11],\"191\":[1,12],\"192\":[2],\"193\":[1,16],\"194\":[1,16],\"195\":[2,6],\"196\":[5,26],\"197\":[3,28],\"198\":[5,28],\"199\":[2,14],\"200\":[4,76],\"201\":[3,85],\"202\":[4,1],\"203\":[3,43],\"204\":[2,2],\"205\":[3],\"206\":[3],\"207\":[4,27],\"208\":[3,135],\"209\":[4,27],\"210\":[1,4],\"211\":[3,3],\"212\":[2,3],\"213\":[2],\"214\":[3,20],\"215\":[5,12],\"216\":[5,62],\"217\":[1,4],\"218\":[2,56],\"219\":[2,6],\"220\":[2,2],\"221\":[3,20],\"222\":[3,35],\"223\":[2],\"224\":[3,20],\"225\":[3,26],\"226\":[2,1],\"227\":[3,28],\"228\":[3,54],\"229\":[3,33],\"230\":[1,4],\"231\":[1,1],\"232\":[1,5],\"233\":[2,14],\"234\":[2,1],\"235\":[2,27],\"236\":[1,5],\"237\":[1,73],\"238\":[1,8],\"239\":[2,12],\"240\":[2,13],\"241\":[2,29],\"242\":[2,2],\"243\":[2],\"244\":[2],\"245\":[3,30],\"246\":[3,75],\"247\":[3,98],\"248\":[3,63],\"249\":[2,2],\"250\":[3],\"251\":[6],\"252\":[6],\"253\":[2,54],\"254\":[2,35],\"255\":[1,4],\"256\":[2,56],\"257\":[2,6],\"258\":[2],\"259\":[3,20],\"260\":[3,26],\"261\":[1],\"262\":[3,13],\"263\":[2,15],\"264\":[3,21],\"265\":[2,19],\"266\":[1,5],\"267\":[3,14],\"268\":[2,67],\"269\":[3,16],\"270\":[1,11],\"271\":[2,24],\"272\":[2,52],\"273\":[1,60],\"274\":[2,56],\"275\":[2,35],\"276\":[2,18],\"277\":[2,7],\"278\":[2,10],\"279\":[1,19],\"280\":[3,16],\"281\":[2,1],\"282\":[2],\"283\":[3,23],\"284\":[4,24],\"285\":[2,33],\"286\":[4,24],\"287\":[4,31],\"288\":[2,8],\"289\":[3,35],\"290\":[3,8],\"291\":[3,14],\"292\":[2,37],\"293\":[2,2],\"294\":[2],\"295\":[4,1],\"296\":[3,2],\"297\":[1,37],\"298\":[1,26],\"299\":[1],\"300\":[1,81],\"301\":[1,113],\"302\":[1,86],\"303\":[1,95],\"304\":[1,71],\"305\":[1,66],\"306\":[1,49],\"307\":[1],\"308\":[3,4],\"309\":[2,89],\"310\":[3,81],\"311\":[2],\"312\":[3,18],\"313\":[2,15],\"314\":[3,20],\"315\":[1,73],\"316\":[1,7],\"317\":[2,67],\"318\":[2,11],\"319\":[2,7],\"320\":[2,15],\"321\":[2],\"322\":[1,5],\"323\":[1,18],\"324\":[2],\"325\":[1,7],\"326\":[1,30],\"327\":[2,5],\"328\":[1,4],\"329\":[2,56],\"330\":[2,6],\"331\":[2,2],\"332\":[3,20],\"333\":[3,35],\"334\":[1],\"335\":[2],\"336\":[2,5],\"337\":[3,5],\"338\":[3,3],\"339\":[3,3],\"340\":[3,3],\"341\":[3,3],\"342\":[3,3],\"343\":[3,3],\"344\":[3,3],\"345\":[3,4],\"346\":[3,6],\"347\":[2],\"348\":[3,22],\"349\":[2,33],\"350\":[3,16],\"351\":[3,4],\"352\":[3,4],\"353\":[3,6],\"354\":[2],\"355\":[3,33],\"356\":[3,16],\"357\":[2,20],\"358\":[3,21],\"359\":[3,17],\"360\":[3,19],\"361\":[3,36],\"362\":[2],\"363\":[3,22],\"364\":[2],\"365\":[3,6],\"366\":[3,6],\"367\":[3,9],\"368\":[3,6],\"369\":[3,10],\"370\":[3,6],\"371\":[3,6],\"372\":[3,6],\"373\":[3,6],\"374\":[3,6],\"375\":[3,6],\"376\":[3,6],\"377\":[3,6],\"378\":[3,6],\"379\":[3,8],\"380\":[3,6],\"381\":[3,2],\"382\":[3,2],\"383\":[3,2],\"384\":[3,6],\"385\":[3,6],\"386\":[3,6],\"387\":[1],\"388\":[2],\"389\":[2,71],\"390\":[3,27],\"391\":[2],\"392\":[3,69],\"393\":[3,20],\"394\":[1,9],\"395\":[2,37],\"396\":[2,19],\"397\":[2],\"398\":[1,5],\"399\":[3,32],\"400\":[2],\"401\":[4],\"402\":[2,17],\"403\":[4,11],\"404\":[1],\"405\":[2,20],\"406\":[6,63],\"407\":[2,4],\"408\":[1,4],\"409\":[1],\"410\":[1,4],\"411\":[1,72],\"412\":[1,7],\"413\":[2,17],\"414\":[2,12],\"415\":[2],\"416\":[2],\"417\":[3,37],\"418\":[3,75],\"419\":[2,84],\"420\":[3,63],\"421\":[3,2],\"422\":[3],\"423\":[6,4],\"424\":[6],\"425\":[2,35],\"426\":[1],\"427\":[3,11],\"428\":[2,15],\"429\":[3,21],\"430\":[2,19],\"431\":[1,13],\"432\":[3,14],\"433\":[2,66],\"434\":[3,16],\"435\":[1,3],\"436\":[1],\"437\":[2,7],\"438\":[2],\"439\":[2,7],\"440\":[2,5],\"441\":[2,4],\"442\":[2,4],\"443\":[2,1],\"444\":[2,1],\"445\":[1],\"446\":[2,56],\"447\":[2,35],\"448\":[2,18],\"449\":[2,7],\"450\":[2,10],\"451\":[2,31],\"452\":[1,65],\"453\":[1,15],\"454\":[3,13],\"455\":[2,1],\"456\":[2],\"457\":[3,21],\"458\":[4,22],\"459\":[2,33],\"460\":[4,22],\"461\":[4,31],\"462\":[2,9],\"463\":[2,8],\"464\":[2,6],\"465\":[2,35],\"466\":[2,8],\"467\":[2,14],\"468\":[2,37],\"469\":[2],\"470\":[4,1],\"471\":[3,2],\"472\":[1,37],\"473\":[1,26],\"474\":[1],\"475\":[1,81],\"476\":[1,113],\"477\":[1,86],\"478\":[1,95],\"479\":[1,71],\"480\":[1,66],\"481\":[1,49],\"482\":[1],\"483\":[3,3],\"484\":[2,89],\"485\":[3,81],\"486\":[2],\"487\":[3,17],\"488\":[2,15],\"489\":[3,21],\"490\":[1,70],\"491\":[1],\"492\":[2,13],\"493\":[2,13],\"494\":[2],\"495\":[1,10],\"496\":[1,18],\"497\":[2],\"498\":[1,9],\"499\":[1,30],\"500\":[2,53],\"501\":[1],\"502\":[2],\"503\":[2,5],\"504\":[3,11],\"505\":[3,7],\"506\":[3,3],\"507\":[3,3],\"508\":[3,3],\"509\":[3,3],\"510\":[3,3],\"511\":[3,3],\"512\":[3,3],\"513\":[3,4],\"514\":[3,6],\"515\":[2],\"516\":[3,22],\"517\":[2,33],\"518\":[3,22],\"519\":[3,4],\"520\":[3,4],\"521\":[3,6],\"522\":[2],\"523\":[3,33],\"524\":[3,22],\"525\":[2,20],\"526\":[3,21],\"527\":[3,17],\"528\":[3,19],\"529\":[3,36],\"530\":[2],\"531\":[3,22],\"532\":[2],\"533\":[3,4],\"534\":[3,4],\"535\":[3,7],\"536\":[3,4],\"537\":[3,8],\"538\":[3,4],\"539\":[3,4],\"540\":[3,4],\"541\":[3,4],\"542\":[3,4],\"543\":[3,4],\"544\":[3,4],\"545\":[3,4],\"546\":[3,4],\"547\":[3,6],\"548\":[3,4],\"549\":[3,2],\"550\":[3,2],\"551\":[3,2],\"552\":[3,4],\"553\":[3,4],\"554\":[3,4],\"555\":[1],\"556\":[2],\"557\":[2,73],\"558\":[3,27],\"559\":[2],\"560\":[3,69],\"561\":[3,20],\"562\":[1,11],\"563\":[2,37],\"564\":[2,19],\"565\":[2],\"566\":[1,6],\"567\":[3,32],\"568\":[2],\"569\":[4],\"570\":[2,17],\"571\":[4,11],\"572\":[1,12],\"573\":[2,16],\"574\":[2,6],\"575\":[5,26],\"576\":[3,28],\"577\":[5,28],\"578\":[2,19],\"579\":[4,14],\"580\":[4,77],\"581\":[3,82],\"582\":[4,1],\"583\":[3,42],\"584\":[2,2],\"585\":[3],\"586\":[3],\"587\":[4,27],\"588\":[3,135],\"589\":[1],\"590\":[2,20],\"591\":[6,63],\"592\":[2,4],\"593\":[1,4],\"594\":[1],\"595\":[1,5],\"596\":[1,72],\"597\":[1,8],\"598\":[2,17],\"599\":[2,12],\"600\":[2],\"601\":[2],\"602\":[3,37],\"603\":[3,75],\"604\":[2,84],\"605\":[3,63],\"606\":[3,2],\"607\":[3],\"608\":[6,4],\"609\":[6],\"610\":[2,35],\"611\":[1],\"612\":[3,13],\"613\":[2,15],\"614\":[3,21],\"615\":[2,19],\"616\":[1,13],\"617\":[3,14],\"618\":[2,66],\"619\":[3,16],\"620\":[1,3],\"621\":[1],\"622\":[2,7],\"623\":[2],\"624\":[2,7],\"625\":[2,5],\"626\":[2,4],\"627\":[2,4],\"628\":[2,1],\"629\":[2,1],\"630\":[1],\"631\":[2,56],\"632\":[2,35],\"633\":[2,18],\"634\":[2,7],\"635\":[2,10],\"636\":[2,31],\"637\":[1,64],\"638\":[1,19],\"639\":[3,13],\"640\":[2,1],\"641\":[2],\"642\":[3,21],\"643\":[4,22],\"644\":[2,33],\"645\":[4,22],\"646\":[4,31],\"647\":[2,9],\"648\":[2,8],\"649\":[2,6],\"650\":[2,35],\"651\":[2,8],\"652\":[2,14],\"653\":[2,37],\"654\":[2],\"655\":[4,1],\"656\":[3,2],\"657\":[1,37],\"658\":[1,26],\"659\":[1],\"660\":[1,81],\"661\":[1,113],\"662\":[1,86],\"663\":[1,95],\"664\":[1,71],\"665\":[1,66],\"666\":[1,49],\"667\":[1],\"668\":[3,4],\"669\":[2,89],\"670\":[3,81],\"671\":[2],\"672\":[3,17],\"673\":[2,15],\"674\":[3,20],\"675\":[1,73],\"676\":[1],\"677\":[2,15],\"678\":[2,13],\"679\":[2],\"680\":[1,7],\"681\":[1,18],\"682\":[2],\"683\":[1,9],\"684\":[1,30],\"685\":[2,53],\"686\":[1],\"687\":[2],\"688\":[3,3],\"689\":[3,3],\"690\":[3,9],\"691\":[3,6],\"692\":[3,6],\"693\":[3,6],\"694\":[3,3],\"695\":[3,3],\"696\":[3,3],\"697\":[3,3],\"698\":[3,3],\"699\":[3,4],\"700\":[3,6],\"701\":[2],\"702\":[3,22],\"703\":[2,40],\"704\":[3,29],\"705\":[3,4],\"706\":[3,4],\"707\":[3,6],\"708\":[2],\"709\":[3,40],\"710\":[3,29],\"711\":[2,26],\"712\":[3,26],\"713\":[3,24],\"714\":[3,23],\"715\":[3,35],\"716\":[2],\"717\":[3,22],\"718\":[2],\"719\":[3,4],\"720\":[3,4],\"721\":[3,7],\"722\":[3,4],\"723\":[3,8],\"724\":[3,4],\"725\":[3,4],\"726\":[3,4],\"727\":[3,4],\"728\":[3,4],\"729\":[3,4],\"730\":[3,4],\"731\":[3,4],\"732\":[3,4],\"733\":[3,6],\"734\":[3,4],\"735\":[3,2],\"736\":[3,2],\"737\":[3,2],\"738\":[3,4],\"739\":[3,4],\"740\":[3,4],\"741\":[1],\"742\":[2],\"743\":[2,73],\"744\":[3,27],\"745\":[2],\"746\":[3,69],\"747\":[3,20],\"748\":[1,11],\"749\":[2,37],\"750\":[2,19],\"751\":[2],\"752\":[1,6],\"753\":[3,32],\"754\":[2],\"755\":[4],\"756\":[2,17],\"757\":[4,11],\"758\":[1,12],\"759\":[2,15],\"760\":[2,6],\"761\":[5,26],\"762\":[3,28],\"763\":[5,28],\"764\":[2,14],\"765\":[4,76],\"766\":[3,85],\"767\":[4,1],\"768\":[3,43],\"769\":[2,2],\"770\":[3],\"771\":[3],\"772\":[4,27],\"773\":[3,135],\"774\":[1],\"775\":[2,20],\"776\":[6,63],\"777\":[2,4],\"778\":[1,4],\"779\":[1],\"780\":[1,5],\"781\":[1,73],\"782\":[1,8],\"783\":[2,17],\"784\":[2,12],\"785\":[2],\"786\":[2],\"787\":[3,37],\"788\":[3,75],\"789\":[2,84],\"790\":[3,63],\"791\":[3,2],\"792\":[3],\"793\":[6,4],\"794\":[6],\"795\":[2,35],\"796\":[1],\"797\":[3,13],\"798\":[2,15],\"799\":[3,21],\"800\":[2,19],\"801\":[1,13],\"802\":[3,14],\"803\":[2,67],\"804\":[3,16],\"805\":[1,3],\"806\":[1],\"807\":[2,7],\"808\":[2],\"809\":[2,7],\"810\":[2,5],\"811\":[2,4],\"812\":[2,4],\"813\":[2,1],\"814\":[2,1],\"815\":[1],\"816\":[2,56],\"817\":[2,35],\"818\":[2,18],\"819\":[2,7],\"820\":[2,10],\"821\":[2,31],\"822\":[1,64],\"823\":[1,19],\"824\":[3,13],\"825\":[2,1],\"826\":[2],\"827\":[3,22],\"828\":[4,23],\"829\":[2,34],\"830\":[4,23],\"831\":[4,29],\"832\":[2,9],\"833\":[2,8],\"834\":[2,2],\"835\":[2,8],\"836\":[3,35],\"837\":[3,8],\"838\":[3,14],\"839\":[3,37],\"840\":[2],\"841\":[4,1],\"842\":[3,2],\"843\":[1,37],\"844\":[1,26],\"845\":[1],\"846\":[1,81],\"847\":[1,113],\"848\":[1,86],\"849\":[1,95],\"850\":[1,71],\"851\":[1,66],\"852\":[1,49],\"853\":[1],\"854\":[3,4],\"855\":[2,89],\"856\":[3,81],\"857\":[2],\"858\":[3,18],\"859\":[2,15],\"860\":[3,20],\"861\":[1,73],\"862\":[1],\"863\":[2,15],\"864\":[2,13],\"865\":[2],\"866\":[1,7],\"867\":[1,18],\"868\":[2],\"869\":[1,9],\"870\":[1,30],\"871\":[2,53],\"872\":[1],\"873\":[2],\"874\":[3,3],\"875\":[3,3],\"876\":[3,9],\"877\":[3,6],\"878\":[3,6],\"879\":[3,6],\"880\":[3,3],\"881\":[3,3],\"882\":[3,3],\"883\":[3,3],\"884\":[3,3],\"885\":[3,4],\"886\":[3,6],\"887\":[2],\"888\":[3,22],\"889\":[2,40],\"890\":[3,29],\"891\":[3,4],\"892\":[3,4],\"893\":[3,6],\"894\":[2],\"895\":[3,40],\"896\":[3,29],\"897\":[2,26],\"898\":[3,26],\"899\":[3,24],\"900\":[3,23],\"901\":[3,35],\"902\":[2],\"903\":[3,22],\"904\":[2],\"905\":[3,4],\"906\":[3,4],\"907\":[3,7],\"908\":[3,4],\"909\":[3,8],\"910\":[3,4],\"911\":[3,4],\"912\":[3,4],\"913\":[3,4],\"914\":[3,4],\"915\":[3,4],\"916\":[3,4],\"917\":[3,4],\"918\":[3,4],\"919\":[3,6],\"920\":[3,4],\"921\":[3,2],\"922\":[3,2],\"923\":[3,2],\"924\":[3,4],\"925\":[3,4],\"926\":[3,4],\"927\":[1],\"928\":[2],\"929\":[2,80],\"930\":[3,27],\"931\":[2],\"932\":[3,69],\"933\":[3,20],\"934\":[1,11],\"935\":[2,37],\"936\":[2,19],\"937\":[2],\"938\":[1,6],\"939\":[3,32],\"940\":[2],\"941\":[4],\"942\":[2,17],\"943\":[4,11],\"944\":[1,12],\"945\":[2,15],\"946\":[2,6],\"947\":[5,26],\"948\":[3,28],\"949\":[5,28],\"950\":[2,14],\"951\":[4,76],\"952\":[3,85],\"953\":[4,1],\"954\":[3,43],\"955\":[2,2],\"956\":[3],\"957\":[3],\"958\":[4,27],\"959\":[3,135],\"960\":[4,27],\"961\":[2],\"962\":[4,3],\"963\":[3,3],\"964\":[3],\"965\":[4,19],\"966\":[6,12],\"967\":[7,62],\"968\":[1],\"969\":[2,20],\"970\":[6,63],\"971\":[2,4],\"972\":[1,4],\"973\":[1],\"974\":[1,5],\"975\":[1,73],\"976\":[1,8],\"977\":[2,17],\"978\":[2,12],\"979\":[2],\"980\":[2],\"981\":[3,37],\"982\":[3,75],\"983\":[2,84],\"984\":[3,63],\"985\":[3,2],\"986\":[3],\"987\":[6,4],\"988\":[6],\"989\":[2,35],\"990\":[1],\"991\":[3,13],\"992\":[2,15],\"993\":[3,21],\"994\":[2,19],\"995\":[1,13],\"996\":[3,14],\"997\":[2,67],\"998\":[3,16],\"999\":[1,3],\"1000\":[1],\"1001\":[2,7],\"1002\":[2],\"1003\":[2,7],\"1004\":[2,5],\"1005\":[2,4],\"1006\":[2,4],\"1007\":[2,1],\"1008\":[2,1],\"1009\":[1],\"1010\":[2,56],\"1011\":[2,35],\"1012\":[2,18],\"1013\":[2,7],\"1014\":[2,10],\"1015\":[2,31],\"1016\":[1,62],\"1017\":[1,19],\"1018\":[3,13],\"1019\":[2,1],\"1020\":[2],\"1021\":[3,22],\"1022\":[4,23],\"1023\":[2,32],\"1024\":[4,23],\"1025\":[4,29],\"1026\":[2,9],\"1027\":[2,8],\"1028\":[2,2],\"1029\":[2,8],\"1030\":[3,35],\"1031\":[3,8],\"1032\":[3,14],\"1033\":[3,37],\"1034\":[2],\"1035\":[4,1],\"1036\":[3,2],\"1037\":[1,37],\"1038\":[1,26],\"1039\":[1],\"1040\":[1,81],\"1041\":[1,113],\"1042\":[1,90],\"1043\":[1,95],\"1044\":[1,71],\"1045\":[1,66],\"1046\":[1,49],\"1047\":[1],\"1048\":[3,4],\"1049\":[2,89],\"1050\":[3,81],\"1051\":[2],\"1052\":[3,18],\"1053\":[2,15],\"1054\":[3,20],\"1055\":[1,73],\"1056\":[1],\"1057\":[2,15],\"1058\":[2,13],\"1059\":[2],\"1060\":[1,7],\"1061\":[1,18],\"1062\":[2],\"1063\":[1,9],\"1064\":[1,30],\"1065\":[2,53],\"1066\":[1],\"1067\":[2],\"1068\":[3,3],\"1069\":[4,3],\"1070\":[4,3],\"1071\":[3,9],\"1072\":[3,6],\"1073\":[3,6],\"1074\":[3,6],\"1075\":[3,3],\"1076\":[3,3],\"1077\":[3,3],\"1078\":[3,3],\"1079\":[3,3],\"1080\":[3,4],\"1081\":[3,6],\"1082\":[2],\"1083\":[3,22],\"1084\":[2,40],\"1085\":[3,29],\"1086\":[3,4],\"1087\":[3,4],\"1088\":[3,6],\"1089\":[4,4],\"1090\":[2],\"1091\":[3,40],\"1092\":[3,29],\"1093\":[2,28],\"1094\":[3,28],\"1095\":[3,26],\"1096\":[3,25],\"1097\":[3,35],\"1098\":[2],\"1099\":[3,22],\"1100\":[2],\"1101\":[3,4],\"1102\":[3,4],\"1103\":[3,7],\"1104\":[3,4],\"1105\":[3,8],\"1106\":[3,4],\"1107\":[3,4],\"1108\":[3,4],\"1109\":[3,4],\"1110\":[3,4],\"1111\":[3,4],\"1112\":[3,4],\"1113\":[3,4],\"1114\":[3,4],\"1115\":[3,6],\"1116\":[3,4],\"1117\":[3,2],\"1118\":[3,2],\"1119\":[3,2],\"1120\":[3,4],\"1121\":[3,4],\"1122\":[3,4],\"1123\":[1,4],\"1124\":[2,34],\"1125\":[2,75],\"1126\":[1],\"1127\":[2],\"1128\":[2,80],\"1129\":[3,27],\"1130\":[2],\"1131\":[3,69],\"1132\":[3,20],\"1133\":[1,11],\"1134\":[2,37],\"1135\":[2,19],\"1136\":[2],\"1137\":[1,6],\"1138\":[3,32],\"1139\":[2],\"1140\":[4],\"1141\":[2,17],\"1142\":[4,11],\"1143\":[1,12],\"1144\":[2],\"1145\":[1,16],\"1146\":[1,16],\"1147\":[2,6],\"1148\":[5,26],\"1149\":[3,28],\"1150\":[5,28],\"1151\":[2,14],\"1152\":[4,76],\"1153\":[3,85],\"1154\":[4,1],\"1155\":[3,43],\"1156\":[2,2],\"1157\":[3],\"1158\":[3],\"1159\":[4,27],\"1160\":[3,135],\"1161\":[4,27],\"1162\":[1,4],\"1163\":[3,3],\"1164\":[2,3],\"1165\":[2],\"1166\":[3,20],\"1167\":[5,12],\"1168\":[5,62],\"1169\":[1],\"1170\":[2,20],\"1171\":[6,63],\"1172\":[2,4],\"1173\":[1,4],\"1174\":[2,56],\"1175\":[2,6],\"1176\":[2,2],\"1177\":[3,20],\"1178\":[3,35],\"1179\":[2],\"1180\":[3,20],\"1181\":[3,26],\"1182\":[2,1],\"1183\":[3,28],\"1184\":[3,54],\"1185\":[3,33],\"1186\":[1,4],\"1187\":[1],\"1188\":[1,5],\"1189\":[1,73],\"1190\":[1,8],\"1191\":[2,12],\"1192\":[2,13],\"1193\":[2,29],\"1194\":[2,2],\"1195\":[2],\"1196\":[2],\"1197\":[3,30],\"1198\":[3,75],\"1199\":[3,98],\"1200\":[3,63],\"1201\":[2,2],\"1202\":[3],\"1203\":[6],\"1204\":[6],\"1205\":[2,54],\"1206\":[2,35],\"1207\":[1],\"1208\":[3,13],\"1209\":[2,15],\"1210\":[3,21],\"1211\":[2,19],\"1212\":[1,5],\"1213\":[3,14],\"1214\":[2,67],\"1215\":[3,16],\"1216\":[1,11],\"1217\":[2,24],\"1218\":[2,52],\"1219\":[1,3],\"1220\":[1],\"1221\":[2,7],\"1222\":[2],\"1223\":[2,7],\"1224\":[2,5],\"1225\":[2,4],\"1226\":[2,4],\"1227\":[2,1],\"1228\":[2,1],\"1229\":[1],\"1230\":[2,56],\"1231\":[2,35],\"1232\":[2,18],\"1233\":[2,7],\"1234\":[2,10],\"1235\":[2,31],\"1236\":[1,62],\"1237\":[2,56],\"1238\":[2,35],\"1239\":[2,18],\"1240\":[2,7],\"1241\":[2,10],\"1242\":[2,31],\"1243\":[1,19],\"1244\":[3,16],\"1245\":[2,1],\"1246\":[2],\"1247\":[3,23],\"1248\":[4,24],\"1249\":[2,33],\"1250\":[4,24],\"1251\":[4,31],\"1252\":[2,8],\"1253\":[3,35],\"1254\":[3,8],\"1255\":[3,14],\"1256\":[2,37],\"1257\":[2,2],\"1258\":[2],\"1259\":[4,1],\"1260\":[3,2],\"1261\":[1,37],\"1262\":[1,26],\"1263\":[1],\"1264\":[1,81],\"1265\":[1,113],\"1266\":[1,86],\"1267\":[1,95],\"1268\":[1,71],\"1269\":[1,66],\"1270\":[1,49],\"1271\":[1],\"1272\":[3,4],\"1273\":[2,89],\"1274\":[3,81],\"1275\":[2],\"1276\":[3,18],\"1277\":[2,15],\"1278\":[3,20],\"1279\":[1,73],\"1280\":[1,7],\"1281\":[2,67],\"1282\":[2,11],\"1283\":[2,7],\"1284\":[2,14],\"1285\":[2],\"1286\":[1,5],\"1287\":[1,18],\"1288\":[2],\"1289\":[1,7],\"1290\":[1,30],\"1291\":[1,23],\"1292\":[2,6],\"1293\":[2],\"1294\":[3,35],\"1295\":[2,8],\"1296\":[3,14],\"1297\":[3,36],\"1298\":[2,19],\"1299\":[2,61],\"1300\":[2,7],\"1301\":[2,4],\"1302\":[5],\"1303\":[4,10],\"1304\":[3,42],\"1305\":[2,62],\"1306\":[2,7],\"1307\":[2,4],\"1308\":[1,7],\"1309\":[2,18],\"1310\":[2,33],\"1311\":[2,32],\"1312\":[2,3],\"1313\":[3],\"1314\":[3],\"1315\":[4,27],\"1316\":[2,62],\"1317\":[2,7],\"1318\":[2,4],\"1319\":[1,10],\"1320\":[2,17],\"1321\":[2,32],\"1322\":[2,14],\"1323\":[2,2],\"1324\":[3],\"1325\":[3],\"1326\":[4,27],\"1327\":[2,61],\"1328\":[2,7],\"1329\":[2,4],\"1330\":[1,10],\"1331\":[2,17],\"1332\":[2,32],\"1333\":[2,14],\"1334\":[2,2],\"1335\":[3],\"1336\":[3],\"1337\":[4,27],\"1338\":[2,61],\"1339\":[2,7],\"1340\":[2,4],\"1341\":[1,23],\"1342\":[2,6],\"1343\":[2],\"1344\":[3,35],\"1345\":[2,8],\"1346\":[3,14],\"1347\":[3,36],\"1348\":[2,19],\"1349\":[2,61],\"1350\":[2,7],\"1351\":[2,4],\"1352\":[5],\"1353\":[4,10],\"1354\":[3,42],\"1355\":[2,62],\"1356\":[2,7],\"1357\":[2,4],\"1358\":[1,3],\"1359\":[1],\"1360\":[1],\"1361\":[1],\"1362\":[1],\"1363\":[3],\"1364\":[1],\"1365\":[3],\"1366\":[1],\"1367\":[3],\"1368\":[1],\"1369\":[2],\"1370\":[1],\"1371\":[3],\"1372\":[1],\"1373\":[1],\"1374\":[1],\"1375\":[1],\"1376\":[1]},\"averageFieldLength\":[2.431372549019606,22.486386523939494],\"storedFields\":{\"0\":{\"h\":\"首页\"},\"1\":{\"h\":\"\"},\"2\":{\"h\":\"公司使用列表\",\"t\":[\"公司/个人\",\"项目名称\",\"项目介绍\",\"LOGO\\\\代码地址\",\"中交武汉智行国际\",\"能力开放平台\",\"内部系统，流程审批\",\"新理益智慧网络科技（重庆）有限公司\",\"极点OA智慧网络办公系统\",\"企业综合办公管理系统\",\"安徽数智建造研究院有限公司\",\"进销存运营平台\",\"中铁四局集团全资子公司，集成工作流引擎\",\"杭州三之一智联科技有限公司\",\"质量管理系统\",\"基于工业互联网的数字化安全与质量管理平台，集风险、质量和安全为一体，以CTQ（关键质量特性）为中心，端到端全生命周期数字化安全与质量管理。\",\"郑州如阳科技有限公司\",\"智慧燃气平台\",\"智慧燃气平台\",\"山东融佑信息科技有限公司\",\"融运力TMS\",\"融运力TMS是基于移动互联网的面向货主侧需求的订单履约类的TMS系统，兼有传统TMS的竞标、派车、跟踪、签收等功能，同时具备企业ERP级的协同功能\",\"陕西物联达智能科技有限公司\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"H5VE团队\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"抚顺银行\",\"外围管理平台\",\"行内人员使用\",\"武汉数演科技有限公司\",\"开源工作流\",\"仿钉钉界面的开源工作流平台\",\"半月无霜\",\"banmoon-test\",\"半月无霜个人项目\",\"https://www.banmoon.top\",\"某某公司\",\"合规管控系统\",\"对各类事项进行检查，上报不合规的地方来审批整改\",\"个人\",\"海狼OA系统\",\"海狼OA系统\",\"xx自来水股份有限公司\",\"节水信息管理系统\",\"当地节水系统\",\"图灵谷\",\"内部OA\",\"内部OA\",\"湖北建科工程\",\"内部OA\",\"内部OA\",\"Holly\",\"智慧政务\",\"政务系统\",\"雨巷\",\"OA审批系统\",\"公司内部OA办公系统\",\"暗影\",\"erp\",\"erp\",\"LYQ\",\"XX单位综合信息服务系统\",\"简易工作流，OA办公，数据共享等等\",\"若愚\",\"测试检测平台\",\"starrydesert\",\"基于SSM的职工管理系统\",\"毕业设计\",\"zyflzz\",\"基于机器学习的只能停车管理系统\",\"毕业设计\",\"南山客\",\"基于SpringBoot的财务管理系统\",\"本科毕业设计\"]},\"3\":{\"h\":\"Dromara成员项目\"},\"4\":{\"h\":\"参与贡献\"},\"5\":{\"h\":\"为开源项目点一个Star\",\"t\":[\"Star的多少关系到项目能否被更多人看到 同时Star也是作者前进的动力(作者每天都在盯着Star 涨了会开心 跌了会失落) 大家在寻找开源项目的时候, 大多数情况也是会先看Star比较多的项目 所以请给您觉得好的开源项目点一个小小的Star, 让好的项目能够被更多人看到\",\"github地址 | gitee地址 | gitCode地址\"]},\"6\":{\"h\":\"为社区处理问题\",\"t\":[\"Issue是社区的交流地 大家会在这里提出自己的问题 或者是项目的功能异常\",\"提问的规范在Issue的模板里已经写好了 按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",\"屏幕截图\",\"为提出问题的小伙伴答疑 可以有效降的帮助别人\",\"而且可以降低社区人员的精力分散 使精力全部投入到项目设计研发中\",\"屏幕截图\"]},\"7\":{\"h\":\"\",\"t\":[\"大家都知道 我们程序员都不擅长写作\",\"有时候作者把文档写完了也不知道用户是什么感觉 是否能看懂\",\"所以参与社区文档建设绝对是一件意义重大的事情\",\"大家可以在Issue提出观后感 觉得哪看不懂 觉得哪应该详细说明\",\"当然了 大家也可以对文档进行改进后提交PR修改申请\"]},\"8\":{\"h\":\"贡献代码\",\"t\":[\"想参与贡献代码的小伙伴 重点来了: 作者会经常在Issue里发布需求认领 觉得自己能做的可以在Issue里跟作者讨论 如需求还不够清晰 或者做的过程中遇到了什么问题\",\"需求确定了以后就可以开始专注的写代码了 但在开始写代码之前 一定要先看一下如何正确的提交PR\",\"一点要仔细看: 如何提交PR 👈点他点他\"]},\"9\":{\"h\":\"如何成为项目贡献者\",\"t\":[\"1.对框架有重大贡献者(由作者与团队成员判定) 2.完成社区发布的两项复杂任务 3.持续完成社区发布的简单任务若干(作者会关注到) 4.持续为社区优化文档或处理issue若干(作者会关注到)\"]},\"10\":{\"h\":\"项目贡献者待遇\",\"t\":[\"1.捐献红包和群主不定时红包 2.每年还会发放IDEA正版授权,视情况而定\"]},\"11\":{\"h\":\"介绍\"},\"12\":{\"h\":\"1、项目介绍\",\"t\":[\"重要\",\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"希望一键三连，你的⭐️ Star ⭐️是我持续开发的动力，项目也活的更长\"]},\"13\":{\"h\":\"2、开源协议\",\"t\":[\"Warm-Flow采用APACHE LICENSE 2.0开源协议，已申请软著，您如果需要源码开发方式，需要注意以下几点：\",\"请不要删除和修改根目录下的LICENSE文件。\",\"请不要删除和修改Warm-Flow源码头部的版权声明。\",\"本项目代码可免费商业使用，商业使用请保留源码和相关描述文件的项目出处，作者声明等。\",\"分发源码时候，请注明软件出处 http://www.warm-flow.cn\",\"不可二次分发开源参与同类竞品，如有想法可联系290631660@qq.com商议合作。\",\"若您的项目无法满足以上几点，需要更多功能代码，获取可找作者定制化开发，290631660@qq.com\"]},\"14\":{\"h\":\"3、应用场景\",\"t\":[\"Warm-Flow作为一个国产的工作流引擎，其设计简洁轻量但功能全面，适用于多种应用场景，尤其是针对中小型项目。以下是一些典型的应用场景：\",\"企业内部流程管理：用于管理企业的日常业务流程，如请假、报销、采购审批等。\",\"项目管理：在项目管理中，Warm-Flow可以用来跟踪项目任务的状态，管理项目流程，确保项目按计划进行。\",\"办公自动化：通过Warm-Flow，企业可以实现办公流程的自动化，提高工作效率，减少人为错误。\",\"客户服务流程：用于管理客户服务请求，如客户咨询、投诉处理、售后服务等。\",\"人力资源管理：在人力资源管理中，Warm-Flow可用于员工招聘、培训、绩效评估等流程的管理。\",\"财务和会计流程：管理财务审批流程，如发票审核、预算审批等。\",\"IT服务管理：用于IT服务请求的处理，如IT支持请求、系统变更管理等。\",\"业务流程优化：企业可以利用Warm-Flow来分析和优化现有业务流程，提高业务效率。\",\"合规性和风险管理：帮助企业在遵守法规和标准的同时，管理风险和合规流程。\",\"跨部门协作：Warm-Flow支持跨部门的流程协作，帮助不同部门之间更好地协调工作。\"]},\"15\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"16\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"17\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"18\":{\"h\":\"7、特别赞助\",\"t\":[\"如何成为赞助商 加群联系作者详谈\"]},\"19\":{\"h\":\"8、你可以请作者喝杯咖啡表示鼓励\",\"t\":[\"捐赠地址\"]},\"20\":{\"h\":\"加入群聊\"},\"21\":{\"h\":\"交流群\",\"t\":[\"qq群 : 【778470567】\",\"微信号 : 【warm-houhou】\",\"微信公众号 : 【warm-flow工作流】\"]},\"22\":{\"h\":\"学习资料\"},\"23\":{\"h\":\"1、学习视频\",\"t\":[\"1、群友个人录制的视频，把研究心得以视频的形式发在b站了，功能演示和源码浅读！https://www.bilibili.com/video/BV1Ci42117pK/\"]},\"24\":{\"h\":\"2、博文\",\"t\":[\"Warm-Flow工作流引擎数据库主键自增策略实现\"]},\"25\":{\"h\":\"warm组织成员介绍\",\"t\":[\"重要\",\"昵称：晓华 角色：后端工程师 个人介绍：研发工程师、技术经理，工作经验8年。爱好撸代码\",\"重要\",\"昵称：Tirion Fordring 角色：后端工程师 个人介绍：Java研发工程师、工作经验6年。爱好玩服务器和撸代码。\",\"重要\",\"昵称：梁小梁 角色：后端工程师 个人介绍：Java开发工程师，工作经验5年，爱好撸码、跑步\",\"重要\",\"昵称：Vanlin 角色：后端工程师 个人介绍：研发工程师，爱好软件开发。\",\"重要\",\"昵称：Zhen 角色：前端工程师 个人介绍：前端开发工程师，工作经验4年。热爱编程，喜欢拥抱新技术。\"]},\"26\":{\"h\":\"有偿服务\"},\"27\":{\"h\":\"VIP群\",\"t\":[\"项目代码、文档，均开源免费可商用，遵循开源协议，不代表着项目收费\",\"VIP群由四名后端与一名前端工程师组成，提供问题答疑服务和技术分享等服务，欢迎加群交流\",\"支付后加微信号【warm-houhou】，邀请进入vip群\",\"问问题等于做习题 听作者解答问题等于习题讲解 一个人接触的问题有限 一群人接触的问题无限 早进群早接触更多的问题 承诺: 看见必回复 让你感受作者有多话痨\",\"加群扫码: 99元\"]},\"28\":{\"h\":\"私人服务\",\"t\":[\"作者提供作者私人服务，关于Warm-Flow工作流私人培训，如流程引擎集成与使用，技术咨询等，包括但不限于\"]},\"29\":{\"h\":\"特别赞助\",\"t\":[\"如需Warm-Flow官网挂广告，请加微信号【warm-houhou】联系我\"]},\"30\":{\"h\":\"贡献者列表\",\"t\":[\"贡献者列表 ({{authorsList.length}})\",\"{{ item.name }}Commits: {{ item.contributions }}\"]},\"31\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"32\":{\"h\":\"演示图\"},\"33\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"34\":{\"h\":\"2、流程设计\"},\"35\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"36\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"37\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"38\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"39\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"40\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"41\":{\"h\":\"集成项目示例\",\"t\":[\"版本\",\"作者\",\"项目名称\",\"源码地址\",\"springboot2+vue2\",\"晓华\",\"hh-vue(基于ruoyi-vue)\",\"https://gitee.com/min290/hh-vue\",\"springboot3+React\",\"quick\",\"quick-boot\",\"https://github.com/csx-bill/quick-boot\",\"vue3\",\"晓华/Zhen\",\"ruoyi-vue3(基于ruoyi-ui-vue3)\",\"https://gitee.com/min290/RuoYi-Vue3.git\",\"spring-cloud(nacos)+vue3\",\"梁小梁/Zhen\",\"Ruoyi-Cloud&Ruoyi-Cloud-Vue3\",\"https://gitee.com/liangliyun/RuoYi-Cloudhttps://gitee.com/liangliyun/RuoYi-Cloud-Vue3\"]},\"42\":{\"h\":\"提交pr\"},\"43\":{\"h\":\"步骤一 Fork项目到自己仓库\",\"t\":[\"屏幕截图\"]},\"44\":{\"h\":\"步骤二 基于dev分支 新建一个此PR功能点的专属分支\"},\"45\":{\"h\":\"步骤三 使用Git工具 将自己仓库的项目拉去到本地做代码编写\",\"t\":[\"屏幕截图\"]},\"46\":{\"h\":\"步骤四 使用Idea打开项目 切换到新建的功能分支\",\"t\":[\"屏幕截图\"]},\"47\":{\"h\":\"步骤五 设置创建类的模板\",\"t\":[\"新创建的类使用这个模板生成注释，使用方式在类上面写上 /c，然后按回车会自动生成\"]},\"48\":{\"h\":\"步骤六 将编写好的代码 提交到自己的远程仓库\",\"t\":[\"屏幕截图\",\"git提交规范\",\"[init] 初始化 [feat] 增加新功能 [fix] 修复问题/BUG [perf] 优化/性能提升 [refactor] 重构 [revert] 撤销修改 [style] 代码风格相关无影响运行结果的 [update] 其他修改 [upgrade] 升级版本\"]},\"49\":{\"h\":\"步骤七 创建PR申请(此操作在自己仓库或者要PR的仓库都可以)\",\"t\":[\"屏幕截图\"]},\"50\":{\"h\":\"步骤八 等待作者评审 按要求更改 直到没有问题后被作者合并\",\"t\":[\"屏幕截图\"]},\"51\":{\"h\":\"你可以请作者喝杯咖啡表示鼓励\",\"t\":[\"感谢所有捐赠者，你们的支持是我最大的动力。这些费用将用于服务器、域名和相关服务的费用，以及warm组织成员和贡献者的红包奖励。\",\"屏幕截图\"]},\"52\":{\"h\":\"捐赠列表\",\"t\":[\"如有遗漏，请联系我。\",\"捐献者\",\"金额/元\",\"留言\",\"时间\",\"一拳打爆常大宝\",\"20\",\"感谢您对开源项目的支持\",\"2024-08-08\",\"李*佳\",\"30\",\"感谢您对开源项目的支持\",\"2024-08-02\",\"*佳\",\"30\",\"希望有交流机会\",\"2024-08-01\",\"*子\",\"30\",\"准备试用，致敬\",\"2024-07-16\",\"i*d\",\"1\",\"感谢您对开源项目的支持\",\"2024-07-11\",\"自由飞翔\",\"100\",\"感谢您对开源项目的支持\",\"2024-07-03\",\"文斌\",\"100\",\"warm-flow项目非常好，希望能发展壮大\",\"2024-06-25\",\"*入\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*梁\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*马\",\"100\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*热\",\"68\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*巴\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*敏\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*剑\",\"1\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"一骑\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"姜杰\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Cola\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Dotor-ww💪\",\"30\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*荒\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*飞鸿\",\"11\",\"感谢您对开源项目的支持\",\"2024-06-25\"]},\"53\":{\"h\":\"常见问题\"},\"54\":{\"h\":\"1、id精度丢失\",\"t\":[\"此项目目前使用的是雪花算法生成id，可能导致前端页面获取丢失精度（感谢【luoheyu】提供测试意见）\"]},\"55\":{\"h\":\"方案1：处理长度过长的Long类型\",\"t\":[\"只处理长度过长的Long类型，前端页面就不会丢失精度了 (感谢【Colin】提供解决方案)\",\"创建一个BigNumberSerializer（用来处理超过JS数据范围的Long类型）\",\"/** * 超出 JS 最大最小值 处理 */ @JacksonStdImpl public class BigNumberSerializer extends NumberSerializer { /** * 根据 JS Number.MAX_SAFE_INTEGER 与 Number.MIN_SAFE_INTEGER 得来 */ private static final long MAX_SAFE_INTEGER = 9007199254740991L; private static final long MIN_SAFE_INTEGER = -9007199254740991L; /** * 提供实例 */ public static final BigNumberSerializer INSTANCE = new BigNumberSerializer(Number.class); public BigNumberSerializer(Class<? extends Number> rawType) { super(rawType); } @Override public void serialize(Number value, JsonGenerator gen, SerializerProvider provider) throws IOException { // 超出范围 序列化位字符串 if (value.longValue() > MIN_SAFE_INTEGER && value.longValue() < MAX_SAFE_INTEGER) { super.serialize(value, gen, provider); } else { gen.writeString(value.toString()); } } }\",\"添加JacksonConfig配置全局序列化（针对所有属性），一下两种方式任选其一\",\"@Configuration public class JacksonConfig { // 方式一 @Bean public Jackson2ObjectMapperBuilderCustomizer customizer() { return builder -> { ... 其他配置.... JavaTimeModule javaTimeModule = new JavaTimeModule(); //Long,BigInteger 转为 String 防止 js 丢失精度 javaTimeModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); builder.modules(javaTimeModule); }; } // 方式二 @Bean public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() { final Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder(); final ObjectMapper objectMapper = builder.build(); ... 其他配置.... SimpleModule simpleModule = new SimpleModule(); // Long,BigInteger 转为 String 防止 js 丢失精度 simpleModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); objectMapper.registerModule(simpleModule); return new MappingJackson2HttpMessageConverter(objectMapper); } }\"]},\"56\":{\"h\":\"方案2：序列化所有long类型\",\"t\":[\"如何处理Long类型精度丢失问题\"]},\"57\":{\"h\":\"方案3：通过yml配置\",\"t\":[\"通过设置id生成器类型，修改id生成方式\",\"# warm-flow工作流配置 warm-flow: # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19\"]},\"58\":{\"h\":\"方案4：自定义id生成策略\",\"t\":[\"参照如下文章，继承填充器接口，修改id生成方式Warm-Flow工作流引擎数据库主键自增策略实现\"]},\"59\":{\"h\":\"2、流程图片中文乱码\"},\"60\":{\"h\":\"linux环境：安装中文字体\",\"t\":[\"生成的流程图中文乱码或者报错InternalError; java.lang.reflect,InvocationTargetException 由于服务器上缺少中文字体，通过检查fc-list :lang=zh是否包含中文字符集（以下是存在的示例）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ zhFonts]# fc-list :lang=zh /usr/share/fonts/zhFonts/SIMSUN.TTC: 新宋体,NSimSun:style=常规,Regular /usr/share/fonts/zhFonts/SIMSUN.TTC: 宋体,SimSun:style=常规,Regular\",\"zhFonts.zip 将文件解压至/usr/share/fonts目录下，如果还不行，添加到jre的lib/fonts目录（感谢【我们好像在哪儿见过 】提供的方案）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ fonts]# ll 总用量 8 drwxr-xr-x 2 root root 4096 5月 17 00:20 dejavu drwxr-xr-x 2 root root 4096 5月 17 11:40 zhFonts\",\"重启服务\"]},\"61\":{\"h\":\"docker环境：安装中文字体\",\"t\":[\"以ruoyi-vue-plus-4.x中dockerfile为例，添加中文字体即可 （感谢【格调@main】提供的方案）\"]},\"62\":{\"h\":\"3、FlowAutoConfig.initFlow()未加载\",\"t\":[\"spring开启懒加载后，导致FlowAutoConfig.initFlow()未加载。（由社区【星 Q】提供） 删除\\\"lazy-initialization: true\\\",可解决问题，以下是错误示例\",\"spring: main: allow-bean-definition-overriding: true lazy-initialization: true web-application-type: servlet\"]},\"63\":{\"h\":\"4、监听器未执行或者类型转换异常\",\"t\":[\"热部署插件jrebel或者devtools导致问题，检查是否使用热部署插件，比如spring.devtools，可以把插件关了，或者加上排除配置spring-devtools.properties\",\"restart.include.flow=/io.github.minliuhua.*.jar\"]},\"64\":{\"h\":\"5、hh-vue切换mybaits-plus\",\"t\":[\"1、根pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter 2、ruoyi-flow的pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter 3、ruoyi-common增加依赖\",\" <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.5.1</version> </dependency>\",\"4、MyBatisConfig.java注释掉，新增MybatisPlusConfig\",\"点击查看代码\",\"package com.ruoyi.framework.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; /** * Mybatis Plus 配置 * * @author ruoyi */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 分页插件 interceptor.addInnerInterceptor(paginationInnerInterceptor()); // 乐观锁插件 interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor()); // 阻断插件 interceptor.addInnerInterceptor(blockAttackInnerInterceptor()); return interceptor; } /** * 分页插件，自动识别数据库类型 https://baomidou.com/guide/interceptor-pagination.html */ public PaginationInnerInterceptor paginationInnerInterceptor() { PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); // 设置数据库类型为mysql paginationInnerInterceptor.setDbType(DbType.MYSQL); // 设置最大单页限制数量，默认 500 条，-1 不受限制 paginationInnerInterceptor.setMaxLimit(-1L); return paginationInnerInterceptor; } /** * 乐观锁插件 https://baomidou.com/guide/interceptor-optimistic-locker.html */ public OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor() { return new OptimisticLockerInnerInterceptor(); } /** * 如果是对全表的删除或更新操作，就会终止该操作 https://baomidou.com/guide/interceptor-block-attack.html */ public BlockAttackInnerInterceptor blockAttackInnerInterceptor() { return new BlockAttackInnerInterceptor(); } }\",\"5、ruoyi-admin的application.yml中配置mybatis改为mybatis-plus\"]},\"65\":{\"h\":\"6、导入依赖包失败\"},\"66\":{\"h\":\"6.1、可尝试切换maven版本 （感谢【一拳打爆常大宝】）\",\"t\":[\"如maven3.9.6切换为低版本3.8.2\"]},\"67\":{\"h\":\"7、 StackOverflowError 错误\",\"t\":[\"查看跳转线退回的，是否设置为退回类型，后续有时间再做校验\"]},\"68\":{\"h\":\"更新日志\",\"t\":[\"重要\",\"更新脚本在项目里面的sql文件下，对应数据库类型，对应版本号\"]},\"69\":{\"h\":\"未来发布计划\"},\"70\":{\"h\":\"vx.x.x\",\"t\":[\"事件\",\"流程图合法性检验\",\"把不能退回到开始节点去掉，会有什么影响\",\"子流程\",\"会签和票签通过率策略，支持扩展\",\"重启流程\",\"适配国产数据库\",\"包容网关\"]},\"71\":{\"h\":\"开发中计划\"},\"72\":{\"h\":\"v1.3.5\",\"t\":[\"【升级指南】\",\"无\",\"更新日志\",\"动态表单支持 @vanlin\",\"取回 @xiarigang\",\"新增流程图元数据 @晓华\",\"接入仿钉钉设计器 @Zhen\",\"可多个网关直连 @晓华\",\"开启流程可以不默认执行到中间节点 @晓华\",\"新增办理人选择项接口 @晓华\",\"[feat] 流程定义数据保存支持json格式 @xiarigang\"]},\"73\":{\"h\":\"更新日志\"},\"74\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"【升级指南】\",\"办理人变量表达式，删除策略前缀，通过$和#区分，需执行1.3.4增量脚本sql\",\"依赖的groupId：org.dromara，改为org.dromara.warm\",\"如果扩展了条件表达式策略 \",\"接口或者抽象类前缀由ExpressionStrategy改为 ConditionStrategy\",\"全局搜索org.dromara.warm.flow.core.expression 替换为org.dromara.warm.flow.core.expression,然后检查是否正确\",\"更新日志\",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器优化配置（类中配置增加类型接口，或者优化页面配置）\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[update] 修改项目的groupId\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"75\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"【升级指南】\",\"独立设计器放行路径增加/warm-flow，如果想要共享后端权限(比如token)，可不增加，并且按照官网流程设计器引入进行设置\",\"更新日志\",\"[feat] 新增支持接入业务系统token，支持多token\",\"[update] 办理人选择tabs切换\",\"[update] 没有左侧树状选择数据时，左侧隐藏\",\"[fix] 统一修复分页bug\",\"[fix] 修复删除流程实例信息，未删除办理人信息 @xiarigang\",\"[fix] 修改【Bug】 会签节点委派 @vanlin\",\"[fix] 统一修复分页bug\"]},\"76\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"【升级指南】\",\"依赖的groupId：io.github.minliuhua，改为org.dromara\",\"包名：com.warm， 改为org.dromara.warm\",\"节点详情进入改为双击\",\"终止操作的流程状态改为更合理的终止状态，如需还想按照原本的自动完成，请使用自定义流程状态\",\"FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\",\"转办、委派、加签和减签方法，老方法标识即将删除, 请尽快使用新的接口\",\"终止免校验权限改为设置ignore字段\",\"设计器引入优化 \",\"设计器后端放行地址/warm-flow/**删除，不再需要\",\"前端加载设计器代理配置,vue.config.js或者nginx中的代理，/warm-flow-ui/删除，不再需要\",\"iframe中访问设计器接口由/warm-flow-ui/${definitionId}?disabled=${disabled}，改为VUE_APP_BASE_API +/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\",\"VUE_APP_BASE_API是前端访问前缀比如prod-api\",\"更新日志\",\"[feat] 新增boot3+java17支持\",\"[feat] 流程设计器新增快捷键支持\",\"[feat] 新增流程状态枚举（终止、作废、撤销和取回）\",\"[feat] 新增转办、委派、加签和减签方法，老方法标识即将删除，接入监听器\",\"[update] 终止流程状态改为更合理的终止状态\",\"[update] 流程复制克隆改set/get赋值\",\"[refactor] 重构skip等方法通用校验\",\"[perf] 流程图清晰度调整\",\"[fix] 流程图查询异常处理\",\"[fix] 修复历史记录表，创建时间和更新时间一样的问题\",\"[remove] FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\"]},\"77\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"【升级指南】\",\"执行升级脚本【warm-flow_1.3.0.sql】\",\"更新日志\",\"[feat] 设计器独立 @zhen\",\"[feat] 使用jar引入方式引入设计器\",\"[feat] 新增办理人变量表达式流程案例\",\"[feat] 新增方法，获取流程变量的map类型\",\"[update] 节点线条保存关联名称\",\"[fix] 修复mybatis扩展包中，flowStatus变量书写错误的问题\",\"[fix] 更新时间有值时，取更新时间，不是创建时间\"]},\"78\":{\"h\":\"v1.2.10 2024-09-26\",\"t\":[\"【升级指南】\",\"无\",\"更新日志\",\"[fix] 修复mybatis-plus扩展包，配置了其他id策略不生效的问题\"]},\"79\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"【升级指南】\",\"本次升级，内置json库snack3方式，改为spi方式加载，业务项目中存在哪种json就会使用哪种的实现， 支持顺序按顺序加载一种：snack3、jackson、fastjson、gson，并且目前只实现了这四种，可扩展\",\"如在未集成snack3库的环境下，还需要使用snack3库，需要单独使用（原组件使用snack3库）\",\" <dependency> <groupId>org.noear</groupId> <artifactId>snack3</artifactId> <version>3.2.88</version> </dependency>\",\"更新日志\",\"[feat] json库支持snack3、jackson、fastjson和gson，并且支持扩展\",\"[feat] 增加办理人变量表达式，支持${xxx}替换和spel，并支持扩展\",\"[feat] ListenerVariable监听器变量新增FlowParams字段，方便开始监听器全局传递参数\",\"[feat] 终止新增对开始和完成监听器的支持\",\"[update] springboot项目的条件表达式默认支持spel\",\"[update] 历史记录改为单条保存，删除重复代码\",\"[update] 修改FlowUserDao的bean名称\",\"[update] 中间节点拆分为或签，会签，票签\",\"[fix] 修复历史记录创建时间相等，导致流程图渲染异常\",\"[fix]修复Mybatis逻辑删除变成真实删除的缺陷 @xiarigang\",\"[refactor] 重构id生成器，支持orm默认策略，删除数据填充默认实现类，改为匿名类\"]},\"80\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"【升级指南】\",\"无\",\"更新日志\",\"[update] 历史任务表流程状态支持外部传入\",\"[update] 修改办理人接口，当未设置办理人时，不做权限校验\",\"[update] ModifyHandler增加链式调用\",\"[fix] 修复流程监听器导出失败的问题\"]},\"81\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"【升级指南】\",\"执行升级脚本【warm-flow_1.2.6.sql】\",\"流程状态字段flow_status改为string类型，业务系统需要对应修改\",\"更新日志\",\"[feat] 增加获取下个节点集合api @xiarigang\",\"[feat] 流程监听器 @xiaoxiaoliu889\",\"[feat] id内存策略新增14、15位雪花算法支持\",\"[feat] 流程激活和挂起案例 @xiaoxiaoliu889\",\"[feat] 增加基于流程定义Id获取流程图 @xiaoxiaoliu889\",\"[update] 流程状态改成字符串类型 @xiarigang\",\"[update] 测试模块拆分独立仓库\",\"[update] modes-sb删除加载配置文件，改为有上层jar加载\",\"[update] flex solon版本yml弄错了，config调整\",\"[refactor] 流程版本号生成逻辑重构 @xiaoxiaoliu889\",\"[fix] 修复deleteByTaskIds 中的根据无法正确删除user数据\",\"[fix] 修复 jpa solon注解问题 @vanlin\",\"[fix] 修复 并行网关三个任务分支的时候，错误结束流程的问题\"]},\"82\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"【升级指南】\",\"执行升级脚本【warm-flow_1.2.4.sql】\",\"流程定义表from_custom改为form_custom，from_path改为form_path，涉及到这两个字段的前后段都要修改\",\"反显审批流程表单，改为通过task表新增的form_custom和form_path字段\",\"只针对mybatis-plus扩展包，其他的扩展包可忽略，多租户和逻辑删除，改为通过mybatis-plus的自带的方式实现( 可参考官网文章逻辑删除和多租户)，并且流程表的逻辑删除字段都更新为0\",\"原本的我发起[warmFlowInitiator], 组件内部不在维护替换，由分派监听器实现替换\",\"更新日志\",\"[feat] 激活和挂起 @xiaoxiaoliu889\",\"[feat] 不同节点也支持配置审批表单路径 @vanlin\",\"[feat] 支持接收外部流程状态，支持流程状态扩展 @vanlin\",\"[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式\",\"[feat] 新增分派监听器，支持代办任务中办理人等动态修改 @liangli\",\"[feat] 新增Easy-Query框架支持 @link2fun\",\"[feat] 新增Mybatis-Flex的solon扩展包 @xiarigang\",\"[feat] 新增Jpa的solon扩展包 @vanlin\",\"[feat] 历史表新增跳转类型，记录跳转类型 @vanlin\",\"[feat] 增加组件加载，yml控制开关 @疯狂的狮子Li\",\"[update] 之前强依赖流程状态的通过的，改为跳转类型，历史数据考虑如何处理 @vanlin\",\"[update] 之前所有保存流程状态地方，全部提供可接受外部传入 @vanlin\",\"[update] 流程开启，校验节点是否发布，提示语增加流程编码\",\"[update] 删除校验是否任意跳转\",\"[update] 修改扩展字段ext注释，删除FlowConfigUtil多余的代码\",\"[update] SqlSessionFactory改为构造函数引入\",\"[update] 替换异常类，UtilException高版本不兼容\",\"[update] from_custom改为form_custom，from_path改为form_path\",\"[remove] 移除节点前置执行权限处理器\",\"[remove] 删除cooperateAutoPass方法\",\"[update] 代办改为待办\",\"[refactor] 重构测试模块，完善mybatis-plus多租户和逻辑删除使用方式\",\"[refactor] 重构solon和插件模块\",\"[fix] 修复加签批量提交报错\",\"[fix] 修复TaskServiceImpl#handleDepute方法中删除受托人传参数错误\",\"[fix] 修复 JPA flowUserDao bug @vanlin\",\"[fix] 流程第三个节点为网关时无法渲染颜色\",\"[fix] 修复查看流程图模糊的问题 @erfeijiadao\",\"[fix] 修復开始节点直连网关，流程图渲染有问题\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 修复流程定义和流程实例相同，处于非结束节点，流程实例不能存在相同的业务id\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 删除不必要的··符号，修复postgresql与mysql关键词符号问题。\",\"[fix] 修复流程已完成，流程图结束节点显示为黑色\",\"[fix] 修复已办任务查询审批想起无效问题\",\"[fix] 设置开始节点 skip_type = PASS\",\"[fix] 为SpringUtil指定bean name,解决 LocalContainerEntityManagerFactoryBean 依赖问题\",\"[chore] 升级dom4j为安全版本2.1.3\"]},\"83\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"更新日志 \",\"[fix] 修复更新拼上了多余的条件\",\"[fix] 修复保存流程xml报错问题\"]},\"84\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"【升级指南】\",\"执行升级脚本【warm-flow_1.2.1.sql】\",\"更新日志\",\"[feat] 新增mybatis-flex扩展包 @xiarigang\",\"[feat] 新增抄送演示案例 @adru*\",\"[feat] 历史记录表新增ext扩展字段，方便保存历史过程数据 @adru*\",\"[update] 保存下一个节点办理人时，不校验是否有审批人\",\"[update] 调整扩展包配置，新增测试模块\",\"[update] 票签,会签，将待办任务的创建时间赋予历史任务开始时间 @liutao\",\"[update] 调整mybatis-plus多租户和软件删除处理\",\"[update] 修改任务历史表时间定义，任务审批通过，将待办任务的创建时间赋予历史任务开始时间 @liutao*\",\"[update] 修正pg的sql文件名，新增1.2.1增量sql @liutao\",\"[update] 会签票签，开始时间记录代表任务的创建时间\",\"[remove] 删除监听器自定义参数,修改扩展字段名称\",\"[fix] 监听器问题修复 @liangli\",\"[fix] solon插件包增加userMapper.xml加载\",\"[fix] 修复填充器不接收外部设置的时间\",\"[fix] 修复userMapper.xml中updateLogic的某个负值错误\"]},\"85\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"【升级指南】\",\"执行升级脚本【warm-flow_1.2.0.sql】\",\"工具包路径调整\",\"更新日志\",\"待办表解偶用户，新增用户表（查询方式需要改动）\",\"会签，票签\",\"加减签\",\"转办完善\",\"jpa扩展\",\"oracle适配\",\"pg适配\"]},\"86\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"【升级指南】\",\"执行升级脚本【warm-flow_1.1.90.sql】\",\"更新日志\",\"orm支持mybatis-plus扩展\",\"多租户字段隔离提供全局配置，自动获取\",\"增加软删除可以配置化\",\"新增三个测试模块\",\"修复设置默认填充器时候，判空错误\"]},\"87\":{\"h\":\"v1.1.7 2024-04-27\",\"t\":[\"更新日志 \",\"启动流程时，支持第二个节点为网关节点的情况\",\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",\"修复终止流程bug\"]},\"88\":{\"h\":\"v1.1.6 2024-04-23\",\"t\":[\"更新日志 \",\"支持转办功能\",\"任务自动流转到创建人\",\"考虑流程终止功能\",\"修复流程流转异常\",\"实体类支持序列化\",\"修复java17以上@Resource包路径变更的问题\"]},\"89\":{\"h\":\"v1.1.5 2024-04-17\",\"t\":[\"更新日志 \",\"支持自定义填充\",\"新增配置文件，部分功能可配置\",\"重构代码，insService.skip标识即将删除，改用taskService.skip\",\"引入日志门面\",\"修复已经设置后续节点动态权限后，办理时未生效问题；\",\"枚举扩展getByKey方法 @Holly_Git\",\"调整实例类结构，方便链式写法\",\"修复并行网关后面没有中间节点\",\"修复开始任务记录待办，为保存流程状态\",\"新增链式查询排序提供id排序\",\"新增历史任务记录结束节点\",\"新增赋值流程记录创建更新时间\",\"优化表实体类链式赋值\",\"待办已办查询标记为即将删除, 已挪到业务系统中\"]},\"90\":{\"h\":\"v1.1.4 2024-04-07\",\"t\":[\"更新日志 \",\"修复监听器部分判空bug 感谢@Holly_Git\",\"新增创建任务监听器\",\"修改flow_node监听类型和监听路径字段长度\",\"新增监听器生命周期概念，完善文档\",\"重构流程开启流程和流程办理代码\",\"开始节点也能记录到历史任务记录中\"]},\"91\":{\"h\":\"v1.1.3 2024-04-02\",\"t\":[\"更新日志 \",\"新增权限监听器，办理中动态设置权限 感谢@Holly\"]},\"92\":{\"h\":\"v1.1.2 2024-03-27\",\"t\":[\"更新日志 \",\"流程定义新增复制按钮\",\"补齐sql脚本，完善文档\",\"跳转条件获取方式变更为流程变量 感谢@Holly\",\"监听器变量新增返回结点信息 感谢@Holly\",\"新增根据流程定义和当前节点code获取下一节点api接口. 感谢@Holly\",\"删除多余的字段和代码\"]},\"93\":{\"h\":\"v1.1.1 2024-03-22\",\"t\":[\"更新日志 \",\"[fix] 修复xml脚本中遗漏伪命的问题，完善sql\"]},\"94\":{\"h\":\"v1.1.0 2024-03-21\",\"t\":[\"更新日志 \",\"可以跳转指定节点\",\"增加全局变量\",\"增加监听器\",\"重构代码，解偶orm，方便扩展不同orm和数据，新增代码示例\",\"修复并行网关流程流程图显示错误问题\"]},\"95\":{\"h\":\"v1.0.4 2024-03-06\",\"t\":[\"更新日志 \",\"[update] 美化后台返回的流程图\"]},\"96\":{\"h\":\"v1.0.3 2024-03-05\",\"t\":[\"更新日志 \",\"[update] 重构代码，解偶orm操作，方便扩展其他orm框架\"]},\"97\":{\"h\":\"v1.0.2 2023-12-31\",\"t\":[\"更新日志 \",\"[fix] 修复solon版本业务系统可不用单独加载warm-flow的xml\"]},\"98\":{\"h\":\"v1.0.0 2023-12-28\",\"t\":[\"更新日志 \",\"完善流程设计器和流程图，新增vue3版本\",\"放弃js引擎，自研条件表达式\",\"新增支持条件表达式\",\"可退回到任意节点\",\"支持生成流程图\",\"流程设计器开发\",\"互斥网关，并行网关（会签、或签）功能开发\",\"抽离spring生态依赖，支持solon，并且保持事务与业务系统一致\",\"支持待办任务和已办任务，通过权限标识过滤数据\",\"新增多租户模式\",\"原生提供排序\",\"原生提供分页查询\",\"项目上传中央仓库\",\"工作流模块抽取为独立项目，提供集成方式\",\"已办任务和任务记录，审批页面中包含业务详情页面\",\"提供待办任务、提供角色、部门等权限配置\",\"提供流程配置界面\",\"流程配置文件改为表单填报方式\",\"用户角色抽取出来\",\"整理流程表，调整表名和字段名\"]},\"99\":{\"h\":\"核心api\"},\"100\":{\"h\":\"1、DefService流程定义接口\"},\"101\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"102\":{\"h\":\"1.2、新增流程定义，并初始化流程节点和流程跳转数据\",\"t\":[\"saveAndInitNode(definition)：校验后新增\"]},\"103\":{\"h\":\"1.3、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"104\":{\"h\":\"1.4、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"105\":{\"h\":\"1.5、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"106\":{\"h\":\"1.6、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"107\":{\"h\":\"1.7、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"108\":{\"h\":\"1.8、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"109\":{\"h\":\"1.9、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"110\":{\"h\":\"1.10、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"111\":{\"h\":\"1.11、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"112\":{\"h\":\"1.12、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"113\":{\"h\":\"1.13、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"114\":{\"h\":\"1.14、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"115\":{\"h\":\"1.15、获取流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 获取流程定义全部数据(包含节点和跳转)\"]},\"116\":{\"h\":\"1.16、查询流程设计所需的数据，比如流程图渲染，导出流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 查询流程设计所需的数据，比如流程图渲染，导出流程定义\"]},\"117\":{\"h\":\"2、InsService流程实例接口\"},\"118\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"119\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"120\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"121\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"122\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"123\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"124\":{\"h\":\"2.7、根据流程定义id集合，查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"125\":{\"h\":\"3、TaskService待办任务接口\"},\"126\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"127\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"128\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"129\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"130\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"131\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"132\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"133\":{\"h\":\"4、NodeService节点接口\"},\"134\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"135\":{\"h\":\"5、公共api接口\"},\"136\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"137\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"138\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"139\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"140\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"141\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"142\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"143\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"144\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"145\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"146\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"147\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"148\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"149\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"150\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"151\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"152\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"153\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"154\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"155\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"156\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"157\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"158\":{\"h\":\"流程协作(票签等)\",\"t\":[\"重要\",\"审批过程中可能存在，一人或者多人审批的情况，不同情况对应不同协作类型（会签、票签和或签）\"]},\"159\":{\"h\":\"1、流程协作规则\",\"t\":[\"或签：一名办理人审批通过，审批节点才会通过 票签：满足设定的通过率，部分审批人审批通过，审批节点才会通过 会签：所有审批人审批通过，审批节点才会通过\"]},\"160\":{\"h\":\"2、使用演示\"},\"161\":{\"h\":\"2.1、或签\"},\"162\":{\"h\":\"2.2、票签签\"},\"163\":{\"h\":\"2.3、会签\"},\"164\":{\"h\":\"条件表达式\",\"t\":[\"重要\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"165\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于: @@gt@@|flag@@gt@@4\",\"2、大于等于: @@ge@@|flag@@ge@@4\",\"3、等于: @@eq@@|flag@@eq@@4\",\"4、不等于： @@ne@@|flag@@ne@@4\",\"5、小于: @@lt@@|flag@@lt@@4\",\"6、小于等于: @@le@@|flag@@le@@4\",\"7、包含: @@like@@|flag@@like@@4\",\"8、不包含: @@notNike@@|flag@@notNike@@4\",\"9、SpEL: @@spel@@|#{@user.eval(#flag)}\",\"10、自定义表达式\"]},\"166\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：@@xxx@@|yyy@@xxx@@zzz，xxx为表达式策略，其中yyy为变量，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）: 前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"167\":{\"h\":\"条件表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"168\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"169\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"170\":{\"h\":\"3、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"171\":{\"h\":\"3.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"172\":{\"h\":\"3.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"173\":{\"h\":\"3.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"174\":{\"h\":\"配置文件\"},\"175\":{\"h\":\"1、spring\"},\"176\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"177\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"178\":{\"h\":\"2、solon\"},\"179\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"180\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"181\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"182\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"183\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"184\":{\"h\":\"3、其他请查阅核心api\"},\"185\":{\"h\":\"数据填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"186\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"187\":{\"h\":\"2、注入bean\"},\"188\":{\"h\":\"2.1、通过@Component方式注入\"},\"189\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"190\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"191\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"192\":{\"h\":\"1. 引入依赖\"},\"193\":{\"h\":\"springboot\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"194\":{\"h\":\"solon\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-solon-web</artifactId> <version>版本号</version> </dependency>\"]},\"195\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"196\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"197\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"198\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"199\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"200\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"201\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"202\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"203\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"204\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"205\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"206\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"207\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"208\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"209\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"210\":{\"h\":\"设计器二开\",\"t\":[\"重要\",\"1、当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"211\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"212\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\"]},\"213\":{\"h\":\"3 部署\"},\"214\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"215\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"216\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"217\":{\"h\":\"表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"218\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"219\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"220\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"221\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"222\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"223\":{\"h\":\"4. 监听器表达式\"},\"224\":{\"h\":\"4.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"225\":{\"h\":\"4.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"226\":{\"h\":\"5、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"227\":{\"h\":\"5.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"228\":{\"h\":\"5.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"229\":{\"h\":\"5.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"230\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"231\":{\"h\":\"表单管理\",\"t\":[\"待补充\"]},\"232\":{\"h\":\"办理人变更\",\"t\":[\"重要\",\"审批业务中经常会出现办理人中途变更的情况，比如增加办理人，任务转办给别人等。\"]},\"233\":{\"h\":\"1、变更支持的类型\",\"t\":[\"1、转办：任务转给其他人办理 2、委派：求助其他人审批，然后参照他的意见决定是否审批通过 3、加签：办理中途，希望其他人一起参与办理 4、减签：办理中途，希望某些人不参与办理\"]},\"234\":{\"h\":\"2、接口描述\",\"t\":[\"接口描述地址\"]},\"235\":{\"h\":\"3、代码示例\",\"t\":[\"/** * 转办 */ public void transfer(TaskService taskService) { taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"转办\\\")); } /** * 委派 */ public void depute(TaskService taskService){ taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"委派\\\")); } /** * 加签 */ public void addSignature(TaskService taskService){ taskService.addSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"加签\\\")); } /** * 减签 */ public void reductionSignature(TaskService taskService){ taskService.reductionSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .reductionHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"减签\\\")); }\"]},\"236\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"237\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"238\":{\"h\":\"监听器\",\"t\":[\"重要\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。 支持类包名配置和表达式配置。\"]},\"239\":{\"h\":\"1、监听器大类\",\"t\":[\"重要\",\"节点监听器：在流程节点中配置，只有指定节点任务才会执行 流程监听器：在流程定义中配置，该流程所有节点任务都会执行 全局监听器：实现全局监听器接口，所有流程的节点任务都会执行 执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"240\":{\"h\":\"2、监听器小类\",\"t\":[\"重要\",\"start：开始监听器，任务开始办理时执行 assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行 create：创建监听器，任务创建时执行\"]},\"241\":{\"h\":\"3、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应 listener_type：监听器类型，如start,assignment,finish,create等 listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等 监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"242\":{\"h\":\"4、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"243\":{\"h\":\"5、监听器生命周期图\"},\"244\":{\"h\":\"5、节点和流程监听器\"},\"245\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"246\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"247\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"248\":{\"h\":\"5.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"249\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"250\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"251\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"252\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"253\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"254\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"255\":{\"h\":\"监听器表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"256\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"257\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"258\":{\"h\":\"3. 监听器表达式\"},\"259\":{\"h\":\"3.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"260\":{\"h\":\"3.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"261\":{\"h\":\"逻辑删除\"},\"262\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"263\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"264\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"265\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"266\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"重要\",\"1、组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"267\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"268\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"269\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"270\":{\"h\":\"办理人权限处理器\",\"t\":[\"重要\",\"1、审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员 2、工作流api中很多需要获取当前办理人id，进行保存或者校验 3、以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"271\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link TaskServiceImpl#checkAuth(Task, FlowParams)} 中调用 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"272\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"273\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"求助其他人审批，然后参照他的意见决定是否审批通过\",\"4\",\"转办\",\"任务转给其他人办理\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"办理中途，希望其他人一起参与办理\",\"11\",\"减签\",\"办理中途，希望某些人不参与办理\",\"12\",\"会签\",\"所有审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"满足设定的通过率，部分审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"一名办理人审批通过，审批节点才会通过\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"274\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"275\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"276\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"277\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"278\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"279\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"280\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"281\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"282\":{\"h\":\"3、maven依赖\"},\"283\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"284\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"285\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"286\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"287\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.4</version> </dependency>\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"288\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"289\":{\"h\":\"4.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"290\":{\"h\":\"4.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"291\":{\"h\":\"4.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"292\":{\"h\":\"4.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"293\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"294\":{\"h\":\"6、初学者推荐学习路线\"},\"295\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"296\":{\"h\":\"6.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"297\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"298\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程结点表\",\"5\",\"flow_skip\",\"结点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"299\":{\"h\":\"表字段明细\"},\"300\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"301\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"302\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"结点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"303\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束结点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"304\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"305\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"306\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"307\":{\"h\":\"多租户\"},\"308\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"309\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"310\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"311\":{\"h\":\"2、通用多租户\"},\"312\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"313\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"314\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"315\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"316\":{\"h\":\"办理人变量表达式\",\"t\":[\"重要\",\"1、业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"317\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowFactory.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowFactory.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"318\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"319\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"320\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"3、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"321\":{\"h\":\"5、默认办理人变量策略\"},\"322\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"323\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"324\":{\"h\":\"6、spel办理人变量策略\"},\"325\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"326\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"327\":{\"h\":\"7、办理人选择项接口\",\"t\":[\"通过此接口可以给办理人选择，增加默认选项比如发起人、部门领导审批之类的（待开发）\"]},\"328\":{\"h\":\"办理人变量表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"329\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"330\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"331\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"332\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"333\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"334\":{\"h\":\"核心api\"},\"335\":{\"h\":\"1、DefService流程定义接口\"},\"336\":{\"h\":\"1.1、导入流程定义\",\"t\":[\"importXml(is)：导入流程定义xml的输入流is，保存流程定义数据，返回流程定义对象\"]},\"337\":{\"h\":\"1.2、保存流程定义\",\"t\":[\"saveXml(def))： 传入流程定义id、流程定义xml字符串，保存流程定义数据\"]},\"338\":{\"h\":\"1.3、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义xml的Document对象\"]},\"339\":{\"h\":\"1.4、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml的字符串\"]},\"340\":{\"h\":\"1.5、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"341\":{\"h\":\"1.6、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"342\":{\"h\":\"1.7、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"343\":{\"h\":\"1.8、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"344\":{\"h\":\"1.9、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"345\":{\"h\":\"1.10、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"346\":{\"h\":\"1.11、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"347\":{\"h\":\"2、InsService流程实例接口\"},\"348\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"349\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码 [如果指定节点,可任意跳转到对应节点,按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等[只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"350\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"351\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"352\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"353\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"354\":{\"h\":\"3、TaskService待办任务接口\"},\"355\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码 [如果指定节点,可任意跳转到对应节点,按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等[只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"356\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"357\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, curUser, permissionFlag, addHandlers, message)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"358\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, curUser, permissionFlag, addHandlers, message)：委派, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"359\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, curUser, permissionFlag, addHandlers, message)：加签，增加办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"360\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, curUser, permissionFlag, addHandlers, message)：减签，减少办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"361\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(modifyHandler)：修改办理人\",\"curUser: 办理人唯一标识 [按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签）[按需传输]\"]},\"362\":{\"h\":\"4、NodeService节点接口\"},\"363\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"364\":{\"h\":\"5、公共api接口\"},\"365\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键 [必传]\"]},\"366\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合 [必传]\"]},\"367\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体 [必传]\",\"page: 分页对象，支持设置排序字段 [必传]\"]},\"368\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体 [必传]\"]},\"369\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体 [必传]\",\"query: 查询代理层处理，支持设置排序字段 [必传]\"]},\"370\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体 [必传]\"]},\"371\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体 [必传]\"]},\"372\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体 [必传]\"]},\"373\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体 [必传]\"]},\"374\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体 [必传]\"]},\"375\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体 [必传]\"]},\"376\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体 [必传]\"]},\"377\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体 [必传]\"]},\"378\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合 [必传]\"]},\"379\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据 [必传]\",\"batchSize: 插入大小 [必传]\"]},\"380\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据 [必传]\"]},\"381\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"382\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"383\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"384\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段 [必传]\"]},\"385\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段 [必传]\"]},\"386\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段 [必传]\"]},\"387\":{\"h\":\"配置文件\"},\"388\":{\"h\":\"1、spring\"},\"389\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"390\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"391\":{\"h\":\"2、solon\"},\"392\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: com.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"393\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"394\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"flowStatus：流程实例表状态，当前流程状态 hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"395\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"396\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"397\":{\"h\":\"3、其他请查阅核心api\"},\"398\":{\"h\":\"填充器\",\"t\":[\"重要\",\"如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"399\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"400\":{\"h\":\"2、注入bean\"},\"401\":{\"h\":\"2.1、通过@Component方式注入\"},\"402\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"403\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"404\":{\"h\":\"条件表达式\"},\"405\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"406\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"407\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"408\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"409\":{\"h\":\"表单管理\"},\"410\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"411\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件com.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如com.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"412\":{\"h\":\"监听器\",\"t\":[\"重要\",\"在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"413\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"414\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"415\":{\"h\":\"2、监听器生命周期图\"},\"416\":{\"h\":\"3、监听器使用\"},\"417\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"418\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"419\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"420\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"421\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"422\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"423\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"424\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"425\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"426\":{\"h\":\"逻辑删除\"},\"427\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 默认逻辑未删除值：0，逻辑已删除值：1 如需修改默认值，请参考如下配置文件中进行修改\"]},\"428\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"429\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"430\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"431\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"432\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"433\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>com.warm.flow.orm.entity.FlowDefinition</class> <class>com.warm.flow.orm.entity.FlowHisTask</class> <class>com.warm.flow.orm.entity.FlowInstance</class> <class>com.warm.flow.orm.entity.FlowNode</class> <class>com.warm.flow.orm.entity.FlowSkip</class> <class>com.warm.flow.orm.entity.FlowTask</class> <class>com.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"434\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"435\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"436\":{\"h\":\"演示图\"},\"437\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"438\":{\"h\":\"2、流程设计\"},\"439\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"440\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"441\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"442\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"443\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"444\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"445\":{\"h\":\"流程规则\"},\"446\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"447\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"448\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"449\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"450\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"451\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"452\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"发起人操作，可以撤销当前流程\",\"7\",\"取回\",\"当前节点上一节点处理人操作，当前节点处理人还未处理，上一节点处理人可以将其退回自己手中重新操作（取回重办）\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"453\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"熟悉 Java 环境配置及其开发 熟悉 关系型 数据库，比如 MySQL 熟悉 Spring Boot或者Solon 及相关框架 熟悉 Java 构建工具，比如 Maven\"]},\"454\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"455\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"456\":{\"h\":\"3、maven依赖\"},\"457\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"458\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"459\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"460\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"461\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.2.10</version> </dependency>\"]},\"462\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"463\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"464\":{\"h\":\"6、代码示例\",\"t\":[\"测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\"]},\"465\":{\"h\":\"7、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"466\":{\"h\":\"8、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"467\":{\"h\":\"9、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"468\":{\"h\":\"10、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"469\":{\"h\":\"11、初学者推荐学习路线\"},\"470\":{\"h\":\"11.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"471\":{\"h\":\"11.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"472\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"473\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程结点表\",\"5\",\"flow_skip\",\"结点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"474\":{\"h\":\"表字段明细\"},\"475\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"476\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"477\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"结点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"478\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束结点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"479\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"480\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"481\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"482\":{\"h\":\"多租户\"},\"483\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"Mybatis-plus只支持自身的多租户方式\"]},\"484\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"485\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"486\":{\"h\":\"2、通用多租户\"},\"487\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler\"]},\"488\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"489\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ @Component public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"490\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"流程变量，map类型，用于流程执行中的数据转递 在执行流程时，可以设置流程变量 在监听器中，可以获取流程变量。\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"491\":{\"h\":\"办理人变量设置\"},\"492\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\"]},\"493\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"494\":{\"h\":\"3、默认办理人变量策略\"},\"495\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1},role:1,1\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\",\"role:1,1表示办理人角色和具体办理人\"]},\"496\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"497\":{\"h\":\"4、spel办理人变量策略\"},\"498\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"499\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"500\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"501\":{\"h\":\"核心api\"},\"502\":{\"h\":\"1、DefService流程定义接口\"},\"503\":{\"h\":\"1.1、导入流程定义\",\"t\":[\"importXml(is)：导入流程定义xml的输入流is，保存流程定义数据，返回流程定义对象\"]},\"504\":{\"h\":\"1.2、保存流程定义\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串，保存流程定义数据。def包含如下字段：\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"505\":{\"h\":\"1.3、保存流程定义\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串，保存流程定义数据\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"506\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义xml的Document对象\"]},\"507\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml的字符串\"]},\"508\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"509\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"510\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"511\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"512\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"513\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"514\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"515\":{\"h\":\"2、InsService流程实例接口\"},\"516\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"517\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\"]},\"518\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\"]},\"519\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"520\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"521\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"522\":{\"h\":\"3、TaskService待办任务接口\"},\"523\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\"]},\"524\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\"]},\"525\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, curUser, permissionFlag, addHandlers, message)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"526\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, curUser, permissionFlag, addHandlers, message)：委派, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"527\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, curUser, permissionFlag, addHandlers, message)：加签，增加办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"528\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, curUser, permissionFlag, addHandlers, message)：减签，减少办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"529\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(modifyHandler)：修改办理人\",\"curUser: 办理人唯一标识 [按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签）[按需传输]\"]},\"530\":{\"h\":\"4、NodeService节点接口\"},\"531\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"532\":{\"h\":\"5、公共api接口\"},\"533\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"534\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"535\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"536\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"537\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"538\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"539\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"540\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"541\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"542\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"543\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"544\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"545\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"546\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"547\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"548\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"549\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"550\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"551\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"552\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"553\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"554\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"555\":{\"h\":\"配置文件\"},\"556\":{\"h\":\"1、spring\"},\"557\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"558\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"559\":{\"h\":\"2、solon\"},\"560\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: com.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"561\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"562\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"563\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"564\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"565\":{\"h\":\"3、其他请查阅核心api\"},\"566\":{\"h\":\"填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"567\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"568\":{\"h\":\"2、注入bean\"},\"569\":{\"h\":\"2.1、通过@Component方式注入\"},\"570\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"571\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"572\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"573\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"574\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这两个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/**\"]},\"575\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"576\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"577\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"578\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口地址为：/warm-flow-ui/${definitionId}?disabled=${disabled} 2、总体思路就是把前端接口(比如80)代理成后端接口(8080)，去访问该地址，其他不变 3、或者直接通过后端接口访问该地址，可能需要处理跨域问题\"]},\"579\":{\"h\":\"3.1 nginx 代理配置\",\"t\":[\"server { listen 80; server_name localhost; location /warm-flow-ui/ { proxy_pass http://localhost:8080/warm-flow-ui/; } }\"]},\"580\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"代理到后端需要vue.config.js配置代码\",\"\\\"/warm-flow-ui\\\": { target: `http://localhost:8080/warm-flow-ui`, changeOrigin: true, pathRewrite: { '/warm-flow-ui': '/' } },\",\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // definitionId为需要查询的流程定义id， // disabled为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = `/warm-flow-ui/${definitionId}?disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"581\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"vue3项目引入过程同上vue2\",\"\\\"/warm-flow-ui\\\": { target: `http://localhost:8080`, changeOrigin: true, pathRewrite: { '/warm-flow-ui': '/' } },\",\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // definitionId为需要查询的流程定义id， // disabled为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(`/warm-flow-ui/${definitionId}?disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"582\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"583\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"前后端不分离项目，前后端端口一致，不需要代理（以下代码再ruoyi不分离版中测试）\",\"可以直接访问后端接口加载页面，如：/warm-flow/1839683148936663047?disabled=false\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/\\\" + definitionId + \\\"?disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow/1839683148936663047?disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/1839683148936663047?disabled=false&pageNum=1\\\"); }\"]},\"584\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"585\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"586\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"587\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"588\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"589\":{\"h\":\"条件表达式\"},\"590\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"591\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"592\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"593\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"594\":{\"h\":\"表单管理\"},\"595\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"596\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件com.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如com.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"597\":{\"h\":\"监听器\",\"t\":[\"重要\",\"1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"598\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"599\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"600\":{\"h\":\"2、监听器生命周期图\"},\"601\":{\"h\":\"3、监听器使用\"},\"602\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"603\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"604\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"605\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"606\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"607\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"608\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"609\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"610\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"611\":{\"h\":\"逻辑删除\"},\"612\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"613\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"614\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"615\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"616\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"617\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"618\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>com.warm.flow.orm.entity.FlowDefinition</class> <class>com.warm.flow.orm.entity.FlowHisTask</class> <class>com.warm.flow.orm.entity.FlowInstance</class> <class>com.warm.flow.orm.entity.FlowNode</class> <class>com.warm.flow.orm.entity.FlowSkip</class> <class>com.warm.flow.orm.entity.FlowTask</class> <class>com.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"619\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"620\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"621\":{\"h\":\"演示图\"},\"622\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"623\":{\"h\":\"2、流程设计\"},\"624\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"625\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"626\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"627\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"628\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"629\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"630\":{\"h\":\"流程规则\"},\"631\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"632\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"633\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"634\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"635\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"636\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"637\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"工作流中的某个节点上，允许返回到上一个节点进行修改，属于退回中的一种\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"638\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"639\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"640\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"641\":{\"h\":\"3、maven依赖\"},\"642\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"643\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"644\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"645\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"646\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.0</version> </dependency>\"]},\"647\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"648\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"649\":{\"h\":\"6、代码示例\",\"t\":[\"测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\"]},\"650\":{\"h\":\"7、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"651\":{\"h\":\"8、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"652\":{\"h\":\"9、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"653\":{\"h\":\"10、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"654\":{\"h\":\"11、初学者推荐学习路线\"},\"655\":{\"h\":\"11.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"656\":{\"h\":\"11.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"657\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"658\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程结点表\",\"5\",\"flow_skip\",\"结点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"659\":{\"h\":\"表字段明细\"},\"660\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"661\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"662\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"结点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"663\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束结点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"664\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"665\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"666\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"667\":{\"h\":\"多租户\"},\"668\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"669\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"670\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"671\":{\"h\":\"2、通用多租户\"},\"672\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler\"]},\"673\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"674\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"675\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"676\":{\"h\":\"办理人变量设置\"},\"677\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"678\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"679\":{\"h\":\"3、默认办理人变量策略\"},\"680\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"681\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"682\":{\"h\":\"4、spel办理人变量策略\"},\"683\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"684\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"685\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"686\":{\"h\":\"核心api\"},\"687\":{\"h\":\"1、DefService流程定义接口\"},\"688\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"689\":{\"h\":\"1.1、新增流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"690\":{\"h\":\"1.2、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"691\":{\"h\":\"1.3、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"692\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"693\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"694\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"695\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"696\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"697\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"698\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"699\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"700\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"701\":{\"h\":\"2、InsService流程实例接口\"},\"702\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"703\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"704\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"705\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"706\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"707\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"708\":{\"h\":\"3、TaskService待办任务接口\"},\"709\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"710\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"711\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"712\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"713\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"714\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"715\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"716\":{\"h\":\"4、NodeService节点接口\"},\"717\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"718\":{\"h\":\"5、公共api接口\"},\"719\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"720\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"721\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"722\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"723\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"724\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"725\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"726\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"727\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"728\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"729\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"730\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"731\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"732\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"733\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"734\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"735\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"736\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"737\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"738\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"739\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"740\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"741\":{\"h\":\"配置文件\"},\"742\":{\"h\":\"1、spring\"},\"743\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"744\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"745\":{\"h\":\"2、solon\"},\"746\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"747\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"748\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"749\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"750\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"751\":{\"h\":\"3、其他请查阅核心api\"},\"752\":{\"h\":\"填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"753\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"754\":{\"h\":\"2、注入bean\"},\"755\":{\"h\":\"2.1、通过@Component方式注入\"},\"756\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"757\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"758\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"759\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"760\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"761\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"762\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"763\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\"); } }\"]},\"764\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"765\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"766\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"767\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"768\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"769\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"770\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"771\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"772\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"773\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"774\":{\"h\":\"条件表达式\"},\"775\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"776\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"777\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"778\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"779\":{\"h\":\"表单管理\"},\"780\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"781\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"782\":{\"h\":\"监听器\",\"t\":[\"重要\",\"1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"783\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"784\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"785\":{\"h\":\"2、监听器生命周期图\"},\"786\":{\"h\":\"3、监听器使用\"},\"787\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"788\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"789\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"790\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"791\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"792\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"793\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"794\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"795\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"796\":{\"h\":\"逻辑删除\"},\"797\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"798\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"799\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"800\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"801\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"802\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"803\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"804\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"805\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"806\":{\"h\":\"演示图\"},\"807\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"808\":{\"h\":\"2、流程设计\"},\"809\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"810\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"811\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"812\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"813\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"814\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"815\":{\"h\":\"流程规则\"},\"816\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"817\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"818\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"819\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"820\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"821\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"822\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"工作流中的某个节点上，允许返回到上一个节点进行修改，属于退回中的一种\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"823\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"824\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"825\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"826\":{\"h\":\"3、maven依赖\"},\"827\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"828\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"829\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"830\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"831\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.1</version> </dependency>\"]},\"832\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"833\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"834\":{\"h\":\"6、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"835\":{\"h\":\"7、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"836\":{\"h\":\"7.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"837\":{\"h\":\"7.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"838\":{\"h\":\"7.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"839\":{\"h\":\"7.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"840\":{\"h\":\"8、初学者推荐学习路线\"},\"841\":{\"h\":\"8.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"842\":{\"h\":\"8.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"843\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"844\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程结点表\",\"5\",\"flow_skip\",\"结点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"845\":{\"h\":\"表字段明细\"},\"846\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"847\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"848\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"结点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"849\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束结点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"850\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"851\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"852\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"853\":{\"h\":\"多租户\"},\"854\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"855\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"856\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"857\":{\"h\":\"2、通用多租户\"},\"858\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"859\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"860\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"861\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"862\":{\"h\":\"办理人变量设置\"},\"863\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"864\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"865\":{\"h\":\"3、默认办理人变量策略\"},\"866\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"867\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"868\":{\"h\":\"4、spel办理人变量策略\"},\"869\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"870\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"871\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"872\":{\"h\":\"核心api\"},\"873\":{\"h\":\"1、DefService流程定义接口\"},\"874\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"875\":{\"h\":\"1.1、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"876\":{\"h\":\"1.2、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"877\":{\"h\":\"1.3、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"878\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"879\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"880\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"881\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"882\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"883\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"884\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"885\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"886\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"887\":{\"h\":\"2、InsService流程实例接口\"},\"888\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"889\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"890\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"891\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"892\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"893\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"894\":{\"h\":\"3、TaskService待办任务接口\"},\"895\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"896\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"897\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"898\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"899\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"900\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"901\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"902\":{\"h\":\"4、NodeService节点接口\"},\"903\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"904\":{\"h\":\"5、公共api接口\"},\"905\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"906\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"907\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"908\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"909\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"910\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"911\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"912\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"913\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"914\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"915\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"916\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"917\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"918\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"919\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"920\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"921\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"922\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"923\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"924\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"925\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"926\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"927\":{\"h\":\"配置文件\"},\"928\":{\"h\":\"1、spring\"},\"929\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"930\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"931\":{\"h\":\"2、solon\"},\"932\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"933\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"934\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"935\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"936\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"937\":{\"h\":\"3、其他请查阅核心api\"},\"938\":{\"h\":\"填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"939\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"940\":{\"h\":\"2、注入bean\"},\"941\":{\"h\":\"2.1、通过@Component方式注入\"},\"942\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"943\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"944\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"945\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"946\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"947\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"948\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"949\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"950\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"951\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"952\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"953\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"954\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"955\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"956\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"957\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"958\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"959\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"960\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到headerAuthorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"961\":{\"h\":\"6. 设计器二开\"},\"962\":{\"h\":\"6.1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"963\":{\"h\":\"6.2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\"]},\"964\":{\"h\":\"6.3 部署\"},\"965\":{\"h\":\"6.3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara</groupId> </exclusion> </exclusions> </dependency>\"]},\"966\":{\"h\":\"6.3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"967\":{\"h\":\"6.3.2 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"968\":{\"h\":\"条件表达式\"},\"969\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"970\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"971\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"972\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"973\":{\"h\":\"表单管理\"},\"974\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"975\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"976\":{\"h\":\"监听器\",\"t\":[\"重要\",\"1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"977\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"978\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"979\":{\"h\":\"2、监听器生命周期图\"},\"980\":{\"h\":\"3、监听器使用\"},\"981\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"982\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"983\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"984\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"985\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"986\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"987\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"988\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"989\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"990\":{\"h\":\"逻辑删除\"},\"991\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"992\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"993\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"994\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"995\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"996\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"997\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"998\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"999\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"1000\":{\"h\":\"演示图\"},\"1001\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1002\":{\"h\":\"2、流程设计\"},\"1003\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1004\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1005\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1006\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1007\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"1008\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1009\":{\"h\":\"流程规则\"},\"1010\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1011\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1012\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1013\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1014\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1015\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"1016\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"1017\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"1018\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"1019\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"1020\":{\"h\":\"3、maven依赖\"},\"1021\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1022\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1023\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1024\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1025\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.3</version> </dependency>\"]},\"1026\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"1027\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1028\":{\"h\":\"6、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1029\":{\"h\":\"7、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1030\":{\"h\":\"7.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1031\":{\"h\":\"7.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1032\":{\"h\":\"7.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1033\":{\"h\":\"7.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1034\":{\"h\":\"8、初学者推荐学习路线\"},\"1035\":{\"h\":\"8.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1036\":{\"h\":\"8.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"1037\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"1038\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程结点表\",\"5\",\"flow_skip\",\"结点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1039\":{\"h\":\"表字段明细\"},\"1040\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1041\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1042\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"结点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 4终止 5作废 6撤销 7取回 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1043\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束结点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1044\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1045\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1046\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1047\":{\"h\":\"多租户\"},\"1048\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"1049\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"1050\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"1051\":{\"h\":\"2、通用多租户\"},\"1052\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"1053\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1054\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"1055\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1056\":{\"h\":\"办理人变量设置\"},\"1057\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"1058\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1059\":{\"h\":\"3、默认办理人变量策略\"},\"1060\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1061\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1062\":{\"h\":\"4、spel办理人变量策略\"},\"1063\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1064\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1065\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1066\":{\"h\":\"核心api\"},\"1067\":{\"h\":\"1、DefService流程定义接口\"},\"1068\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"1069\":{\"h\":\"1.2、新增流程定义，并初始化流程节点和流程跳转数据\",\"t\":[\"saveAndInitNode(definition)：校验后新增\"]},\"1070\":{\"h\":\"1.3、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"1071\":{\"h\":\"1.4、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"1072\":{\"h\":\"1.5、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"1073\":{\"h\":\"1.6、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"1074\":{\"h\":\"1.7、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"1075\":{\"h\":\"1.8、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"1076\":{\"h\":\"1.9、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"1077\":{\"h\":\"1.10、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"1078\":{\"h\":\"1.11、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"1079\":{\"h\":\"1.12、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"1080\":{\"h\":\"1.13、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"1081\":{\"h\":\"1.14、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"1082\":{\"h\":\"2、InsService流程实例接口\"},\"1083\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"1084\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1085\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1086\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"1087\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"1088\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"1089\":{\"h\":\"2.7、根据流程定义id集合，查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"1090\":{\"h\":\"3、TaskService待办任务接口\"},\"1091\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1092\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1093\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1094\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1095\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1096\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1097\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"1098\":{\"h\":\"4、NodeService节点接口\"},\"1099\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"1100\":{\"h\":\"5、公共api接口\"},\"1101\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"1102\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"1103\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"1104\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"1105\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"1106\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"1107\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"1108\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"1109\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"1110\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"1111\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"1112\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"1113\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"1114\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"1115\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"1116\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"1117\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"1118\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"1119\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"1120\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"1121\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"1122\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"1123\":{\"h\":\"条件表达式\",\"t\":[\"重要\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"1124\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于: @@gt@@|flag@@gt@@4\",\"2、大于等于: @@ge@@|flag@@ge@@4\",\"3、等于: @@eq@@|flag@@eq@@4\",\"4、不等于： @@ne@@|flag@@ne@@4\",\"5、小于: @@lt@@|flag@@lt@@4\",\"6、小于等于: @@le@@|flag@@le@@4\",\"7、包含: @@like@@|flag@@like@@4\",\"8、不包含: @@notNike@@|flag@@notNike@@4\",\"9、SpEL: @@spel@@|#{@user.eval(#flag)}\",\"10、自定义表达式\"]},\"1125\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：@@xxx@@|yyy@@xxx@@zzz，xxx为表达式策略，其中yyy为变量，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）: 前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1126\":{\"h\":\"配置文件\"},\"1127\":{\"h\":\"1、spring\"},\"1128\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"1129\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"1130\":{\"h\":\"2、solon\"},\"1131\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"1132\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1133\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"1134\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"1135\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"1136\":{\"h\":\"3、其他请查阅核心api\"},\"1137\":{\"h\":\"数据填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"1138\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"1139\":{\"h\":\"2、注入bean\"},\"1140\":{\"h\":\"2.1、通过@Component方式注入\"},\"1141\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"1142\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"1143\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"1144\":{\"h\":\"1. 引入依赖\"},\"1145\":{\"h\":\"springboot\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"1146\":{\"h\":\"solon\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-solon-web</artifactId> <version>版本号</version> </dependency>\"]},\"1147\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"1148\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1149\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"1150\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"1151\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1152\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"1153\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"1154\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"1155\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"1156\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1157\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1158\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1159\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1160\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"1161\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"1162\":{\"h\":\"设计器二开\",\"t\":[\"重要\",\"1、当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"1163\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"1164\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\"]},\"1165\":{\"h\":\"3 部署\"},\"1166\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"1167\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"1168\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"1169\":{\"h\":\"条件表达式\"},\"1170\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"1171\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1172\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"1173\":{\"h\":\"表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"1174\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1175\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1176\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"1177\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1178\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1179\":{\"h\":\"4. 监听器表达式\"},\"1180\":{\"h\":\"4.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1181\":{\"h\":\"4.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"1182\":{\"h\":\"5、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"1183\":{\"h\":\"5.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"1184\":{\"h\":\"5.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"1185\":{\"h\":\"5.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"1186\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"1187\":{\"h\":\"表单管理\"},\"1188\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"1189\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"1190\":{\"h\":\"监听器\",\"t\":[\"重要\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。 支持类包名配置和表达式配置。\"]},\"1191\":{\"h\":\"1、监听器大类\",\"t\":[\"重要\",\"节点监听器：在流程节点中配置，只有指定节点任务才会执行 流程监听器：在流程定义中配置，该流程所有节点任务都会执行 全局监听器：实现全局监听器接口，所有流程的节点任务都会执行 执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"1192\":{\"h\":\"2、监听器小类\",\"t\":[\"重要\",\"start：开始监听器，任务开始办理时执行 assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行 create：创建监听器，任务创建时执行\"]},\"1193\":{\"h\":\"3、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应 listener_type：监听器类型，如start,assignment,finish,create等 listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等 监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"1194\":{\"h\":\"4、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"1195\":{\"h\":\"5、监听器生命周期图\"},\"1196\":{\"h\":\"5、节点和流程监听器\"},\"1197\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"1198\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"1199\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"1200\":{\"h\":\"5.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"1201\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"1202\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"1203\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"1204\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"1205\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"1206\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"1207\":{\"h\":\"逻辑删除\"},\"1208\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"1209\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"1210\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"1211\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"1212\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"重要\",\"1、组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"1213\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"1214\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"1215\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"1216\":{\"h\":\"办理人权限处理器\",\"t\":[\"重要\",\"1、审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员 2、工作流api中很多需要获取当前办理人id，进行保存或者校验 3、以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"1217\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link TaskServiceImpl#checkAuth(Task, FlowParams)} 中调用 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"1218\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"1219\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"1220\":{\"h\":\"演示图\"},\"1221\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1222\":{\"h\":\"2、流程设计\"},\"1223\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1224\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1225\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1226\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1227\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"1228\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1229\":{\"h\":\"流程规则\"},\"1230\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1231\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1232\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1233\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1234\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1235\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"1236\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"1237\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1238\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1239\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1240\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1241\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1242\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"1243\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"1244\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"1245\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"1246\":{\"h\":\"3、maven依赖\"},\"1247\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1248\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1249\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1250\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1251\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.4</version> </dependency>\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1252\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1253\":{\"h\":\"4.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1254\":{\"h\":\"4.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1255\":{\"h\":\"4.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1256\":{\"h\":\"4.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1257\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1258\":{\"h\":\"6、初学者推荐学习路线\"},\"1259\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1260\":{\"h\":\"6.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"1261\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"1262\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程结点表\",\"5\",\"flow_skip\",\"结点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1263\":{\"h\":\"表字段明细\"},\"1264\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1265\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1266\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"结点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1267\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束结点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1268\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1269\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1270\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1271\":{\"h\":\"多租户\"},\"1272\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"1273\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"1274\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"1275\":{\"h\":\"2、通用多租户\"},\"1276\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"1277\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1278\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"1279\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1280\":{\"h\":\"办理人变量表达式\",\"t\":[\"重要\",\"1、业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"1281\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowFactory.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowFactory.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"1282\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"1283\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"1284\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"2、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1285\":{\"h\":\"5、默认办理人变量策略\"},\"1286\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1287\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1288\":{\"h\":\"6、spel办理人变量策略\"},\"1289\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1290\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1291\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1292\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"1293\":{\"h\":\"2、以下为简短案例\"},\"1294\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1295\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1296\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1297\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1298\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"1299\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1300\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1301\":{\"h\":\"6、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1302\":{\"h\":\"Warm-Flow发布1.3.4, 支持solon和便捷性提升\"},\"1303\":{\"h\":\"1、老群被干没了，新群：\",\"t\":[\"本次的版本大大提升了工作流的使用便捷性，如下：\",\"设计器引入，新增支持solon 新增监听器spel表达式，并且支持扩展 增加全局监听器，针对整个系统，通过接口接入方式 流程变量表达式支持替换集合\"]},\"1304\":{\"h\":\"2、详细更新内容：\",\"t\":[\"更新日志 \",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器配置页面ui调整\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"1305\":{\"h\":\"3、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1306\":{\"h\":\"4、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1307\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1308\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.0，不需要在为引入设计器而烦恼了，按照以下前四点，可以快速接入业务系统，下面介绍如何使用设计器\"]},\"1309\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.0</version> </dependency>\"]},\"1310\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"重要\",\"1、这两个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1311\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"重要\",\"1、设计器页面入口地址为：/warm-flow-ui/${definitionId}?disabled=${disabled} 2、总体思路就是把前端接口(比如80)代理成后端接口(8080)，去访问该地址，其他不变 3、或者直接通过后端接口访问该地址，可能需要处理跨域问题 4、以下是nginx代理示例：\",\"server { listen 80; server_name localhost; location /warm-flow-ui/ { proxy_pass http://localhost:8080/warm-flow-ui/; } }\"]},\"1312\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"重要\",\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1313\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1314\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1315\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1316\":{\"h\":\"5、项目介绍\",\"t\":[\"重要\",\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1317\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1318\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1319\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志\"]},\"1320\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"1321\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1322\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1323\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1324\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1325\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1326\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1327\":{\"h\":\"5、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1328\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1329\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1330\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志\"]},\"1331\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"1332\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1333\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1334\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1335\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1336\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1337\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1338\":{\"h\":\"5、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1339\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1340\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1341\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1342\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"1343\":{\"h\":\"2、以下为简短案例\"},\"1344\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1345\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1346\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1347\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1348\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"1349\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1350\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1351\":{\"h\":\"6、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1352\":{\"h\":\"Warm-Flow发布1.3.4, 支持solon和便捷性提升\"},\"1353\":{\"h\":\"1、老群被干没了，新群：\",\"t\":[\"本次的版本大大提升了工作流的使用便捷性，如下：\",\"设计器引入，新增支持solon 新增监听器spel表达式，并且支持扩展 增加全局监听器，针对整个系统，通过接口接入方式 流程变量表达式支持替换集合\"]},\"1354\":{\"h\":\"2、详细更新内容：\",\"t\":[\"更新日志 \",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器配置页面ui调整\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"1355\":{\"h\":\"3、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1356\":{\"h\":\"4、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1357\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1358\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"1359\":{\"h\":\"Common\"},\"1360\":{\"h\":\"Guide\"},\"1361\":{\"h\":\"Master\"},\"1362\":{\"h\":\"Guide\"},\"1363\":{\"h\":\"V1.2.10\"},\"1364\":{\"h\":\"Guide\"},\"1365\":{\"h\":\"V1.3.0\"},\"1366\":{\"h\":\"Guide\"},\"1367\":{\"h\":\"V1.3.1\"},\"1368\":{\"h\":\"Guide\"},\"1369\":{\"h\":\"V1.3.3\"},\"1370\":{\"h\":\"Guide\"},\"1371\":{\"h\":\"V1.3.4\"},\"1372\":{\"h\":\"Update\"},\"1373\":{\"h\":\"Update\"},\"1374\":{\"h\":\"Update\"},\"1375\":{\"h\":\"Update\"},\"1376\":{\"h\":\"Update\"}},\"dirtCount\":0,\"index\":[[\"另外一直被吐槽的流程图不够清晰\",{\"1\":{\"1319\":1,\"1330\":1}}],[\"终于迎来了这个激动人心的版本1\",{\"1\":{\"1308\":1,\"1319\":1,\"1330\":1}}],[\"终止当前流程\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"终止流程\",{\"0\":{\"120\":1,\"127\":1,\"350\":1,\"356\":1,\"518\":1,\"524\":1,\"704\":1,\"710\":1,\"890\":1,\"896\":1,\"1085\":1,\"1092\":1},\"1\":{\"120\":1,\"127\":1,\"350\":1,\"356\":1,\"518\":1,\"524\":1,\"704\":1,\"710\":1,\"890\":1,\"896\":1,\"1085\":1,\"1092\":1}}],[\"终止流程状态改为更合理的终止状态\",{\"1\":{\"76\":1}}],[\"终止新增对开始和完成监听器的支持\",{\"1\":{\"79\":1}}],[\"终止免校验权限改为设置ignore字段\",{\"1\":{\"76\":1}}],[\"终止操作的流程状态改为更合理的终止状态\",{\"1\":{\"76\":1}}],[\"终止\",{\"1\":{\"12\":1,\"76\":1,\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"详细更新说明\",{\"1\":{\"1319\":1,\"1330\":1}}],[\"详细更新内容\",{\"0\":{\"1304\":1,\"1354\":1}}],[\"详细案例测试代码warm\",{\"1\":{\"288\":1,\"835\":1,\"1029\":1,\"1252\":1}}],[\"老群被干没了\",{\"0\":{\"1303\":1,\"1353\":1}}],[\"老方法标识即将删除\",{\"1\":{\"76\":2}}],[\"具体引入方式\",{\"1\":{\"1298\":1,\"1348\":1}}],[\"仓库地址\",{\"0\":{\"1292\":1,\"1342\":1}}],[\"标识不同策略的前缀\",{\"1\":{\"677\":1,\"863\":1,\"1057\":1}}],[\"属于退回中的一种\",{\"1\":{\"637\":1,\"822\":1}}],[\"允许返回到上一个节点进行修改\",{\"1\":{\"637\":1,\"822\":1}}],[\"去访问该地址\",{\"1\":{\"578\":1,\"1311\":1}}],[\"总体思路就是把前端接口\",{\"1\":{\"578\":1,\"1311\":1}}],[\"总用量\",{\"1\":{\"60\":1}}],[\"操作自动计算\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"操作即完成当前任务\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"但是由于不同orm框架的数据库操作的\",{\"1\":{\"431\":1,\"616\":1,\"801\":1,\"995\":1}}],[\"但在开始写代码之前\",{\"1\":{\"8\":1}}],[\"传递后台通过\",{\"1\":{\"423\":1,\"608\":1,\"793\":1,\"987\":1}}],[\"传入变量\",{\"1\":{\"320\":1,\"493\":1,\"678\":1,\"864\":1,\"1058\":1,\"1284\":1}}],[\"传入流程任务id\",{\"1\":{\"126\":1,\"127\":1,\"132\":1,\"355\":1,\"356\":1,\"523\":1,\"524\":1,\"709\":1,\"710\":1,\"715\":1,\"895\":1,\"896\":1,\"901\":1,\"1091\":1,\"1092\":1,\"1097\":1}}],[\"传入流程实例id\",{\"1\":{\"119\":1,\"120\":1,\"349\":1,\"350\":1,\"517\":1,\"518\":1,\"703\":1,\"704\":1,\"889\":1,\"890\":1,\"1084\":1,\"1085\":1}}],[\"传入流程定义id\",{\"1\":{\"104\":1,\"105\":1,\"337\":1,\"504\":1,\"505\":1,\"690\":1,\"691\":1,\"876\":1,\"877\":1,\"1071\":1,\"1072\":1}}],[\"传入业务id\",{\"1\":{\"118\":1,\"348\":1,\"516\":1,\"702\":1,\"888\":1,\"1083\":1}}],[\"即可替换完成\",{\"1\":{\"320\":1,\"1284\":1}}],[\"变量替换类型\",{\"1\":{\"500\":1,\"685\":1,\"871\":1,\"1065\":1}}],[\"变量替换时机\",{\"0\":{\"320\":1,\"493\":1,\"678\":1,\"864\":1,\"1058\":1,\"1284\":1}}],[\"变更支持的类型\",{\"0\":{\"233\":1}}],[\"匹配上就执行\",{\"1\":{\"319\":1,\"1283\":1}}],[\"匹配规则\",{\"0\":{\"166\":1,\"242\":1,\"319\":1,\"1125\":1,\"1194\":1,\"1283\":1}}],[\"倒叙匹配\",{\"1\":{\"319\":1,\"1283\":1}}],[\"特点\",{\"0\":{\"317\":1,\"1281\":1}}],[\"特别赞助\",{\"0\":{\"18\":1,\"29\":1}}],[\"经常会出现设计流程时\",{\"1\":{\"316\":1,\"1280\":1}}],[\"指定流程表才开启\",{\"1\":{\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"指定租户字段\",{\"1\":{\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"指定节点\",{\"1\":{\"273\":1,\"1016\":1,\"1236\":1}}],[\"返回流程定义对象\",{\"1\":{\"336\":1,\"503\":1}}],[\"返回租户id的表达式\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"返回当前用户权限集合\",{\"1\":{\"271\":1,\"1217\":1}}],[\"坐标\",{\"1\":{\"303\":1,\"304\":1,\"478\":1,\"479\":1,\"663\":1,\"664\":1,\"849\":1,\"850\":1,\"1043\":1,\"1044\":1,\"1267\":1,\"1268\":1}}],[\"目标节点编码\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"目前不支持关闭\",{\"1\":{\"262\":1,\"427\":1,\"612\":1,\"797\":1,\"991\":1,\"1208\":1}}],[\"目前支持snack3\",{\"1\":{\"236\":1,\"410\":1,\"595\":1,\"780\":1,\"974\":1,\"1188\":1}}],[\"目前支持mysql\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"目前支持mybatis\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"租户id\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"存业务表对象json字符串\",{\"1\":{\"300\":1,\"301\":1,\"475\":1,\"476\":1,\"660\":1,\"661\":1,\"846\":1,\"847\":1,\"1040\":1,\"1041\":1,\"1264\":1,\"1265\":1}}],[\"√\",{\"1\":{\"300\":7,\"301\":8,\"302\":8,\"303\":6,\"304\":5,\"305\":6,\"306\":4,\"475\":7,\"476\":8,\"477\":8,\"478\":6,\"479\":5,\"480\":6,\"481\":4,\"660\":7,\"661\":8,\"662\":8,\"663\":6,\"664\":5,\"665\":6,\"666\":4,\"846\":7,\"847\":8,\"848\":8,\"849\":6,\"850\":5,\"851\":6,\"852\":4,\"1040\":7,\"1041\":8,\"1042\":8,\"1043\":6,\"1044\":5,\"1045\":6,\"1046\":4,\"1264\":7,\"1265\":8,\"1266\":8,\"1267\":6,\"1268\":5,\"1269\":6,\"1270\":4}}],[\"非空\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"非必填\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"备注说明\",{\"1\":{\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"473\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"844\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1038\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1262\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"名称\",{\"1\":{\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"473\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"844\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1038\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1262\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"演练要记录过程\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"演示图\",{\"0\":{\"32\":1,\"436\":1,\"621\":1,\"806\":1,\"1000\":1,\"1220\":1}}],[\"演示地址\",{\"0\":{\"17\":1,\"1300\":1,\"1306\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1350\":1,\"1356\":1},\"1\":{\"17\":1,\"1300\":1,\"1306\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1350\":1,\"1356\":1}}],[\"今天要进行一次军事演练\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"军事演练\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"社区同学录制\",{\"1\":{\"296\":1,\"471\":1,\"656\":1,\"842\":1,\"1036\":1,\"1260\":1}}],[\"推荐学习视频\",{\"0\":{\"296\":1,\"471\":1,\"656\":1,\"842\":1,\"1036\":1,\"1260\":1}}],[\"推荐集成案例hh\",{\"0\":{\"295\":1,\"470\":1,\"655\":1,\"841\":1,\"1035\":1,\"1259\":1}}],[\"初学者推荐学习路线\",{\"0\":{\"294\":1,\"469\":1,\"654\":1,\"840\":1,\"1034\":1,\"1258\":1}}],[\"初始化后续所有办理人\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"初始化\",{\"1\":{\"48\":1}}],[\"官网\",{\"0\":{\"1301\":1,\"1307\":1,\"1318\":1,\"1329\":1,\"1340\":1,\"1351\":1,\"1357\":1}}],[\"官网流程定义案例xml\",{\"0\":{\"281\":1,\"455\":1,\"640\":1,\"825\":1,\"1019\":1,\"1245\":1},\"1\":{\"281\":1,\"455\":1,\"640\":1,\"825\":1,\"1019\":1,\"1245\":1}}],[\"官方提供基于ruoyi\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"找到对应数据库的更新版本\",{\"1\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"找到对应数据库的全量脚本warm\",{\"1\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"先创建数据库\",{\"1\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"先排除原依赖的前端代码\",{\"0\":{\"214\":1,\"965\":1,\"1166\":1}}],[\"及相关框架\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"环境配置及其开发\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"熟悉\",{\"1\":{\"279\":4,\"453\":4,\"638\":4,\"823\":4,\"1017\":4,\"1243\":4}}],[\"快速开始\",{\"0\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"状态完成\",{\"1\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"状态都为失效\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"串行网关需要根据传入跳转条件去判断执行哪个任务路线\",{\"1\":{\"277\":1,\"449\":1,\"634\":1,\"819\":1,\"1013\":1,\"1233\":1,\"1240\":1}}],[\"串行网关规则\",{\"0\":{\"277\":1,\"449\":1,\"634\":1,\"819\":1,\"1013\":1,\"1233\":1,\"1240\":1}}],[\"还不确定具体办理人是谁\",{\"1\":{\"316\":1,\"1280\":1}}],[\"还存在待办任务\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"还需要使用snack3库\",{\"1\":{\"79\":1}}],[\"失效\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"失效时使用此配置\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"必须放到第一位\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"必须先流转到网关节点\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"必传\",{\"1\":{\"104\":2,\"118\":1,\"119\":1,\"126\":1,\"128\":2,\"129\":2,\"130\":2,\"131\":2,\"134\":3,\"348\":1,\"349\":1,\"355\":1,\"357\":4,\"358\":4,\"359\":4,\"360\":4,\"363\":3,\"365\":1,\"366\":1,\"367\":2,\"368\":1,\"369\":2,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":2,\"380\":1,\"384\":1,\"385\":1,\"386\":1,\"504\":2,\"516\":1,\"517\":1,\"523\":1,\"525\":4,\"526\":4,\"527\":4,\"528\":4,\"531\":3,\"690\":2,\"702\":1,\"703\":1,\"709\":1,\"711\":3,\"712\":3,\"713\":3,\"714\":3,\"717\":3,\"876\":2,\"888\":1,\"889\":1,\"895\":1,\"897\":3,\"898\":3,\"899\":3,\"900\":3,\"903\":3,\"1071\":2,\"1083\":1,\"1084\":1,\"1091\":1,\"1093\":2,\"1094\":2,\"1095\":2,\"1096\":2,\"1099\":3}}],[\"谨慎使用\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"网关节点不可直连\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"网关节点可不需要跳转类型\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"流转类型\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"流转后流程实例\",{\"1\":{\"292\":3,\"468\":3,\"653\":3,\"839\":3,\"1033\":3,\"1256\":3,\"1297\":2,\"1347\":2}}],[\"流转是传入\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"流程术语\",{\"0\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1}}],[\"流程规则\",{\"0\":{\"445\":1,\"630\":1,\"815\":1,\"1009\":1,\"1229\":1}}],[\"流程表\",{\"1\":{\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"流程签署比例值\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"流程激活状态\",{\"1\":{\"300\":1,\"302\":1,\"475\":1,\"477\":1,\"660\":1,\"662\":1,\"846\":1,\"848\":1,\"1040\":1,\"1042\":1,\"1264\":1,\"1266\":1}}],[\"流程激活和挂起案例\",{\"1\":{\"81\":1}}],[\"流程版本\",{\"1\":{\"300\":1,\"475\":1,\"660\":1,\"846\":1,\"1040\":1,\"1264\":1}}],[\"流程版本号生成逻辑重构\",{\"1\":{\"81\":1}}],[\"流程版本号默认改完自动递增\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"流程名称\",{\"1\":{\"300\":1,\"475\":1,\"660\":1,\"846\":1,\"1040\":1,\"1264\":1}}],[\"流程结点表\",{\"1\":{\"298\":1,\"473\":1,\"658\":1,\"844\":1,\"1038\":1,\"1262\":1}}],[\"流程结束的状态\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"流程用户表\",{\"1\":{\"297\":1,\"298\":1,\"472\":1,\"473\":1,\"657\":1,\"658\":1,\"843\":1,\"844\":1,\"1037\":1,\"1038\":1,\"1261\":1,\"1262\":1}}],[\"流程流转\",{\"0\":{\"292\":1,\"468\":1,\"653\":1,\"839\":1,\"1033\":1,\"1256\":1,\"1297\":1,\"1347\":1}}],[\"流程流转到代表任务\",{\"1\":{\"38\":1,\"442\":1,\"627\":1,\"812\":1,\"1006\":1,\"1226\":1}}],[\"流程完成\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"流程完成后\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"流程完成监听器结束\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"流程完成监听器\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"流程节点名称\",{\"1\":{\"302\":1,\"303\":1,\"477\":1,\"478\":1,\"662\":1,\"663\":1,\"848\":1,\"849\":1,\"1042\":1,\"1043\":1,\"1266\":1,\"1267\":1}}],[\"流程节点编码\",{\"1\":{\"302\":1,\"303\":1,\"477\":1,\"478\":1,\"662\":1,\"663\":1,\"848\":1,\"849\":1,\"1042\":1,\"1043\":1,\"1266\":1,\"1267\":1}}],[\"流程节点表\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"流程节点配置\",{\"0\":{\"251\":1,\"423\":1,\"608\":1,\"793\":1,\"987\":1,\"1203\":1}}],[\"流程节点和流程跳转数据\",{\"0\":{\"103\":1,\"689\":1,\"875\":1,\"1070\":1},\"1\":{\"106\":1,\"107\":1,\"692\":1,\"693\":1,\"878\":1,\"879\":1,\"1073\":1,\"1074\":1}}],[\"流程开始监听器结束\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"流程开始监听器\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"流程开启\",{\"1\":{\"82\":1}}],[\"流程协作规则\",{\"0\":{\"159\":1,\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"流程协作\",{\"0\":{\"158\":1}}],[\"流程实例表\",{\"1\":{\"297\":1,\"298\":1,\"472\":1,\"473\":1,\"657\":1,\"658\":1,\"843\":1,\"844\":1,\"1037\":1,\"1038\":1,\"1261\":1,\"1262\":1}}],[\"流程实例表状态\",{\"1\":{\"181\":1,\"394\":1,\"562\":1,\"748\":1,\"934\":1,\"1133\":1}}],[\"流程实例三张表\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"流程实例就算完成\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"流程实例挂起后\",{\"1\":{\"123\":1,\"353\":1,\"521\":1,\"707\":1,\"893\":1,\"1088\":1}}],[\"流程实例不能存在相同的业务id\",{\"1\":{\"82\":1}}],[\"流程跳转表\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"流程跳转\",{\"0\":{\"119\":1,\"126\":1,\"183\":1,\"349\":1,\"355\":1,\"396\":1,\"517\":1,\"523\":1,\"564\":1,\"703\":1,\"709\":1,\"750\":1,\"889\":1,\"895\":1,\"936\":1,\"1084\":1,\"1091\":1,\"1135\":1},\"1\":{\"119\":1,\"126\":1,\"349\":1,\"355\":1,\"517\":1,\"523\":1,\"703\":1,\"709\":1,\"889\":1,\"895\":1,\"1084\":1,\"1091\":1}}],[\"流程变量是全局都能获取\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"流程变量值\",{\"1\":{\"172\":1,\"228\":1,\"1184\":1}}],[\"流程变量\",{\"0\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1},\"1\":{\"118\":1,\"119\":1,\"126\":1,\"134\":1,\"166\":1,\"168\":1,\"172\":2,\"218\":1,\"228\":2,\"256\":1,\"315\":2,\"323\":1,\"326\":1,\"329\":1,\"348\":1,\"349\":1,\"355\":1,\"363\":1,\"406\":1,\"490\":2,\"496\":1,\"499\":1,\"500\":1,\"516\":1,\"517\":1,\"523\":1,\"531\":1,\"591\":1,\"675\":2,\"681\":1,\"684\":1,\"685\":1,\"702\":1,\"703\":1,\"709\":1,\"717\":1,\"776\":1,\"861\":2,\"867\":1,\"870\":1,\"871\":1,\"888\":1,\"889\":1,\"895\":1,\"903\":1,\"970\":1,\"1055\":2,\"1061\":1,\"1064\":1,\"1065\":1,\"1083\":1,\"1084\":1,\"1091\":1,\"1099\":1,\"1125\":1,\"1171\":1,\"1174\":1,\"1184\":2,\"1279\":2,\"1287\":1,\"1290\":1}}],[\"流程变量表达式支持替换集合\",{\"1\":{\"74\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"流程编码\",{\"1\":{\"118\":1,\"300\":1,\"348\":1,\"475\":1,\"516\":1,\"660\":1,\"702\":1,\"846\":1,\"888\":1,\"1040\":1,\"1083\":1,\"1264\":1}}],[\"流程编码和流程版本\",{\"1\":{\"33\":1,\"437\":1,\"622\":1,\"807\":1,\"1001\":1,\"1221\":1}}],[\"流程配置文件改为表单填报方式\",{\"1\":{\"98\":1}}],[\"流程第三个节点为网关时无法渲染颜色\",{\"1\":{\"82\":1}}],[\"流程定义表\",{\"1\":{\"297\":1,\"298\":1,\"472\":1,\"473\":1,\"657\":1,\"658\":1,\"843\":1,\"844\":1,\"1037\":1,\"1038\":1,\"1261\":1,\"1262\":1}}],[\"流程定义表from\",{\"1\":{\"82\":1}}],[\"流程定义的相关的三张表\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"流程定义时通过逗号隔开多个权限\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"流程定义配置\",{\"0\":{\"252\":1,\"424\":1,\"609\":1,\"794\":1,\"988\":1,\"1204\":1}}],[\"流程定义挂起后\",{\"1\":{\"114\":1,\"346\":1,\"514\":1,\"700\":1,\"886\":1,\"1081\":1}}],[\"流程定义\",{\"1\":{\"106\":1,\"107\":1,\"692\":1,\"693\":1,\"878\":1,\"879\":1,\"1073\":1,\"1074\":1}}],[\"流程定义id\",{\"1\":{\"104\":1,\"105\":1,\"134\":1,\"303\":1,\"304\":1,\"363\":1,\"478\":1,\"479\":1,\"504\":1,\"505\":1,\"531\":1,\"663\":1,\"664\":1,\"690\":1,\"691\":1,\"717\":1,\"849\":1,\"850\":1,\"876\":1,\"877\":1,\"903\":1,\"1043\":1,\"1044\":1,\"1071\":1,\"1072\":1,\"1099\":1,\"1267\":1,\"1268\":1}}],[\"流程定义xml字符串\",{\"1\":{\"104\":2,\"105\":2,\"337\":1,\"504\":2,\"505\":2,\"690\":2,\"691\":2,\"876\":2,\"877\":2,\"1071\":2,\"1072\":2}}],[\"流程定义新增复制按钮\",{\"1\":{\"92\":1}}],[\"流程定义数据保存支持json格式\",{\"1\":{\"72\":1}}],[\"流程状态\",{\"0\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1},\"1\":{\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"301\":1,\"302\":1,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"476\":1,\"477\":1,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"661\":1,\"662\":1,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"847\":1,\"848\":1,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"1041\":1,\"1042\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1265\":1,\"1266\":1}}],[\"流程状态改成字符串类型\",{\"1\":{\"81\":1}}],[\"流程状态字段flow\",{\"1\":{\"81\":1}}],[\"流程监听器和某个流程定义有关\",{\"1\":{\"414\":1,\"599\":1,\"784\":1,\"978\":1}}],[\"流程监听器和节点监听器\",{\"0\":{\"414\":1,\"599\":1,\"784\":1,\"978\":1}}],[\"流程监听器\",{\"0\":{\"252\":1,\"424\":1,\"609\":1,\"794\":1,\"988\":1,\"1204\":1},\"1\":{\"81\":1,\"239\":2,\"414\":1,\"599\":1,\"784\":1,\"978\":1,\"1191\":2}}],[\"流程复制克隆改set\",{\"1\":{\"76\":1}}],[\"流程设计时\",{\"1\":{\"320\":1,\"1284\":1}}],[\"流程设计时未设置办理人或者ignore为true可不传\",{\"1\":{\"119\":1,\"126\":1,\"272\":1,\"889\":1,\"895\":1,\"1084\":1,\"1091\":1,\"1218\":1}}],[\"流程设计\",{\"0\":{\"34\":1,\"438\":1,\"623\":1,\"808\":1,\"1002\":1,\"1222\":1}}],[\"流程设计器开发\",{\"1\":{\"98\":1}}],[\"流程设计器新增快捷键支持\",{\"1\":{\"76\":1}}],[\"流程设计器\",{\"1\":{\"12\":1,\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1299\":1,\"1305\":1,\"1315\":1,\"1316\":1,\"1326\":1,\"1327\":1,\"1337\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"流程引擎自身维护多租户和软删除实现\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"流程引擎自带流程图\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"流程图根据前端返回的节点坐标\",{\"1\":{\"230\":1,\"408\":1,\"593\":1,\"778\":1,\"972\":1,\"1186\":1}}],[\"流程图结束节点显示为黑色\",{\"1\":{\"82\":1}}],[\"流程图渲染有问题\",{\"1\":{\"82\":1}}],[\"流程图查询异常处理\",{\"1\":{\"76\":1}}],[\"流程图清晰度调整\",{\"1\":{\"76\":1}}],[\"流程图合法性检验\",{\"1\":{\"70\":1}}],[\"流程图片中文乱码\",{\"0\":{\"59\":1}}],[\"流程图\",{\"0\":{\"230\":1,\"408\":1,\"593\":1,\"778\":1,\"972\":1,\"1186\":1},\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"流程审批\",{\"1\":{\"2\":1}}],[\"达到一定通过率\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"达梦\",{\"1\":{\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1}}],[\"才算通过\",{\"1\":{\"274\":2,\"446\":2,\"631\":2,\"816\":2,\"1010\":2,\"1230\":2,\"1237\":2}}],[\"协作人\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"协作类型\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"协作方式\",{\"1\":{\"35\":1,\"132\":1,\"301\":1,\"361\":1,\"439\":1,\"476\":1,\"529\":1,\"624\":1,\"661\":1,\"715\":1,\"809\":1,\"847\":1,\"901\":1,\"1003\":1,\"1041\":1,\"1097\":1,\"1223\":1,\"1265\":1}}],[\"遇新网关重置\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"离上次最近的并行网关节点编码\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"结点类型\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"结点跳转关联表\",{\"1\":{\"298\":1,\"473\":1,\"658\":1,\"844\":1,\"1038\":1,\"1262\":1}}],[\"结束节点名称\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"结束节点不需要\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"结束节点\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"结果\",{\"1\":{\"166\":1,\"207\":1,\"208\":1,\"406\":1,\"587\":1,\"588\":1,\"591\":1,\"772\":1,\"773\":1,\"776\":1,\"958\":1,\"959\":1,\"970\":1,\"1125\":1,\"1159\":1,\"1160\":1,\"1171\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"驳回指向节点后还存在其他正在执行的待办任务\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"驳回\",{\"1\":{\"274\":1,\"276\":1,\"446\":1,\"448\":1,\"631\":1,\"633\":1,\"816\":1,\"818\":1,\"1010\":1,\"1012\":1,\"1230\":1,\"1232\":1,\"1237\":1,\"1239\":1}}],[\"驳回流程\",{\"0\":{\"40\":1,\"444\":1,\"629\":1,\"814\":1,\"1008\":1,\"1228\":1}}],[\"暂存\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"抄送\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"发起人操作\",{\"1\":{\"452\":1}}],[\"发起人可催办提醒当前节点处理人\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"发布流程\",{\"0\":{\"290\":1,\"466\":1,\"651\":1,\"837\":1,\"1031\":1,\"1254\":1,\"1295\":1,\"1345\":1}}],[\"发布流程定义\",{\"1\":{\"109\":1,\"341\":1,\"509\":1,\"695\":1,\"881\":1,\"1076\":1}}],[\"发布\",{\"0\":{\"109\":1,\"341\":1,\"509\":1,\"695\":1,\"881\":1,\"1076\":1}}],[\"催办\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"回退驳回率\",{\"1\":{\"451\":2,\"636\":2,\"821\":2,\"1015\":2,\"1235\":2,\"1242\":2}}],[\"回退\",{\"1\":{\"273\":1,\"451\":5,\"452\":1,\"636\":5,\"637\":1,\"821\":5,\"822\":1,\"1015\":5,\"1016\":1,\"1235\":5,\"1236\":1,\"1242\":5}}],[\"术语解释\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"术语\",{\"0\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1},\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"术语规则\",{\"0\":{\"273\":1,\"1236\":1}}],[\"号\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"序\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"序列化所有long类型\",{\"0\":{\"56\":1}}],[\"序列化位字符串\",{\"1\":{\"55\":1}}],[\"编写permissionhandler实现类\",{\"0\":{\"272\":1,\"1218\":1}}],[\"持久化保存数据\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"持续为社区优化文档或处理issue若干\",{\"1\":{\"9\":1}}],[\"持续完成社区发布的简单任务若干\",{\"1\":{\"9\":1}}],[\"字段\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"字段填充\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"字典数据\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"更多接口请参考\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"更新操作使用\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"更新业务数据\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"更新时间\",{\"1\":{\"300\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"更新时间设置正序排列\",{\"0\":{\"154\":1,\"383\":1,\"551\":1,\"737\":1,\"923\":1,\"1119\":1},\"1\":{\"154\":1,\"383\":1,\"551\":1,\"737\":1,\"923\":1,\"1119\":1}}],[\"更新时间有值时\",{\"1\":{\"77\":1}}],[\"更新脚本在项目里面的sql文件下\",{\"1\":{\"68\":1}}],[\"更新日志\",{\"0\":{\"68\":1,\"73\":1},\"1\":{\"72\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"1304\":1,\"1319\":1,\"1330\":1,\"1354\":1}}],[\"第二种\",{\"1\":{\"431\":1,\"616\":1,\"801\":1,\"995\":1}}],[\"第二种方式\",{\"1\":{\"267\":1,\"269\":1,\"432\":1,\"434\":1,\"617\":1,\"619\":1,\"802\":1,\"804\":1,\"996\":1,\"998\":1,\"1213\":1,\"1215\":1}}],[\"第一种\",{\"1\":{\"431\":1,\"616\":1,\"801\":1,\"995\":1}}],[\"第一种方式\",{\"1\":{\"267\":1,\"269\":1,\"432\":1,\"434\":1,\"617\":1,\"619\":1,\"802\":1,\"804\":1,\"996\":1,\"998\":1,\"1213\":1,\"1215\":1}}],[\"组件本身提供常见并且基础的api\",{\"1\":{\"266\":1,\"1212\":1}}],[\"组件内部不在维护替换\",{\"1\":{\"82\":1}}],[\"通用多租户\",{\"0\":{\"311\":1,\"486\":1,\"671\":1,\"857\":1,\"1051\":1,\"1275\":1}}],[\"通用规则\",{\"0\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"通用逻辑删除\",{\"0\":{\"265\":1,\"430\":1,\"615\":1,\"800\":1,\"994\":1,\"1211\":1}}],[\"通过逻辑\",{\"1\":{\"451\":2,\"636\":2,\"821\":2,\"1015\":2,\"1235\":2,\"1242\":2}}],[\"通过此接口可以给办理人选择\",{\"1\":{\"327\":1}}],[\"通过此配置兼容\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"通过jar包引入\",{\"1\":{\"293\":1,\"834\":1,\"1028\":1,\"1257\":1,\"1298\":1,\"1348\":1}}],[\"通过任务id流转\",{\"1\":{\"292\":1,\"468\":1,\"653\":1,\"839\":1,\"1033\":1,\"1256\":1}}],[\"通过实例id流转\",{\"1\":{\"292\":1,\"468\":1,\"653\":1,\"839\":1,\"1033\":1,\"1256\":1,\"1297\":1,\"1347\":1}}],[\"通过或者退回\",{\"1\":{\"273\":1,\"1016\":1,\"1236\":1}}],[\"通过主键查找数据\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"通过上述注解获取工作流组件内各entity访问能力\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"通过监听器\",{\"1\":{\"238\":1,\"412\":1,\"597\":1,\"782\":1,\"976\":1,\"1190\":1}}],[\"通过后端graphics2d进行绘制\",{\"1\":{\"230\":1,\"408\":1,\"593\":1,\"778\":1,\"972\":1,\"1186\":1}}],[\"通过\",{\"0\":{\"188\":1,\"401\":1,\"569\":1,\"755\":1,\"941\":1,\"1140\":1},\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"通过这个方法进行注册expressionutil\",{\"1\":{\"169\":1,\"219\":1,\"257\":1,\"330\":1,\"1175\":1}}],[\"通过权限标识过滤数据\",{\"1\":{\"98\":1}}],[\"通过接口接入方式\",{\"1\":{\"74\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"通过$和\",{\"1\":{\"74\":2,\"1304\":1,\"1354\":1}}],[\"通过检查fc\",{\"1\":{\"60\":1}}],[\"通过设置id生成器类型\",{\"1\":{\"57\":1}}],[\"通过yml配置\",{\"0\":{\"57\":1}}],[\"通过还是退回\",{\"1\":{\"36\":1,\"440\":1,\"625\":1,\"810\":1,\"1004\":1,\"1224\":1}}],[\"通过warm\",{\"1\":{\"14\":1}}],[\"要求重新处理\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"要与\",{\"1\":{\"264\":2,\"429\":2,\"614\":2,\"799\":2,\"993\":2,\"1210\":2}}],[\"要和后端yml中配置一致\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"信息\",{\"1\":{\"264\":1,\"429\":1,\"614\":1,\"799\":1,\"993\":1,\"1210\":1}}],[\"拿到json后使用序列化可以拿到配置信息\",{\"1\":{\"254\":1,\"425\":1,\"610\":1,\"795\":1,\"989\":1,\"1206\":1}}],[\"页面配置监听器时加上类路径\",{\"1\":{\"254\":1,\"425\":1,\"610\":1,\"795\":1,\"989\":1,\"1206\":1}}],[\"页面配置全局或节点监听器\",{\"0\":{\"250\":1,\"422\":1,\"607\":1,\"792\":1,\"986\":1,\"1202\":1}}],[\"整个系统只有一个\",{\"1\":{\"253\":1,\"1205\":1}}],[\"整理流程表\",{\"1\":{\"98\":1}}],[\"就先遍历spel策略\",{\"1\":{\"319\":1,\"1283\":1}}],[\"就需要后续能够动态设置办理人功能\",{\"1\":{\"316\":1,\"1280\":1}}],[\"就是点击驳回后的状态\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"就是在下一个任务生成前执行\",{\"1\":{\"249\":1,\"421\":1,\"606\":1,\"791\":1,\"985\":1,\"1201\":1}}],[\"就可以后续就可以根据租户id过来任务\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"就会终止该操作\",{\"1\":{\"64\":1}}],[\"上一节点处理人可以将其退回自己手中重新操作\",{\"1\":{\"452\":1}}],[\"上一个节点任务办理时\",{\"1\":{\"320\":1,\"493\":1,\"678\":1,\"864\":1,\"1058\":1,\"1284\":1}}],[\"上下一一对应\",{\"1\":{\"423\":1,\"608\":1,\"793\":1,\"987\":1}}],[\"上个节点分派监听器修改\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"上报不合规的地方来审批整改\",{\"1\":{\"2\":1}}],[\"说明是新增\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"说明匹配上监听器表达式\",{\"1\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"该流程所有节点任务都会执行\",{\"1\":{\"239\":1,\"1191\":1}}],[\"该流程实例无法继续流转\",{\"1\":{\"123\":1,\"353\":1,\"521\":1,\"707\":1,\"893\":1,\"1088\":1}}],[\"进行不同的军事演练任务\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"进行控制\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"进行保存或者校验\",{\"1\":{\"270\":1,\"1216\":1}}],[\"进行业务处理\",{\"1\":{\"238\":1,\"412\":1,\"597\":1,\"782\":1,\"976\":1,\"1190\":1}}],[\"进销存运营平台\",{\"1\":{\"2\":1}}],[\"监听办理过程的不同环节\",{\"1\":{\"412\":1,\"597\":1,\"782\":1,\"976\":1}}],[\"监听办理过程的不同时期\",{\"1\":{\"238\":1,\"1190\":1}}],[\"监听器配置页面ui调整\",{\"1\":{\"1304\":1,\"1354\":1}}],[\"监听器使用\",{\"0\":{\"416\":1,\"601\":1,\"786\":1,\"980\":1}}],[\"监听器参数使用\",{\"0\":{\"254\":1,\"425\":1,\"610\":1,\"795\":1,\"989\":1,\"1206\":1}}],[\"监听器变量\",{\"1\":{\"246\":1,\"247\":1,\"253\":4,\"418\":1,\"419\":1,\"603\":1,\"604\":1,\"788\":1,\"789\":1,\"982\":1,\"983\":1,\"1198\":1,\"1199\":1,\"1205\":4}}],[\"监听器变量新增返回结点信息\",{\"1\":{\"92\":1}}],[\"监听器接口\",{\"1\":{\"245\":1,\"417\":1,\"602\":1,\"787\":1,\"981\":1,\"1197\":1}}],[\"监听器生命周期图\",{\"0\":{\"243\":1,\"415\":1,\"600\":1,\"785\":1,\"979\":1,\"1195\":1}}],[\"监听器路径\",{\"1\":{\"241\":2,\"300\":1,\"303\":1,\"475\":1,\"478\":1,\"660\":1,\"663\":1,\"846\":1,\"849\":1,\"1040\":1,\"1043\":1,\"1193\":2,\"1264\":1,\"1267\":1}}],[\"监听器类型和监听器路径\",{\"1\":{\"423\":1,\"608\":1,\"793\":1,\"987\":1}}],[\"监听器类型\",{\"0\":{\"413\":1,\"598\":1,\"783\":1,\"977\":1},\"1\":{\"241\":1,\"300\":1,\"303\":1,\"475\":1,\"478\":1,\"660\":1,\"663\":1,\"846\":1,\"849\":1,\"1040\":1,\"1043\":1,\"1193\":1,\"1264\":1,\"1267\":1}}],[\"监听器设置\",{\"0\":{\"241\":1,\"1193\":1},\"1\":{\"241\":1,\"1193\":1}}],[\"监听器小类\",{\"0\":{\"240\":1,\"1192\":1}}],[\"监听器大类\",{\"0\":{\"239\":1,\"1191\":1}}],[\"监听器\",{\"0\":{\"238\":1,\"412\":1,\"597\":1,\"782\":1,\"976\":1,\"1190\":1}}],[\"监听器表达式扩展\",{\"0\":{\"255\":1}}],[\"监听器表达式实现类\",{\"0\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"监听器表达式策略实现类集合\",{\"1\":{\"224\":1,\"259\":1,\"1180\":1}}],[\"监听器表达式策略接口\",{\"1\":{\"224\":1,\"259\":1,\"1180\":1}}],[\"监听器表达式接口\",{\"0\":{\"224\":1,\"259\":1,\"1180\":1}}],[\"监听器表达式\",{\"0\":{\"223\":1,\"258\":1,\"1179\":1}}],[\"监听器问题修复\",{\"1\":{\"84\":1}}],[\"监听器优化配置\",{\"1\":{\"74\":1}}],[\"监听器未执行或者类型转换异常\",{\"0\":{\"63\":1}}],[\"监听器等\",{\"1\":{\"35\":1,\"439\":1,\"624\":1,\"809\":1,\"1003\":1,\"1223\":1}}],[\"监听器与流程变量\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"求助其他人审批\",{\"1\":{\"233\":1,\"273\":1,\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"表示默认办理人变量策略\",{\"1\":{\"322\":1,\"495\":1,\"680\":1,\"866\":1,\"1060\":1,\"1286\":1}}],[\"表名\",{\"1\":{\"309\":2,\"484\":2,\"669\":2,\"855\":2,\"1049\":2,\"1273\":2}}],[\"表字段明细\",{\"0\":{\"299\":1,\"474\":1,\"659\":1,\"845\":1,\"1039\":1,\"1263\":1}}],[\"表清单\",{\"0\":{\"298\":1,\"473\":1,\"658\":1,\"844\":1,\"1038\":1,\"1262\":1}}],[\"表描述\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"表结构\",{\"0\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"表单管理\",{\"0\":{\"231\":1,\"409\":1,\"594\":1,\"779\":1,\"973\":1,\"1187\":1}}],[\"表达式2等\",{\"1\":{\"241\":1,\"1193\":1}}],[\"表达式1\",{\"1\":{\"241\":1,\"1193\":1}}],[\"表达式扩展\",{\"0\":{\"217\":1,\"1173\":1}}],[\"表达式后缀\",{\"1\":{\"172\":1,\"228\":1,\"1184\":1}}],[\"表达式策略类接口\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"表达式策略类型\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"表达式公共接口\",{\"0\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"表达式\",{\"1\":{\"166\":1,\"168\":2,\"172\":1,\"218\":2,\"228\":1,\"256\":2,\"329\":2,\"406\":1,\"500\":1,\"591\":1,\"685\":1,\"776\":1,\"871\":1,\"970\":1,\"1065\":1,\"1125\":1,\"1171\":1,\"1174\":2,\"1184\":1}}],[\"恒返回true\",{\"1\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"访问地址改为\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"独立服务\",{\"1\":{\"215\":1,\"966\":1,\"1167\":1}}],[\"独立启动该设计器\",{\"1\":{\"212\":1,\"963\":1,\"1164\":1}}],[\"独立设计器放行路径增加\",{\"1\":{\"75\":1}}],[\"源码调试\",{\"0\":{\"212\":1,\"963\":1,\"1164\":1}}],[\"源码地址\",{\"1\":{\"41\":1}}],[\"多个人可以同时处理\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"多个token用逗号分隔\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"多租户插件\",{\"1\":{\"310\":2,\"485\":2,\"670\":2,\"856\":2,\"1050\":2,\"1274\":2}}],[\"多租户\",{\"0\":{\"307\":1,\"482\":1,\"667\":1,\"853\":1,\"1047\":1,\"1271\":1}}],[\"多租户字段隔离提供全局配置\",{\"1\":{\"86\":1}}],[\"多租户和逻辑删除\",{\"1\":{\"82\":1}}],[\"多租户与软删除\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"每次请求会把token\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"每年还会发放idea正版授权\",{\"1\":{\"10\":1}}],[\"追加\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"共享后端权限\",{\"0\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"左侧树父级id\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"左侧树名称\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"左侧树id\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"左侧隐藏\",{\"1\":{\"75\":1}}],[\"构建工具\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"构建树状结构\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"构建信创\",{\"1\":{\"2\":2}}],[\"权限监听器\",{\"1\":{\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1}}],[\"权限人\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"权限类型\",{\"1\":{\"274\":1,\"303\":1,\"446\":1,\"478\":1,\"631\":1,\"663\":1,\"816\":1,\"849\":1,\"1010\":1,\"1043\":1,\"1230\":1,\"1237\":1,\"1267\":1}}],[\"权限标识\",{\"1\":{\"274\":2,\"303\":2,\"446\":2,\"478\":2,\"631\":2,\"663\":2,\"816\":2,\"849\":2,\"1010\":2,\"1043\":2,\"1230\":2,\"1237\":2,\"1267\":2}}],[\"权限名称\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"权限编码\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"实例\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"实现以下接口\",{\"0\":{\"245\":1,\"417\":1,\"602\":1,\"787\":1,\"981\":1,\"1197\":1}}],[\"实现全局监听器接口\",{\"1\":{\"239\":1,\"1191\":1}}],[\"实现gettype和eval方法\",{\"1\":{\"220\":1,\"331\":1,\"500\":1,\"685\":1,\"871\":1,\"1065\":1,\"1176\":1}}],[\"实现接口获取以上页面办理人权限数据\",{\"0\":{\"206\":1,\"586\":1,\"771\":1,\"957\":1,\"1158\":1,\"1314\":1,\"1325\":1,\"1336\":1}}],[\"实现接口提供给设计器\",{\"1\":{\"204\":1,\"584\":1,\"769\":1,\"955\":1,\"1156\":1,\"1312\":1,\"1323\":1,\"1334\":1}}],[\"实体集合\",{\"1\":{\"149\":1,\"378\":1,\"546\":1,\"732\":1,\"918\":1,\"1114\":1}}],[\"实体\",{\"1\":{\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"373\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":1,\"917\":1,\"1109\":1,\"1110\":1,\"1111\":1,\"1112\":1,\"1113\":1}}],[\"实体类支持序列化\",{\"1\":{\"88\":1}}],[\"给任务节点设置哪些权限的人可以办理\",{\"1\":{\"204\":1,\"584\":1,\"769\":1,\"955\":1,\"1156\":1,\"1312\":1,\"1323\":1,\"1334\":1}}],[\"打包项目\",{\"1\":{\"215\":1,\"216\":1,\"966\":1,\"967\":1,\"1167\":1,\"1168\":1}}],[\"打开新的页签\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"打造免费开源低代码平台\",{\"1\":{\"2\":2}}],[\"`http\",{\"1\":{\"580\":1,\"581\":1}}],[\"`\",{\"1\":{\"200\":2,\"201\":2,\"580\":2,\"581\":2,\"765\":2,\"766\":2,\"951\":2,\"952\":2,\"1152\":2,\"1153\":2}}],[\"例如\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"首先\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"首先传入设计器需要的流程定义definitionid和是否可编辑disabled参数\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"首次导入\",{\"1\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"首页\",{\"0\":{\"0\":1}}],[\"前后端端口一致\",{\"1\":{\"583\":1}}],[\"前后端不分离项目\",{\"1\":{\"583\":1}}],[\"前后端不分离版本\",{\"0\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"前后端不分离\",{\"1\":{\"199\":1,\"764\":1,\"950\":1,\"1151\":1,\"1322\":1,\"1333\":1}}],[\"前缀表示spel办理人变量策略\",{\"1\":{\"318\":1,\"1282\":1}}],[\"前面的任务路线必须都完成即可往下执行\",{\"1\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"前面拼接dept\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"前面拼接role\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"前端页面设置变量\",{\"0\":{\"322\":1,\"325\":1,\"495\":1,\"498\":1,\"680\":1,\"683\":1,\"866\":1,\"869\":1,\"1060\":1,\"1063\":1,\"1286\":1,\"1289\":1}}],[\"前端页面就不会丢失精度了\",{\"1\":{\"55\":1}}],[\"前端地址的前缀如dev\",{\"1\":{\"200\":1,\"201\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"前端加载设计器\",{\"0\":{\"199\":1,\"578\":1,\"764\":1,\"950\":1,\"1151\":1,\"1311\":1,\"1322\":1,\"1333\":1}}],[\"前端加载设计器代理配置\",{\"1\":{\"76\":1}}],[\"前端配置如\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"前端开发工程师\",{\"1\":{\"25\":1}}],[\"前端工程师\",{\"1\":{\"25\":1}}],[\"下面介绍如何使用设计器\",{\"1\":{\"1308\":1}}],[\"下面才是需要排除的地址\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"下一个节点任务生成时即可获取替换\",{\"1\":{\"493\":1,\"678\":1,\"864\":1,\"1058\":1}}],[\"下一个节点类型\",{\"1\":{\"304\":1,\"479\":1,\"664\":1,\"850\":1,\"1044\":1,\"1268\":1}}],[\"下一个节点是网关需要判断跳转条件\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"下一个流程节点的编码\",{\"1\":{\"304\":1,\"479\":1,\"664\":1,\"850\":1,\"1044\":1,\"1268\":1}}],[\"下个节点配置权限策略\",{\"1\":{\"248\":2,\"420\":2,\"605\":2,\"790\":2,\"984\":2,\"1200\":2}}],[\"下载设计器源码\",{\"0\":{\"211\":1,\"962\":1,\"1163\":1}}],[\"除上面外的所有请求全部需要鉴权认证\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"静态资源\",{\"1\":{\"196\":1,\"197\":1,\"575\":1,\"576\":1,\"761\":1,\"762\":1,\"947\":1,\"948\":1,\"1148\":1,\"1149\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"放行配置\",{\"0\":{\"196\":1,\"197\":1,\"198\":1,\"575\":1,\"576\":1,\"577\":1,\"761\":1,\"762\":1,\"763\":1,\"947\":1,\"948\":1,\"949\":1,\"1148\":1,\"1149\":1,\"1150\":1}}],[\"放弃js引擎\",{\"1\":{\"98\":1}}],[\"否则无法访问业务系统\",{\"1\":{\"212\":1,\"963\":1,\"1164\":1}}],[\"否则无法访问\",{\"1\":{\"195\":1,\"574\":1,\"760\":1,\"946\":1,\"1147\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"这两个路径需要放行\",{\"1\":{\"574\":1,\"1310\":1}}],[\"这里返回系统中的当前办理人的租户id\",{\"1\":{\"314\":1,\"489\":1,\"674\":1,\"860\":1,\"1054\":1,\"1278\":1}}],[\"这里就不用更新了\",{\"1\":{\"247\":1,\"1199\":1}}],[\"这个路径需要放行\",{\"1\":{\"195\":1,\"760\":1,\"946\":1,\"1147\":1,\"1321\":1,\"1332\":1}}],[\"这些费用将用于服务器\",{\"1\":{\"51\":1}}],[\"引入\",{\"0\":{\"200\":1,\"201\":1,\"202\":1,\"580\":1,\"581\":1,\"582\":1,\"765\":1,\"766\":1,\"767\":1,\"951\":1,\"952\":1,\"953\":1,\"1152\":1,\"1153\":1,\"1154\":1}}],[\"引入依赖\",{\"0\":{\"192\":1,\"573\":1,\"759\":1,\"945\":1,\"1144\":1,\"1309\":1,\"1320\":1,\"1331\":1}}],[\"引入日志门面\",{\"1\":{\"89\":1}}],[\"注入\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"注入bean\",{\"0\":{\"187\":1,\"400\":1,\"568\":1,\"754\":1,\"940\":1,\"1139\":1}}],[\"注意\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"注册拦截器\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"注册表达式实现类\",{\"0\":{\"169\":1,\"219\":1,\"257\":1,\"330\":1,\"1175\":1}}],[\"注解标记允许匿名访问的url\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"过程状态记录\",{\"1\":{\"181\":1,\"394\":1,\"562\":1,\"748\":1,\"934\":1,\"1133\":1}}],[\"事务隔离级别\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"事件\",{\"1\":{\"70\":1}}],[\"的名字对上\",{\"1\":{\"264\":1,\"429\":1,\"614\":1,\"799\":1,\"993\":1,\"1210\":1}}],[\"的hibernate\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"的字符串\",{\"1\":{\"107\":1,\"693\":1,\"879\":1,\"1074\":1}}],[\"逻辑\",{\"1\":{\"451\":2,\"636\":2,\"821\":2,\"1015\":2,\"1235\":2,\"1242\":2}}],[\"逻辑未删除值\",{\"1\":{\"263\":1,\"264\":1,\"428\":1,\"429\":1,\"613\":1,\"614\":1,\"798\":1,\"799\":1,\"992\":1,\"993\":1,\"1209\":1,\"1210\":1}}],[\"逻辑未删除字段\",{\"1\":{\"176\":1,\"179\":1,\"265\":1,\"389\":1,\"392\":1,\"430\":1,\"557\":1,\"560\":1,\"615\":1,\"743\":1,\"746\":1,\"800\":1,\"929\":1,\"932\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1211\":1}}],[\"逻辑已删除值\",{\"1\":{\"262\":1,\"263\":1,\"264\":1,\"427\":1,\"428\":1,\"429\":1,\"612\":1,\"613\":1,\"614\":1,\"797\":1,\"798\":1,\"799\":1,\"991\":1,\"992\":1,\"993\":1,\"1208\":1,\"1209\":1,\"1210\":1}}],[\"逻辑删除\",{\"0\":{\"261\":1,\"426\":1,\"611\":1,\"796\":1,\"990\":1,\"1207\":1}}],[\"逻辑删除字段值\",{\"1\":{\"176\":1,\"179\":1,\"265\":1,\"389\":1,\"392\":1,\"430\":1,\"557\":1,\"560\":1,\"615\":1,\"743\":1,\"746\":1,\"800\":1,\"929\":1,\"932\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1211\":1}}],[\"填充器\",{\"0\":{\"398\":1,\"566\":1,\"752\":1,\"938\":1},\"1\":{\"176\":1,\"179\":1,\"189\":1,\"389\":1,\"392\":1,\"402\":1,\"557\":1,\"560\":1,\"570\":1,\"743\":1,\"746\":1,\"756\":1,\"929\":1,\"932\":1,\"942\":1,\"1128\":1,\"1131\":1,\"1141\":1}}],[\"合法性校验\",{\"1\":{\"172\":1,\"228\":1,\"1184\":1}}],[\"合规性和风险管理\",{\"1\":{\"14\":1}}],[\"合规管控系统\",{\"1\":{\"2\":1}}],[\"复杂表单\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"复杂查询语句通过\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"复用部分代码\",{\"1\":{\"172\":1,\"228\":1,\"1184\":1}}],[\"复制流程定义\",{\"1\":{\"111\":1,\"343\":1,\"511\":1,\"697\":1,\"883\":1,\"1078\":1}}],[\"复制流程\",{\"0\":{\"111\":1,\"343\":1,\"511\":1,\"697\":1,\"883\":1,\"1078\":1}}],[\"截取\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"执行\",{\"1\":{\"280\":2,\"451\":2,\"454\":2,\"636\":2,\"639\":2,\"821\":2,\"824\":2,\"1015\":2,\"1018\":2,\"1235\":2,\"1242\":2,\"1244\":2}}],[\"执行时修改\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"执行顺序\",{\"1\":{\"239\":1,\"414\":1,\"599\":1,\"784\":1,\"978\":1,\"1191\":1}}],[\"执行结果\",{\"1\":{\"168\":1,\"172\":2,\"218\":1,\"228\":2,\"256\":1,\"329\":1,\"500\":1,\"685\":1,\"871\":1,\"1065\":1,\"1174\":1,\"1184\":2}}],[\"执行表达式后置方法\",{\"1\":{\"172\":1,\"228\":1,\"1184\":1}}],[\"执行表达式前置方法\",{\"1\":{\"172\":1,\"228\":1,\"1184\":1}}],[\"执行表达式\",{\"1\":{\"168\":2,\"172\":1,\"218\":2,\"228\":1,\"256\":2,\"329\":2,\"500\":1,\"685\":1,\"871\":1,\"1065\":1,\"1174\":2,\"1184\":1}}],[\"执行表达式之前\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"执行升级脚本\",{\"1\":{\"77\":1,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1}}],[\"也在此版本得到解决\",{\"1\":{\"1319\":1,\"1330\":1}}],[\"也可发送通知\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"也可以放到业务代码中办理完成后\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"也可以放到业务代码中办理前设置\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"也可用\",{\"1\":{\"177\":3,\"179\":1,\"180\":2,\"272\":1,\"312\":1,\"313\":1,\"314\":1,\"390\":3,\"392\":1,\"393\":2,\"487\":1,\"488\":1,\"489\":1,\"558\":3,\"560\":1,\"561\":2,\"672\":1,\"673\":1,\"674\":1,\"744\":3,\"746\":1,\"747\":2,\"858\":1,\"859\":1,\"860\":1,\"930\":3,\"932\":1,\"933\":2,\"1052\":1,\"1053\":1,\"1054\":1,\"1129\":3,\"1131\":1,\"1132\":2,\"1218\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"也可使用对应orm框架的实现方式\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"也是表达式的前缀\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"抽离公共方法\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"抽离spring生态依赖\",{\"1\":{\"98\":1}}],[\"待开发\",{\"1\":{\"327\":1}}],[\"待提交\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"待补充\",{\"1\":{\"231\":1}}],[\"待完善\",{\"1\":{\"202\":1,\"582\":1,\"767\":1,\"953\":1,\"1154\":1}}],[\"待判断的字符串\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"待办任务所有待办人都进行\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"待办任务有一个\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"待办任务表\",{\"1\":{\"297\":2,\"298\":1,\"472\":2,\"473\":1,\"657\":2,\"658\":1,\"843\":2,\"844\":1,\"1037\":2,\"1038\":1,\"1261\":2,\"1262\":1}}],[\"待办任务转为历史记录\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"待办已办查询标记为即将删除\",{\"1\":{\"89\":1}}],[\"待办表解偶用户\",{\"1\":{\"85\":1}}],[\"最主要限制\",{\"1\":{\"277\":1,\"278\":1,\"449\":1,\"450\":1,\"634\":1,\"635\":1,\"819\":1,\"820\":1,\"1013\":1,\"1014\":1,\"1233\":1,\"1234\":1,\"1240\":1,\"1241\":1}}],[\"最终军事演练完成\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"最终返回图片给前端展示\",{\"1\":{\"230\":1,\"408\":1,\"593\":1,\"778\":1,\"972\":1,\"1186\":1}}],[\"最终为\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"最后的zzz为变量值\",{\"1\":{\"166\":1,\"1125\":1}}],[\"最大最小值\",{\"1\":{\"55\":1}}],[\"常规增删改查可以通过注入方式\",{\"1\":{\"431\":1,\"616\":1,\"801\":1,\"995\":1}}],[\"常规匹配规则\",{\"1\":{\"166\":1,\"1125\":1}}],[\"常见问题\",{\"0\":{\"53\":1}}],[\"小于等于\",{\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"小于\",{\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"等于\",{\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"等待作者评审\",{\"0\":{\"50\":1}}],[\"抉择是执行哪个分支\",{\"1\":{\"164\":1,\"1123\":1}}],[\"所属并行网关节点编码\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"所拥有的权限等操作\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"所有节点任务都会执行\",{\"1\":{\"414\":1,\"599\":1,\"784\":1,\"978\":1}}],[\"所有流程的节点任务都会执行\",{\"1\":{\"239\":1,\"1191\":1}}],[\"所有审批人审批通过\",{\"1\":{\"159\":1,\"273\":1}}],[\"所以可以通过以下方式获取对应的使用入口\",{\"1\":{\"431\":1,\"616\":1,\"801\":1,\"995\":1}}],[\"所以参与社区文档建设绝对是一件意义重大的事情\",{\"1\":{\"7\":1}}],[\"所以请给您觉得好的开源项目点一个小小的star\",{\"1\":{\"5\":1}}],[\"满足设定的通过率\",{\"1\":{\"159\":1,\"273\":1}}],[\"排序字段\",{\"1\":{\"155\":1,\"156\":1,\"157\":1,\"384\":1,\"385\":1,\"386\":1,\"552\":1,\"553\":1,\"554\":1,\"738\":1,\"739\":1,\"740\":1,\"924\":1,\"925\":1,\"926\":1,\"1120\":1,\"1121\":1,\"1122\":1}}],[\"批量更新\",{\"0\":{\"151\":1,\"380\":1,\"548\":1,\"734\":1,\"920\":1,\"1116\":1},\"1\":{\"151\":1,\"380\":1,\"548\":1,\"734\":1,\"920\":1,\"1116\":1}}],[\"批量新增\",{\"0\":{\"149\":1,\"150\":1,\"378\":1,\"379\":1,\"546\":1,\"547\":1,\"732\":1,\"733\":1,\"918\":1,\"919\":1,\"1114\":1,\"1115\":1},\"1\":{\"149\":1,\"150\":1,\"378\":1,\"379\":1,\"546\":1,\"547\":1,\"732\":1,\"733\":1,\"918\":1,\"919\":1,\"1114\":1,\"1115\":1}}],[\"插入大小\",{\"1\":{\"150\":1,\"379\":1,\"547\":1,\"733\":1,\"919\":1,\"1115\":1}}],[\"判断要执行哪个分支\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"判断大于等4\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"判断是否存在\",{\"0\":{\"143\":1,\"372\":1,\"540\":1,\"726\":1,\"912\":1,\"1108\":1},\"1\":{\"143\":1,\"372\":1,\"540\":1,\"726\":1,\"912\":1,\"1108\":1}}],[\"判空错误\",{\"1\":{\"86\":1}}],[\"主键id\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"主键集合\",{\"1\":{\"137\":1,\"366\":1,\"534\":1,\"720\":1,\"906\":1,\"1102\":1}}],[\"主键\",{\"1\":{\"136\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"365\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"533\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"719\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"905\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1101\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"公共api接口\",{\"0\":{\"135\":1,\"364\":1,\"532\":1,\"718\":1,\"904\":1,\"1100\":1}}],[\"公司内部oa办公系统\",{\"1\":{\"2\":1}}],[\"公司\",{\"1\":{\"2\":1}}],[\"公司使用列表\",{\"0\":{\"2\":1}}],[\"优先执行节点监听器\",{\"1\":{\"414\":1,\"599\":1,\"784\":1,\"978\":1}}],[\"优先级最高\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"优化表实体类链式赋值\",{\"1\":{\"89\":1}}],[\"优化\",{\"1\":{\"48\":1}}],[\"则整个任务执行\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"则c节点办理人变量为100\",{\"1\":{\"320\":1,\"493\":1,\"678\":1,\"864\":1,\"1058\":1,\"1284\":1}}],[\"则需要动态替换权限标识\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"则可跳转anynodecode节点\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"则必传\",{\"1\":{\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"361\":1,\"529\":1,\"715\":1,\"901\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1}}],[\"减签\",{\"0\":{\"131\":1,\"360\":1,\"528\":1,\"714\":1,\"900\":1,\"1096\":1},\"1\":{\"131\":1,\"132\":1,\"233\":1,\"235\":2,\"273\":1,\"274\":1,\"360\":1,\"361\":1,\"446\":1,\"452\":1,\"528\":1,\"529\":1,\"631\":1,\"637\":1,\"714\":1,\"715\":1,\"816\":1,\"822\":1,\"900\":1,\"901\":1,\"1010\":1,\"1016\":1,\"1096\":1,\"1097\":1,\"1230\":1,\"1236\":1,\"1237\":1}}],[\"减少办理人\",{\"1\":{\"131\":2,\"132\":1,\"360\":1,\"361\":1,\"528\":1,\"529\":1,\"714\":2,\"715\":1,\"900\":2,\"901\":1,\"1096\":2,\"1097\":1}}],[\"减少人为错误\",{\"1\":{\"14\":1}}],[\"减少繁琐代码搬运和适配\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"委托\",{\"1\":{\"132\":2,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":2,\"525\":1,\"526\":1,\"527\":1,\"528\":1,\"529\":2,\"715\":2,\"901\":2,\"1097\":2}}],[\"委托对象\",{\"1\":{\"129\":1,\"712\":1,\"898\":1,\"1094\":1}}],[\"委派后\",{\"1\":{\"129\":1,\"712\":1,\"898\":1,\"1094\":1}}],[\"委派\",{\"0\":{\"129\":1,\"358\":1,\"526\":1,\"712\":1,\"898\":1,\"1094\":1},\"1\":{\"74\":1,\"76\":2,\"129\":1,\"233\":1,\"235\":2,\"273\":1,\"274\":1,\"358\":1,\"446\":1,\"452\":1,\"526\":1,\"631\":1,\"637\":1,\"712\":1,\"816\":1,\"822\":1,\"898\":1,\"1010\":1,\"1016\":1,\"1094\":1,\"1230\":1,\"1236\":1,\"1237\":1,\"1304\":1,\"1354\":1}}],[\"委派和加减签\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"挂起实例\",{\"0\":{\"123\":1,\"353\":1,\"521\":1,\"707\":1,\"893\":1,\"1088\":1},\"1\":{\"123\":1,\"353\":1,\"521\":1,\"707\":1,\"893\":1,\"1088\":1}}],[\"挂起流程\",{\"0\":{\"114\":1,\"346\":1,\"514\":1,\"700\":1,\"886\":1,\"1081\":1},\"1\":{\"114\":1,\"346\":1,\"514\":1,\"700\":1,\"886\":1,\"1081\":1}}],[\"忽略\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"361\":1,\"529\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1}}],[\"预留给业务系统使用\",{\"1\":{\"118\":1,\"302\":1,\"348\":1,\"477\":1,\"516\":1,\"662\":1,\"702\":1,\"848\":1,\"888\":1,\"1042\":1,\"1083\":1,\"1266\":1}}],[\"预算审批等\",{\"1\":{\"14\":1}}],[\"扩展\",{\"0\":{\"500\":1,\"685\":1,\"871\":1,\"1065\":1}}],[\"扩展json库需要实现jsonconvert接口\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"扩展策略也一定要返回true\",{\"1\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"扩展需要实现expressionstrategy接口或者继承expressionstrategyabstract抽象类2\",{\"1\":{\"407\":1,\"592\":1,\"777\":1,\"971\":1,\"1172\":1}}],[\"扩展需要实现variablestrategy接口\",{\"1\":{\"220\":1,\"331\":1,\"500\":1,\"685\":1,\"871\":1,\"1065\":1,\"1176\":1}}],[\"扩展需要实现conditionstrategy接口或者继承conditionstrategyabstract抽象类\",{\"1\":{\"170\":1,\"226\":1,\"1182\":1}}],[\"扩展字段\",{\"1\":{\"118\":1,\"302\":1,\"348\":1,\"477\":1,\"516\":1,\"662\":1,\"702\":1,\"848\":1,\"888\":1,\"1042\":1,\"1083\":1,\"1266\":1}}],[\"扩展方便\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"建议传\",{\"1\":{\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1}}],[\"相关的流程实例都无法继续流转\",{\"1\":{\"114\":1,\"346\":1,\"514\":1,\"700\":1,\"886\":1,\"1081\":1}}],[\"激活实例\",{\"0\":{\"122\":1,\"352\":1,\"520\":1,\"706\":1,\"892\":1,\"1087\":1},\"1\":{\"122\":1,\"352\":1,\"520\":1,\"706\":1,\"892\":1,\"1087\":1}}],[\"激活流程\",{\"0\":{\"113\":1,\"345\":1,\"513\":1,\"699\":1,\"885\":1,\"1080\":1},\"1\":{\"113\":1,\"345\":1,\"513\":1,\"699\":1,\"885\":1,\"1080\":1}}],[\"激活和挂起\",{\"1\":{\"82\":1}}],[\"保存流程定义\",{\"0\":{\"337\":1,\"504\":1,\"505\":1}}],[\"保存流程定义数据\",{\"1\":{\"336\":1,\"337\":1,\"503\":1,\"504\":1,\"505\":1}}],[\"保存流程节点和流程跳转数据\",{\"0\":{\"104\":1,\"105\":1,\"690\":1,\"691\":1,\"876\":1,\"877\":1,\"1071\":1,\"1072\":1}}],[\"保存下一个节点办理人时\",{\"1\":{\"84\":1}}],[\"校验后新增\",{\"1\":{\"101\":1,\"102\":1,\"688\":1,\"874\":1,\"1068\":1,\"1069\":1}}],[\"校验节点是否发布\",{\"1\":{\"82\":1}}],[\"核心api\",{\"0\":{\"99\":1,\"334\":1,\"501\":1,\"686\":1,\"872\":1,\"1066\":1}}],[\"部署流程\",{\"0\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"部署方案二\",{\"0\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"部署方案一\",{\"0\":{\"215\":1,\"966\":1,\"1167\":1}}],[\"部署\",{\"0\":{\"213\":1,\"964\":1,\"1165\":1}}],[\"部门领导审批之类的\",{\"1\":{\"327\":1}}],[\"部门领导审批等\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"部门的主键重复\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"部门\",{\"1\":{\"208\":2,\"246\":1,\"418\":1,\"451\":1,\"588\":2,\"603\":1,\"636\":1,\"773\":2,\"788\":1,\"821\":1,\"959\":2,\"982\":1,\"1015\":1,\"1160\":2,\"1198\":1,\"1235\":1,\"1242\":1}}],[\"部门列表等\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"部门等\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"272\":1,\"349\":1,\"355\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1218\":1}}],[\"部门等权限配置\",{\"1\":{\"98\":1}}],[\"部分审批人审批通过\",{\"1\":{\"159\":1,\"273\":1}}],[\"部分功能可配置\",{\"1\":{\"89\":1}}],[\"功能增强\",{\"1\":{\"238\":1,\"412\":1,\"597\":1,\"782\":1,\"976\":1,\"1190\":1}}],[\"功能开发\",{\"1\":{\"98\":1}}],[\"功能演示\",{\"0\":{\"31\":1,\"435\":1,\"620\":1,\"805\":1,\"999\":1,\"1219\":1}}],[\"功能演示和源码浅读\",{\"1\":{\"23\":1}}],[\"或签待办权限支持个人\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"或签\",{\"0\":{\"161\":1},\"1\":{\"98\":1,\"159\":1,\"273\":2,\"451\":1,\"452\":1,\"636\":1,\"637\":1,\"821\":1,\"822\":1,\"1015\":1,\"1016\":1,\"1235\":1,\"1236\":1,\"1242\":1}}],[\"或者直接通过后端接口访问该地址\",{\"1\":{\"578\":1,\"1311\":1}}],[\"或者工具类获取service\",{\"1\":{\"431\":1,\"616\":1,\"801\":1,\"995\":1}}],[\"或者\",{\"1\":{\"274\":1,\"275\":1,\"446\":1,\"447\":1,\"631\":1,\"632\":1,\"816\":1,\"817\":1,\"1010\":1,\"1011\":1,\"1230\":1,\"1231\":1,\"1237\":1,\"1238\":1}}],[\"或者节点监听器\",{\"1\":{\"246\":1,\"247\":1,\"418\":1,\"419\":1,\"603\":1,\"604\":1,\"788\":1,\"789\":1,\"982\":1,\"983\":1,\"1198\":1,\"1199\":1}}],[\"或者src\",{\"1\":{\"215\":1,\"966\":1,\"1167\":1}}],[\"或者前端直接访问后端接口\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"或者优化页面配置\",{\"1\":{\"74\":1}}],[\"或者加上排除配置spring\",{\"1\":{\"63\":1}}],[\"或者做的过程中遇到了什么问题\",{\"1\":{\"8\":1}}],[\"或者是项目的功能异常\",{\"1\":{\"6\":1}}],[\"互斥网关按照跳转条件流转\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"互斥网关\",{\"1\":{\"98\":1}}],[\"互斥和并行网关\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"美化后台返回的流程图\",{\"1\":{\"95\":1}}],[\"解放军执行第一个任务\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"解析\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"解偶orm操作\",{\"1\":{\"96\":1}}],[\"解偶orm\",{\"1\":{\"94\":1}}],[\"解决\",{\"1\":{\"82\":1}}],[\"跳转名称\",{\"1\":{\"304\":1,\"479\":1,\"664\":1,\"850\":1,\"1044\":1,\"1268\":1}}],[\"跳转到指定节点\",{\"1\":{\"292\":1,\"468\":1,\"653\":1,\"839\":1,\"1033\":1,\"1256\":1,\"1297\":1,\"1347\":1}}],[\"跳转节点\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"跳转条件\",{\"1\":{\"274\":1,\"304\":1,\"446\":1,\"479\":1,\"631\":1,\"664\":1,\"816\":1,\"850\":1,\"1010\":1,\"1044\":1,\"1230\":1,\"1237\":1,\"1268\":1}}],[\"跳转条件获取方式变更为流程变量\",{\"1\":{\"92\":1}}],[\"跳转类型\",{\"1\":{\"36\":1,\"119\":1,\"126\":1,\"134\":1,\"274\":1,\"304\":1,\"349\":1,\"355\":1,\"363\":1,\"440\":1,\"446\":1,\"479\":1,\"517\":1,\"523\":1,\"531\":1,\"625\":1,\"631\":1,\"664\":1,\"703\":1,\"709\":1,\"717\":1,\"810\":1,\"816\":1,\"850\":1,\"889\":1,\"895\":1,\"903\":1,\"1004\":1,\"1010\":1,\"1044\":1,\"1084\":1,\"1091\":1,\"1099\":1,\"1224\":1,\"1230\":1,\"1237\":1,\"1268\":1}}],[\"补齐sql脚本\",{\"1\":{\"92\":1}}],[\"枚举扩展getbykey方法\",{\"1\":{\"89\":1}}],[\"改名为warm\",{\"1\":{\"215\":1,\"216\":1,\"966\":1,\"967\":1,\"1167\":1,\"1168\":1}}],[\"改造\",{\"0\":{\"211\":1,\"962\":1,\"1163\":1}}],[\"改用taskservice\",{\"1\":{\"89\":1}}],[\"改为只放行一个\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"改为跳转类型\",{\"1\":{\"82\":1}}],[\"改为通过mybatis\",{\"1\":{\"82\":1}}],[\"改为通过task表新增的form\",{\"1\":{\"82\":1}}],[\"改为有上层jar加载\",{\"1\":{\"81\":1}}],[\"改为匿名类\",{\"1\":{\"79\":1}}],[\"改为spi方式加载\",{\"1\":{\"79\":1}}],[\"改为vue\",{\"1\":{\"76\":1}}],[\"改为xxx\",{\"1\":{\"76\":2}}],[\"改为org\",{\"1\":{\"74\":1,\"76\":2}}],[\"考虑流程终止功能\",{\"1\":{\"88\":1}}],[\"启动流程时\",{\"1\":{\"87\":1}}],[\"工作流中的某个节点上\",{\"1\":{\"637\":1,\"822\":1}}],[\"工作流api中很多需要获取当前办理人id\",{\"1\":{\"270\":1,\"1216\":1}}],[\"工作流模块抽取为独立项目\",{\"1\":{\"98\":1}}],[\"工作经验4年\",{\"1\":{\"25\":1}}],[\"工作经验5年\",{\"1\":{\"25\":1}}],[\"工作经验6年\",{\"1\":{\"25\":1}}],[\"工作经验8年\",{\"1\":{\"25\":1}}],[\"工具包路径调整\",{\"1\":{\"85\":1}}],[\"任务总人数\",{\"1\":{\"451\":2,\"636\":2,\"821\":2,\"1015\":2,\"1235\":2,\"1242\":2}}],[\"任务表id\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"任务变量\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"任务变量就当前任务触发的监听器时可以获取\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"任务的需要分配执行人\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"任务的需要有先后顺序\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"任务开始\",{\"1\":{\"253\":1,\"1205\":1}}],[\"任务开始办理时执行\",{\"1\":{\"240\":1,\"245\":1,\"253\":1,\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1,\"1192\":1,\"1197\":1,\"1205\":1}}],[\"任务创建时执行\",{\"1\":{\"240\":1,\"245\":1,\"253\":1,\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1,\"1192\":1,\"1197\":1,\"1205\":1}}],[\"任务转给其他人办理\",{\"1\":{\"233\":1,\"273\":1,\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"任务转办给别人等\",{\"1\":{\"232\":1}}],[\"任务自动流转到创建人\",{\"1\":{\"88\":1}}],[\"任务审批通过\",{\"1\":{\"84\":1}}],[\"任意跳转\",{\"1\":{\"12\":1,\"273\":2,\"1016\":2,\"1236\":2,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"调整表名和字段名\",{\"1\":{\"98\":1}}],[\"调整实例类结构\",{\"1\":{\"89\":1}}],[\"调整mybatis\",{\"1\":{\"84\":1}}],[\"调整扩展包配置\",{\"1\":{\"84\":1}}],[\"调整条件\",{\"1\":{\"36\":1,\"440\":1,\"625\":1,\"810\":1,\"1004\":1,\"1224\":1}}],[\"依赖问题\",{\"1\":{\"82\":1}}],[\"依赖的groupid\",{\"1\":{\"74\":1,\"76\":1}}],[\"符号\",{\"1\":{\"82\":1}}],[\"处于非结束节点\",{\"1\":{\"82\":1}}],[\"处理完后进入下一节点\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"处理完后回到当前处理人手中\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"处理完成之后将处理结果抄送给其他人\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"处理器路径\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"处理器类型\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"处理\",{\"1\":{\"55\":1}}],[\"处理长度过长的long类型\",{\"0\":{\"55\":1}}],[\"完成时间\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"完成后进入下一节点\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"完成和创建时期执行\",{\"1\":{\"253\":1,\"1205\":1}}],[\"完成监听器结束\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"完成监听器实现类例子\",{\"0\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"完成监听器\",{\"1\":{\"240\":1,\"245\":1,\"253\":1,\"315\":1,\"413\":1,\"417\":1,\"490\":1,\"598\":1,\"602\":1,\"675\":1,\"783\":1,\"787\":1,\"861\":1,\"977\":1,\"981\":1,\"1055\":1,\"1192\":1,\"1197\":1,\"1205\":1,\"1279\":1}}],[\"完成社区发布的两项复杂任务\",{\"1\":{\"9\":1}}],[\"完善流程设计器和流程图\",{\"1\":{\"98\":1}}],[\"完善sql\",{\"1\":{\"93\":1}}],[\"完善文档\",{\"1\":{\"90\":1,\"92\":1}}],[\"完善mybatis\",{\"1\":{\"82\":1}}],[\"代理到后端需要vue\",{\"1\":{\"580\":1}}],[\"代理配置\",{\"0\":{\"579\":1}}],[\"代理成后端接口\",{\"1\":{\"578\":1,\"1311\":1}}],[\"代办改为待办\",{\"1\":{\"82\":1}}],[\"代码示例\",{\"0\":{\"235\":1,\"288\":1,\"464\":1,\"649\":1,\"835\":1,\"1029\":1,\"1252\":1}}],[\"代码风格相关无影响运行结果的\",{\"1\":{\"48\":1}}],[\"代码量少\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"代码地址\",{\"1\":{\"2\":1}}],[\"移除节点前置执行权限处理器\",{\"1\":{\"82\":1}}],[\"移除权限监听器\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"全局配置\",{\"1\":{\"264\":1,\"429\":1,\"614\":1,\"799\":1,\"993\":1,\"1210\":1}}],[\"全局创建监听器执行结束\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局创建监听器开始执行\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局完成监听器执行结束\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局完成监听器开始执行\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局分派监听器执行结束\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局分派监听器开始执行\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局开始监听器执行结束\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局开始监听器开始执行\",{\"1\":{\"253\":1,\"1205\":1}}],[\"全局监听器\",{\"0\":{\"253\":1,\"1205\":1},\"1\":{\"239\":2,\"253\":2,\"1191\":2,\"1205\":2}}],[\"全局租户处理器\",{\"1\":{\"176\":1,\"177\":2,\"179\":1,\"180\":1,\"312\":1,\"313\":1,\"314\":1,\"389\":1,\"390\":2,\"392\":1,\"393\":1,\"487\":1,\"488\":1,\"489\":1,\"557\":1,\"558\":2,\"560\":1,\"561\":1,\"672\":1,\"673\":1,\"674\":1,\"743\":1,\"744\":2,\"746\":1,\"747\":1,\"858\":1,\"859\":1,\"860\":1,\"929\":1,\"930\":2,\"932\":1,\"933\":1,\"1052\":1,\"1053\":1,\"1054\":1,\"1128\":1,\"1129\":2,\"1131\":1,\"1132\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"全局搜索org\",{\"1\":{\"74\":1}}],[\"全部提供可接受外部传入\",{\"1\":{\"82\":1}}],[\"之前所有保存流程状态地方\",{\"1\":{\"82\":1}}],[\"之前强依赖流程状态的通过的\",{\"1\":{\"82\":1}}],[\"疯狂的狮子li\",{\"1\":{\"82\":1}}],[\"记录跳转类型\",{\"1\":{\"82\":1}}],[\"记录待办任务需要显示的待办信息页面\",{\"1\":{\"33\":1,\"437\":1,\"622\":1,\"807\":1,\"1001\":1,\"1221\":1}}],[\"反显审批流程表单\",{\"1\":{\"82\":1}}],[\"涉及到这两个字段的前后段都要修改\",{\"1\":{\"82\":1}}],[\"测试代码warm\",{\"1\":{\"464\":1,\"649\":1}}],[\"测试模块拆分独立仓库\",{\"1\":{\"81\":1}}],[\"测试检测平台\",{\"1\":{\"2\":1}}],[\"历史任务记录表\",{\"1\":{\"298\":1,\"473\":1,\"658\":1,\"844\":1,\"1038\":1,\"1262\":1}}],[\"历史任务表\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"历史任务表状态\",{\"1\":{\"181\":1,\"394\":1,\"562\":1,\"748\":1,\"934\":1,\"1133\":1}}],[\"历史任务表流程状态支持外部传入\",{\"1\":{\"80\":1}}],[\"历史记录状态为审批通过\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"历史记录状态无效\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"历史记录表新增ext扩展字段\",{\"1\":{\"84\":1}}],[\"历史记录改为单条保存\",{\"1\":{\"79\":1}}],[\"历史数据考虑如何处理\",{\"1\":{\"82\":1}}],[\"历史表新增跳转类型\",{\"1\":{\"82\":1}}],[\"并由当前处理人处理完后进入下一节点\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"并在该文件夹下新建文件com\",{\"1\":{\"411\":1,\"596\":1}}],[\"并在该文件夹下新建文件org\",{\"1\":{\"237\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"并通过spi机制加载\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"并实现strtomap和maptostr方法\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"并快速接入业务系统\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"并继承datafillhandler\",{\"0\":{\"186\":1,\"399\":1,\"567\":1,\"753\":1,\"939\":1,\"1138\":1}}],[\"并初始化流程节点和流程跳转数据\",{\"0\":{\"102\":1,\"1069\":1}}],[\"并行网关范围内还存在待办任务未完成\",{\"1\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"并行网关规则\",{\"0\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"并行网关返回多个节点\",{\"1\":{\"134\":2,\"363\":2,\"531\":2,\"717\":2,\"903\":2,\"1099\":2}}],[\"并行网关\",{\"1\":{\"98\":1}}],[\"并行网关三个任务分支的时候\",{\"1\":{\"81\":1}}],[\"并支持扩展\",{\"1\":{\"79\":1}}],[\"并且通过这个方法进行注册variableutil\",{\"1\":{\"500\":1,\"685\":1,\"871\":1,\"1065\":1}}],[\"并且通过这个方法进行注册expressionutil\",{\"1\":{\"407\":1,\"592\":1,\"777\":1,\"971\":1,\"1172\":1}}],[\"并且两个字段对应\",{\"1\":{\"241\":1,\"1193\":1}}],[\"并且保持事务与业务系统一致\",{\"1\":{\"98\":1}}],[\"并且流程表的逻辑删除字段都更新为0\",{\"1\":{\"82\":1}}],[\"并且目前只实现了这四种\",{\"1\":{\"79\":1}}],[\"并且按照官网流程设计器引入进行设置\",{\"1\":{\"75\":1}}],[\"并且支持扩展\",{\"1\":{\"74\":1,\"79\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"并且支持自定义扩展\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"替换集合\",{\"1\":{\"317\":1,\"1281\":1}}],[\"替换异常类\",{\"1\":{\"82\":1}}],[\"替换和spel\",{\"1\":{\"79\":1}}],[\"替换为org\",{\"1\":{\"74\":1}}],[\"原生提供分页查询\",{\"1\":{\"98\":1}}],[\"原生提供排序\",{\"1\":{\"98\":1}}],[\"原本的我发起\",{\"1\":{\"82\":1}}],[\"原组件使用snack3库\",{\"1\":{\"79\":1}}],[\"原全局监听器改名为流程监听器\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"业务中\",{\"1\":{\"316\":1,\"1280\":1}}],[\"业务id\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"业务详情\",{\"1\":{\"300\":1,\"301\":1,\"475\":1,\"476\":1,\"660\":1,\"661\":1,\"846\":1,\"847\":1,\"1040\":1,\"1041\":1,\"1264\":1,\"1265\":1}}],[\"业务表新增或者更新操作\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"业务系统机构\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"业务系统数据\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"业务系统需要对应修改\",{\"1\":{\"81\":1}}],[\"业务项目中存在哪种json就会使用哪种的实现\",{\"1\":{\"79\":1}}],[\"业务流程优化\",{\"1\":{\"14\":1}}],[\"取消发布流程定义\",{\"1\":{\"110\":1,\"342\":1,\"510\":1,\"696\":1,\"882\":1,\"1077\":1}}],[\"取消发布\",{\"0\":{\"110\":1,\"342\":1,\"510\":1,\"696\":1,\"882\":1,\"1077\":1}}],[\"取更新时间\",{\"1\":{\"77\":1}}],[\"取回重办\",{\"1\":{\"452\":1}}],[\"取回\",{\"1\":{\"72\":1,\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"获取变量替换类型\",{\"1\":{\"500\":1,\"685\":1,\"871\":1,\"1065\":1}}],[\"获取表字段\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"获取当前操作用户所有权限\",{\"1\":{\"272\":1,\"1218\":1}}],[\"获取当前办理人\",{\"1\":{\"271\":1,\"272\":1,\"1217\":1,\"1218\":1}}],[\"获取组件中的mapper\",{\"1\":{\"267\":1,\"269\":1,\"432\":1,\"434\":1,\"617\":1,\"619\":1,\"802\":1,\"804\":1,\"996\":1,\"998\":1,\"1213\":1,\"1215\":1}}],[\"获取角色列表\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"获取用户列表\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"获取办理人权限设置列表结果\",{\"1\":{\"207\":1,\"587\":1,\"772\":1,\"958\":1,\"1159\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"获取办理人权限设置列表tabs页签\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"获取办理人权限设置列表接口实现类\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"获取办理人权限设置列表接口\",{\"1\":{\"207\":1,\"587\":1,\"772\":1,\"958\":1,\"1159\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"获取策略类型\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"获取总数量\",{\"0\":{\"142\":1,\"371\":1,\"539\":1,\"725\":1,\"911\":1,\"1107\":1},\"1\":{\"142\":1,\"371\":1,\"539\":1,\"725\":1,\"911\":1,\"1107\":1}}],[\"获取下一个节点列表\",{\"0\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"获取流程图的图片流\",{\"1\":{\"112\":1,\"344\":1,\"512\":1,\"698\":1,\"884\":1,\"1079\":1}}],[\"获取流程图\",{\"0\":{\"112\":1,\"344\":1,\"512\":1,\"698\":1,\"884\":1,\"1079\":1}}],[\"获取流程定义全部数据\",{\"1\":{\"115\":1}}],[\"获取流程定义xml的字符串\",{\"1\":{\"339\":1,\"507\":1}}],[\"获取流程定义xml\",{\"1\":{\"107\":1,\"693\":1,\"879\":1,\"1074\":1}}],[\"获取流程定义\",{\"0\":{\"107\":1,\"115\":1,\"339\":1,\"507\":1,\"693\":1,\"879\":1,\"1074\":1}}],[\"获取流程变量的map类型\",{\"1\":{\"77\":1}}],[\"获取可找作者定制化开发\",{\"1\":{\"13\":1}}],[\"撤销\",{\"1\":{\"452\":1,\"637\":1,\"822\":1}}],[\"撤销和取回\",{\"1\":{\"76\":1}}],[\"撤销修改\",{\"1\":{\"48\":1}}],[\"作废\",{\"1\":{\"76\":1}}],[\"作者\",{\"1\":{\"41\":1}}],[\"作者提供作者私人服务\",{\"1\":{\"28\":1}}],[\"作者声明等\",{\"1\":{\"13\":1}}],[\"作者会关注到\",{\"1\":{\"9\":2}}],[\"作者会经常在issue里发布需求认领\",{\"1\":{\"8\":1}}],[\"作者每天都在盯着star\",{\"1\":{\"5\":1}}],[\"+\",{\"1\":{\"76\":1,\"173\":2,\"200\":3,\"201\":1,\"203\":5,\"208\":2,\"229\":2,\"246\":2,\"272\":2,\"289\":1,\"291\":1,\"292\":3,\"418\":2,\"465\":1,\"467\":1,\"468\":3,\"500\":2,\"580\":2,\"583\":5,\"588\":2,\"603\":2,\"650\":1,\"652\":1,\"653\":3,\"685\":2,\"765\":3,\"766\":1,\"768\":5,\"773\":2,\"788\":2,\"836\":1,\"838\":1,\"839\":3,\"871\":2,\"951\":3,\"952\":1,\"954\":5,\"959\":2,\"982\":2,\"1030\":1,\"1032\":1,\"1033\":3,\"1065\":2,\"1152\":3,\"1153\":1,\"1155\":5,\"1160\":2,\"1185\":2,\"1198\":2,\"1218\":2,\"1253\":1,\"1255\":1,\"1256\":3,\"1294\":1,\"1296\":1,\"1297\":2,\"1344\":1,\"1346\":1,\"1347\":2}}],[\"+vue3\",{\"1\":{\"41\":1}}],[\"$前缀表示默认办理人变量策略\",{\"1\":{\"318\":1,\"1282\":1}}],[\"$proxy\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"$remote\",{\"1\":{\"216\":2,\"967\":2,\"1168\":2}}],[\"$http\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"$uri\",{\"1\":{\"216\":2,\"967\":2,\"1168\":2}}],[\"$tab\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"$\",{\"1\":{\"76\":1,\"203\":1,\"222\":3,\"310\":1,\"317\":2,\"318\":1,\"322\":1,\"333\":3,\"485\":1,\"500\":1,\"578\":1,\"580\":1,\"581\":1,\"583\":1,\"670\":1,\"685\":1,\"768\":1,\"856\":1,\"871\":1,\"954\":1,\"1050\":1,\"1065\":1,\"1155\":1,\"1178\":3,\"1274\":1,\"1281\":2,\"1282\":1,\"1286\":1,\"1311\":1}}],[\"y是\",{\"1\":{\"300\":1,\"301\":1,\"303\":2,\"305\":1,\"475\":1,\"476\":1,\"478\":2,\"480\":1,\"660\":1,\"661\":1,\"663\":2,\"665\":1,\"846\":1,\"847\":1,\"849\":2,\"851\":1,\"1040\":1,\"1041\":1,\"1043\":2,\"1045\":1,\"1264\":1,\"1265\":1,\"1267\":2,\"1269\":1}}],[\"yaml配置方式\",{\"0\":{\"176\":1,\"179\":1,\"189\":1,\"312\":1,\"389\":1,\"392\":1,\"402\":1,\"487\":1,\"557\":1,\"560\":1,\"570\":1,\"672\":1,\"743\":1,\"746\":1,\"756\":1,\"858\":1,\"929\":1,\"932\":1,\"942\":1,\"1052\":1,\"1128\":1,\"1131\":1,\"1141\":1,\"1276\":1}}],[\"yml中配置warm\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"yml中配置mybatis改为mybatis\",{\"1\":{\"64\":1}}],[\"yml控制开关\",{\"1\":{\"82\":1}}],[\"yyyy\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"yyy\",{\"1\":{\"76\":4}}],[\"统一修复分页bug\",{\"1\":{\"75\":2}}],[\"没有左侧树状选择数据时\",{\"1\":{\"75\":1}}],[\"比如80\",{\"1\":{\"578\":1,\"1311\":1}}],[\"比如b\",{\"1\":{\"320\":1,\"493\":1,\"678\":1,\"864\":1,\"1058\":1,\"1284\":1}}],[\"比如最后注入spel策略\",{\"1\":{\"319\":1,\"1283\":1}}],[\"比如xx\",{\"1\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"比如创建任务前需要初始化信息或者校验数据是否合法\",{\"1\":{\"249\":1,\"421\":1,\"606\":1,\"791\":1,\"985\":1,\"1201\":1}}],[\"比如发起人审批\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"比如角色\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"比如增加办理人\",{\"1\":{\"232\":1}}],[\"比如jpa\",{\"1\":{\"179\":1,\"265\":1,\"392\":1,\"430\":1,\"560\":1,\"615\":1,\"746\":1,\"800\":1,\"932\":1,\"994\":1,\"1131\":1,\"1211\":1}}],[\"比如\",{\"1\":{\"168\":1,\"218\":1,\"241\":1,\"256\":1,\"274\":1,\"279\":2,\"322\":1,\"325\":1,\"329\":1,\"446\":1,\"453\":2,\"495\":1,\"498\":1,\"631\":1,\"638\":2,\"680\":1,\"683\":1,\"816\":1,\"823\":2,\"866\":1,\"869\":1,\"1010\":1,\"1017\":2,\"1060\":1,\"1063\":1,\"1174\":1,\"1193\":1,\"1230\":1,\"1237\":1,\"1243\":2,\"1286\":1,\"1289\":1}}],[\"比如用户\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"272\":1,\"349\":1,\"355\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1218\":1}}],[\"比如流程图渲染\",{\"0\":{\"116\":1},\"1\":{\"116\":1}}],[\"比如token\",{\"1\":{\"75\":1}}],[\"比如spring\",{\"1\":{\"63\":1}}],[\"已回退人数\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"已审批人数\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"已开启的流程实例id\",{\"1\":{\"291\":1,\"467\":1,\"652\":1,\"838\":1,\"1032\":1,\"1255\":1,\"1296\":1,\"1346\":1}}],[\"已部署流程的id\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"已完成\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"已办任务和任务记录\",{\"1\":{\"98\":1}}],[\"已挪到业务系统中\",{\"1\":{\"89\":1}}],[\"已经开启过审批任务的不可取消发布和删除\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"已申请软著\",{\"1\":{\"13\":1}}],[\"局部监听器改名为节点监听器\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"类的属性一一对应\",{\"1\":{\"264\":1,\"429\":1,\"614\":1,\"799\":1,\"993\":1,\"1210\":1}}],[\"类型的\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"类型\",{\"1\":{\"168\":2,\"218\":2,\"256\":2,\"329\":2,\"1174\":2}}],[\"类中配置增加类型接口\",{\"1\":{\"74\":1}}],[\"类似satoken方式\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"查看的时候不可编辑\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"查看跳转线退回的\",{\"1\":{\"67\":1}}],[\"查询用户列表\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"查询部门列表\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"查询角色列表\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"查询条件\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"查询参数\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"查询一条记录\",{\"0\":{\"141\":1,\"370\":1,\"538\":1,\"724\":1,\"910\":1,\"1106\":1},\"1\":{\"141\":1,\"370\":1,\"538\":1,\"724\":1,\"910\":1,\"1106\":1}}],[\"查询代理层处理\",{\"1\":{\"140\":1,\"369\":1,\"537\":1,\"723\":1,\"909\":1,\"1105\":1}}],[\"查询列表\",{\"0\":{\"139\":1,\"140\":1,\"368\":1,\"369\":1,\"536\":1,\"537\":1,\"722\":1,\"723\":1,\"908\":1,\"909\":1,\"1104\":1,\"1105\":1},\"1\":{\"139\":1,\"140\":1,\"368\":1,\"369\":1,\"536\":1,\"537\":1,\"722\":1,\"723\":1,\"908\":1,\"909\":1,\"1104\":1,\"1105\":1}}],[\"查询实体\",{\"1\":{\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"367\":1,\"368\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"721\":1,\"722\":1,\"723\":1,\"724\":1,\"725\":1,\"726\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"912\":1,\"1103\":1,\"1104\":1,\"1105\":1,\"1106\":1,\"1107\":1,\"1108\":1}}],[\"查询流程实例集合\",{\"0\":{\"124\":1,\"1089\":1},\"1\":{\"124\":1,\"1089\":1}}],[\"查询流程实例集合api\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"查询流程设计所需的数据\",{\"0\":{\"116\":1},\"1\":{\"116\":1}}],[\"查询方式需要改动\",{\"1\":{\"85\":1}}],[\"设计原理采取不分离的方式\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"设计器页面入口地址为\",{\"1\":{\"578\":1,\"1311\":1}}],[\"设计器页面入口是访问后端地址\",{\"1\":{\"199\":1,\"764\":1,\"950\":1,\"1151\":1,\"1322\":1,\"1333\":1}}],[\"设计器不分离部署\",{\"0\":{\"215\":1,\"966\":1,\"1167\":1}}],[\"设计器需要配置业务系统的代理地址\",{\"1\":{\"212\":1,\"963\":1,\"1164\":1}}],[\"设计器配置该接口地址\",{\"1\":{\"211\":1,\"962\":1,\"1163\":1}}],[\"设计器二开\",{\"0\":{\"210\":1,\"961\":1,\"1162\":1}}],[\"设计器办理人权限数据接入\",{\"0\":{\"204\":1,\"584\":1,\"769\":1,\"955\":1,\"1156\":1,\"1312\":1,\"1323\":1,\"1334\":1}}],[\"设计器独立部署\",{\"0\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"设计器独立\",{\"1\":{\"77\":1}}],[\"设计器后端放行地址\",{\"1\":{\"76\":1}}],[\"设计器引入优化\",{\"1\":{\"76\":1}}],[\"设计器引入\",{\"0\":{\"191\":1,\"293\":1,\"572\":1,\"758\":1,\"834\":1,\"944\":1,\"1028\":1,\"1143\":1,\"1257\":1,\"1298\":1,\"1348\":1},\"1\":{\"74\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"设置办理人所拥有的权限\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"设置办理人id\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"设置当前办理人id\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"设置节点表的listener\",{\"1\":{\"241\":1,\"1193\":1}}],[\"设置表达式\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"设置新增的表达式\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"设置倒序排列\",{\"0\":{\"156\":1,\"385\":1,\"553\":1,\"739\":1,\"925\":1,\"1121\":1},\"1\":{\"156\":1,\"385\":1,\"553\":1,\"739\":1,\"925\":1,\"1121\":1}}],[\"设置正序排列\",{\"0\":{\"155\":1,\"384\":1,\"552\":1,\"738\":1,\"924\":1,\"1120\":1},\"1\":{\"155\":1,\"384\":1,\"552\":1,\"738\":1,\"924\":1,\"1120\":1}}],[\"设置开始节点\",{\"1\":{\"82\":1}}],[\"设置最大单页限制数量\",{\"1\":{\"64\":1}}],[\"设置数据库类型为mysql\",{\"1\":{\"64\":1}}],[\"设置创建类的模板\",{\"0\":{\"47\":1}}],[\"针对整个系统\",{\"1\":{\"74\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"针对所有属性\",{\"1\":{\"55\":1}}],[\"增加默认选项比如发起人\",{\"1\":{\"327\":1}}],[\"增加办理人\",{\"1\":{\"130\":1,\"132\":1,\"357\":1,\"358\":1,\"359\":2,\"360\":1,\"361\":1,\"525\":1,\"526\":1,\"527\":2,\"528\":1,\"529\":1,\"713\":1,\"715\":1,\"899\":1,\"901\":1,\"1095\":1,\"1097\":1}}],[\"增加办理人变量表达式\",{\"1\":{\"79\":1}}],[\"增加监听器\",{\"1\":{\"94\":1}}],[\"增加全局变量\",{\"1\":{\"94\":1}}],[\"增加全局监听器\",{\"1\":{\"74\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"增加软删除可以配置化\",{\"1\":{\"86\":1}}],[\"增加组件加载\",{\"1\":{\"82\":1}}],[\"增加基于流程定义id获取流程图\",{\"1\":{\"81\":1}}],[\"增加获取下个节点集合api\",{\"1\":{\"81\":1}}],[\"增加参数合法性校验\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"增加新功能\",{\"1\":{\"48\":1}}],[\"然后执行流程监听器\",{\"1\":{\"414\":1,\"599\":1,\"784\":1,\"978\":1}}],[\"然后再去尝试加载类路径\",{\"1\":{\"242\":1,\"1194\":1}}],[\"然后参照他的意见决定是否审批通过\",{\"1\":{\"233\":1,\"273\":1,\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"然后在进行执行\",{\"1\":{\"168\":2,\"218\":2,\"256\":2,\"329\":2,\"1174\":2}}],[\"然后检查是否正确\",{\"1\":{\"74\":1}}],[\"然后按回车会自动生成\",{\"1\":{\"47\":1}}],[\"接口使用方式不一致\",{\"1\":{\"431\":1,\"616\":1,\"801\":1,\"995\":1}}],[\"接口\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"接口描述地址\",{\"1\":{\"234\":1}}],[\"接口描述\",{\"0\":{\"234\":1}}],[\"接口或者抽象类前缀由expressionstrategy改为\",{\"1\":{\"74\":1}}],[\"接入监听器\",{\"1\":{\"76\":1}}],[\"接入仿钉钉设计器\",{\"1\":{\"72\":1}}],[\"区分\",{\"1\":{\"74\":2,\"1304\":1,\"1354\":1}}],[\"无其他协作方式\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"无\",{\"1\":{\"72\":1,\"78\":1,\"80\":1,\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"升级dom4j为安全版本2\",{\"1\":{\"82\":1}}],[\"升级指南\",{\"1\":{\"72\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1}}],[\"升级版本\",{\"1\":{\"48\":1}}],[\"包含\",{\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"包含节点和跳转\",{\"1\":{\"115\":1}}],[\"包名2\",{\"1\":{\"241\":1,\"1193\":1}}],[\"包名\",{\"1\":{\"76\":1}}],[\"包容网关\",{\"1\":{\"70\":1}}],[\"包括但不限于\",{\"1\":{\"28\":1}}],[\"适配国产数据库\",{\"1\":{\"70\":1}}],[\"适用于多种应用场景\",{\"1\":{\"14\":1}}],[\"会有什么影响\",{\"1\":{\"70\":1}}],[\"会签就是指在流程管理中发起人可以同时对多个人发起会签\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"会签所有待办权限只支持个人类型\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"会签中任意一待办人进行\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"会签票签\",{\"1\":{\"84\":1}}],[\"会签节点委派\",{\"1\":{\"75\":1}}],[\"会签和票签通过率策略\",{\"1\":{\"70\":1}}],[\"会签\",{\"0\":{\"163\":1},\"1\":{\"12\":1,\"35\":1,\"79\":1,\"84\":1,\"85\":1,\"98\":1,\"158\":1,\"159\":1,\"273\":1,\"274\":1,\"439\":1,\"446\":1,\"451\":1,\"452\":1,\"624\":1,\"631\":1,\"636\":1,\"637\":1,\"809\":1,\"816\":1,\"821\":1,\"822\":1,\"1003\":1,\"1010\":1,\"1015\":1,\"1016\":1,\"1223\":1,\"1230\":1,\"1235\":1,\"1236\":1,\"1237\":1,\"1242\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"把它转历史记录\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"把打包后的文件dist复制到nginx的html目录下\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"把打包后的文件dist复制到业务系统src\",{\"1\":{\"215\":1,\"966\":1,\"1167\":1}}],[\"把设计器打包的jar包中\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"把不能退回到开始节点去掉\",{\"1\":{\"70\":1}}],[\"把研究心得以视频的形式发在b站了\",{\"1\":{\"23\":1}}],[\"未完成过任务\",{\"1\":{\"82\":2}}],[\"未删除办理人信息\",{\"1\":{\"75\":1}}],[\"未来发布计划\",{\"0\":{\"69\":1}}],[\"未加载\",{\"0\":{\"62\":1},\"1\":{\"62\":1}}],[\"错误结束流程的问题\",{\"1\":{\"81\":1}}],[\"错误\",{\"0\":{\"67\":1}}],[\"导出流程定义xml的document对象\",{\"1\":{\"338\":1,\"506\":1}}],[\"导出流程定义\",{\"0\":{\"106\":1,\"116\":1,\"338\":1,\"506\":1,\"692\":1,\"878\":1,\"1073\":1},\"1\":{\"106\":1,\"116\":1,\"692\":1,\"878\":1,\"1073\":1}}],[\"导入sql\",{\"0\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"导入流程定义xml的输入流is\",{\"1\":{\"336\":1,\"503\":1}}],[\"导入流程定义xml的输入流\",{\"1\":{\"103\":1,\"689\":1,\"875\":1,\"1070\":1}}],[\"导入流程定义\",{\"0\":{\"103\":1,\"336\":1,\"503\":1,\"875\":1,\"1070\":1}}],[\"导入依赖包失败\",{\"0\":{\"65\":1}}],[\"导致流程图渲染异常\",{\"1\":{\"79\":1}}],[\"导致flowautoconfig\",{\"1\":{\"62\":1}}],[\"条\",{\"1\":{\"64\":1}}],[\"条件表达式等于\",{\"1\":{\"173\":1,\"229\":1,\"1185\":1}}],[\"条件表达式实现类\",{\"0\":{\"173\":1,\"229\":1,\"1185\":1}}],[\"条件表达式抽象类\",{\"0\":{\"172\":1,\"228\":1,\"1184\":1},\"1\":{\"172\":1,\"228\":1,\"1184\":1}}],[\"条件表达式策略实现类map\",{\"1\":{\"171\":1,\"227\":1,\"1183\":1}}],[\"条件表达式接口\",{\"0\":{\"171\":1,\"227\":1,\"1183\":1},\"1\":{\"171\":1,\"227\":1,\"1183\":1}}],[\"条件表达式扩展\",{\"0\":{\"167\":1}}],[\"条件表达式\",{\"0\":{\"164\":1,\"170\":1,\"226\":1,\"404\":1,\"589\":1,\"774\":1,\"968\":1,\"1123\":1,\"1169\":1,\"1182\":1},\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"默认按照注入策略顺序\",{\"1\":{\"319\":1,\"1283\":1}}],[\"默认办理人变量策略\",{\"0\":{\"321\":1,\"494\":1,\"679\":1,\"865\":1,\"1059\":1,\"1285\":1},\"1\":{\"318\":1,\"492\":1,\"677\":1,\"863\":1,\"1057\":1,\"1282\":1}}],[\"默认办理人变量表达式策略\",{\"1\":{\"222\":1,\"333\":1,\"500\":1,\"685\":1,\"871\":1,\"1065\":1,\"1178\":1}}],[\"默认值\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"默认逻辑未删除值\",{\"1\":{\"262\":1,\"427\":1,\"612\":1,\"797\":1,\"991\":1,\"1208\":1}}],[\"默认开启\",{\"1\":{\"262\":1,\"427\":1,\"612\":1,\"797\":1,\"991\":1,\"1208\":1}}],[\"默认先判断是否是监听器表达式\",{\"1\":{\"242\":1,\"1194\":1}}],[\"默认支持内置spel表达式\",{\"1\":{\"241\":1,\"1193\":1}}],[\"默认为mysql\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"默认authorization\",{\"1\":{\"176\":1,\"209\":1,\"929\":1,\"960\":1,\"1128\":1,\"1161\":1}}],[\"默认是\",{\"1\":{\"176\":1,\"179\":1,\"389\":1,\"392\":1,\"557\":1,\"560\":1,\"743\":1,\"746\":1,\"929\":1,\"932\":1,\"1128\":1,\"1131\":1}}],[\"默认true\",{\"1\":{\"176\":2,\"389\":1,\"557\":2,\"743\":2,\"929\":2,\"1128\":2}}],[\"默认不截取\",{\"1\":{\"168\":2,\"218\":2,\"256\":2,\"329\":2,\"1174\":2}}],[\"默认不忽略\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1}}],[\"默认删除当然办理用户权限\",{\"1\":{\"128\":1,\"129\":1,\"357\":1,\"358\":1,\"525\":1,\"526\":1,\"711\":1,\"712\":1,\"897\":1,\"898\":1,\"1093\":1,\"1094\":1}}],[\"默认初始化节点\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"默认\",{\"1\":{\"64\":1}}],[\"阻断插件\",{\"1\":{\"64\":1}}],[\"乐观锁插件\",{\"1\":{\"64\":2}}],[\"分割不同监听器\",{\"1\":{\"423\":1,\"608\":1,\"793\":1,\"987\":1}}],[\"分派\",{\"1\":{\"253\":1,\"1205\":1}}],[\"分派监听器执行结束\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"分派监听器开始执行\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"分派监听器实现类例子\",{\"0\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"分派监听器\",{\"1\":{\"245\":1,\"253\":1,\"417\":1,\"602\":1,\"787\":1,\"981\":1,\"1197\":1,\"1205\":1}}],[\"分派办理人监听器\",{\"1\":{\"240\":1,\"413\":1,\"598\":1,\"783\":1,\"977\":1,\"1192\":1}}],[\"分隔\",{\"1\":{\"241\":1,\"1193\":1}}],[\"分离部署\",{\"0\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"分页对象\",{\"1\":{\"138\":1,\"367\":1,\"535\":1,\"721\":1,\"907\":1,\"1103\":1}}],[\"分页查询\",{\"0\":{\"138\":1,\"367\":1,\"535\":1,\"721\":1,\"907\":1,\"1103\":1},\"1\":{\"138\":1,\"367\":1,\"535\":1,\"721\":1,\"907\":1,\"1103\":1}}],[\"分页插件\",{\"1\":{\"64\":2}}],[\"分发源码时候\",{\"1\":{\"13\":1}}],[\"点击查看代码\",{\"1\":{\"64\":1}}],[\"点击待办时候获取这个路径\",{\"1\":{\"33\":1,\"437\":1,\"622\":1,\"807\":1,\"1001\":1,\"1221\":1}}],[\"根pom\",{\"1\":{\"64\":1}}],[\"根据跳转条件\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"根据entity删除\",{\"0\":{\"147\":1,\"376\":1,\"544\":1,\"730\":1,\"916\":1,\"1112\":1},\"1\":{\"147\":1,\"376\":1,\"544\":1,\"730\":1,\"916\":1,\"1112\":1}}],[\"根据ids批量删除\",{\"0\":{\"148\":1,\"377\":1,\"545\":1,\"731\":1,\"917\":1,\"1113\":1},\"1\":{\"148\":1,\"377\":1,\"545\":1,\"731\":1,\"917\":1,\"1113\":1}}],[\"根据ids主键集合查询\",{\"0\":{\"137\":1,\"366\":1,\"534\":1,\"720\":1,\"906\":1,\"1102\":1},\"1\":{\"137\":1,\"366\":1,\"534\":1,\"720\":1,\"906\":1,\"1102\":1}}],[\"根据id删除\",{\"0\":{\"146\":1,\"375\":1,\"543\":1,\"729\":1,\"915\":1,\"1111\":1},\"1\":{\"146\":1,\"375\":1,\"543\":1,\"729\":1,\"915\":1,\"1111\":1}}],[\"根据id修改\",{\"0\":{\"145\":1,\"374\":1,\"542\":1,\"728\":1,\"914\":1,\"1110\":1},\"1\":{\"145\":1,\"374\":1,\"542\":1,\"728\":1,\"914\":1,\"1110\":1}}],[\"根据id查询\",{\"0\":{\"136\":1,\"365\":1,\"533\":1,\"719\":1,\"905\":1,\"1101\":1},\"1\":{\"136\":1,\"365\":1,\"533\":1,\"719\":1,\"905\":1,\"1101\":1}}],[\"根据流程定义和当前节点code获取下一节点\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"根据流程定义id集合\",{\"0\":{\"124\":1,\"1089\":1},\"1\":{\"124\":1,\"1089\":1}}],[\"根据实例ids\",{\"1\":{\"121\":1,\"351\":1,\"519\":1,\"705\":1,\"891\":1,\"1086\":1}}],[\"根据\",{\"1\":{\"55\":1}}],[\"检查是否使用热部署插件\",{\"1\":{\"63\":1}}],[\"删除标志\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"删除流程\",{\"1\":{\"121\":1,\"351\":1,\"519\":1,\"705\":1,\"891\":1,\"1086\":1}}],[\"删除流程实例\",{\"0\":{\"121\":1,\"351\":1,\"519\":1,\"705\":1,\"891\":1,\"1086\":1}}],[\"删除流程定义相关数据\",{\"1\":{\"108\":1,\"340\":1,\"508\":1,\"694\":1,\"880\":1,\"1075\":1}}],[\"删除多余的字段和代码\",{\"1\":{\"92\":1}}],[\"删除监听器自定义参数\",{\"1\":{\"84\":1}}],[\"删除不必要的\",{\"1\":{\"82\":1}}],[\"删除cooperateautopass方法\",{\"1\":{\"82\":1}}],[\"删除flowconfigutil多余的代码\",{\"1\":{\"82\":1}}],[\"删除校验是否任意跳转\",{\"1\":{\"82\":1}}],[\"删除数据填充默认实现类\",{\"1\":{\"79\":1}}],[\"删除重复代码\",{\"1\":{\"79\":1}}],[\"删除策略前缀\",{\"1\":{\"74\":2,\"1304\":1,\"1354\":1}}],[\"删除\",{\"0\":{\"108\":1,\"340\":1,\"508\":1,\"694\":1,\"880\":1,\"1075\":1},\"1\":{\"62\":1,\"76\":2}}],[\"星\",{\"1\":{\"62\":1}}],[\"格调\",{\"1\":{\"61\":1}}],[\"xiaoxiaoliu889\",{\"1\":{\"81\":4,\"82\":1}}],[\"xiarigang\",{\"1\":{\"72\":2,\"75\":1,\"79\":1,\"81\":2,\"82\":1,\"84\":1}}],[\"xml的document对象\",{\"1\":{\"106\":1,\"692\":1,\"878\":1,\"1073\":1}}],[\"xmlstring\",{\"1\":{\"104\":1,\"105\":2,\"107\":1,\"339\":1,\"504\":1,\"505\":2,\"507\":1,\"690\":1,\"691\":2,\"693\":1,\"876\":1,\"877\":2,\"879\":1,\"1071\":1,\"1072\":2,\"1074\":1}}],[\"xml中updatelogic的某个负值错误\",{\"1\":{\"84\":1}}],[\"xml加载\",{\"1\":{\"84\":1}}],[\"xml\",{\"1\":{\"64\":2,\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"x中dockerfile为例\",{\"1\":{\"61\":1}}],[\"x\",{\"0\":{\"70\":2},\"1\":{\"60\":2,\"216\":3,\"280\":3,\"454\":3,\"639\":3,\"824\":3,\"967\":3,\"1018\":3,\"1168\":3,\"1244\":3}}],[\"xr\",{\"1\":{\"60\":2}}],[\"xxx为表达式策略\",{\"1\":{\"166\":1,\"1125\":1}}],[\"xxx\",{\"1\":{\"79\":1,\"166\":2,\"288\":1,\"464\":1,\"649\":1,\"677\":1,\"835\":1,\"863\":1,\"1029\":1,\"1057\":1,\"1125\":2,\"1252\":1}}],[\"xx单位综合信息服务系统\",{\"1\":{\"2\":1}}],[\"xx自来水股份有限公司\",{\"1\":{\"2\":1}}],[\"我们假定您已经\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"我们好像在哪儿见过\",{\"1\":{\"60\":1}}],[\"我们程序员都不擅长写作\",{\"1\":{\"7\":1}}],[\"添加中文字体即可\",{\"1\":{\"61\":1}}],[\"添加到jre的lib\",{\"1\":{\"60\":1}}],[\"添加jacksonconfig配置全局序列化\",{\"1\":{\"55\":1}}],[\"宋体\",{\"1\":{\"60\":1}}],[\"生成的流程图中文乱码或者报错internalerror\",{\"1\":{\"60\":1}}],[\"安装中文字体\",{\"0\":{\"60\":1,\"61\":1}}],[\"安徽数智建造研究院有限公司\",{\"1\":{\"2\":1}}],[\"继承填充器接口\",{\"1\":{\"58\":1}}],[\"自己不再处理\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"自定义填充器\",{\"0\":{\"186\":1,\"399\":1,\"567\":1,\"753\":1,\"939\":1,\"1138\":1}}],[\"自定义填充\",{\"1\":{\"177\":1,\"180\":1,\"390\":1,\"393\":1,\"558\":1,\"561\":1,\"744\":1,\"747\":1,\"930\":1,\"933\":1,\"1129\":1,\"1132\":1}}],[\"自定义表达式\",{\"0\":{\"407\":1,\"592\":1,\"777\":1,\"971\":1,\"1172\":1},\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"自定义流程状态扩展\",{\"1\":{\"182\":1,\"183\":2,\"395\":1,\"396\":2,\"563\":1,\"564\":2,\"749\":1,\"750\":2,\"935\":1,\"936\":2,\"1134\":1,\"1135\":2}}],[\"自定义流程状态\",{\"0\":{\"181\":1,\"394\":1,\"562\":1,\"748\":1,\"934\":1,\"1133\":1},\"1\":{\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1}}],[\"自定义id生成策略\",{\"0\":{\"58\":1}}],[\"自研条件表达式\",{\"1\":{\"98\":1}}],[\"自动获取\",{\"1\":{\"86\":1}}],[\"自动识别数据库类型\",{\"1\":{\"64\":1}}],[\"自由飞翔\",{\"1\":{\"52\":1}}],[\"key\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"修正pg的sql文件名\",{\"1\":{\"84\":1}}],[\"修復开始节点直连网关\",{\"1\":{\"82\":1}}],[\"修复solon版本业务系统可不用单独加载warm\",{\"1\":{\"97\":1}}],[\"修复并行网关流程流程图显示错误问题\",{\"1\":{\"94\":1}}],[\"修复并行网关后面没有中间节点\",{\"1\":{\"89\":1}}],[\"修复xml脚本中遗漏伪命的问题\",{\"1\":{\"93\":1}}],[\"修复监听器部分判空bug\",{\"1\":{\"90\":1}}],[\"修复开始任务记录待办\",{\"1\":{\"89\":1}}],[\"修复已经设置后续节点动态权限后\",{\"1\":{\"89\":1}}],[\"修复已办任务查询审批想起无效问题\",{\"1\":{\"82\":1}}],[\"修复java17以上\",{\"1\":{\"88\":1}}],[\"修复终止流程bug\",{\"1\":{\"87\":1}}],[\"修复设置默认填充器时候\",{\"1\":{\"86\":1}}],[\"修复usermapper\",{\"1\":{\"84\":1}}],[\"修复填充器不接收外部设置的时间\",{\"1\":{\"84\":1}}],[\"修复保存流程xml报错问题\",{\"1\":{\"83\":1}}],[\"修复更新拼上了多余的条件\",{\"1\":{\"83\":1}}],[\"修复postgresql与mysql关键词符号问题\",{\"1\":{\"82\":1}}],[\"修复流程流转异常\",{\"1\":{\"88\":1}}],[\"修复流程已完成\",{\"1\":{\"82\":1}}],[\"修复流程定义和流程实例相同\",{\"1\":{\"82\":1}}],[\"修复流程监听器导出失败的问题\",{\"1\":{\"80\":1}}],[\"修复不能退回\",{\"1\":{\"82\":2}}],[\"修复查看流程图模糊的问题\",{\"1\":{\"82\":1}}],[\"修复taskserviceimpl\",{\"1\":{\"82\":1}}],[\"修复加签批量提交报错\",{\"1\":{\"82\":1}}],[\"修复\",{\"1\":{\"81\":2,\"82\":1}}],[\"修复deletebytaskids\",{\"1\":{\"81\":1}}],[\"修复历史记录创建时间相等\",{\"1\":{\"79\":1}}],[\"修复历史记录表\",{\"1\":{\"76\":1}}],[\"修复mybatis逻辑删除变成真实删除的缺陷\",{\"1\":{\"79\":1}}],[\"修复mybatis\",{\"1\":{\"78\":1}}],[\"修复mybatis扩展包中\",{\"1\":{\"77\":1}}],[\"修复删除流程实例信息\",{\"1\":{\"75\":1}}],[\"修复问题\",{\"1\":{\"48\":1}}],[\"修改的任务id\",{\"1\":{\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"525\":1,\"526\":1,\"527\":1,\"528\":1}}],[\"修改办理人\",{\"0\":{\"132\":1,\"361\":1,\"529\":1,\"715\":1,\"901\":1,\"1097\":1},\"1\":{\"132\":1,\"361\":1,\"529\":1,\"715\":1,\"901\":1,\"1097\":1}}],[\"修改办理人接口\",{\"1\":{\"80\":1}}],[\"修改flow\",{\"1\":{\"90\":1}}],[\"修改flowuserdao的bean名称\",{\"1\":{\"79\":1}}],[\"修改扩展字段名称\",{\"1\":{\"84\":1}}],[\"修改扩展字段ext注释\",{\"1\":{\"82\":1}}],[\"修改任务历史表时间定义\",{\"1\":{\"84\":1}}],[\"修改\",{\"1\":{\"75\":1}}],[\"修改项目的groupid\",{\"1\":{\"74\":1}}],[\"修改流程变量传递方式\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"修改id生成方式warm\",{\"1\":{\"58\":1}}],[\"修改id生成方式\",{\"1\":{\"57\":1}}],[\"丢失精度\",{\"1\":{\"55\":2}}],[\"防止\",{\"1\":{\"55\":2}}],[\"转历史任务\",{\"1\":{\"275\":1,\"278\":1,\"447\":1,\"450\":1,\"632\":1,\"635\":1,\"817\":1,\"820\":1,\"1011\":1,\"1014\":1,\"1231\":1,\"1234\":1,\"1238\":1,\"1241\":1}}],[\"转成组件内部左侧树列表能够显示的数据\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"转成组件内部能够显示的数据\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"转为\",{\"1\":{\"55\":2}}],[\"转办对象\",{\"1\":{\"128\":1,\"711\":1,\"897\":1,\"1093\":1}}],[\"转办后\",{\"1\":{\"128\":1,\"357\":1,\"358\":1,\"525\":1,\"526\":1,\"711\":1,\"897\":1,\"1093\":1}}],[\"转办忽略权限校验\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"361\":1,\"529\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1}}],[\"转办完善\",{\"1\":{\"85\":1}}],[\"转办\",{\"0\":{\"128\":1,\"357\":1,\"525\":1,\"711\":1,\"897\":1,\"1093\":1},\"1\":{\"12\":1,\"74\":1,\"76\":1,\"128\":1,\"132\":1,\"233\":1,\"235\":2,\"273\":1,\"274\":1,\"357\":2,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"446\":1,\"452\":1,\"525\":2,\"526\":1,\"527\":1,\"528\":1,\"529\":1,\"631\":1,\"637\":1,\"711\":1,\"715\":1,\"816\":1,\"822\":1,\"897\":1,\"901\":1,\"1010\":1,\"1016\":1,\"1093\":1,\"1097\":1,\"1230\":1,\"1236\":1,\"1237\":1,\"1299\":1,\"1304\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1354\":1,\"1355\":1}}],[\"方便区分表达式类型\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"方便扩展\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"方便扩展其他orm框架\",{\"1\":{\"96\":1}}],[\"方便扩展不同orm和数据\",{\"1\":{\"94\":1}}],[\"方便链式写法\",{\"1\":{\"89\":1}}],[\"方便保存历史过程数据\",{\"1\":{\"84\":1}}],[\"方便开始监听器全局传递参数\",{\"1\":{\"79\":1}}],[\"方法赋值\",{\"1\":{\"76\":2}}],[\"方法\",{\"1\":{\"76\":2}}],[\"方案4\",{\"0\":{\"58\":1}}],[\"方案3\",{\"0\":{\"57\":1}}],[\"方案2\",{\"0\":{\"56\":1}}],[\"方案1\",{\"0\":{\"55\":1}}],[\"方式二\",{\"1\":{\"55\":1}}],[\"方式一\",{\"1\":{\"55\":1}}],[\"<class>com\",{\"1\":{\"433\":7,\"618\":7}}],[\"<class>org\",{\"1\":{\"268\":7,\"803\":7,\"997\":7,\"1214\":7}}],[\"<persistence\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"<exclusion>\",{\"1\":{\"214\":1,\"287\":2,\"461\":2,\"646\":2,\"831\":2,\"965\":1,\"1025\":2,\"1166\":1,\"1251\":2}}],[\"<exclusions>\",{\"1\":{\"214\":1,\"287\":1,\"461\":1,\"646\":1,\"831\":1,\"965\":1,\"1025\":1,\"1166\":1,\"1251\":1}}],[\"<style\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"<script\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"<script>\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"<iframe\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"<div\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"<dependency>\",{\"1\":{\"64\":1,\"79\":1,\"193\":1,\"194\":1,\"214\":1,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"945\":1,\"965\":1,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2,\"1145\":1,\"1146\":1,\"1166\":1,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1291\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\"<template>\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"<version>最新版本<\",{\"1\":{\"1298\":1,\"1348\":1}}],[\"<version>1\",{\"1\":{\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1291\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1}}],[\"<version>版本号<\",{\"1\":{\"193\":1,\"194\":1,\"573\":1,\"759\":1,\"945\":1,\"1145\":1,\"1146\":1}}],[\"<version>3\",{\"1\":{\"64\":1,\"79\":1}}],[\"<artifactid>solon\",{\"1\":{\"287\":2,\"461\":2,\"646\":2,\"831\":2,\"1025\":2,\"1251\":2}}],[\"<artifactid>snack3<\",{\"1\":{\"79\":1}}],[\"<artifactid>warm\",{\"1\":{\"193\":1,\"194\":1,\"214\":2,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"945\":1,\"965\":2,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2,\"1145\":1,\"1146\":1,\"1166\":2,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1291\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\"<artifactid>mybatis\",{\"1\":{\"64\":1}}],[\"<groupid>io\",{\"1\":{\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"1309\":1}}],[\"<groupid>org\",{\"1\":{\"79\":1,\"193\":1,\"194\":1,\"214\":2,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":4,\"461\":2,\"646\":2,\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":4,\"945\":1,\"965\":2,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":4,\"1145\":1,\"1146\":1,\"1166\":2,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":4,\"1291\":1,\"1298\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\"<groupid>com\",{\"1\":{\"64\":1}}],[\"<\",{\"1\":{\"55\":1,\"64\":1,\"79\":1,\"193\":1,\"194\":1,\"200\":3,\"201\":4,\"214\":3,\"248\":1,\"268\":1,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":5,\"420\":1,\"433\":1,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":5,\"573\":1,\"580\":3,\"581\":4,\"605\":1,\"618\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":5,\"759\":1,\"765\":3,\"766\":4,\"790\":1,\"803\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":5,\"945\":1,\"951\":3,\"952\":4,\"965\":3,\"984\":1,\"997\":1,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":5,\"1145\":1,\"1146\":1,\"1152\":3,\"1153\":4,\"1166\":3,\"1200\":1,\"1214\":1,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":5,\"1291\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\">c\",{\"1\":{\"320\":1,\"493\":1,\"678\":1,\"864\":1,\"1058\":1,\"1284\":1}}],[\"><\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\">\",{\"1\":{\"55\":2,\"166\":1,\"196\":1,\"198\":1,\"200\":2,\"201\":2,\"208\":9,\"239\":2,\"246\":1,\"268\":1,\"272\":1,\"309\":2,\"310\":1,\"317\":1,\"406\":1,\"418\":1,\"433\":1,\"484\":2,\"485\":1,\"575\":1,\"577\":1,\"580\":2,\"581\":2,\"588\":9,\"591\":1,\"603\":1,\"618\":1,\"669\":2,\"670\":1,\"761\":1,\"763\":1,\"765\":2,\"766\":2,\"773\":9,\"776\":1,\"788\":1,\"803\":1,\"855\":2,\"856\":1,\"947\":1,\"949\":1,\"951\":2,\"952\":2,\"959\":9,\"970\":1,\"982\":1,\"997\":1,\"1049\":2,\"1050\":1,\"1125\":1,\"1148\":1,\"1150\":1,\"1152\":2,\"1153\":2,\"1160\":9,\"1171\":1,\"1191\":2,\"1198\":1,\"1214\":1,\"1218\":1,\"1273\":2,\"1274\":1,\"1281\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"9已退回\",{\"1\":{\"301\":1,\"302\":1,\"476\":1,\"477\":1,\"661\":1,\"662\":1,\"847\":1,\"848\":1,\"1041\":1,\"1042\":1,\"1265\":1,\"1266\":1}}],[\"9失效\",{\"1\":{\"300\":1,\"475\":1,\"660\":1,\"846\":1,\"1040\":1,\"1264\":1}}],[\"94\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"90\",{\"1\":{\"86\":1}}],[\"9007199254740991l\",{\"1\":{\"55\":2}}],[\"9\",{\"0\":{\"86\":1,\"109\":1,\"145\":1,\"344\":1,\"374\":1,\"467\":1,\"511\":1,\"542\":1,\"652\":1,\"697\":1,\"728\":1,\"883\":1,\"914\":1,\"1076\":1,\"1110\":1},\"1\":{\"66\":1,\"165\":1,\"273\":1,\"297\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"317\":1,\"405\":1,\"452\":1,\"472\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"590\":1,\"637\":1,\"657\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"775\":1,\"822\":1,\"843\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"969\":1,\"1016\":1,\"1037\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1124\":1,\"1170\":1,\"1236\":1,\"1261\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1281\":1}}],[\"99元\",{\"1\":{\"27\":1}}],[\"=>\",{\"1\":{\"200\":1,\"201\":3,\"580\":1,\"581\":3,\"765\":1,\"766\":3,\"951\":1,\"952\":3,\"1152\":1,\"1153\":3}}],[\"==\",{\"1\":{\"173\":1,\"229\":1,\"1185\":1}}],[\"=\",{\"1\":{\"55\":7,\"64\":3,\"82\":1,\"166\":6,\"171\":1,\"172\":3,\"182\":4,\"183\":2,\"186\":4,\"197\":2,\"200\":3,\"201\":5,\"203\":1,\"208\":12,\"216\":1,\"221\":1,\"222\":3,\"224\":1,\"227\":1,\"228\":3,\"237\":3,\"245\":4,\"246\":6,\"247\":8,\"248\":6,\"253\":1,\"254\":5,\"259\":1,\"267\":1,\"268\":6,\"269\":1,\"272\":7,\"289\":1,\"292\":3,\"309\":9,\"310\":6,\"315\":8,\"317\":4,\"323\":2,\"326\":2,\"332\":1,\"333\":3,\"395\":4,\"396\":2,\"399\":4,\"406\":6,\"411\":3,\"417\":5,\"418\":6,\"419\":6,\"420\":6,\"425\":5,\"432\":1,\"433\":6,\"434\":1,\"465\":1,\"468\":3,\"484\":9,\"485\":6,\"490\":8,\"496\":2,\"499\":2,\"500\":3,\"563\":4,\"564\":2,\"567\":4,\"576\":2,\"580\":3,\"581\":5,\"583\":1,\"588\":12,\"591\":6,\"596\":3,\"602\":5,\"603\":6,\"604\":6,\"605\":6,\"610\":5,\"617\":1,\"618\":6,\"619\":1,\"650\":1,\"653\":3,\"669\":9,\"670\":6,\"675\":8,\"681\":2,\"684\":2,\"685\":3,\"749\":4,\"750\":2,\"753\":4,\"762\":2,\"765\":3,\"766\":5,\"768\":1,\"773\":12,\"776\":6,\"781\":3,\"787\":5,\"788\":6,\"789\":6,\"790\":6,\"795\":5,\"802\":1,\"803\":6,\"804\":1,\"836\":1,\"839\":3,\"855\":9,\"856\":6,\"861\":8,\"867\":2,\"870\":2,\"871\":3,\"935\":4,\"936\":2,\"939\":4,\"948\":2,\"951\":3,\"952\":5,\"954\":1,\"959\":12,\"967\":1,\"970\":6,\"975\":3,\"981\":5,\"982\":6,\"983\":6,\"984\":6,\"989\":5,\"996\":1,\"997\":6,\"998\":1,\"1030\":1,\"1033\":3,\"1049\":9,\"1050\":6,\"1055\":8,\"1061\":2,\"1064\":2,\"1065\":3,\"1125\":6,\"1134\":4,\"1135\":2,\"1138\":4,\"1149\":2,\"1152\":3,\"1153\":5,\"1155\":1,\"1160\":12,\"1168\":1,\"1171\":6,\"1177\":1,\"1178\":3,\"1180\":1,\"1183\":1,\"1184\":3,\"1189\":3,\"1197\":4,\"1198\":6,\"1199\":8,\"1200\":6,\"1205\":1,\"1206\":5,\"1213\":1,\"1214\":6,\"1215\":1,\"1218\":7,\"1253\":1,\"1256\":3,\"1273\":9,\"1274\":6,\"1279\":8,\"1281\":4,\"1287\":2,\"1290\":2,\"1294\":1,\"1297\":2,\"1344\":1,\"1347\":2}}],[\"得来\",{\"1\":{\"55\":1}}],[\"与\",{\"1\":{\"55\":1,\"179\":1,\"392\":1,\"451\":1,\"560\":1,\"636\":1,\"746\":1,\"821\":1,\"932\":1,\"1015\":1,\"1131\":1,\"1235\":1,\"1242\":1}}],[\"n\",{\"1\":{\"300\":1,\"301\":1,\"303\":2,\"305\":1,\"475\":1,\"476\":1,\"478\":2,\"480\":1,\"660\":1,\"661\":1,\"663\":2,\"665\":1,\"846\":1,\"847\":1,\"849\":2,\"851\":1,\"1040\":1,\"1041\":1,\"1043\":2,\"1045\":1,\"1264\":1,\"1265\":1,\"1267\":2,\"1269\":1}}],[\"n否\",{\"1\":{\"300\":1,\"301\":1,\"303\":2,\"305\":1,\"475\":1,\"476\":1,\"478\":2,\"480\":1,\"660\":1,\"661\":1,\"663\":2,\"665\":1,\"846\":1,\"847\":1,\"849\":2,\"851\":1,\"1040\":1,\"1041\":1,\"1043\":2,\"1045\":1,\"1264\":1,\"1265\":1,\"1267\":2,\"1269\":1}}],[\"nginx\",{\"0\":{\"579\":1},\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"nginx配置示例\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"null\",{\"1\":{\"166\":1,\"172\":2,\"208\":1,\"222\":3,\"228\":2,\"237\":1,\"272\":4,\"333\":3,\"406\":1,\"411\":1,\"500\":3,\"588\":1,\"591\":1,\"596\":1,\"685\":3,\"773\":1,\"776\":1,\"781\":1,\"871\":3,\"959\":1,\"970\":1,\"975\":1,\"1065\":3,\"1125\":1,\"1160\":1,\"1171\":1,\"1178\":3,\"1184\":2,\"1189\":1,\"1218\":4}}],[\"number>\",{\"1\":{\"55\":1}}],[\"number\",{\"1\":{\"55\":4}}],[\"numberserializer\",{\"1\":{\"55\":1}}],[\"next\",{\"1\":{\"304\":2,\"479\":2,\"664\":2,\"850\":2,\"1044\":2,\"1268\":2}}],[\"nextid\",{\"1\":{\"186\":1,\"399\":1,\"567\":1,\"753\":1,\"939\":1,\"1138\":1}}],[\"nextidstr\",{\"1\":{\"182\":1,\"315\":1,\"395\":1,\"490\":1,\"563\":1,\"675\":1,\"749\":1,\"861\":1,\"935\":1,\"1055\":1,\"1134\":1,\"1279\":1}}],[\"ne\",{\"1\":{\"165\":2,\"1124\":2}}],[\"newtask\",{\"1\":{\"317\":2,\"1281\":2}}],[\"newentity\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"new\",{\"1\":{\"55\":5,\"64\":4,\"166\":3,\"169\":1,\"171\":1,\"177\":2,\"180\":2,\"186\":2,\"190\":1,\"197\":2,\"198\":1,\"208\":9,\"219\":1,\"221\":1,\"224\":1,\"227\":1,\"235\":4,\"237\":5,\"246\":1,\"257\":1,\"259\":1,\"289\":1,\"309\":5,\"310\":5,\"313\":1,\"315\":1,\"317\":4,\"323\":1,\"326\":1,\"330\":1,\"332\":1,\"390\":2,\"393\":2,\"399\":2,\"403\":1,\"406\":3,\"411\":5,\"418\":1,\"465\":1,\"484\":5,\"485\":5,\"488\":1,\"490\":1,\"496\":1,\"499\":1,\"558\":2,\"561\":2,\"567\":2,\"571\":1,\"576\":2,\"577\":1,\"588\":9,\"591\":3,\"596\":5,\"603\":1,\"650\":1,\"669\":5,\"670\":5,\"673\":1,\"675\":1,\"681\":1,\"684\":1,\"744\":2,\"747\":2,\"753\":2,\"757\":1,\"762\":2,\"763\":1,\"773\":9,\"776\":3,\"781\":5,\"788\":1,\"836\":1,\"855\":5,\"856\":5,\"859\":1,\"861\":1,\"867\":1,\"870\":1,\"930\":2,\"933\":2,\"939\":2,\"943\":1,\"948\":2,\"949\":1,\"959\":9,\"970\":3,\"975\":5,\"982\":1,\"1030\":1,\"1049\":5,\"1050\":5,\"1053\":1,\"1055\":1,\"1061\":1,\"1064\":1,\"1125\":3,\"1129\":2,\"1132\":2,\"1138\":2,\"1142\":1,\"1149\":2,\"1150\":1,\"1160\":9,\"1171\":3,\"1175\":1,\"1177\":1,\"1180\":1,\"1183\":1,\"1189\":5,\"1198\":1,\"1253\":1,\"1273\":5,\"1274\":5,\"1277\":1,\"1279\":1,\"1281\":4,\"1287\":1,\"1290\":1,\"1294\":1,\"1344\":1}}],[\"now\",{\"1\":{\"304\":2,\"479\":2,\"664\":2,\"850\":2,\"1044\":2,\"1268\":2}}],[\"nownodecode\",{\"1\":{\"134\":2,\"363\":2,\"531\":2,\"717\":2,\"903\":2,\"1099\":2}}],[\"nonnull\",{\"1\":{\"182\":1,\"183\":2,\"246\":1,\"395\":1,\"396\":2,\"418\":1,\"563\":1,\"564\":2,\"603\":1,\"749\":1,\"750\":2,\"788\":1,\"935\":1,\"936\":2,\"982\":1,\"1134\":1,\"1135\":2,\"1198\":1}}],[\"none无动作\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"none\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"notify\",{\"1\":{\"241\":1,\"245\":1,\"246\":1,\"247\":1,\"248\":1,\"254\":1,\"315\":1,\"417\":1,\"418\":1,\"419\":1,\"420\":1,\"425\":1,\"490\":1,\"602\":1,\"603\":1,\"604\":1,\"605\":1,\"610\":1,\"675\":1,\"787\":1,\"788\":1,\"789\":1,\"790\":1,\"795\":1,\"861\":1,\"981\":1,\"982\":1,\"983\":1,\"984\":1,\"989\":1,\"1055\":1,\"1193\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1206\":1,\"1279\":1}}],[\"not\",{\"1\":{\"176\":1,\"179\":1,\"263\":1,\"265\":1,\"389\":1,\"392\":1,\"428\":1,\"430\":1,\"557\":1,\"560\":1,\"613\":1,\"615\":1,\"743\":1,\"746\":1,\"798\":1,\"800\":1,\"929\":1,\"932\":1,\"992\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1209\":1,\"1211\":1,\"1358\":1}}],[\"notnike\",{\"1\":{\"165\":2,\"1124\":2}}],[\"node\",{\"1\":{\"298\":1,\"301\":5,\"302\":3,\"303\":5,\"304\":4,\"305\":3,\"309\":1,\"473\":1,\"476\":5,\"477\":3,\"478\":5,\"479\":4,\"480\":3,\"484\":1,\"658\":1,\"661\":5,\"662\":3,\"663\":5,\"664\":4,\"665\":3,\"669\":1,\"844\":1,\"847\":5,\"848\":3,\"849\":5,\"850\":4,\"851\":3,\"855\":1,\"1038\":1,\"1041\":5,\"1042\":3,\"1043\":5,\"1044\":4,\"1045\":3,\"1049\":1,\"1262\":1,\"1265\":5,\"1266\":3,\"1267\":5,\"1268\":4,\"1269\":3,\"1273\":1}}],[\"nodeservice节点接口\",{\"0\":{\"133\":1,\"362\":1,\"530\":1,\"716\":1,\"902\":1,\"1098\":1}}],[\"nodecode\",{\"1\":{\"119\":1,\"126\":1,\"292\":1,\"349\":1,\"355\":1,\"468\":1,\"517\":1,\"523\":1,\"653\":1,\"703\":1,\"709\":1,\"839\":1,\"889\":1,\"895\":1,\"1033\":1,\"1084\":1,\"1091\":1,\"1256\":1,\"1297\":1,\"1347\":1}}],[\"node监听类型和监听路径字段长度\",{\"1\":{\"90\":1}}],[\"noear<\",{\"1\":{\"79\":1,\"287\":2,\"461\":2,\"646\":2,\"831\":2,\"1025\":2,\"1251\":2}}],[\"nsimsun\",{\"1\":{\"60\":1}}],[\"nacos\",{\"1\":{\"41\":1}}],[\"name=authorization\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"name=\",{\"1\":{\"201\":1,\"268\":1,\"433\":1,\"581\":1,\"618\":1,\"766\":1,\"803\":1,\"952\":1,\"997\":1,\"1153\":1,\"1214\":1}}],[\"name\",{\"1\":{\"30\":1,\"82\":1,\"176\":1,\"200\":1,\"209\":1,\"216\":1,\"300\":1,\"301\":2,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"475\":1,\"476\":2,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"579\":1,\"580\":1,\"660\":1,\"661\":2,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"765\":1,\"846\":1,\"847\":2,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"929\":1,\"951\":1,\"960\":1,\"967\":1,\"1040\":1,\"1041\":2,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1128\":1,\"1152\":1,\"1161\":1,\"1168\":1,\"1264\":1,\"1265\":2,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1311\":1}}],[\"超出范围\",{\"1\":{\"55\":1}}],[\"超出\",{\"1\":{\"55\":1}}],[\"用逗号隔开\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"用逗号分隔\",{\"1\":{\"176\":1,\"209\":1,\"929\":1,\"960\":1,\"1128\":1,\"1161\":1}}],[\"用\",{\"1\":{\"241\":1,\"1193\":1}}],[\"用户权限标识集合\",{\"1\":{\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"525\":1,\"526\":1,\"527\":1,\"528\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1}}],[\"用户类\",{\"1\":{\"326\":1,\"499\":1,\"684\":1,\"870\":1,\"1064\":1,\"1290\":1}}],[\"用户等\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"用户列表\",{\"1\":{\"207\":1,\"587\":1,\"772\":1,\"958\":1,\"1159\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"用户\",{\"1\":{\"207\":1,\"208\":3,\"587\":1,\"588\":3,\"772\":1,\"773\":3,\"958\":1,\"959\":3,\"1159\":1,\"1160\":3,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"用户自定义排序方案\",{\"0\":{\"157\":1,\"386\":1,\"554\":1,\"740\":1,\"926\":1,\"1122\":1},\"1\":{\"157\":1,\"386\":1,\"554\":1,\"740\":1,\"926\":1,\"1122\":1}}],[\"用户所拥有的权限标识\",{\"1\":{\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"361\":1,\"529\":1,\"715\":1,\"901\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1}}],[\"用户角色抽取出来\",{\"1\":{\"98\":1}}],[\"用来处理超过js数据范围的long类型\",{\"1\":{\"55\":1}}],[\"用于流程执行中的数据转递\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"用于分页显示\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"用于it服务请求的处理\",{\"1\":{\"14\":1}}],[\"用于管理客户服务请求\",{\"1\":{\"14\":1}}],[\"用于管理企业的日常业务流程\",{\"1\":{\"14\":1}}],[\"创建人\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"创建者\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"创建监听器结束\",{\"1\":{\"254\":1,\"425\":1,\"610\":1,\"795\":1,\"989\":1,\"1206\":1}}],[\"创建监听器\",{\"0\":{\"249\":1,\"421\":1,\"606\":1,\"791\":1,\"985\":1,\"1201\":1},\"1\":{\"240\":1,\"245\":1,\"253\":1,\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1,\"1192\":1,\"1197\":1,\"1205\":1}}],[\"创建\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"创建时间\",{\"1\":{\"300\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"创建时间和更新时间自动生成规则\",{\"1\":{\"185\":1,\"398\":1,\"566\":1,\"752\":1,\"938\":1,\"1137\":1}}],[\"创建时间和更新时间一样的问题\",{\"1\":{\"76\":1}}],[\"创建时间设置正序排列\",{\"0\":{\"153\":1,\"382\":1,\"550\":1,\"736\":1,\"922\":1,\"1118\":1},\"1\":{\"153\":1,\"382\":1,\"550\":1,\"736\":1,\"922\":1,\"1118\":1}}],[\"创建一个bignumberserializer\",{\"1\":{\"55\":1}}],[\"创建pr申请\",{\"0\":{\"49\":1}}],[\"只会必须执行后面的所有任务路线\",{\"1\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"只会执行后面的一条任务路线\",{\"1\":{\"277\":1,\"449\":1,\"634\":1,\"819\":1,\"1013\":1,\"1233\":1,\"1240\":1}}],[\"只需前面的一条路线完成即可往下执行\",{\"1\":{\"277\":1,\"449\":1,\"634\":1,\"819\":1,\"1013\":1,\"1233\":1,\"1240\":1}}],[\"只需要实现globallistener接口\",{\"1\":{\"253\":1,\"1205\":1}}],[\"只有所有负责人审批通过\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"只有未设置办理人时可不传\",{\"1\":{\"349\":1,\"355\":1,\"517\":1,\"523\":1,\"703\":1,\"709\":1}}],[\"只有指定节点任务才会执行\",{\"1\":{\"239\":1,\"414\":1,\"599\":1,\"784\":1,\"978\":1,\"1191\":1}}],[\"只有7张表\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"只针对mybatis\",{\"1\":{\"82\":1}}],[\"只处理长度过长的long类型\",{\"1\":{\"55\":1}}],[\"此时根据\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"此时办理人变量表达式就派上用场了\",{\"1\":{\"316\":1,\"1280\":1}}],[\"此处填写数据源名称\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"此处属于固定配置\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"此项目目前使用的是雪花算法生成id\",{\"1\":{\"54\":1}}],[\"此操作在自己仓库或者要pr的仓库都可以\",{\"0\":{\"49\":1}}],[\"飞鸿\",{\"1\":{\"52\":1}}],[\"荒\",{\"1\":{\"52\":1}}],[\"姜杰\",{\"1\":{\"52\":1}}],[\"剑\",{\"1\":{\"52\":1}}],[\"敏\",{\"1\":{\"52\":1}}],[\"巴\",{\"1\":{\"52\":1}}],[\"热部署插件jrebel或者devtools导致问题\",{\"1\":{\"63\":1}}],[\"热\",{\"1\":{\"52\":1}}],[\"热爱编程\",{\"1\":{\"25\":1}}],[\"马\",{\"1\":{\"52\":1}}],[\"梁\",{\"1\":{\"52\":1}}],[\"梁小梁\",{\"1\":{\"25\":1,\"41\":1}}],[\"入库前要拼接前缀\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"入\",{\"1\":{\"52\":1}}],[\"文斌\",{\"1\":{\"52\":1}}],[\"文档地址\",{\"1\":{\"293\":1,\"834\":1,\"1028\":1,\"1257\":1,\"1298\":1,\"1348\":1}}],[\"文档\",{\"1\":{\"27\":1}}],[\"ds\",{\"1\":{\"310\":2,\"485\":2,\"670\":2,\"856\":2,\"1050\":2,\"1274\":2}}],[\"dao\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"datetime\",{\"1\":{\"300\":2,\"301\":2,\"302\":2,\"303\":2,\"304\":2,\"305\":2,\"306\":2,\"475\":2,\"476\":2,\"477\":2,\"478\":2,\"479\":2,\"480\":2,\"481\":2,\"660\":2,\"661\":2,\"662\":2,\"663\":2,\"664\":2,\"665\":2,\"666\":2,\"846\":2,\"847\":2,\"848\":2,\"849\":2,\"850\":2,\"851\":2,\"852\":2,\"1040\":2,\"1041\":2,\"1042\":2,\"1043\":2,\"1044\":2,\"1045\":2,\"1046\":2,\"1264\":2,\"1265\":2,\"1266\":2,\"1267\":2,\"1268\":2,\"1269\":2,\"1270\":2}}],[\"dateutils\",{\"1\":{\"208\":6,\"247\":2,\"419\":2,\"588\":6,\"604\":2,\"773\":6,\"789\":2,\"959\":6,\"983\":2,\"1160\":6,\"1199\":2}}],[\"date\",{\"1\":{\"186\":6,\"399\":6,\"567\":6,\"753\":6,\"939\":6,\"1138\":6}}],[\"data<\",{\"1\":{\"287\":1,\"461\":1,\"646\":1,\"831\":1,\"1025\":1,\"1251\":1}}],[\"datasource\",{\"1\":{\"179\":1,\"264\":1,\"310\":1,\"392\":1,\"429\":1,\"485\":1,\"560\":1,\"614\":1,\"670\":1,\"746\":1,\"799\":1,\"856\":1,\"932\":1,\"993\":1,\"1050\":1,\"1131\":1,\"1210\":1,\"1274\":1}}],[\"datafillhandler\",{\"1\":{\"177\":2,\"180\":2,\"186\":1,\"190\":2,\"390\":2,\"393\":2,\"399\":1,\"403\":2,\"558\":2,\"561\":2,\"567\":1,\"571\":2,\"744\":2,\"747\":2,\"753\":1,\"757\":2,\"930\":2,\"933\":2,\"939\":1,\"943\":2,\"1129\":2,\"1132\":2,\"1138\":1,\"1142\":2}}],[\"data\",{\"1\":{\"176\":2,\"179\":1,\"189\":1,\"200\":2,\"201\":1,\"389\":2,\"392\":1,\"402\":1,\"557\":2,\"560\":1,\"570\":1,\"580\":2,\"581\":1,\"743\":2,\"746\":1,\"756\":1,\"765\":2,\"766\":1,\"929\":2,\"932\":1,\"942\":1,\"951\":2,\"952\":1,\"1128\":2,\"1131\":1,\"1141\":1,\"1152\":2,\"1153\":1}}],[\"dd\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"dictid\",{\"1\":{\"203\":2,\"583\":2,\"768\":2,\"954\":2,\"1155\":2}}],[\"div>\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"dialect\",{\"1\":{\"179\":2,\"392\":2,\"560\":2,\"746\":2,\"932\":2,\"1131\":2}}],[\"disabled为是否可编辑\",{\"1\":{\"580\":1,\"581\":1}}],[\"disabled=false\",{\"1\":{\"203\":2,\"216\":1,\"583\":3,\"768\":2,\"954\":2,\"967\":1,\"1155\":2,\"1168\":1}}],[\"disabled=\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"disabled=$\",{\"1\":{\"76\":2,\"199\":1,\"200\":1,\"201\":1,\"203\":1,\"578\":1,\"580\":1,\"581\":1,\"764\":1,\"765\":1,\"766\":1,\"768\":1,\"950\":1,\"951\":1,\"952\":1,\"954\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1155\":1,\"1311\":1,\"1322\":1,\"1333\":1}}],[\"disabled\",{\"1\":{\"76\":2,\"199\":1,\"200\":2,\"201\":2,\"203\":3,\"578\":1,\"580\":1,\"581\":1,\"583\":2,\"764\":1,\"765\":2,\"766\":2,\"768\":3,\"950\":1,\"951\":2,\"952\":2,\"954\":3,\"1151\":1,\"1152\":2,\"1153\":2,\"1155\":3,\"1311\":1,\"1322\":1,\"1333\":1}}],[\"db\",{\"1\":{\"263\":1,\"310\":2,\"428\":1,\"485\":2,\"613\":1,\"670\":2,\"798\":1,\"856\":2,\"992\":1,\"1050\":2,\"1209\":1,\"1274\":2}}],[\"db1\",{\"1\":{\"179\":1,\"264\":1,\"310\":6,\"392\":1,\"429\":1,\"485\":6,\"560\":1,\"614\":1,\"670\":6,\"746\":1,\"799\":1,\"856\":6,\"932\":1,\"993\":1,\"1050\":6,\"1131\":1,\"1210\":1,\"1274\":6}}],[\"dbtype\",{\"1\":{\"64\":2}}],[\"demo\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"decimal\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"del\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"delete\",{\"1\":{\"176\":3,\"179\":3,\"263\":2,\"265\":3,\"389\":3,\"392\":3,\"428\":2,\"430\":3,\"557\":3,\"560\":3,\"613\":2,\"615\":3,\"743\":3,\"746\":3,\"798\":2,\"800\":3,\"929\":3,\"932\":3,\"992\":2,\"994\":3,\"1128\":3,\"1131\":3,\"1209\":2,\"1211\":3}}],[\"desktop\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"detail\",{\"1\":{\"203\":2,\"583\":2,\"768\":2,\"954\":2,\"1155\":2}}],[\"determinesize\",{\"1\":{\"173\":1,\"229\":1,\"1185\":1}}],[\"deployflow\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"dept\",{\"1\":{\"208\":9,\"246\":1,\"272\":1,\"274\":1,\"275\":1,\"418\":1,\"446\":1,\"447\":1,\"588\":9,\"603\":1,\"631\":1,\"632\":1,\"773\":9,\"788\":1,\"816\":1,\"817\":1,\"959\":9,\"982\":1,\"1010\":1,\"1011\":1,\"1160\":9,\"1198\":1,\"1218\":1,\"1230\":1,\"1231\":1,\"1237\":1,\"1238\":1}}],[\"deptlist\",{\"1\":{\"208\":5,\"588\":5,\"773\":5,\"959\":5,\"1160\":5}}],[\"deptmapper\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"depute\",{\"1\":{\"129\":1,\"235\":1,\"274\":1,\"358\":1,\"446\":1,\"526\":1,\"631\":1,\"712\":1,\"816\":1,\"898\":1,\"1010\":1,\"1094\":1,\"1230\":1,\"1237\":1}}],[\"dependency>\",{\"1\":{\"64\":1,\"79\":1,\"193\":1,\"194\":1,\"214\":1,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"945\":1,\"965\":1,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2,\"1145\":1,\"1146\":1,\"1166\":1,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1291\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\"def包含如下字段\",{\"1\":{\"504\":1}}],[\"deffinishlistener\",{\"1\":{\"247\":2,\"419\":2,\"604\":2,\"789\":2,\"983\":2,\"1199\":2}}],[\"defservice\",{\"1\":{\"289\":1,\"290\":1,\"431\":3,\"465\":1,\"466\":1,\"616\":3,\"650\":1,\"651\":1,\"801\":3,\"836\":1,\"837\":1,\"995\":3,\"1030\":1,\"1031\":1,\"1253\":1,\"1254\":1,\"1294\":1,\"1295\":1,\"1344\":1,\"1345\":1}}],[\"defservice流程定义接口\",{\"0\":{\"100\":1,\"335\":1,\"502\":1,\"687\":1,\"873\":1,\"1067\":1}}],[\"defstartlistener\",{\"1\":{\"246\":2,\"418\":2,\"603\":2,\"788\":2,\"982\":2,\"1198\":2}}],[\"defaultinstance\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"defaultvariablestrategy\",{\"1\":{\"222\":1,\"333\":1,\"500\":1,\"685\":1,\"871\":1,\"1065\":1,\"1178\":1}}],[\"default\",{\"1\":{\"168\":1,\"171\":2,\"200\":1,\"218\":1,\"221\":1,\"224\":1,\"227\":2,\"256\":1,\"259\":1,\"329\":1,\"332\":1,\"492\":1,\"493\":1,\"495\":3,\"500\":2,\"580\":1,\"677\":1,\"678\":1,\"680\":3,\"685\":2,\"765\":1,\"863\":1,\"864\":1,\"866\":3,\"871\":2,\"951\":1,\"1057\":1,\"1058\":1,\"1060\":3,\"1065\":2,\"1152\":1,\"1174\":1,\"1177\":1,\"1180\":1,\"1183\":2}}],[\"defids\",{\"1\":{\"124\":1,\"1089\":1}}],[\"definition表的id\",{\"1\":{\"301\":1,\"302\":1,\"305\":1,\"476\":1,\"477\":1,\"480\":1,\"661\":1,\"662\":1,\"665\":1,\"847\":1,\"848\":1,\"851\":1,\"1041\":1,\"1042\":1,\"1045\":1,\"1265\":1,\"1266\":1,\"1269\":1}}],[\"definitionmapper\",{\"1\":{\"269\":1,\"434\":1,\"619\":1,\"804\":1,\"998\":1,\"1215\":1}}],[\"definitionid为需要查询的流程定义id\",{\"1\":{\"580\":1,\"581\":1}}],[\"definitionid\",{\"1\":{\"76\":2,\"134\":2,\"199\":1,\"200\":2,\"201\":2,\"203\":3,\"363\":2,\"531\":2,\"578\":1,\"580\":1,\"581\":1,\"583\":2,\"717\":2,\"764\":1,\"765\":2,\"766\":2,\"768\":3,\"903\":2,\"950\":1,\"951\":2,\"952\":2,\"954\":3,\"1099\":2,\"1151\":1,\"1152\":2,\"1153\":2,\"1155\":3,\"1311\":1,\"1322\":1,\"1333\":1}}],[\"definition\",{\"1\":{\"62\":1,\"101\":1,\"102\":1,\"200\":1,\"201\":1,\"298\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"309\":1,\"473\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"484\":1,\"580\":1,\"581\":1,\"658\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"669\":1,\"688\":1,\"765\":1,\"766\":1,\"844\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"855\":1,\"874\":1,\"951\":1,\"952\":1,\"1038\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1049\":1,\"1068\":1,\"1069\":1,\"1152\":1,\"1153\":1,\"1262\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1273\":1}}],[\"def\",{\"1\":{\"104\":1,\"337\":1,\"504\":1,\"690\":1,\"876\":1,\"1071\":1}}],[\"devtools\",{\"1\":{\"63\":2}}],[\"dejavu\",{\"1\":{\"60\":1}}],[\"documentelement\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"document\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"docker环境\",{\"0\":{\"61\":1}}],[\"dotor\",{\"1\":{\"52\":1}}],[\"dromara<\",{\"1\":{\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"945\":1,\"965\":2,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2,\"1291\":1,\"1320\":1,\"1331\":1,\"1341\":1}}],[\"dromara\",{\"1\":{\"74\":4,\"76\":2,\"179\":2,\"193\":1,\"194\":1,\"214\":2,\"237\":2,\"268\":7,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"312\":1,\"746\":2,\"781\":2,\"803\":7,\"858\":1,\"932\":2,\"975\":2,\"997\":7,\"1052\":1,\"1131\":2,\"1145\":1,\"1146\":1,\"1166\":2,\"1189\":2,\"1214\":7,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1276\":1,\"1292\":1,\"1298\":1,\"1342\":1,\"1348\":1}}],[\"dromara成员项目\",{\"0\":{\"3\":1}}],[\"drwxr\",{\"1\":{\"60\":2}}],[\"d\",{\"1\":{\"52\":1,\"216\":1,\"967\":1,\"1168\":1}}],[\"致敬\",{\"1\":{\"52\":1}}],[\"准备试用\",{\"1\":{\"52\":1}}],[\"子流程\",{\"1\":{\"70\":1}}],[\"子\",{\"1\":{\"52\":1}}],[\"希望某些人不参与办理\",{\"1\":{\"233\":1,\"273\":1,\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"希望其他人一起参与办理\",{\"1\":{\"233\":1,\"273\":1,\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"希望能发展壮大\",{\"1\":{\"52\":1}}],[\"希望有交流机会\",{\"1\":{\"52\":1}}],[\"希望一键三连\",{\"1\":{\"12\":1}}],[\"佳\",{\"1\":{\"52\":2}}],[\"李\",{\"1\":{\"52\":1}}],[\"0<\",{\"1\":{\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"1309\":1}}],[\"0待提交\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"0开始节点\",{\"1\":{\"301\":1,\"302\":1,\"303\":1,\"304\":2,\"305\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":2,\"480\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":2,\"665\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":2,\"851\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":2,\"1045\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":2,\"1269\":1}}],[\"0开源协议\",{\"1\":{\"13\":1}}],[\"0挂起\",{\"1\":{\"300\":1,\"302\":1,\"475\":1,\"477\":1,\"660\":1,\"662\":1,\"846\":1,\"848\":1,\"1040\":1,\"1042\":1,\"1264\":1,\"1266\":1}}],[\"0未发布\",{\"1\":{\"300\":1,\"475\":1,\"660\":1,\"846\":1,\"1040\":1,\"1264\":1}}],[\"04\",{\"0\":{\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1}}],[\"05\",{\"0\":{\"86\":1,\"96\":1}}],[\"09\",{\"0\":{\"78\":1,\"79\":1,\"80\":1}}],[\"0\",{\"0\":{\"77\":1,\"85\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":2,\"1365\":1},\"1\":{\"77\":1,\"85\":1,\"166\":2,\"172\":2,\"173\":1,\"176\":1,\"179\":1,\"201\":1,\"228\":2,\"229\":1,\"248\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"274\":1,\"300\":2,\"301\":2,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"389\":1,\"392\":1,\"406\":2,\"420\":1,\"427\":1,\"428\":1,\"429\":1,\"430\":1,\"446\":1,\"475\":2,\"476\":2,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"557\":1,\"560\":1,\"581\":1,\"591\":2,\"605\":1,\"612\":1,\"613\":1,\"614\":1,\"615\":1,\"631\":1,\"660\":2,\"661\":2,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"743\":1,\"746\":1,\"766\":1,\"776\":2,\"790\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1,\"816\":1,\"846\":2,\"847\":2,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"929\":1,\"932\":1,\"952\":1,\"970\":2,\"984\":1,\"991\":1,\"992\":1,\"993\":1,\"994\":1,\"1010\":1,\"1040\":2,\"1041\":2,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1125\":2,\"1128\":1,\"1131\":1,\"1153\":1,\"1171\":2,\"1184\":2,\"1185\":1,\"1200\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1230\":1,\"1237\":1,\"1264\":2,\"1265\":2,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1308\":1}}],[\"000000\",{\"1\":{\"177\":1,\"314\":1,\"390\":1,\"489\":1,\"558\":1,\"674\":1,\"744\":1,\"860\":1,\"930\":1,\"1054\":1,\"1129\":1,\"1278\":1}}],[\"00\",{\"1\":{\"60\":1}}],[\"06\",{\"0\":{\"83\":1,\"84\":1,\"85\":1,\"95\":1},\"1\":{\"52\":14}}],[\"03\",{\"0\":{\"80\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1},\"1\":{\"52\":1}}],[\"07\",{\"0\":{\"90\":1},\"1\":{\"52\":3}}],[\"01\",{\"0\":{\"76\":1},\"1\":{\"52\":1}}],[\"02\",{\"0\":{\"91\":1},\"1\":{\"52\":1}}],[\"08\",{\"0\":{\"81\":1,\"82\":1,\"86\":1},\"1\":{\"52\":4}}],[\"感谢\",{\"0\":{\"66\":1},\"1\":{\"54\":1,\"55\":1,\"60\":1,\"61\":1,\"90\":1,\"91\":1,\"92\":3}}],[\"感谢您对开源项目的支持\",{\"1\":{\"52\":17}}],[\"感谢所有捐赠者\",{\"1\":{\"51\":1}}],[\"时间\",{\"1\":{\"52\":1}}],[\"留言\",{\"1\":{\"52\":1}}],[\"元\",{\"1\":{\"52\":1}}],[\"金额\",{\"1\":{\"52\":1}}],[\"域名和相关服务的费用\",{\"1\":{\"51\":1}}],[\"直到没有问题后被作者合并\",{\"0\":{\"50\":1}}],[\"按需求执行\",{\"0\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"按需传输\",{\"1\":{\"118\":3,\"119\":6,\"120\":4,\"126\":6,\"127\":4,\"128\":3,\"129\":3,\"130\":3,\"131\":3,\"132\":7,\"134\":2,\"272\":1,\"348\":3,\"349\":4,\"350\":2,\"355\":4,\"356\":2,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":7,\"363\":2,\"516\":3,\"517\":4,\"518\":3,\"523\":4,\"524\":3,\"525\":1,\"526\":1,\"527\":1,\"528\":1,\"529\":7,\"531\":2,\"702\":3,\"703\":5,\"704\":4,\"709\":5,\"710\":4,\"711\":2,\"712\":2,\"713\":2,\"714\":2,\"715\":7,\"717\":2,\"888\":3,\"889\":6,\"890\":4,\"895\":6,\"896\":4,\"897\":2,\"898\":2,\"899\":2,\"900\":2,\"901\":7,\"903\":2,\"1083\":3,\"1084\":6,\"1085\":4,\"1091\":6,\"1092\":4,\"1093\":3,\"1094\":3,\"1095\":3,\"1096\":3,\"1097\":7,\"1099\":2,\"1218\":1}}],[\"按业务需求决定\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"按照以下四点\",{\"1\":{\"1319\":1,\"1330\":1}}],[\"按照以下前四点\",{\"1\":{\"1308\":1}}],[\"按照任务计划\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"按照实际业务需求选择实现一个方法或者多个方法\",{\"1\":{\"253\":1,\"1205\":1}}],[\"按照自身业务要求\",{\"1\":{\"181\":1,\"394\":1,\"562\":1,\"748\":1,\"934\":1,\"1133\":1}}],[\"按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",{\"1\":{\"6\":1}}],[\"按要求更改\",{\"0\":{\"50\":1}}],[\"url\",{\"1\":{\"200\":3,\"203\":1,\"580\":3,\"583\":1,\"765\":3,\"768\":1,\"951\":3,\"954\":1,\"1152\":3,\"1155\":1}}],[\"userservice\",{\"1\":{\"247\":2,\"419\":2,\"604\":2,\"789\":2,\"983\":2,\"1199\":2}}],[\"users\",{\"1\":{\"247\":2,\"289\":1,\"419\":2,\"465\":1,\"604\":2,\"650\":1,\"789\":2,\"836\":1,\"983\":2,\"1030\":1,\"1199\":2,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"userlist\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"usermapper\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"user\",{\"1\":{\"165\":1,\"166\":4,\"168\":2,\"182\":2,\"208\":7,\"218\":2,\"225\":1,\"235\":4,\"246\":4,\"256\":2,\"260\":1,\"298\":1,\"309\":1,\"315\":2,\"317\":3,\"318\":1,\"325\":1,\"326\":2,\"329\":2,\"395\":2,\"406\":4,\"418\":4,\"473\":1,\"484\":1,\"490\":2,\"492\":1,\"498\":2,\"499\":2,\"563\":2,\"588\":7,\"591\":4,\"603\":4,\"658\":1,\"669\":1,\"675\":2,\"677\":1,\"683\":2,\"684\":2,\"749\":2,\"773\":7,\"776\":4,\"788\":4,\"844\":1,\"855\":1,\"861\":2,\"863\":1,\"869\":2,\"870\":2,\"935\":2,\"959\":7,\"970\":4,\"982\":4,\"1038\":1,\"1049\":1,\"1055\":2,\"1057\":1,\"1063\":2,\"1064\":2,\"1124\":1,\"1125\":4,\"1134\":2,\"1160\":7,\"1171\":4,\"1174\":2,\"1181\":1,\"1198\":4,\"1262\":1,\"1273\":1,\"1279\":2,\"1281\":3,\"1282\":1,\"1289\":1,\"1290\":2}}],[\"usr\",{\"1\":{\"60\":3}}],[\"unsigned\",{\"1\":{\"300\":1,\"301\":1,\"303\":1,\"304\":1,\"306\":1,\"475\":1,\"476\":1,\"478\":1,\"479\":1,\"481\":1,\"660\":1,\"661\":1,\"663\":1,\"664\":1,\"666\":1,\"846\":1,\"847\":1,\"849\":1,\"850\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1043\":1,\"1044\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1267\":1,\"1268\":1,\"1270\":1}}],[\"unit>\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"unit\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"unitname\",{\"1\":{\"268\":2,\"433\":2,\"618\":2,\"803\":2,\"997\":2,\"1214\":2}}],[\"unitname=warm\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"unactive\",{\"1\":{\"114\":1,\"123\":1,\"346\":1,\"353\":1,\"514\":1,\"521\":1,\"700\":1,\"707\":1,\"886\":1,\"893\":1,\"1081\":1,\"1088\":1}}],[\"unpublish\",{\"1\":{\"110\":1,\"342\":1,\"510\":1,\"696\":1,\"882\":1,\"1077\":1}}],[\"utilexception高版本不兼容\",{\"1\":{\"82\":1}}],[\"upgrade\",{\"1\":{\"48\":1,\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"updatetestleave\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"updatefill\",{\"1\":{\"186\":1,\"399\":1,\"567\":1,\"753\":1,\"939\":1,\"1138\":1}}],[\"updatebatch\",{\"1\":{\"151\":1,\"380\":1,\"548\":1,\"734\":1,\"920\":1,\"1116\":1}}],[\"updatebyid\",{\"1\":{\"145\":1,\"374\":1,\"542\":1,\"728\":1,\"914\":1,\"1110\":1}}],[\"updatehandler\",{\"1\":{\"132\":1,\"361\":1,\"529\":1,\"715\":1,\"901\":1,\"1097\":1}}],[\"update\",{\"0\":{\"1372\":1,\"1373\":1,\"1374\":1,\"1375\":1,\"1376\":1},\"1\":{\"48\":1,\"74\":9,\"75\":2,\"76\":2,\"77\":1,\"79\":4,\"80\":3,\"81\":4,\"82\":9,\"84\":7,\"95\":1,\"96\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1304\":8,\"1354\":8}}],[\"ui`\",{\"1\":{\"580\":1}}],[\"ui<\",{\"1\":{\"214\":1,\"965\":1,\"1166\":1}}],[\"ui\",{\"1\":{\"41\":1,\"76\":3,\"176\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"203\":4,\"209\":2,\"214\":1,\"215\":1,\"216\":5,\"557\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"579\":2,\"580\":3,\"581\":3,\"583\":2,\"743\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"768\":4,\"929\":1,\"945\":1,\"946\":1,\"947\":1,\"948\":1,\"949\":1,\"950\":1,\"951\":1,\"952\":1,\"954\":4,\"960\":2,\"965\":1,\"966\":1,\"967\":5,\"1128\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1149\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1155\":4,\"1161\":2,\"1166\":1,\"1167\":1,\"1168\":5,\"1298\":1,\"1309\":1,\"1310\":2,\"1311\":3,\"1320\":1,\"1321\":2,\"1322\":1,\"1331\":1,\"1332\":2,\"1333\":1,\"1348\":1}}],[\"ratio\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"rawtype\",{\"1\":{\"55\":2}}],[\"roles\",{\"1\":{\"246\":3,\"272\":2,\"418\":3,\"603\":3,\"788\":3,\"982\":3,\"1198\":3,\"1218\":2}}],[\"role\",{\"1\":{\"208\":5,\"235\":8,\"246\":3,\"272\":3,\"274\":4,\"275\":4,\"292\":6,\"317\":1,\"418\":3,\"446\":4,\"447\":4,\"468\":6,\"495\":2,\"588\":5,\"603\":3,\"631\":4,\"632\":4,\"653\":6,\"773\":5,\"788\":3,\"816\":4,\"817\":4,\"839\":6,\"959\":5,\"982\":3,\"1010\":4,\"1011\":4,\"1033\":6,\"1160\":5,\"1198\":3,\"1218\":3,\"1230\":4,\"1231\":4,\"1237\":4,\"1238\":4,\"1256\":6,\"1281\":1,\"1297\":4,\"1347\":4}}],[\"rolelist\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"rolemapper\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"rootentity\",{\"1\":{\"186\":6,\"399\":6,\"567\":6,\"753\":6,\"939\":6,\"1138\":6}}],[\"root\",{\"1\":{\"60\":6,\"216\":2,\"967\":2,\"1168\":2}}],[\"reject\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"reject退回\",{\"1\":{\"119\":1,\"126\":1,\"134\":1,\"301\":1,\"304\":1,\"349\":1,\"355\":1,\"363\":1,\"476\":1,\"479\":1,\"517\":1,\"523\":1,\"531\":1,\"661\":1,\"664\":1,\"703\":1,\"709\":1,\"717\":1,\"847\":1,\"850\":1,\"889\":1,\"895\":1,\"903\":1,\"1041\":1,\"1044\":1,\"1084\":1,\"1091\":1,\"1099\":1,\"1265\":1,\"1268\":1}}],[\"replace\",{\"1\":{\"222\":2,\"248\":1,\"333\":2,\"420\":1,\"500\":2,\"605\":1,\"685\":2,\"790\":1,\"871\":2,\"984\":1,\"1065\":2,\"1178\":2,\"1200\":1}}],[\"remote\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"removebyids\",{\"1\":{\"148\":1,\"377\":1,\"545\":1,\"731\":1,\"917\":1,\"1113\":1}}],[\"removebyid\",{\"1\":{\"146\":1,\"375\":1,\"543\":1,\"729\":1,\"915\":1,\"1111\":1}}],[\"removedef\",{\"1\":{\"108\":1,\"340\":1,\"508\":1,\"694\":1,\"880\":1,\"1075\":1}}],[\"remove\",{\"1\":{\"74\":1,\"76\":1,\"82\":2,\"84\":1,\"121\":1,\"147\":1,\"351\":1,\"376\":1,\"519\":1,\"544\":1,\"705\":1,\"730\":1,\"891\":1,\"916\":1,\"1086\":1,\"1112\":1,\"1304\":1,\"1354\":1}}],[\"readvalue\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"real\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"react版本\",{\"0\":{\"202\":1,\"582\":1,\"767\":1,\"953\":1,\"1154\":1}}],[\"redirect\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"reduction\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"reductionhandlers\",{\"1\":{\"131\":1,\"132\":1,\"235\":1,\"361\":1,\"529\":1,\"714\":1,\"715\":1,\"900\":1,\"901\":1,\"1096\":1,\"1097\":1}}],[\"reductionsignature\",{\"1\":{\"131\":1,\"235\":2,\"360\":1,\"528\":1,\"714\":1,\"900\":1,\"1096\":1}}],[\"requestmapping\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"requests\",{\"1\":{\"196\":2,\"575\":2,\"761\":2,\"947\":2,\"1148\":2,\"1310\":2,\"1321\":2,\"1332\":2}}],[\"result\",{\"1\":{\"222\":2,\"333\":2,\"500\":2,\"685\":2,\"871\":2,\"1065\":2,\"1178\":2}}],[\"resource\",{\"1\":{\"247\":1,\"267\":1,\"268\":1,\"269\":1,\"309\":1,\"419\":1,\"431\":1,\"432\":1,\"433\":1,\"434\":1,\"484\":1,\"604\":1,\"616\":1,\"617\":1,\"618\":1,\"619\":1,\"669\":1,\"789\":1,\"801\":1,\"802\":1,\"803\":1,\"804\":1,\"855\":1,\"983\":1,\"995\":1,\"996\":1,\"997\":1,\"998\":1,\"1049\":1,\"1199\":1,\"1213\":1,\"1214\":1,\"1215\":1,\"1273\":1}}],[\"resources目录下都可以\",{\"1\":{\"215\":1,\"966\":1,\"1167\":1}}],[\"resources\",{\"1\":{\"215\":1,\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"966\":1,\"1030\":1,\"1167\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"resource包路径变更的问题\",{\"1\":{\"88\":1}}],[\"restart\",{\"1\":{\"63\":1}}],[\"registry\",{\"1\":{\"198\":2,\"577\":2,\"763\":2,\"949\":2,\"1150\":2}}],[\"registermodule\",{\"1\":{\"55\":1}}],[\"regular\",{\"1\":{\"60\":2}}],[\"ref\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"ref=\",{\"1\":{\"201\":2,\"581\":2,\"766\":2,\"952\":2,\"1153\":2}}],[\"reflect\",{\"1\":{\"60\":1}}],[\"refactor\",{\"1\":{\"48\":1,\"74\":1,\"76\":1,\"79\":1,\"81\":1,\"82\":2,\"1304\":1,\"1354\":1}}],[\"return\",{\"1\":{\"55\":2,\"64\":4,\"166\":4,\"168\":4,\"171\":2,\"172\":3,\"173\":3,\"177\":3,\"180\":2,\"190\":1,\"196\":1,\"197\":1,\"200\":1,\"203\":1,\"207\":2,\"208\":13,\"218\":4,\"222\":5,\"225\":2,\"227\":2,\"228\":3,\"229\":3,\"237\":6,\"256\":4,\"260\":2,\"271\":1,\"272\":4,\"309\":7,\"310\":5,\"313\":1,\"314\":1,\"326\":2,\"329\":4,\"333\":5,\"390\":3,\"393\":2,\"403\":1,\"406\":4,\"411\":6,\"484\":7,\"485\":5,\"488\":1,\"489\":1,\"499\":2,\"500\":7,\"558\":3,\"561\":2,\"571\":1,\"575\":1,\"576\":1,\"580\":1,\"583\":1,\"587\":2,\"588\":13,\"591\":4,\"596\":6,\"669\":7,\"670\":5,\"673\":1,\"674\":1,\"684\":2,\"685\":7,\"744\":3,\"747\":2,\"757\":1,\"761\":1,\"762\":1,\"765\":1,\"768\":1,\"772\":2,\"773\":13,\"776\":4,\"781\":6,\"855\":7,\"856\":5,\"859\":1,\"860\":1,\"870\":2,\"871\":7,\"930\":3,\"933\":2,\"943\":1,\"947\":1,\"948\":1,\"951\":1,\"954\":1,\"958\":2,\"959\":13,\"970\":4,\"975\":6,\"1049\":7,\"1050\":5,\"1053\":1,\"1054\":1,\"1064\":2,\"1065\":7,\"1125\":4,\"1129\":3,\"1132\":2,\"1142\":1,\"1148\":1,\"1149\":1,\"1152\":1,\"1155\":1,\"1159\":2,\"1160\":13,\"1171\":4,\"1174\":4,\"1178\":5,\"1181\":2,\"1183\":2,\"1184\":3,\"1185\":3,\"1189\":6,\"1217\":1,\"1218\":4,\"1273\":7,\"1274\":5,\"1277\":1,\"1278\":1,\"1290\":2,\"1310\":1,\"1315\":2,\"1321\":1,\"1326\":2,\"1332\":1,\"1337\":2}}],[\"revert\",{\"1\":{\"48\":1}}],[\"ruoyi\",{\"1\":{\"41\":6,\"64\":5,\"176\":2,\"189\":1,\"247\":1,\"389\":2,\"402\":1,\"557\":2,\"570\":1,\"743\":2,\"756\":1,\"929\":2,\"942\":1,\"1128\":2,\"1141\":1,\"1199\":1}}],[\"性能提升\",{\"1\":{\"48\":1}}],[\"将操作权限转给别人处理\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"将自己的主办或者经办权限转移委派至别的用户代为处理\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"将自己仓库的项目拉去到本地做代码编写\",{\"0\":{\"45\":1}}],[\"将工作流中的某个任务退回给之前的执行者\",{\"1\":{\"273\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"将流程驳回至之前已经处理过的任务节点\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"将map转为字符串\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"将字符串转为map\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"将待办任务的创建时间赋予历史任务开始时间\",{\"1\":{\"84\":2}}],[\"将文件解压至\",{\"1\":{\"60\":1}}],[\"将编写好的代码\",{\"0\":{\"48\":1}}],[\"切换到新建的功能分支\",{\"0\":{\"46\":1}}],[\"使用下面方法\",{\"1\":{\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"使用mybaits\",{\"1\":{\"267\":1,\"269\":1,\"432\":1,\"434\":1,\"617\":1,\"619\":1,\"802\":1,\"804\":1,\"996\":1,\"998\":1,\"1213\":1,\"1215\":1}}],[\"使用设计器\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"使用演示\",{\"0\":{\"160\":1}}],[\"使用jar引入方式引入设计器\",{\"1\":{\"77\":1}}],[\"使用方式在类上面写上\",{\"1\":{\"47\":1}}],[\"使用idea打开项目\",{\"0\":{\"46\":1}}],[\"使用git工具\",{\"0\":{\"45\":1}}],[\"使精力全部投入到项目设计研发中\",{\"1\":{\"6\":1}}],[\"步骤八\",{\"0\":{\"50\":1}}],[\"步骤七\",{\"0\":{\"49\":1}}],[\"步骤六\",{\"0\":{\"48\":1}}],[\"步骤五\",{\"0\":{\"47\":1}}],[\"步骤四\",{\"0\":{\"46\":1}}],[\"步骤三\",{\"0\":{\"45\":1}}],[\"步骤二\",{\"0\":{\"44\":1}}],[\"步骤一\",{\"0\":{\"43\":1}}],[\"mptenanthandler\",{\"1\":{\"309\":4,\"310\":2,\"484\":4,\"485\":2,\"669\":4,\"670\":2,\"855\":4,\"856\":2,\"1049\":4,\"1050\":2,\"1273\":4,\"1274\":2}}],[\"mdata\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"mm\",{\"1\":{\"208\":6,\"588\":6,\"773\":6,\"959\":6,\"1160\":6}}],[\"meta\",{\"1\":{\"201\":2,\"215\":1,\"766\":2,\"952\":2,\"966\":1,\"1153\":2,\"1167\":1}}],[\"method\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"methods\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"message\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"235\":4,\"301\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"357\":2,\"358\":2,\"359\":2,\"360\":2,\"361\":1,\"476\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"525\":2,\"526\":2,\"527\":2,\"528\":2,\"529\":1,\"661\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"847\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1041\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1265\":1}}],[\"mounted\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"modifyhandler\",{\"1\":{\"361\":1,\"529\":1}}],[\"modifyhandler增加链式调用\",{\"1\":{\"80\":1}}],[\"modal\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"modes\",{\"1\":{\"81\":1}}],[\"modules\",{\"1\":{\"55\":1}}],[\"master\",{\"0\":{\"1361\":1}}],[\"maven依赖\",{\"0\":{\"282\":1,\"456\":1,\"641\":1,\"826\":1,\"1020\":1,\"1246\":1}}],[\"maven\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"mathutil\",{\"1\":{\"173\":2,\"229\":2,\"1185\":2}}],[\"map类型\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"map转换异常\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"maptostr\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"maputil\",{\"1\":{\"222\":1,\"237\":1,\"254\":1,\"333\":1,\"411\":1,\"425\":1,\"500\":1,\"596\":1,\"610\":1,\"685\":1,\"781\":1,\"795\":1,\"871\":1,\"975\":1,\"989\":1,\"1065\":1,\"1178\":1,\"1189\":1,\"1206\":1}}],[\"map\",{\"1\":{\"171\":3,\"227\":3,\"237\":3,\"246\":1,\"411\":3,\"418\":1,\"596\":3,\"603\":1,\"781\":3,\"788\":1,\"975\":3,\"982\":1,\"1183\":3,\"1189\":3,\"1198\":1}}],[\"map<string\",{\"1\":{\"166\":1,\"168\":1,\"171\":2,\"172\":2,\"218\":1,\"222\":1,\"225\":1,\"227\":2,\"228\":2,\"237\":2,\"247\":1,\"254\":2,\"256\":1,\"260\":1,\"315\":2,\"317\":1,\"323\":1,\"326\":1,\"329\":1,\"333\":1,\"406\":1,\"411\":2,\"419\":1,\"425\":2,\"490\":2,\"496\":1,\"499\":1,\"500\":2,\"591\":1,\"596\":2,\"604\":1,\"610\":2,\"675\":2,\"681\":1,\"684\":1,\"685\":2,\"776\":1,\"781\":2,\"789\":1,\"795\":2,\"861\":2,\"867\":1,\"870\":1,\"871\":2,\"970\":1,\"975\":2,\"983\":1,\"989\":2,\"1055\":2,\"1061\":1,\"1064\":1,\"1065\":2,\"1125\":1,\"1171\":1,\"1174\":1,\"1178\":1,\"1181\":1,\"1183\":2,\"1184\":2,\"1189\":2,\"1199\":1,\"1206\":2,\"1279\":2,\"1281\":1,\"1287\":1,\"1290\":1}}],[\"mappingjackson2httpmessageconverter\",{\"1\":{\"55\":2}}],[\"main\",{\"1\":{\"61\":1,\"62\":1,\"215\":2,\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"966\":2,\"1030\":1,\"1167\":2,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"max\",{\"1\":{\"55\":3}}],[\"minliuhua<\",{\"1\":{\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"1309\":1}}],[\"minliuhua\",{\"1\":{\"63\":1,\"76\":1,\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"min\",{\"1\":{\"55\":3,\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"min290\",{\"1\":{\"41\":2}}],[\"mysql8dialect\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"mysql\",{\"1\":{\"15\":1,\"64\":1,\"176\":1,\"279\":1,\"389\":1,\"453\":1,\"462\":1,\"557\":1,\"638\":1,\"647\":1,\"743\":1,\"823\":1,\"832\":1,\"929\":1,\"1017\":1,\"1026\":1,\"1128\":1,\"1243\":1}}],[\"mybatisplus全局配置\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"mybatisplusconfig\",{\"1\":{\"64\":1,\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"64\":5,\"309\":4,\"310\":2,\"484\":4,\"485\":2,\"669\":4,\"670\":2,\"855\":4,\"856\":2,\"1049\":4,\"1050\":2,\"1273\":4,\"1274\":2}}],[\"mybatisplus\",{\"1\":{\"64\":5}}],[\"mybatisconfiguration\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"mybatisconfig\",{\"1\":{\"64\":1}}],[\"mybatis\",{\"0\":{\"262\":1,\"267\":1,\"269\":1,\"283\":1,\"284\":1,\"286\":1,\"308\":1,\"427\":1,\"432\":1,\"434\":1,\"457\":1,\"458\":1,\"460\":1,\"483\":1,\"612\":1,\"617\":1,\"619\":1,\"642\":1,\"643\":1,\"645\":1,\"668\":1,\"797\":1,\"802\":1,\"804\":1,\"827\":1,\"828\":1,\"830\":1,\"854\":1,\"991\":1,\"996\":1,\"998\":1,\"1021\":1,\"1022\":1,\"1024\":1,\"1048\":1,\"1208\":1,\"1213\":1,\"1215\":1,\"1247\":1,\"1248\":1,\"1250\":1,\"1272\":1},\"1\":{\"12\":2,\"16\":3,\"64\":5,\"262\":1,\"263\":2,\"264\":2,\"283\":3,\"284\":3,\"285\":1,\"286\":3,\"308\":1,\"427\":1,\"428\":2,\"429\":2,\"457\":2,\"458\":2,\"459\":1,\"460\":2,\"463\":3,\"483\":1,\"612\":1,\"613\":2,\"614\":2,\"642\":2,\"643\":2,\"644\":1,\"645\":2,\"648\":3,\"668\":1,\"797\":1,\"798\":2,\"799\":2,\"827\":3,\"828\":3,\"829\":1,\"830\":3,\"833\":3,\"854\":1,\"991\":1,\"992\":2,\"993\":2,\"1021\":3,\"1022\":3,\"1023\":1,\"1024\":3,\"1027\":3,\"1048\":1,\"1208\":1,\"1209\":2,\"1210\":2,\"1247\":3,\"1248\":3,\"1249\":1,\"1250\":3,\"1272\":1,\"1291\":4,\"1299\":2,\"1305\":2,\"1316\":2,\"1327\":2,\"1338\":2,\"1341\":4,\"1349\":2,\"1355\":2}}],[\"版本\",{\"1\":{\"41\":1,\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"由于各数据库sql语句存在差异\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"由于服务器上缺少中文字体\",{\"1\":{\"60\":1}}],[\"由分派监听器实现替换\",{\"1\":{\"82\":1}}],[\"由社区\",{\"1\":{\"62\":1}}],[\"由流程设计中的对应权限人去办理\",{\"1\":{\"38\":1,\"442\":1,\"627\":1,\"812\":1,\"1006\":1,\"1226\":1}}],[\"由作者与团队成员判定\",{\"1\":{\"9\":1}}],[\"配置数据源对应的\",{\"1\":{\"264\":1,\"429\":1,\"614\":1,\"799\":1,\"993\":1,\"1210\":1}}],[\"配置实现类的全限定名\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"配置配置\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"配置文件\",{\"0\":{\"174\":1,\"387\":1,\"555\":1,\"741\":1,\"927\":1,\"1126\":1}}],[\"配置了其他id策略不生效的问题\",{\"1\":{\"78\":1}}],[\"配置\",{\"1\":{\"64\":1}}],[\"配置跳转名称\",{\"1\":{\"36\":1,\"440\":1,\"625\":1,\"810\":1,\"1004\":1,\"1224\":1}}],[\"配置节点名称\",{\"1\":{\"35\":1,\"439\":1,\"624\":1,\"809\":1,\"1003\":1,\"1223\":1}}],[\"节点名称\",{\"1\":{\"305\":1,\"480\":1,\"665\":1,\"851\":1,\"1045\":1,\"1269\":1}}],[\"节点类型\",{\"1\":{\"274\":1,\"303\":1,\"305\":1,\"446\":1,\"478\":1,\"480\":1,\"631\":1,\"663\":1,\"665\":1,\"816\":1,\"849\":1,\"851\":1,\"1010\":1,\"1043\":1,\"1045\":1,\"1230\":1,\"1237\":1,\"1267\":1,\"1269\":1}}],[\"节点和流程监听器\",{\"0\":{\"244\":1,\"1196\":1}}],[\"节点监听器和某个节点有关\",{\"1\":{\"414\":1,\"599\":1,\"784\":1,\"978\":1}}],[\"节点监听器\",{\"0\":{\"251\":1,\"423\":1,\"608\":1,\"793\":1,\"987\":1,\"1203\":1},\"1\":{\"239\":2,\"414\":1,\"599\":1,\"784\":1,\"978\":1,\"1191\":2}}],[\"节点编码\",{\"1\":{\"119\":1,\"126\":1,\"305\":1,\"349\":1,\"355\":1,\"480\":1,\"517\":1,\"523\":1,\"665\":1,\"703\":1,\"709\":1,\"851\":1,\"889\":1,\"895\":1,\"1045\":1,\"1084\":1,\"1091\":1,\"1269\":1}}],[\"节点线条保存关联名称\",{\"1\":{\"77\":1}}],[\"节点详情进入改为双击\",{\"1\":{\"76\":1}}],[\"节点权限\",{\"1\":{\"35\":1,\"439\":1,\"624\":1,\"809\":1,\"1003\":1,\"1223\":1}}],[\"节水信息管理系统\",{\"1\":{\"2\":1}}],[\"动态修改代办任务信息\",{\"1\":{\"240\":1,\"245\":1,\"253\":1,\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1,\"1192\":1,\"1197\":1,\"1205\":1}}],[\"动态表单支持\",{\"1\":{\"72\":1}}],[\"动态加载这个页面\",{\"1\":{\"33\":1,\"437\":1,\"622\":1,\"807\":1,\"1001\":1,\"1221\":1}}],[\"动态权限\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"审批者\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"审批表单是否自定义\",{\"1\":{\"300\":1,\"301\":1,\"303\":1,\"305\":1,\"475\":1,\"476\":1,\"478\":1,\"480\":1,\"660\":1,\"661\":1,\"663\":1,\"665\":1,\"846\":1,\"847\":1,\"849\":1,\"851\":1,\"1040\":1,\"1041\":1,\"1043\":1,\"1045\":1,\"1264\":1,\"1265\":1,\"1267\":1,\"1269\":1}}],[\"审批表单路径\",{\"1\":{\"33\":1,\"300\":1,\"301\":1,\"303\":1,\"305\":1,\"437\":1,\"475\":1,\"476\":1,\"478\":1,\"480\":1,\"622\":1,\"660\":1,\"661\":1,\"663\":1,\"665\":1,\"807\":1,\"846\":1,\"847\":1,\"849\":1,\"851\":1,\"1001\":1,\"1040\":1,\"1041\":1,\"1043\":1,\"1045\":1,\"1221\":1,\"1264\":1,\"1265\":1,\"1267\":1,\"1269\":1}}],[\"审批中\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"审批通过率\",{\"1\":{\"451\":2,\"636\":2,\"821\":2,\"1015\":2,\"1235\":2,\"1242\":2}}],[\"审批通过\",{\"1\":{\"274\":1,\"276\":1,\"301\":1,\"302\":1,\"446\":1,\"448\":1,\"476\":1,\"477\":1,\"631\":1,\"633\":1,\"661\":1,\"662\":1,\"816\":1,\"818\":1,\"847\":1,\"848\":1,\"1010\":1,\"1012\":1,\"1041\":1,\"1042\":1,\"1230\":1,\"1232\":1,\"1237\":1,\"1239\":1,\"1265\":1,\"1266\":1}}],[\"审批\",{\"1\":{\"273\":1,\"451\":5,\"452\":1,\"636\":5,\"637\":1,\"821\":5,\"822\":1,\"1015\":5,\"1016\":1,\"1235\":5,\"1236\":1,\"1242\":5}}],[\"审批前获取当前办理人\",{\"1\":{\"271\":1,\"1217\":1}}],[\"审批前通常需要获取当前办理人所拥有的权限\",{\"1\":{\"270\":1,\"1216\":1}}],[\"审批业务中经常会出现办理人中途变更的情况\",{\"1\":{\"232\":1}}],[\"审批节点才会通过\",{\"1\":{\"159\":3,\"273\":3,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"审批过程中可能存在\",{\"1\":{\"158\":1}}],[\"审批意见\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"301\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"476\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"525\":1,\"526\":1,\"527\":1,\"528\":1,\"529\":1,\"661\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"847\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1041\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1265\":1}}],[\"审批页面中包含业务详情页面\",{\"1\":{\"98\":1}}],[\"审批功能\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"确保演练按计划推进\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"确保项目按计划进行\",{\"1\":{\"14\":1}}],[\"确定唯一\",{\"1\":{\"33\":1,\"437\":1,\"622\":1,\"807\":1,\"1001\":1,\"1221\":1}}],[\"新群\",{\"0\":{\"1303\":1,\"1353\":1}}],[\"新手教学视频\",{\"1\":{\"296\":1,\"471\":1,\"656\":1,\"842\":1,\"1036\":1,\"1260\":1}}],[\"新增抄送人方法\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"新增抄送演示案例\",{\"1\":{\"84\":1}}],[\"新增oa\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"新增\",{\"0\":{\"144\":1,\"373\":1,\"541\":1,\"727\":1,\"913\":1,\"1109\":1},\"1\":{\"144\":1,\"373\":1,\"541\":1,\"727\":1,\"913\":1,\"1109\":1}}],[\"新增后需要通过savexml接口保存流程节点和流程跳转数据\",{\"0\":{\"101\":1,\"688\":1,\"874\":1,\"1068\":1}}],[\"新增多租户模式\",{\"1\":{\"98\":1}}],[\"新增vue3版本\",{\"1\":{\"98\":1}}],[\"新增代码示例\",{\"1\":{\"94\":1}}],[\"新增根据流程定义和当前节点code获取下一节点api接口\",{\"1\":{\"92\":1}}],[\"新增根据流程定义id集合\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"新增权限监听器\",{\"1\":{\"91\":1}}],[\"新增监听器生命周期概念\",{\"1\":{\"90\":1}}],[\"新增监听器spel表达式\",{\"1\":{\"74\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"新增创建任务监听器\",{\"1\":{\"90\":1}}],[\"新增创建流程定义\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"新增赋值流程记录创建更新时间\",{\"1\":{\"89\":1}}],[\"新增历史任务记录结束节点\",{\"1\":{\"89\":1}}],[\"新增链式查询排序提供id排序\",{\"1\":{\"89\":1}}],[\"新增配置文件\",{\"1\":{\"89\":1}}],[\"新增三个测试模块\",{\"1\":{\"86\":1}}],[\"新增用户表\",{\"1\":{\"85\":1}}],[\"新增1\",{\"1\":{\"84\":1}}],[\"新增测试模块\",{\"1\":{\"84\":1}}],[\"新增jpa的solon扩展包\",{\"1\":{\"82\":1}}],[\"新增mybatis\",{\"1\":{\"82\":1,\"84\":1}}],[\"新增mybatisplusconfig\",{\"1\":{\"64\":1}}],[\"新增easy\",{\"1\":{\"82\":1}}],[\"新增分派监听器\",{\"1\":{\"82\":1}}],[\"新增可通过spi机制加载条件表达式\",{\"1\":{\"82\":1}}],[\"新增spel条件表达式\",{\"1\":{\"82\":1}}],[\"新增方法\",{\"1\":{\"77\":1}}],[\"新增办理人变量表达式流程案例\",{\"1\":{\"77\":1}}],[\"新增办理人选择项接口\",{\"1\":{\"72\":1}}],[\"新增转办\",{\"1\":{\"76\":1}}],[\"新增流程定义\",{\"0\":{\"102\":1,\"689\":1,\"1069\":1}}],[\"新增流程定义表数据\",{\"0\":{\"101\":1,\"688\":1,\"874\":1,\"1068\":1}}],[\"新增流程状态枚举\",{\"1\":{\"76\":1}}],[\"新增流程图元数据\",{\"1\":{\"72\":1}}],[\"新增boot3+java17支持\",{\"1\":{\"76\":1}}],[\"新增支持条件表达式\",{\"1\":{\"98\":1}}],[\"新增支持接入业务系统token\",{\"1\":{\"75\":1}}],[\"新增支持solon\",{\"1\":{\"74\":1,\"1303\":1,\"1304\":1,\"1353\":1,\"1354\":1}}],[\"新增审批前获取当前办理人接口\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"新增定义\",{\"0\":{\"33\":1,\"437\":1,\"622\":1,\"807\":1,\"1001\":1,\"1221\":1}}],[\"新宋体\",{\"1\":{\"60\":1}}],[\"新创建的类使用这个模板生成注释\",{\"1\":{\"47\":1}}],[\"新建一个此pr功能点的专属分支\",{\"0\":{\"44\":1}}],[\"新理益智慧网络科技\",{\"1\":{\"2\":1}}],[\"atomicboolean\",{\"1\":{\"309\":2,\"484\":2,\"669\":2,\"855\":2,\"1049\":2,\"1273\":2}}],[\"attack\",{\"1\":{\"64\":1}}],[\"activity\",{\"1\":{\"300\":1,\"302\":1,\"475\":1,\"477\":1,\"660\":1,\"662\":1,\"846\":1,\"848\":1,\"1040\":1,\"1042\":1,\"1264\":1,\"1266\":1}}],[\"active\",{\"1\":{\"113\":1,\"122\":1,\"345\":1,\"352\":1,\"513\":1,\"520\":1,\"699\":1,\"706\":1,\"885\":1,\"892\":1,\"1080\":1,\"1087\":1}}],[\"all\",{\"1\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"allow\",{\"1\":{\"62\":1}}],[\"associated\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"assignmentlistener\",{\"1\":{\"248\":2,\"420\":2,\"605\":2,\"790\":2,\"984\":2,\"1200\":2}}],[\"assignmentexplistener\",{\"1\":{\"241\":1,\"1193\":1}}],[\"assignment\",{\"1\":{\"240\":1,\"241\":1,\"245\":2,\"253\":1,\"413\":1,\"417\":2,\"598\":1,\"602\":2,\"783\":1,\"787\":2,\"977\":1,\"981\":2,\"1192\":1,\"1193\":1,\"1197\":2,\"1205\":1}}],[\"assertutil\",{\"1\":{\"172\":2,\"228\":2,\"1184\":2}}],[\"aslist\",{\"1\":{\"208\":1,\"235\":8,\"292\":3,\"309\":1,\"317\":2,\"468\":3,\"484\":1,\"588\":1,\"653\":3,\"669\":1,\"773\":1,\"839\":3,\"855\":1,\"959\":1,\"1033\":3,\"1049\":1,\"1160\":1,\"1256\":3,\"1273\":1,\"1281\":2,\"1297\":2,\"1347\":2}}],[\"arraylist<>\",{\"1\":{\"221\":1,\"224\":1,\"246\":1,\"259\":1,\"317\":1,\"332\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1177\":1,\"1180\":1,\"1198\":1,\"1281\":1}}],[\"arrays\",{\"1\":{\"208\":1,\"235\":8,\"292\":3,\"309\":1,\"317\":2,\"468\":3,\"484\":1,\"588\":1,\"653\":3,\"669\":1,\"773\":1,\"839\":3,\"855\":1,\"959\":1,\"1033\":3,\"1049\":1,\"1160\":1,\"1256\":3,\"1273\":1,\"1281\":2,\"1297\":2,\"1347\":2}}],[\"artifactid>\",{\"1\":{\"64\":1,\"79\":1,\"193\":1,\"194\":1,\"214\":2,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":4,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":4,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":4,\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":4,\"945\":1,\"965\":2,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":4,\"1145\":1,\"1146\":1,\"1166\":2,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":4,\"1291\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\"authenticated\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"authorization\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"authorization=$\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"authorization1\",{\"1\":{\"176\":1,\"929\":1,\"1128\":1}}],[\"authorizehttprequests\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"author\",{\"1\":{\"64\":1,\"168\":1,\"171\":1,\"172\":1,\"173\":1,\"177\":1,\"207\":1,\"208\":1,\"218\":1,\"221\":1,\"222\":1,\"224\":1,\"225\":1,\"227\":1,\"228\":1,\"229\":1,\"253\":1,\"256\":1,\"259\":1,\"260\":1,\"271\":1,\"272\":1,\"314\":1,\"329\":1,\"332\":1,\"333\":1,\"390\":1,\"489\":1,\"500\":2,\"558\":1,\"587\":1,\"588\":1,\"674\":1,\"685\":2,\"744\":1,\"772\":1,\"773\":1,\"860\":1,\"871\":2,\"930\":1,\"958\":1,\"959\":1,\"1054\":1,\"1065\":2,\"1129\":1,\"1159\":1,\"1160\":1,\"1174\":1,\"1177\":1,\"1178\":1,\"1180\":1,\"1181\":1,\"1183\":1,\"1184\":1,\"1185\":1,\"1205\":1,\"1217\":1,\"1218\":1,\"1278\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"authorslist\",{\"1\":{\"30\":1}}],[\"autowired\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"auto\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"aftereval\",{\"1\":{\"172\":2,\"173\":1,\"228\":2,\"229\":1,\"1184\":2,\"1185\":1}}],[\"abstract\",{\"1\":{\"172\":2,\"228\":2,\"1184\":2}}],[\"a\",{\"1\":{\"166\":2,\"406\":2,\"591\":2,\"776\":2,\"970\":2,\"1125\":2,\"1171\":2}}],[\"anon\",{\"1\":{\"197\":2,\"576\":2,\"762\":1,\"948\":2,\"1149\":2}}],[\"any\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"anyrequest\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"anynodecode不为空\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"anynodecode\",{\"1\":{\"134\":2,\"363\":2,\"531\":2,\"717\":2,\"903\":2,\"1099\":2}}],[\"antmatchers\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"annotation\",{\"1\":{\"64\":4}}],[\"api是前端访问前缀比如prod\",{\"1\":{\"76\":1}}],[\"api\",{\"1\":{\"76\":2,\"200\":3,\"201\":3,\"765\":3,\"766\":3,\"951\":3,\"952\":3,\"1152\":3,\"1153\":3}}],[\"approver\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"approval\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"app\",{\"1\":{\"76\":2,\"200\":2,\"201\":2,\"765\":2,\"766\":2,\"951\":2,\"952\":2,\"1152\":2,\"1153\":2}}],[\"application\",{\"1\":{\"62\":1}}],[\"adru\",{\"1\":{\"84\":2}}],[\"addtasks\",{\"1\":{\"317\":4,\"1281\":4}}],[\"addall\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"add\",{\"1\":{\"216\":1,\"221\":1,\"224\":1,\"246\":2,\"259\":1,\"272\":2,\"274\":1,\"317\":1,\"332\":1,\"418\":2,\"446\":1,\"603\":2,\"631\":1,\"788\":2,\"816\":1,\"967\":1,\"982\":2,\"1010\":1,\"1168\":1,\"1177\":1,\"1180\":1,\"1198\":2,\"1218\":2,\"1230\":1,\"1237\":1,\"1281\":1}}],[\"addr\",{\"1\":{\"216\":2,\"967\":2,\"1168\":2}}],[\"addpathpatterns\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"addinterceptor\",{\"1\":{\"198\":1,\"310\":1,\"485\":1,\"577\":1,\"670\":1,\"763\":1,\"856\":1,\"949\":1,\"1050\":1,\"1150\":1,\"1274\":1}}],[\"addinterceptors\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"addinnerinterceptor\",{\"1\":{\"64\":3,\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"addsignature\",{\"1\":{\"130\":1,\"235\":2,\"359\":1,\"527\":1,\"713\":1,\"899\":1,\"1095\":1}}],[\"addserializer\",{\"1\":{\"55\":6}}],[\"addhandlers\",{\"1\":{\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"235\":3,\"357\":2,\"358\":2,\"359\":2,\"360\":2,\"361\":1,\"525\":2,\"526\":2,\"527\":2,\"528\":2,\"529\":1,\"711\":1,\"712\":1,\"713\":1,\"715\":1,\"897\":1,\"898\":1,\"899\":1,\"901\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1097\":1}}],[\"admin的application\",{\"1\":{\"64\":1}}],[\"admin123\",{\"1\":{\"17\":1,\"1300\":1,\"1306\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1350\":1,\"1356\":1}}],[\"admin\",{\"1\":{\"17\":1,\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1300\":1,\"1306\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1344\":1,\"1350\":1,\"1356\":1}}],[\"贡献者列表\",{\"0\":{\"30\":1},\"1\":{\"30\":1}}],[\"贡献代码\",{\"0\":{\"8\":1}}],[\"联系我\",{\"1\":{\"29\":1}}],[\"技术咨询等\",{\"1\":{\"28\":1}}],[\"技术经理\",{\"1\":{\"25\":1}}],[\"关系型\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"关闭按钮\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"关于warm\",{\"1\":{\"28\":1}}],[\"关键质量特性\",{\"1\":{\"2\":1}}],[\"私人服务\",{\"0\":{\"28\":1}}],[\"让你感受作者有多话痨\",{\"1\":{\"27\":1}}],[\"让好的项目能够被更多人看到\",{\"1\":{\"5\":1}}],[\"看见必回复\",{\"1\":{\"27\":1}}],[\"承诺\",{\"1\":{\"27\":1}}],[\"早进群早接触更多的问题\",{\"1\":{\"27\":1}}],[\"听作者解答问题等于习题讲解\",{\"1\":{\"27\":1}}],[\"问问题等于做习题\",{\"1\":{\"27\":1}}],[\"邀请进入vip群\",{\"1\":{\"27\":1}}],[\"支付后加微信号\",{\"1\":{\"27\":1}}],[\"支持四种监听器\",{\"1\":{\"1299\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1}}],[\"支持四种监听器和不同颗粒的的作用范围\",{\"1\":{\"12\":1,\"1305\":1,\"1355\":1}}],[\"支持一对一替换\",{\"1\":{\"317\":1,\"1281\":1}}],[\"支持配置类包名和表达式\",{\"1\":{\"241\":1,\"1193\":1}}],[\"支持类包名配置和表达式配置\",{\"1\":{\"238\":1,\"1190\":1}}],[\"支持设置排序字段\",{\"1\":{\"138\":1,\"140\":1,\"367\":1,\"369\":1,\"535\":1,\"537\":1,\"721\":1,\"723\":1,\"907\":1,\"909\":1,\"1103\":1,\"1105\":1}}],[\"支持待办任务和已办任务\",{\"1\":{\"98\":1}}],[\"支持生成流程图\",{\"1\":{\"98\":1}}],[\"支持自定义填充\",{\"1\":{\"89\":1}}],[\"支持转办功能\",{\"1\":{\"88\":1}}],[\"支持第二个节点为网关节点的情况\",{\"1\":{\"87\":1}}],[\"支持代办任务中办理人等动态修改\",{\"1\":{\"82\":1}}],[\"支持流程状态扩展\",{\"1\":{\"82\":1}}],[\"支持接收外部流程状态\",{\"1\":{\"82\":1}}],[\"支持orm默认策略\",{\"1\":{\"79\":1}}],[\"支持orm框架类型\",{\"0\":{\"16\":1,\"463\":1,\"648\":1,\"833\":1,\"1027\":1},\"1\":{\"1291\":1,\"1341\":1}}],[\"支持$\",{\"1\":{\"79\":1}}],[\"支持顺序按顺序加载一种\",{\"1\":{\"79\":1}}],[\"支持多token\",{\"1\":{\"75\":1}}],[\"支持扩展\",{\"1\":{\"70\":1,\"241\":1,\"317\":1,\"1193\":1,\"1281\":1}}],[\"支持数据库类型\",{\"0\":{\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1}}],[\"支持solon和便捷性提升\",{\"0\":{\"1302\":1,\"1352\":1}}],[\"支持solon和springboot\",{\"1\":{\"12\":1,\"1305\":1,\"1355\":1}}],[\"支持solon\",{\"1\":{\"98\":1}}],[\"支持spel表达式\",{\"1\":{\"12\":1,\"1305\":1,\"1355\":1}}],[\"支持通过\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"欢迎加群交流\",{\"1\":{\"27\":1}}],[\"不需要在为引入设计器而烦恼了\",{\"1\":{\"1308\":1,\"1319\":1,\"1330\":1}}],[\"不需要代理\",{\"1\":{\"583\":1}}],[\"不需要搬运并且适配等工作\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"不迷路\",{\"1\":{\"280\":1,\"1244\":1}}],[\"不可保存\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"不可二次分发开源参与同类竞品\",{\"1\":{\"13\":1}}],[\"不符合业务要求\",{\"1\":{\"185\":1,\"398\":1,\"566\":1,\"752\":1,\"938\":1,\"1137\":1}}],[\"不包含\",{\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"不等于\",{\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"不同的操作\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"不同实体类\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"不同情况对应不同协作类型\",{\"1\":{\"158\":1}}],[\"不同节点也支持配置审批表单路径\",{\"1\":{\"82\":1}}],[\"不传不校验权限\",{\"1\":{\"120\":1,\"127\":1,\"518\":1,\"524\":1,\"704\":1,\"710\":1,\"890\":1,\"896\":1,\"1085\":1,\"1092\":1}}],[\"不忽略\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"361\":1,\"529\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1}}],[\"不校验是否有审批人\",{\"1\":{\"84\":1}}],[\"不做权限校验\",{\"1\":{\"80\":1}}],[\"不是创建时间\",{\"1\":{\"77\":1}}],[\"不再需要\",{\"1\":{\"76\":2}}],[\"不接收外部设置\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"不受限制\",{\"1\":{\"64\":1}}],[\"不填默认为orm扩展自带生成器或者warm\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"不代表着项目收费\",{\"1\":{\"27\":1}}],[\"遵循开源协议\",{\"1\":{\"27\":1}}],[\"均开源免费可商用\",{\"1\":{\"27\":1}}],[\"喜欢拥抱新技术\",{\"1\":{\"25\":1}}],[\"zzz\",{\"1\":{\"166\":1,\"1125\":1}}],[\"zip\",{\"1\":{\"60\":1}}],[\"zhfonts\",{\"1\":{\"60\":5}}],[\"zhen\",{\"1\":{\"25\":1,\"41\":2,\"72\":1,\"77\":1}}],[\"zyflzz\",{\"1\":{\"2\":1}}],[\"跑步\",{\"1\":{\"25\":1}}],[\"爱好软件开发\",{\"1\":{\"25\":1}}],[\"爱好撸码\",{\"1\":{\"25\":1}}],[\"爱好撸代码\",{\"1\":{\"25\":1}}],[\"爱好玩服务器和撸代码\",{\"1\":{\"25\":1}}],[\"jar\",{\"1\":{\"63\":1}}],[\"jackson\",{\"1\":{\"79\":2,\"236\":1,\"410\":1,\"595\":1,\"780\":1,\"974\":1,\"1188\":1}}],[\"jackson2objectmapperbuilder\",{\"1\":{\"55\":2}}],[\"jackson2objectmapperbuildercustomizer\",{\"1\":{\"55\":1}}],[\"jackson2httpmessageconverter\",{\"1\":{\"55\":1}}],[\"jacksonconfig\",{\"1\":{\"55\":1}}],[\"jacksonstdimpl\",{\"1\":{\"55\":1}}],[\"java注释掉\",{\"1\":{\"64\":1}}],[\"java\",{\"1\":{\"60\":1,\"279\":2,\"453\":2,\"638\":2,\"823\":2,\"1017\":2,\"1243\":2}}],[\"javatimemodule\",{\"1\":{\"55\":7}}],[\"java开发工程师\",{\"1\":{\"25\":1}}],[\"java研发工程师\",{\"1\":{\"25\":1}}],[\"js配置代码\",{\"1\":{\"580\":1}}],[\"jsqlparser\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"jsonobject\",{\"1\":{\"254\":2,\"425\":2,\"610\":2,\"795\":2,\"989\":2,\"1206\":2}}],[\"json转换异常\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"json字符串\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"jsonstr\",{\"1\":{\"237\":4,\"411\":4,\"596\":4,\"781\":4,\"975\":4,\"1189\":4}}],[\"jsonconvertjackson\",{\"1\":{\"237\":3,\"411\":3,\"596\":3,\"781\":3,\"975\":3,\"1189\":3}}],[\"jsonconvert\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"json\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"json模块\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"json库扩展\",{\"0\":{\"236\":1,\"237\":1,\"410\":1,\"411\":1,\"595\":1,\"596\":1,\"780\":1,\"781\":1,\"974\":1,\"975\":1,\"1188\":1,\"1189\":1}}],[\"json库支持snack3\",{\"1\":{\"79\":1}}],[\"jsongenerator\",{\"1\":{\"55\":1}}],[\"js或者nginx中的代理\",{\"1\":{\"76\":1}}],[\"js\",{\"1\":{\"55\":4}}],[\"jpa涉及持久化操作必须开启事务\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"jpa注意事项\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"jpa配置\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"jpa扩展\",{\"1\":{\"85\":1}}],[\"jpa\",{\"0\":{\"268\":1,\"285\":1,\"433\":1,\"459\":1,\"618\":1,\"644\":1,\"803\":1,\"829\":1,\"997\":1,\"1023\":1,\"1214\":1,\"1249\":1},\"1\":{\"16\":1,\"81\":1,\"82\":1,\"176\":2,\"179\":3,\"268\":4,\"285\":3,\"389\":2,\"392\":3,\"433\":4,\"459\":3,\"463\":1,\"557\":2,\"560\":3,\"618\":4,\"644\":3,\"648\":1,\"743\":2,\"746\":3,\"803\":4,\"829\":4,\"833\":1,\"929\":2,\"932\":3,\"997\":4,\"1023\":3,\"1027\":1,\"1128\":2,\"1131\":3,\"1214\":4,\"1249\":3,\"1291\":1,\"1341\":1}}],[\"function\",{\"1\":{\"201\":1,\"203\":1,\"581\":1,\"583\":1,\"766\":1,\"768\":1,\"952\":1,\"954\":1,\"1153\":1,\"1155\":1}}],[\"false\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"168\":1,\"179\":1,\"218\":1,\"256\":1,\"264\":1,\"309\":2,\"310\":1,\"329\":1,\"361\":1,\"392\":1,\"429\":1,\"484\":2,\"485\":1,\"529\":1,\"560\":1,\"614\":1,\"669\":2,\"670\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"746\":1,\"799\":1,\"855\":2,\"856\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"932\":1,\"993\":1,\"1049\":2,\"1050\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1131\":1,\"1174\":1,\"1210\":1,\"1273\":2,\"1274\":1}}],[\"fastjson和gson四种json库\",{\"1\":{\"236\":1,\"410\":1,\"595\":1,\"780\":1,\"974\":1,\"1188\":1}}],[\"fastjson和gson\",{\"1\":{\"79\":1}}],[\"fastjson\",{\"1\":{\"79\":1}}],[\"frameinvoker\",{\"1\":{\"267\":1,\"269\":1,\"432\":1,\"434\":1,\"617\":1,\"619\":1,\"802\":1,\"804\":1,\"996\":1,\"998\":1,\"1213\":1,\"1215\":1}}],[\"frameborder=\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"framework\",{\"1\":{\"64\":1}}],[\"from\",{\"1\":{\"82\":3,\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"found\",{\"1\":{\"1358\":1}}],[\"fonts目录\",{\"1\":{\"60\":1}}],[\"fonts目录下\",{\"1\":{\"60\":1}}],[\"fonts\",{\"1\":{\"60\":3}}],[\"foreach\",{\"1\":{\"309\":2,\"310\":1,\"317\":2,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1,\"1281\":2}}],[\"form\",{\"1\":{\"300\":2,\"301\":2,\"303\":2,\"305\":2,\"475\":2,\"476\":2,\"478\":2,\"480\":2,\"660\":2,\"661\":2,\"663\":2,\"665\":2,\"846\":2,\"847\":2,\"849\":2,\"851\":2,\"1040\":2,\"1041\":2,\"1043\":2,\"1045\":2,\"1264\":2,\"1265\":2,\"1267\":2,\"1269\":2}}],[\"format\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"for\",{\"1\":{\"216\":2,\"248\":2,\"420\":2,\"605\":2,\"790\":2,\"967\":2,\"984\":2,\"1168\":2,\"1200\":2}}],[\"forwarded\",{\"1\":{\"216\":2,\"967\":2,\"1168\":2}}],[\"fork项目到自己仓库\",{\"0\":{\"43\":1}}],[\"fordring\",{\"1\":{\"25\":1}}],[\"fc\",{\"1\":{\"60\":1}}],[\"field\",{\"1\":{\"309\":7,\"310\":4,\"484\":7,\"485\":4,\"669\":7,\"670\":4,\"855\":7,\"856\":4,\"1049\":7,\"1050\":4,\"1273\":7,\"1274\":4}}],[\"fieldlist\",{\"1\":{\"309\":4,\"310\":2,\"484\":4,\"485\":2,\"669\":4,\"670\":2,\"855\":4,\"856\":2,\"1049\":4,\"1050\":2,\"1273\":4,\"1274\":2}}],[\"find\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"finishlistener\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"finish\",{\"1\":{\"240\":1,\"241\":1,\"245\":2,\"253\":1,\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1,\"1192\":1,\"1193\":1,\"1197\":2,\"1205\":1}}],[\"final\",{\"1\":{\"55\":5,\"237\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":1,\"315\":1,\"411\":1,\"418\":1,\"419\":1,\"420\":1,\"490\":1,\"596\":1,\"603\":1,\"604\":1,\"605\":1,\"675\":1,\"781\":1,\"788\":1,\"789\":1,\"790\":1,\"861\":1,\"975\":1,\"982\":1,\"983\":1,\"984\":1,\"1055\":1,\"1189\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1,\"1279\":1}}],[\"fileinputstream\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"file\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"files\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"filterchaindefinitionmap\",{\"1\":{\"197\":4,\"576\":4,\"762\":3,\"948\":4,\"1149\":4}}],[\"filterchain\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"fill\",{\"1\":{\"176\":1,\"179\":1,\"189\":1,\"389\":1,\"392\":1,\"402\":1,\"557\":1,\"560\":1,\"570\":1,\"743\":1,\"746\":1,\"756\":1,\"929\":1,\"932\":1,\"942\":1,\"1128\":1,\"1131\":1,\"1141\":1}}],[\"fix\",{\"1\":{\"48\":1,\"75\":4,\"76\":2,\"77\":2,\"78\":1,\"79\":2,\"80\":1,\"81\":3,\"82\":14,\"83\":2,\"84\":4,\"93\":1,\"97\":1}}],[\"feat\",{\"1\":{\"48\":1,\"72\":1,\"74\":7,\"75\":1,\"76\":4,\"77\":4,\"79\":4,\"81\":5,\"82\":10,\"84\":3,\"1304\":7,\"1354\":7}}],[\"flag为变量和以下方法入参命名一致\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"flag\",{\"1\":{\"165\":1,\"166\":6,\"222\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":2,\"304\":1,\"305\":1,\"306\":1,\"309\":3,\"315\":1,\"333\":1,\"406\":6,\"475\":1,\"476\":1,\"477\":1,\"478\":2,\"479\":1,\"480\":1,\"481\":1,\"484\":3,\"490\":1,\"500\":1,\"591\":6,\"660\":1,\"661\":1,\"662\":1,\"663\":2,\"664\":1,\"665\":1,\"666\":1,\"669\":3,\"675\":1,\"685\":1,\"776\":6,\"846\":1,\"847\":1,\"848\":1,\"849\":2,\"850\":1,\"851\":1,\"852\":1,\"855\":3,\"861\":1,\"871\":1,\"970\":6,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":2,\"1044\":1,\"1045\":1,\"1046\":1,\"1049\":3,\"1055\":1,\"1065\":1,\"1124\":1,\"1125\":6,\"1171\":6,\"1178\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":2,\"1268\":1,\"1269\":1,\"1270\":1,\"1273\":3,\"1279\":1}}],[\"flex的自带方法\",{\"1\":{\"269\":1,\"434\":1,\"619\":1,\"804\":1,\"998\":1,\"1215\":1}}],[\"flex的solon扩展包\",{\"1\":{\"82\":1}}],[\"flex扩展包\",{\"1\":{\"84\":1}}],[\"flex\",{\"0\":{\"269\":1,\"286\":1,\"434\":1,\"460\":1,\"619\":1,\"645\":1,\"804\":1,\"830\":1,\"998\":1,\"1024\":1,\"1215\":1,\"1250\":1},\"1\":{\"16\":1,\"81\":1,\"286\":3,\"460\":2,\"463\":1,\"645\":2,\"648\":1,\"830\":3,\"833\":1,\"1024\":3,\"1027\":1,\"1250\":3,\"1291\":1,\"1341\":1}}],[\"flex和jpa\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"flow发布1\",{\"0\":{\"1302\":1,\"1352\":1}}],[\"flowtablename\",{\"1\":{\"309\":2,\"484\":2,\"669\":2,\"855\":2,\"1049\":2,\"1273\":2}}],[\"flowtask<\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"flowtaskmapper\",{\"1\":{\"267\":3,\"269\":1,\"432\":3,\"434\":1,\"617\":3,\"619\":1,\"802\":3,\"804\":1,\"996\":3,\"998\":1,\"1213\":3,\"1215\":1}}],[\"flowdefinitionmapper\",{\"1\":{\"269\":2,\"434\":2,\"619\":2,\"804\":2,\"998\":2,\"1215\":2}}],[\"flowdefinition\",{\"1\":{\"268\":3,\"433\":3,\"618\":3,\"803\":3,\"997\":3,\"1214\":3}}],[\"flowdefinition<\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"flowuser<\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"flowuserdao\",{\"1\":{\"82\":1}}],[\"flowskip<\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"flowstatus与hisstatus可以不同\",{\"1\":{\"182\":1,\"183\":2,\"395\":1,\"396\":2,\"563\":1,\"564\":2,\"749\":1,\"750\":2,\"935\":1,\"936\":2,\"1134\":1,\"1135\":2}}],[\"flowstatus\",{\"1\":{\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"166\":1,\"181\":1,\"182\":5,\"183\":8,\"315\":1,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"394\":1,\"395\":5,\"396\":8,\"406\":1,\"490\":1,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"562\":1,\"563\":5,\"564\":8,\"591\":1,\"675\":1,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"748\":1,\"749\":5,\"750\":8,\"776\":1,\"861\":1,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"934\":1,\"935\":5,\"936\":8,\"970\":1,\"1055\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1125\":1,\"1133\":1,\"1134\":5,\"1135\":8,\"1171\":1,\"1279\":1}}],[\"flowstatus变量书写错误的问题\",{\"1\":{\"77\":1}}],[\"flownode<\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"flowinstance<\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"flowhistask<\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"flowfactory\",{\"1\":{\"247\":2,\"317\":2,\"419\":2,\"431\":1,\"604\":2,\"616\":1,\"789\":2,\"801\":1,\"983\":2,\"995\":1,\"1199\":2,\"1281\":2}}],[\"flowexception\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"flowcons\",{\"1\":{\"172\":1,\"173\":2,\"228\":1,\"229\":2,\"248\":2,\"254\":1,\"420\":2,\"425\":1,\"500\":2,\"605\":2,\"610\":1,\"685\":2,\"790\":2,\"795\":1,\"871\":2,\"984\":2,\"989\":1,\"1065\":2,\"1184\":1,\"1185\":2,\"1200\":2,\"1206\":1}}],[\"flowcode\",{\"1\":{\"118\":1,\"166\":1,\"182\":1,\"315\":1,\"348\":1,\"395\":1,\"406\":1,\"490\":1,\"516\":1,\"563\":1,\"591\":1,\"675\":1,\"702\":1,\"749\":1,\"776\":1,\"861\":1,\"888\":1,\"935\":1,\"970\":1,\"1055\":1,\"1083\":1,\"1125\":1,\"1134\":1,\"1171\":1,\"1279\":1}}],[\"flowchart\",{\"1\":{\"112\":1,\"344\":1,\"512\":1,\"698\":1,\"884\":1,\"1079\":1}}],[\"flowparams包含如下字段\",{\"1\":{\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1}}],[\"flowparams\",{\"1\":{\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"166\":5,\"182\":5,\"183\":4,\"235\":4,\"246\":5,\"271\":1,\"315\":5,\"317\":3,\"323\":2,\"326\":2,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"395\":5,\"396\":4,\"406\":5,\"418\":5,\"490\":5,\"496\":2,\"499\":2,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"563\":5,\"564\":4,\"591\":5,\"603\":5,\"675\":5,\"681\":2,\"684\":2,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"749\":5,\"750\":4,\"776\":5,\"788\":5,\"861\":5,\"867\":2,\"870\":2,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"935\":5,\"936\":4,\"970\":5,\"982\":5,\"1055\":5,\"1061\":2,\"1064\":2,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1125\":5,\"1134\":5,\"1135\":4,\"1171\":5,\"1198\":5,\"1217\":1,\"1279\":5,\"1281\":3,\"1287\":2,\"1290\":2}}],[\"flowparams对象删除setxxx\",{\"1\":{\"76\":2}}],[\"flow的xml\",{\"1\":{\"97\":1}}],[\"flow的pom\",{\"1\":{\"64\":1}}],[\"flow=\",{\"1\":{\"63\":1}}],[\"flowautoconfig\",{\"0\":{\"62\":1}}],[\"flow内置的19位雪花算法\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"flow项目非常好\",{\"1\":{\"52\":1}}],[\"flow官网挂广告\",{\"1\":{\"29\":1}}],[\"flow工作流配置\",{\"1\":{\"57\":1,\"176\":1,\"179\":1,\"189\":1,\"209\":1,\"265\":1,\"285\":2,\"312\":1,\"389\":1,\"392\":1,\"402\":1,\"430\":1,\"459\":2,\"487\":1,\"557\":1,\"560\":1,\"570\":1,\"615\":1,\"644\":2,\"672\":1,\"743\":1,\"746\":1,\"756\":1,\"800\":1,\"829\":2,\"858\":1,\"929\":1,\"932\":1,\"942\":1,\"960\":1,\"994\":1,\"1023\":2,\"1052\":1,\"1128\":1,\"1131\":1,\"1141\":1,\"1161\":1,\"1211\":1,\"1249\":2,\"1276\":1}}],[\"flow工作流私人培训\",{\"1\":{\"28\":1}}],[\"flow工作流引擎数据库主键自增策略实现\",{\"1\":{\"24\":1,\"58\":1}}],[\"flow工作流\",{\"1\":{\"21\":1}}],[\"flow支持跨部门的流程协作\",{\"1\":{\"14\":1}}],[\"flow来分析和优化现有业务流程\",{\"1\":{\"14\":1}}],[\"flow可用于员工招聘\",{\"1\":{\"14\":1}}],[\"flow可以用来跟踪项目任务的状态\",{\"1\":{\"14\":1}}],[\"flow作为一个国产的工作流引擎\",{\"1\":{\"14\":1}}],[\"flow\",{\"1\":{\"13\":1,\"14\":1,\"57\":1,\"64\":4,\"74\":2,\"75\":1,\"76\":4,\"77\":1,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"176\":1,\"179\":5,\"189\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":2,\"197\":2,\"198\":2,\"199\":1,\"200\":2,\"201\":2,\"203\":5,\"209\":5,\"214\":2,\"215\":1,\"216\":5,\"237\":2,\"265\":1,\"268\":11,\"280\":2,\"283\":3,\"284\":3,\"285\":3,\"286\":3,\"287\":2,\"288\":2,\"298\":7,\"300\":2,\"301\":1,\"302\":1,\"309\":7,\"312\":2,\"389\":1,\"392\":5,\"402\":1,\"411\":2,\"430\":1,\"433\":11,\"454\":2,\"457\":2,\"458\":2,\"459\":3,\"460\":2,\"461\":2,\"464\":2,\"473\":7,\"475\":2,\"476\":1,\"477\":1,\"484\":7,\"487\":2,\"557\":1,\"560\":5,\"570\":1,\"573\":1,\"574\":2,\"575\":2,\"576\":2,\"577\":2,\"578\":1,\"579\":2,\"580\":5,\"581\":4,\"583\":5,\"596\":2,\"615\":1,\"618\":11,\"639\":2,\"642\":2,\"643\":2,\"644\":3,\"645\":2,\"646\":2,\"649\":2,\"658\":7,\"660\":2,\"661\":1,\"662\":1,\"669\":7,\"672\":2,\"743\":1,\"746\":5,\"756\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":2,\"766\":2,\"768\":5,\"781\":2,\"800\":1,\"803\":11,\"824\":2,\"827\":3,\"828\":3,\"829\":4,\"830\":3,\"831\":2,\"835\":2,\"844\":7,\"846\":2,\"847\":1,\"848\":1,\"855\":7,\"858\":2,\"929\":1,\"932\":5,\"942\":1,\"945\":1,\"946\":1,\"947\":2,\"948\":2,\"949\":2,\"950\":1,\"951\":2,\"952\":2,\"954\":5,\"960\":5,\"965\":2,\"966\":1,\"967\":5,\"975\":2,\"994\":1,\"997\":11,\"1018\":2,\"1021\":3,\"1022\":3,\"1023\":3,\"1024\":3,\"1025\":2,\"1029\":2,\"1038\":7,\"1040\":2,\"1041\":1,\"1042\":1,\"1049\":7,\"1052\":2,\"1128\":1,\"1131\":5,\"1141\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":2,\"1149\":2,\"1150\":2,\"1151\":1,\"1152\":2,\"1153\":2,\"1155\":5,\"1161\":5,\"1166\":2,\"1167\":1,\"1168\":5,\"1189\":2,\"1211\":1,\"1214\":11,\"1244\":2,\"1247\":3,\"1248\":3,\"1249\":3,\"1250\":3,\"1251\":2,\"1252\":2,\"1262\":7,\"1264\":2,\"1265\":1,\"1266\":1,\"1273\":7,\"1276\":2,\"1291\":1,\"1292\":1,\"1298\":1,\"1301\":1,\"1307\":1,\"1309\":1,\"1310\":4,\"1311\":3,\"1318\":1,\"1320\":1,\"1321\":2,\"1322\":1,\"1329\":1,\"1331\":1,\"1332\":2,\"1333\":1,\"1340\":1,\"1341\":1,\"1342\":1,\"1348\":1,\"1351\":1,\"1357\":1}}],[\"flow源码头部的版权声明\",{\"1\":{\"13\":1}}],[\"flow采用apache\",{\"1\":{\"13\":1}}],[\"flow国产工作流引擎🎉\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"研发工程师\",{\"1\":{\"25\":2}}],[\"后端代码设置变量\",{\"0\":{\"323\":1,\"326\":1,\"496\":1,\"499\":1,\"681\":1,\"684\":1,\"867\":1,\"870\":1,\"1061\":1,\"1064\":1,\"1287\":1,\"1290\":1}}],[\"后端放行路径\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"后端放行部分路径\",{\"0\":{\"195\":1,\"574\":1,\"760\":1,\"946\":1,\"1147\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"后端请求\",{\"1\":{\"196\":1,\"197\":1,\"575\":1,\"576\":1,\"761\":1,\"762\":1,\"947\":1,\"948\":1,\"1148\":1,\"1149\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"后端工程师\",{\"1\":{\"25\":4}}],[\"后再执行\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"后续不建议用\",{\"1\":{\"413\":1,\"598\":1,\"783\":1,\"977\":1}}],[\"后续在\",{\"1\":{\"271\":1,\"1217\":1}}],[\"后续有时间再做校验\",{\"1\":{\"67\":1}}],[\"后续会根据不同情况\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"后续会继续支持其他数据库或者国产数据库\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"后续会由社区提供其他支持\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"角色及用户自定义类型\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"角色权限控制\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"角色的主键重复\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"角色列表\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"角色和部门等\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"角色\",{\"1\":{\"25\":5,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"208\":2,\"272\":1,\"349\":1,\"355\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"588\":2,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"773\":2,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"959\":2,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1160\":2,\"1218\":1}}],[\"晓华\",{\"1\":{\"25\":1,\"41\":2,\"72\":4}}],[\"昵称\",{\"1\":{\"25\":5}}],[\"博文\",{\"0\":{\"24\":1}}],[\"vote\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"void\",{\"1\":{\"55\":1,\"168\":1,\"171\":1,\"172\":1,\"182\":1,\"186\":3,\"198\":1,\"218\":1,\"221\":1,\"224\":1,\"227\":1,\"228\":1,\"235\":4,\"245\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":4,\"254\":1,\"256\":1,\"259\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":2,\"310\":1,\"315\":2,\"317\":1,\"329\":1,\"332\":1,\"395\":1,\"399\":3,\"417\":1,\"418\":1,\"419\":1,\"420\":1,\"425\":1,\"465\":1,\"466\":1,\"467\":1,\"468\":2,\"485\":1,\"490\":2,\"563\":1,\"567\":3,\"577\":1,\"602\":1,\"603\":1,\"604\":1,\"605\":1,\"610\":1,\"650\":1,\"651\":1,\"652\":1,\"653\":2,\"670\":1,\"675\":2,\"749\":1,\"753\":3,\"763\":1,\"787\":1,\"788\":1,\"789\":1,\"790\":1,\"795\":1,\"836\":1,\"837\":1,\"838\":1,\"839\":2,\"856\":1,\"861\":2,\"935\":1,\"939\":3,\"949\":1,\"981\":1,\"982\":1,\"983\":1,\"984\":1,\"989\":1,\"1030\":1,\"1031\":1,\"1032\":1,\"1033\":2,\"1050\":1,\"1055\":2,\"1134\":1,\"1138\":3,\"1150\":1,\"1174\":1,\"1177\":1,\"1180\":1,\"1183\":1,\"1184\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":4,\"1206\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1256\":2,\"1274\":1,\"1279\":2,\"1281\":1,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":2,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":2}}],[\"version\",{\"1\":{\"300\":1,\"303\":1,\"475\":1,\"478\":1,\"660\":1,\"663\":1,\"846\":1,\"849\":1,\"1040\":1,\"1043\":1,\"1264\":1,\"1267\":1}}],[\"version>\",{\"1\":{\"64\":1,\"79\":1,\"193\":1,\"194\":1,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"945\":1,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2,\"1145\":1,\"1146\":1,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1291\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\"vendor\",{\"1\":{\"176\":1,\"285\":1,\"389\":1,\"459\":1,\"557\":1,\"644\":1,\"743\":1,\"829\":1,\"929\":1,\"1023\":1,\"1128\":1,\"1249\":1}}],[\"v1\",{\"0\":{\"72\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"1363\":1,\"1365\":1,\"1367\":1,\"1369\":1,\"1371\":1}}],[\"vx\",{\"0\":{\"70\":1}}],[\"varchar\",{\"1\":{\"300\":8,\"301\":12,\"302\":7,\"303\":12,\"304\":7,\"305\":4,\"306\":3,\"475\":8,\"476\":12,\"477\":7,\"478\":12,\"479\":7,\"480\":4,\"481\":3,\"660\":8,\"661\":12,\"662\":7,\"663\":12,\"664\":7,\"665\":4,\"666\":3,\"846\":8,\"847\":12,\"848\":7,\"849\":12,\"850\":7,\"851\":4,\"852\":3,\"1040\":8,\"1041\":12,\"1042\":7,\"1043\":12,\"1044\":7,\"1045\":4,\"1046\":3,\"1264\":8,\"1265\":12,\"1266\":7,\"1267\":12,\"1268\":7,\"1269\":4,\"1270\":3}}],[\"var\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"variabletest\",{\"1\":{\"317\":1,\"1281\":1}}],[\"variablemap\",{\"1\":{\"254\":4,\"425\":4,\"610\":4,\"795\":4,\"989\":4,\"1206\":4}}],[\"variablestr\",{\"1\":{\"222\":3,\"333\":3,\"500\":3,\"685\":3,\"871\":3,\"1065\":3,\"1178\":3}}],[\"variablestrategy\",{\"1\":{\"221\":1,\"222\":1,\"332\":1,\"333\":1,\"500\":2,\"685\":2,\"871\":2,\"1065\":2,\"1177\":1,\"1178\":1}}],[\"variablevalue\",{\"1\":{\"172\":2,\"228\":2,\"1184\":2}}],[\"variable\",{\"1\":{\"118\":1,\"119\":1,\"126\":1,\"134\":2,\"166\":4,\"168\":2,\"172\":8,\"218\":2,\"222\":3,\"225\":2,\"228\":8,\"237\":4,\"245\":1,\"247\":4,\"248\":3,\"254\":4,\"256\":2,\"260\":2,\"302\":1,\"315\":9,\"317\":7,\"323\":4,\"326\":4,\"329\":2,\"333\":3,\"348\":1,\"349\":1,\"355\":1,\"363\":2,\"406\":4,\"411\":4,\"417\":1,\"419\":2,\"420\":3,\"425\":4,\"477\":1,\"490\":9,\"496\":4,\"499\":4,\"500\":5,\"516\":1,\"517\":1,\"523\":1,\"531\":2,\"591\":4,\"596\":4,\"602\":1,\"604\":2,\"605\":3,\"610\":4,\"662\":1,\"675\":9,\"681\":4,\"684\":4,\"685\":5,\"702\":1,\"703\":1,\"709\":1,\"717\":2,\"776\":4,\"781\":4,\"787\":1,\"789\":2,\"790\":3,\"795\":4,\"848\":1,\"861\":9,\"867\":4,\"870\":4,\"871\":5,\"888\":1,\"889\":1,\"895\":1,\"903\":2,\"970\":4,\"975\":4,\"981\":1,\"983\":2,\"984\":3,\"989\":4,\"1042\":1,\"1055\":9,\"1061\":4,\"1064\":4,\"1065\":5,\"1083\":1,\"1084\":1,\"1091\":1,\"1099\":2,\"1125\":4,\"1171\":4,\"1174\":2,\"1178\":3,\"1181\":2,\"1184\":8,\"1189\":4,\"1197\":1,\"1199\":4,\"1200\":3,\"1206\":4,\"1266\":1,\"1279\":9,\"1281\":7,\"1287\":4,\"1290\":4}}],[\"valueof\",{\"1\":{\"166\":1,\"172\":1,\"228\":1,\"272\":2,\"315\":1,\"406\":1,\"490\":1,\"591\":1,\"675\":1,\"776\":1,\"861\":1,\"970\":1,\"1055\":1,\"1125\":1,\"1171\":1,\"1184\":1,\"1218\":2,\"1279\":1}}],[\"value\",{\"1\":{\"55\":5,\"172\":2,\"173\":3,\"176\":2,\"179\":2,\"228\":2,\"229\":3,\"263\":2,\"265\":2,\"310\":1,\"389\":2,\"392\":2,\"428\":2,\"430\":2,\"485\":1,\"557\":2,\"560\":2,\"613\":2,\"615\":2,\"670\":1,\"743\":2,\"746\":2,\"798\":2,\"800\":2,\"856\":1,\"929\":2,\"932\":2,\"992\":2,\"994\":2,\"1050\":1,\"1128\":2,\"1131\":2,\"1184\":2,\"1185\":3,\"1209\":2,\"1211\":2,\"1274\":1}}],[\"vanlin\",{\"1\":{\"25\":1,\"72\":1,\"75\":1,\"81\":1,\"82\":7}}],[\"vue2\",{\"0\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"vue切换mybaits\",{\"0\":{\"64\":1}}],[\"vue3项目引入过程同上vue2\",{\"1\":{\"581\":1}}],[\"vue3\",{\"0\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1},\"1\":{\"41\":6,\"214\":1,\"965\":1,\"1166\":1}}],[\"vue项目已经准备了七套流程\",{\"1\":{\"37\":1,\"441\":1,\"626\":1,\"811\":1,\"1005\":1,\"1225\":1}}],[\"vue\",{\"0\":{\"295\":1,\"470\":1,\"655\":1,\"841\":1,\"1035\":1,\"1259\":1},\"1\":{\"31\":2,\"41\":3,\"61\":1,\"76\":2,\"200\":2,\"201\":1,\"289\":1,\"435\":2,\"465\":1,\"581\":1,\"620\":2,\"650\":1,\"765\":2,\"766\":1,\"805\":2,\"836\":1,\"951\":2,\"952\":1,\"999\":2,\"1030\":1,\"1152\":2,\"1153\":1,\"1219\":2,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"vue封装实战项目\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"vite\",{\"1\":{\"201\":2,\"766\":2,\"952\":2,\"1153\":2}}],[\"vip群由四名后端与一名前端工程师组成\",{\"1\":{\"27\":1}}],[\"vip群\",{\"0\":{\"27\":1}}],[\"video\",{\"1\":{\"23\":1}}],[\"群友个人录制的视频\",{\"1\":{\"23\":1}}],[\"学习视频\",{\"0\":{\"23\":1}}],[\"学习资料\",{\"0\":{\"22\":1}}],[\"微信公众号\",{\"1\":{\"21\":1}}],[\"微信号\",{\"1\":{\"21\":1}}],[\"交流群\",{\"0\":{\"21\":1}}],[\"加载设计器\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"加载handler取消懒加载\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"加签对象\",{\"1\":{\"130\":1,\"713\":1,\"899\":1,\"1095\":1}}],[\"加签\",{\"0\":{\"130\":1,\"359\":1,\"527\":1,\"713\":1,\"899\":1,\"1095\":1},\"1\":{\"130\":1,\"132\":1,\"233\":1,\"235\":2,\"273\":1,\"274\":1,\"357\":1,\"358\":1,\"359\":2,\"360\":1,\"361\":1,\"446\":1,\"452\":1,\"525\":1,\"526\":1,\"527\":2,\"528\":1,\"529\":1,\"631\":1,\"637\":1,\"713\":1,\"715\":1,\"816\":1,\"822\":1,\"899\":1,\"901\":1,\"1010\":1,\"1016\":1,\"1095\":1,\"1097\":1,\"1230\":1,\"1236\":1,\"1237\":1}}],[\"加签和减签方法\",{\"1\":{\"76\":2}}],[\"加签和减签\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"加减签\",{\"1\":{\"85\":1}}],[\"加群扫码\",{\"1\":{\"27\":1}}],[\"加群联系作者详谈\",{\"1\":{\"18\":1}}],[\"加入群聊\",{\"0\":{\"20\":1}}],[\"捐献者\",{\"1\":{\"52\":1}}],[\"捐献红包和群主不定时红包\",{\"1\":{\"10\":1}}],[\"捐赠列表\",{\"0\":{\"52\":1}}],[\"捐赠地址\",{\"1\":{\"19\":1}}],[\"你们的支持是我最大的动力\",{\"1\":{\"51\":1}}],[\"你可以请作者喝杯咖啡表示鼓励\",{\"0\":{\"19\":1,\"51\":1}}],[\"你的⭐️\",{\"1\":{\"12\":1}}],[\"80\",{\"1\":{\"306\":2,\"481\":2,\"579\":1,\"666\":2,\"852\":2,\"1046\":2,\"1270\":2,\"1311\":1}}],[\"8080`\",{\"1\":{\"581\":1}}],[\"8080\",{\"1\":{\"216\":1,\"578\":1,\"579\":1,\"580\":1,\"967\":1,\"1168\":1,\"1311\":2}}],[\"8已完成\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"82\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"81\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"84px\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"88<\",{\"1\":{\"79\":1}}],[\"8\",{\"0\":{\"19\":1,\"79\":1,\"108\":1,\"143\":1,\"144\":1,\"343\":1,\"372\":1,\"373\":1,\"466\":1,\"510\":1,\"540\":1,\"541\":1,\"651\":1,\"696\":1,\"726\":1,\"727\":1,\"840\":1,\"841\":1,\"842\":1,\"882\":1,\"912\":1,\"913\":1,\"1034\":1,\"1035\":1,\"1036\":1,\"1075\":1,\"1108\":1,\"1109\":1},\"1\":{\"60\":1,\"66\":1,\"165\":1,\"273\":1,\"297\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"405\":1,\"452\":1,\"472\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"590\":1,\"637\":1,\"657\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"775\":1,\"822\":1,\"843\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"969\":1,\"1016\":1,\"1037\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1124\":1,\"1170\":1,\"1236\":1,\"1261\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"7取回\",{\"1\":{\"1042\":1}}],[\"7减签\",{\"1\":{\"132\":1,\"301\":1,\"361\":1,\"476\":1,\"529\":1,\"661\":1,\"715\":1,\"847\":1,\"901\":1,\"1041\":1,\"1097\":1,\"1265\":1}}],[\"778470567\",{\"1\":{\"21\":1}}],[\"7\",{\"0\":{\"18\":1,\"67\":1,\"80\":1,\"87\":1,\"107\":1,\"124\":1,\"132\":1,\"142\":1,\"254\":1,\"327\":1,\"342\":1,\"361\":1,\"371\":1,\"465\":1,\"509\":1,\"529\":1,\"539\":1,\"650\":1,\"695\":1,\"715\":1,\"725\":1,\"835\":1,\"836\":1,\"837\":1,\"838\":1,\"839\":1,\"881\":1,\"901\":1,\"911\":1,\"1029\":1,\"1030\":1,\"1031\":1,\"1032\":1,\"1033\":1,\"1074\":1,\"1089\":1,\"1097\":1,\"1107\":1,\"1206\":1,\"1307\":1,\"1318\":1,\"1329\":1,\"1340\":1,\"1357\":1},\"1\":{\"165\":1,\"273\":1,\"297\":1,\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"405\":1,\"452\":1,\"472\":1,\"473\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"590\":1,\"637\":1,\"657\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"775\":1,\"822\":1,\"843\":1,\"844\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"969\":1,\"1016\":1,\"1037\":1,\"1038\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1124\":1,\"1170\":1,\"1236\":1,\"1261\":1,\"1262\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"6撤销\",{\"1\":{\"1042\":1}}],[\"64\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"6加签\",{\"1\":{\"132\":1,\"301\":1,\"361\":1,\"476\":1,\"529\":1,\"661\":1,\"715\":1,\"847\":1,\"901\":1,\"1041\":1,\"1097\":1,\"1265\":1}}],[\"6切换为低版本3\",{\"1\":{\"66\":1}}],[\"68\",{\"1\":{\"52\":1}}],[\"6\",{\"0\":{\"17\":1,\"40\":1,\"65\":1,\"66\":1,\"81\":1,\"88\":1,\"106\":1,\"123\":1,\"131\":1,\"141\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"294\":1,\"295\":1,\"296\":1,\"324\":1,\"341\":1,\"353\":1,\"360\":1,\"370\":1,\"422\":1,\"423\":1,\"424\":1,\"444\":1,\"451\":1,\"464\":1,\"508\":1,\"521\":1,\"528\":1,\"538\":1,\"607\":1,\"608\":1,\"609\":1,\"629\":1,\"636\":1,\"649\":1,\"694\":1,\"707\":1,\"714\":1,\"724\":1,\"792\":1,\"793\":1,\"794\":1,\"814\":1,\"821\":1,\"834\":1,\"880\":1,\"893\":1,\"900\":1,\"910\":1,\"961\":1,\"962\":1,\"963\":1,\"964\":1,\"965\":1,\"966\":1,\"967\":1,\"986\":1,\"987\":1,\"988\":1,\"1008\":1,\"1015\":1,\"1028\":1,\"1073\":1,\"1088\":1,\"1096\":1,\"1106\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1228\":1,\"1235\":1,\"1242\":1,\"1258\":1,\"1259\":1,\"1260\":1,\"1288\":1,\"1301\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1351\":1},\"1\":{\"81\":1,\"165\":1,\"297\":1,\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":2,\"304\":1,\"305\":1,\"306\":1,\"405\":1,\"452\":1,\"472\":1,\"473\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":2,\"479\":1,\"480\":1,\"481\":1,\"590\":1,\"637\":1,\"657\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":2,\"664\":1,\"665\":1,\"666\":1,\"775\":1,\"822\":1,\"843\":1,\"844\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":2,\"850\":1,\"851\":1,\"852\":1,\"969\":1,\"1037\":1,\"1038\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":2,\"1044\":1,\"1045\":1,\"1046\":1,\"1124\":1,\"1170\":1,\"1261\":1,\"1262\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":2,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"q\",{\"1\":{\"62\":1}}],[\"quick\",{\"1\":{\"41\":3}}],[\"query框架支持\",{\"1\":{\"82\":1}}],[\"query\",{\"0\":{\"287\":1,\"461\":1,\"646\":1,\"831\":1,\"1025\":1,\"1251\":1},\"1\":{\"16\":1,\"140\":2,\"207\":2,\"208\":14,\"287\":2,\"369\":2,\"461\":2,\"463\":1,\"537\":2,\"587\":2,\"588\":14,\"646\":2,\"648\":1,\"723\":2,\"772\":2,\"773\":14,\"831\":2,\"833\":1,\"909\":2,\"958\":2,\"959\":14,\"1025\":2,\"1027\":1,\"1105\":2,\"1159\":2,\"1160\":14,\"1251\":2,\"1291\":1,\"1315\":2,\"1326\":2,\"1337\":2,\"1341\":1}}],[\"qq群\",{\"1\":{\"21\":1}}],[\"qq\",{\"1\":{\"13\":2}}],[\"5作废\",{\"1\":{\"1042\":1}}],[\"55l\",{\"1\":{\"317\":1,\"1281\":1}}],[\"5票签\",{\"1\":{\"301\":1,\"361\":1,\"476\":1,\"529\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"5月\",{\"1\":{\"60\":2}}],[\"50x\",{\"1\":{\"216\":2,\"967\":2,\"1168\":2}}],[\"504\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"503\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"502\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"500\",{\"1\":{\"64\":1,\"216\":1,\"300\":1,\"301\":2,\"302\":1,\"475\":1,\"476\":2,\"477\":1,\"660\":1,\"661\":2,\"662\":1,\"846\":1,\"847\":2,\"848\":1,\"967\":1,\"1040\":1,\"1041\":2,\"1042\":1,\"1168\":1,\"1264\":1,\"1265\":2,\"1266\":1}}],[\"50\",{\"1\":{\"52\":2}}],[\"5\",{\"0\":{\"16\":1,\"39\":1,\"64\":1,\"72\":1,\"89\":1,\"105\":1,\"122\":1,\"130\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":2,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"203\":1,\"209\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":2,\"250\":1,\"251\":1,\"252\":1,\"278\":1,\"287\":1,\"293\":1,\"321\":1,\"340\":1,\"352\":1,\"359\":1,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":2,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"380\":1,\"381\":1,\"382\":1,\"383\":1,\"384\":1,\"385\":1,\"386\":1,\"421\":1,\"443\":1,\"450\":1,\"461\":1,\"463\":1,\"500\":1,\"507\":1,\"520\":1,\"527\":1,\"532\":1,\"533\":1,\"534\":1,\"535\":1,\"536\":1,\"537\":2,\"538\":1,\"539\":1,\"540\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"549\":1,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"583\":1,\"606\":1,\"628\":1,\"635\":1,\"646\":1,\"648\":1,\"685\":1,\"693\":1,\"706\":1,\"713\":1,\"718\":1,\"719\":1,\"720\":1,\"721\":1,\"722\":1,\"723\":2,\"724\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"736\":1,\"737\":1,\"738\":1,\"739\":1,\"740\":1,\"768\":1,\"791\":1,\"813\":1,\"820\":1,\"831\":1,\"833\":1,\"871\":1,\"879\":1,\"892\":1,\"899\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"908\":1,\"909\":2,\"910\":1,\"911\":1,\"912\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"922\":1,\"923\":1,\"924\":1,\"925\":1,\"926\":1,\"954\":1,\"960\":1,\"985\":1,\"1007\":1,\"1014\":1,\"1025\":1,\"1027\":1,\"1065\":1,\"1072\":1,\"1087\":1,\"1095\":1,\"1100\":1,\"1101\":1,\"1102\":1,\"1103\":1,\"1104\":1,\"1105\":2,\"1106\":1,\"1107\":1,\"1108\":1,\"1109\":1,\"1110\":1,\"1111\":1,\"1112\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1116\":1,\"1117\":1,\"1118\":1,\"1119\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1155\":1,\"1161\":1,\"1182\":1,\"1183\":1,\"1184\":1,\"1185\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1201\":2,\"1202\":1,\"1203\":1,\"1204\":1,\"1227\":1,\"1234\":1,\"1241\":1,\"1251\":1,\"1257\":1,\"1285\":1,\"1300\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1350\":1},\"1\":{\"64\":2,\"165\":1,\"200\":1,\"273\":1,\"297\":1,\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"317\":1,\"405\":1,\"452\":1,\"472\":1,\"473\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"580\":1,\"590\":1,\"637\":1,\"657\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"765\":1,\"775\":1,\"822\":1,\"843\":1,\"844\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"951\":1,\"969\":1,\"1016\":1,\"1037\":1,\"1038\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1124\":1,\"1152\":1,\"1170\":1,\"1236\":1,\"1261\":1,\"1262\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1281\":1}}],[\"src\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"src=\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"signature\",{\"1\":{\"274\":2,\"446\":2,\"631\":2,\"816\":2,\"1010\":2,\"1230\":2,\"1237\":2}}],[\"since\",{\"1\":{\"253\":1,\"1205\":1}}],[\"size\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"simsun\",{\"1\":{\"60\":3}}],[\"simplemodule\",{\"1\":{\"55\":7}}],[\"ss\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"sysuser\",{\"1\":{\"208\":3,\"272\":11,\"588\":3,\"773\":3,\"959\":3,\"1160\":3,\"1218\":11}}],[\"sysusermapper\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"sysdept\",{\"1\":{\"208\":4,\"588\":4,\"773\":4,\"959\":4,\"1160\":4}}],[\"sysdeptmapper\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"sysrole\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"sysrolemapper\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"system\",{\"1\":{\"176\":2,\"189\":1,\"247\":1,\"289\":1,\"291\":1,\"292\":3,\"317\":1,\"389\":2,\"402\":1,\"465\":1,\"467\":1,\"468\":3,\"557\":2,\"570\":1,\"650\":1,\"652\":1,\"653\":3,\"743\":2,\"756\":1,\"836\":1,\"838\":1,\"839\":3,\"929\":2,\"942\":1,\"1030\":1,\"1032\":1,\"1033\":3,\"1128\":2,\"1141\":1,\"1199\":1,\"1253\":1,\"1255\":1,\"1256\":3,\"1281\":1,\"1294\":1,\"1296\":1,\"1297\":2,\"1344\":1,\"1346\":1,\"1347\":2}}],[\"scoped>\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"script>\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"switch\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"shadow\",{\"1\":{\"271\":1,\"272\":1,\"1217\":1,\"1218\":1}}],[\"share\",{\"1\":{\"60\":3}}],[\"shirofilterfactorybean\",{\"1\":{\"197\":5,\"576\":5,\"762\":5,\"948\":5,\"1149\":5}}],[\"shiro过滤器配置\",{\"1\":{\"197\":1,\"576\":1,\"762\":1,\"948\":1,\"1149\":1}}],[\"shiroconfig\",{\"1\":{\"197\":1,\"576\":1,\"762\":1,\"948\":1,\"1149\":1}}],[\"shiro\",{\"0\":{\"197\":1,\"576\":1,\"762\":1,\"948\":1,\"1149\":1}}],[\"show\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"software\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"source\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"solon项目\",{\"1\":{\"283\":1,\"284\":1,\"285\":1,\"286\":1,\"287\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"461\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1024\":1,\"1025\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1}}],[\"solon\",{\"0\":{\"178\":1,\"194\":1,\"264\":1,\"310\":1,\"391\":1,\"429\":1,\"485\":1,\"559\":1,\"614\":1,\"670\":1,\"745\":1,\"799\":1,\"856\":1,\"931\":1,\"993\":1,\"1050\":1,\"1130\":1,\"1146\":1,\"1210\":1,\"1274\":1},\"1\":{\"194\":1,\"268\":1,\"283\":1,\"284\":1,\"285\":1,\"286\":1,\"287\":1,\"433\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"461\":1,\"618\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"803\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"997\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1024\":1,\"1025\":1,\"1146\":1,\"1214\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1291\":1,\"1341\":1}}],[\"solon插件包增加usermapper\",{\"1\":{\"84\":1}}],[\"solon注解问题\",{\"1\":{\"81\":1}}],[\"solon版本yml弄错了\",{\"1\":{\"81\":1}}],[\"splitat\",{\"1\":{\"172\":1,\"173\":2,\"228\":1,\"229\":2,\"500\":2,\"685\":2,\"871\":2,\"1065\":2,\"1184\":1,\"1185\":2}}],[\"split\",{\"1\":{\"172\":10,\"173\":4,\"228\":10,\"229\":4,\"1184\":10,\"1185\":4}}],[\"spel办理人变量表达式\",{\"1\":{\"326\":1,\"499\":1,\"684\":1,\"870\":1,\"1064\":1,\"1290\":1}}],[\"spel办理人变量策略\",{\"0\":{\"324\":1,\"497\":1,\"682\":1,\"868\":1,\"1062\":1,\"1288\":1},\"1\":{\"318\":1,\"492\":1,\"677\":1,\"863\":1,\"1057\":1,\"1282\":1}}],[\"spelhelper\",{\"1\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"spel监听器表达式\",{\"1\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"spel条件表达\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"spel\",{\"0\":{\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1171\":1},\"1\":{\"165\":2,\"166\":2,\"168\":2,\"218\":2,\"256\":2,\"329\":2,\"405\":1,\"406\":1,\"492\":1,\"498\":1,\"590\":1,\"591\":1,\"677\":1,\"683\":1,\"775\":1,\"776\":1,\"863\":1,\"869\":1,\"969\":1,\"970\":1,\"1057\":1,\"1063\":1,\"1124\":2,\"1125\":2,\"1170\":1,\"1171\":1,\"1174\":2}}],[\"springhibernatejpapersistenceprovider\",{\"1\":{\"176\":1,\"285\":1,\"389\":1,\"459\":1,\"557\":1,\"644\":1,\"743\":1,\"829\":1,\"929\":1,\"1023\":1,\"1128\":1,\"1249\":1}}],[\"springframework\",{\"1\":{\"64\":3,\"176\":1,\"285\":1,\"389\":1,\"459\":1,\"557\":1,\"644\":1,\"743\":1,\"829\":1,\"929\":1,\"1023\":1,\"1128\":1,\"1249\":1}}],[\"spring开启懒加载后\",{\"1\":{\"62\":1}}],[\"spring\",{\"0\":{\"175\":1,\"196\":1,\"263\":1,\"309\":1,\"388\":1,\"406\":1,\"428\":1,\"484\":1,\"556\":1,\"575\":1,\"591\":1,\"613\":1,\"669\":1,\"742\":1,\"761\":1,\"776\":1,\"798\":1,\"855\":1,\"928\":1,\"947\":1,\"970\":1,\"992\":1,\"1049\":1,\"1127\":1,\"1148\":1,\"1171\":1,\"1209\":1,\"1273\":1},\"1\":{\"41\":1,\"62\":1,\"166\":1,\"268\":1,\"279\":1,\"433\":1,\"453\":1,\"618\":1,\"638\":1,\"803\":1,\"823\":1,\"997\":1,\"1017\":1,\"1125\":1,\"1214\":1,\"1243\":1}}],[\"springboottest\",{\"1\":{\"317\":1,\"1281\":1}}],[\"springboot项目\",{\"1\":{\"287\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"461\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"831\":1,\"1025\":1,\"1251\":1}}],[\"springboot项目的条件表达式默认支持spel\",{\"1\":{\"79\":1}}],[\"springboot3项目\",{\"1\":{\"283\":1,\"284\":1,\"286\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"1021\":1,\"1022\":1,\"1024\":1,\"1247\":1,\"1248\":1,\"1250\":1}}],[\"springboot3+react\",{\"1\":{\"41\":1}}],[\"springboot2项目\",{\"1\":{\"283\":1,\"284\":1,\"285\":1,\"286\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1024\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1}}],[\"springboot2+vue2\",{\"1\":{\"41\":1}}],[\"springboot\",{\"0\":{\"193\":1,\"1145\":1}}],[\"sainterceptor\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"satokenconfigure\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"sa\",{\"0\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"savebatch\",{\"1\":{\"149\":1,\"150\":1,\"247\":1,\"378\":1,\"379\":1,\"419\":1,\"546\":1,\"547\":1,\"604\":1,\"732\":1,\"733\":1,\"789\":1,\"918\":1,\"919\":1,\"983\":1,\"1114\":1,\"1115\":1,\"1199\":1}}],[\"save\",{\"1\":{\"144\":1,\"373\":1,\"541\":1,\"727\":1,\"913\":1,\"1109\":1}}],[\"savexml\",{\"1\":{\"104\":1,\"105\":1,\"337\":1,\"504\":1,\"505\":1,\"690\":1,\"691\":1,\"876\":1,\"877\":1,\"1071\":1,\"1072\":1}}],[\"saveandinitnode\",{\"1\":{\"102\":1,\"1069\":1}}],[\"safe\",{\"1\":{\"55\":6}}],[\"skipanynode\",{\"1\":{\"292\":1,\"468\":1,\"653\":1,\"839\":1,\"1033\":1,\"1256\":1,\"1297\":1,\"1347\":1}}],[\"skipflow\",{\"1\":{\"292\":1,\"468\":1,\"653\":1,\"839\":1,\"1033\":1,\"1256\":1,\"1297\":1,\"1347\":1}}],[\"skiptype\",{\"1\":{\"119\":1,\"126\":1,\"134\":2,\"292\":6,\"349\":1,\"355\":1,\"363\":2,\"468\":6,\"517\":1,\"523\":1,\"531\":2,\"653\":6,\"703\":1,\"709\":1,\"717\":2,\"839\":6,\"889\":1,\"895\":1,\"903\":2,\"1033\":6,\"1084\":1,\"1091\":1,\"1099\":2,\"1256\":6,\"1297\":4,\"1347\":4}}],[\"skipbyinsid\",{\"1\":{\"119\":1,\"183\":1,\"292\":1,\"323\":1,\"326\":1,\"349\":1,\"396\":1,\"468\":1,\"496\":1,\"499\":1,\"517\":1,\"564\":1,\"653\":1,\"681\":1,\"684\":1,\"703\":1,\"750\":1,\"839\":1,\"867\":1,\"870\":1,\"889\":1,\"936\":1,\"1033\":1,\"1061\":1,\"1064\":1,\"1084\":1,\"1135\":1,\"1256\":1,\"1287\":1,\"1290\":1,\"1297\":1,\"1347\":1}}],[\"skip标识即将删除\",{\"1\":{\"89\":1}}],[\"skip\",{\"1\":{\"82\":1,\"89\":1,\"126\":1,\"183\":1,\"292\":2,\"298\":1,\"301\":1,\"303\":1,\"304\":3,\"309\":1,\"355\":1,\"396\":1,\"468\":2,\"473\":1,\"476\":1,\"478\":1,\"479\":3,\"484\":1,\"523\":1,\"564\":1,\"653\":2,\"658\":1,\"661\":1,\"663\":1,\"664\":3,\"669\":1,\"709\":1,\"750\":1,\"839\":2,\"844\":1,\"847\":1,\"849\":1,\"850\":3,\"855\":1,\"895\":1,\"936\":1,\"1033\":2,\"1038\":1,\"1041\":1,\"1043\":1,\"1044\":3,\"1049\":1,\"1091\":1,\"1135\":1,\"1256\":2,\"1262\":1,\"1265\":1,\"1267\":1,\"1268\":3,\"1273\":1,\"1297\":1,\"1347\":1}}],[\"snack3\",{\"1\":{\"79\":1}}],[\"snowflake19\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"snowid19\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"snowid15\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"snowid14\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"sqlsessionfactory改为构造函数引入\",{\"1\":{\"82\":1}}],[\"sqlserver\",{\"1\":{\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1}}],[\"sql\",{\"1\":{\"77\":1,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"179\":2,\"280\":2,\"392\":2,\"454\":2,\"560\":2,\"639\":2,\"746\":2,\"824\":2,\"932\":2,\"1018\":2,\"1131\":2,\"1244\":2}}],[\"select语句获取结果\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"selecttestleavebyid\",{\"1\":{\"247\":1,\"1199\":1}}],[\"selectuserlist\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"selectdeptlist\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"selectrolelist\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"selectcount\",{\"1\":{\"142\":1,\"371\":1,\"539\":1,\"725\":1,\"911\":1,\"1107\":1}}],[\"security放行配置示例\",{\"1\":{\"1310\":1,\"1321\":1,\"1332\":1}}],[\"securitymanager\",{\"1\":{\"197\":2,\"576\":2,\"762\":2,\"948\":2,\"1149\":2}}],[\"securityfilterchain\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"security\",{\"0\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1}}],[\"securityutils\",{\"1\":{\"182\":1,\"246\":2,\"272\":2,\"315\":1,\"395\":1,\"418\":2,\"490\":1,\"563\":1,\"603\":2,\"675\":1,\"749\":1,\"788\":2,\"861\":1,\"935\":1,\"982\":2,\"1055\":1,\"1134\":1,\"1198\":2,\"1218\":2,\"1279\":1}}],[\"set到headerauthorization上\",{\"1\":{\"960\":1}}],[\"set到header的authorization上\",{\"1\":{\"209\":1,\"1161\":1}}],[\"setvariable\",{\"1\":{\"500\":1,\"685\":1,\"871\":1,\"1065\":1}}],[\"settenantlinehandler\",{\"1\":{\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"setinstanceid\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"setid\",{\"1\":{\"182\":1,\"186\":1,\"208\":1,\"315\":1,\"317\":1,\"395\":1,\"399\":1,\"490\":1,\"563\":1,\"567\":1,\"588\":1,\"675\":1,\"749\":1,\"753\":1,\"773\":1,\"861\":1,\"935\":1,\"939\":1,\"959\":1,\"1055\":1,\"1134\":1,\"1138\":1,\"1160\":1,\"1279\":1,\"1281\":1}}],[\"setflowstatus\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"setfilterchaindefinitionmap\",{\"1\":{\"197\":1,\"576\":1,\"762\":1,\"948\":1,\"1149\":1}}],[\"setnodetype\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"setnodename\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"setnodecode\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"setname\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"setpermissionlist\",{\"1\":{\"317\":1,\"1281\":1}}],[\"setpermissionflag\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"setparentid\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"set\",{\"1\":{\"216\":4,\"248\":1,\"309\":3,\"310\":1,\"420\":1,\"484\":3,\"485\":1,\"605\":1,\"669\":3,\"670\":1,\"790\":1,\"855\":3,\"856\":1,\"967\":4,\"984\":1,\"1049\":3,\"1050\":1,\"1168\":4,\"1200\":1,\"1273\":3,\"1274\":1}}],[\"setgroupname\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"sethandler\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"sethandlername\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"sethandlercode\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"setstorageid\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"setup\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"setupdatetime\",{\"1\":{\"186\":2,\"247\":1,\"399\":2,\"419\":1,\"567\":2,\"604\":1,\"753\":2,\"789\":1,\"939\":2,\"983\":1,\"1138\":2,\"1199\":1}}],[\"setcreatetime\",{\"1\":{\"186\":1,\"208\":3,\"247\":1,\"399\":1,\"419\":1,\"567\":1,\"588\":3,\"604\":1,\"753\":1,\"773\":3,\"789\":1,\"939\":1,\"959\":3,\"983\":1,\"1138\":1,\"1160\":3,\"1199\":1}}],[\"setexpression\",{\"1\":{\"168\":2,\"169\":2,\"171\":1,\"218\":2,\"219\":2,\"221\":1,\"224\":1,\"227\":1,\"256\":2,\"257\":2,\"259\":1,\"329\":2,\"330\":2,\"332\":1,\"407\":1,\"592\":1,\"777\":1,\"971\":1,\"1172\":1,\"1174\":2,\"1175\":2,\"1177\":1,\"1180\":1,\"1183\":1}}],[\"setmaxlimit\",{\"1\":{\"64\":1}}],[\"setdbtype\",{\"1\":{\"64\":1}}],[\"serial\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"serializable\",{\"1\":{\"245\":1,\"417\":1,\"602\":1,\"787\":1,\"981\":1,\"1197\":1}}],[\"serializerprovider\",{\"1\":{\"55\":1}}],[\"serialize\",{\"1\":{\"55\":2}}],[\"service\",{\"1\":{\"247\":1,\"1199\":1}}],[\"services文件夹\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"server\",{\"1\":{\"216\":2,\"579\":2,\"967\":2,\"1168\":2,\"1311\":2}}],[\"servlet\",{\"1\":{\"62\":1}}],[\"sb3\",{\"1\":{\"283\":1,\"284\":1,\"286\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"1021\":1,\"1022\":1,\"1024\":1,\"1247\":1,\"1248\":1,\"1250\":1}}],[\"sb删除加载配置文件\",{\"1\":{\"81\":1}}],[\"sb\",{\"1\":{\"64\":4,\"193\":1,\"214\":1,\"283\":1,\"284\":1,\"285\":1,\"286\":1,\"287\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"461\":1,\"573\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"759\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"945\":1,\"965\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1024\":1,\"1025\":1,\"1145\":1,\"1166\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1348\":1}}],[\"super\",{\"1\":{\"55\":2}}],[\"structureuser\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"streamutils\",{\"1\":{\"272\":1,\"1218\":1}}],[\"stream\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"strtomap\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"stringutils\",{\"1\":{\"222\":2,\"237\":1,\"246\":1,\"247\":2,\"248\":1,\"333\":2,\"411\":1,\"418\":1,\"419\":1,\"420\":1,\"500\":2,\"596\":1,\"603\":1,\"604\":1,\"605\":1,\"685\":2,\"781\":1,\"788\":1,\"789\":1,\"790\":1,\"871\":2,\"975\":1,\"982\":1,\"983\":1,\"984\":1,\"1065\":2,\"1178\":2,\"1189\":1,\"1198\":1,\"1199\":2,\"1200\":1}}],[\"string>\",{\"1\":{\"197\":1,\"576\":1,\"762\":1,\"948\":1,\"1149\":1}}],[\"string\",{\"1\":{\"55\":2,\"166\":3,\"168\":2,\"172\":7,\"173\":3,\"177\":1,\"182\":1,\"203\":2,\"218\":2,\"222\":6,\"225\":2,\"228\":7,\"229\":3,\"237\":3,\"245\":4,\"247\":1,\"248\":1,\"256\":2,\"260\":2,\"271\":1,\"272\":3,\"289\":1,\"309\":3,\"310\":2,\"314\":1,\"315\":2,\"326\":3,\"329\":2,\"333\":6,\"390\":1,\"395\":1,\"406\":3,\"411\":3,\"417\":5,\"420\":1,\"465\":1,\"484\":3,\"485\":2,\"489\":1,\"490\":2,\"499\":3,\"500\":9,\"558\":1,\"563\":1,\"583\":2,\"591\":3,\"596\":3,\"602\":5,\"605\":1,\"650\":1,\"669\":3,\"670\":2,\"674\":1,\"675\":2,\"684\":3,\"685\":9,\"744\":1,\"749\":1,\"768\":2,\"776\":3,\"781\":3,\"787\":5,\"790\":1,\"836\":1,\"855\":3,\"856\":2,\"860\":1,\"861\":2,\"870\":3,\"871\":9,\"930\":1,\"935\":1,\"954\":2,\"970\":3,\"975\":3,\"981\":5,\"984\":1,\"1030\":1,\"1049\":3,\"1050\":2,\"1054\":1,\"1055\":2,\"1064\":3,\"1065\":9,\"1125\":3,\"1129\":1,\"1134\":1,\"1155\":2,\"1171\":3,\"1174\":2,\"1178\":6,\"1181\":2,\"1184\":7,\"1185\":3,\"1189\":3,\"1197\":4,\"1199\":1,\"1200\":1,\"1217\":1,\"1218\":3,\"1253\":1,\"1273\":3,\"1274\":2,\"1278\":1,\"1279\":2,\"1290\":3,\"1294\":1,\"1344\":1}}],[\"stputil\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"status\",{\"1\":{\"300\":1,\"301\":1,\"302\":2,\"475\":1,\"476\":1,\"477\":2,\"660\":1,\"661\":1,\"662\":2,\"846\":1,\"847\":1,\"848\":2,\"1040\":1,\"1041\":1,\"1042\":2,\"1264\":1,\"1265\":1,\"1266\":2}}],[\"status改为string类型\",{\"1\":{\"81\":1}}],[\"static\",{\"1\":{\"55\":3,\"171\":1,\"227\":1,\"237\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":1,\"315\":1,\"411\":1,\"418\":1,\"419\":1,\"420\":1,\"490\":1,\"596\":1,\"603\":1,\"604\":1,\"605\":1,\"675\":1,\"781\":1,\"788\":1,\"789\":1,\"790\":1,\"861\":1,\"975\":1,\"982\":1,\"983\":1,\"984\":1,\"1055\":1,\"1183\":1,\"1189\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1,\"1279\":1}}],[\"stackoverflowerror\",{\"0\":{\"67\":1}}],[\"startlistener\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"startflow\",{\"1\":{\"291\":1,\"467\":1,\"652\":1,\"838\":1,\"1032\":1,\"1255\":1,\"1296\":1,\"1346\":1}}],[\"start\",{\"1\":{\"118\":1,\"166\":1,\"182\":1,\"240\":1,\"245\":2,\"253\":1,\"291\":1,\"315\":1,\"348\":1,\"395\":1,\"406\":1,\"413\":1,\"417\":2,\"467\":1,\"490\":1,\"516\":1,\"563\":1,\"591\":1,\"598\":1,\"602\":2,\"652\":1,\"675\":1,\"702\":1,\"749\":1,\"776\":1,\"783\":1,\"787\":2,\"838\":1,\"861\":1,\"888\":1,\"935\":1,\"970\":1,\"977\":1,\"981\":2,\"1032\":1,\"1055\":1,\"1083\":1,\"1125\":1,\"1134\":1,\"1171\":1,\"1192\":1,\"1197\":2,\"1205\":1,\"1255\":1,\"1279\":1,\"1296\":1,\"1346\":1}}],[\"starter<\",{\"1\":{\"64\":1,\"283\":2,\"284\":2,\"285\":1,\"286\":2,\"287\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"461\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"827\":2,\"828\":2,\"829\":2,\"830\":2,\"831\":1,\"1021\":2,\"1022\":2,\"1023\":1,\"1024\":2,\"1025\":1,\"1247\":2,\"1248\":2,\"1249\":1,\"1250\":2,\"1251\":1}}],[\"starter\",{\"1\":{\"64\":2}}],[\"starter改为warm\",{\"1\":{\"64\":2}}],[\"star\",{\"1\":{\"12\":1}}],[\"star的多少关系到项目能否被更多人看到\",{\"1\":{\"5\":1}}],[\"starrydesert\",{\"1\":{\"2\":1}}],[\"style>\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"style=\",{\"1\":{\"200\":2,\"580\":2,\"765\":2,\"951\":2,\"1152\":2}}],[\"style=常规\",{\"1\":{\"60\":2}}],[\"style\",{\"1\":{\"48\":1}}],[\"globalconfig\",{\"1\":{\"264\":2,\"310\":3,\"429\":2,\"485\":3,\"614\":2,\"670\":3,\"799\":2,\"856\":3,\"993\":2,\"1050\":3,\"1210\":2,\"1274\":3}}],[\"global\",{\"1\":{\"263\":1,\"428\":1,\"613\":1,\"798\":1,\"992\":1,\"1209\":1}}],[\"globallistener\",{\"1\":{\"253\":1,\"1205\":1}}],[\"gt\",{\"1\":{\"165\":2,\"1124\":2}}],[\"gson\",{\"1\":{\"79\":1}}],[\"ge\",{\"1\":{\"165\":2,\"1124\":2}}],[\"getfieldlist\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"getflowstatus\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"getflowparams\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"getflowtype\",{\"1\":{\"166\":1,\"182\":1,\"315\":1,\"395\":1,\"406\":1,\"490\":1,\"563\":1,\"591\":1,\"675\":1,\"749\":1,\"776\":1,\"861\":1,\"935\":1,\"970\":1,\"1055\":1,\"1125\":1,\"1134\":1,\"1171\":1,\"1279\":1}}],[\"getkey\",{\"1\":{\"292\":3,\"468\":3,\"653\":3,\"839\":3,\"1033\":3,\"1256\":3,\"1297\":2,\"1347\":2}}],[\"getresultlist\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"getroles\",{\"1\":{\"246\":1,\"272\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1,\"1218\":1}}],[\"getrolename\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"getrolekey\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"getroleid\",{\"1\":{\"208\":1,\"246\":1,\"272\":1,\"418\":1,\"588\":1,\"603\":1,\"773\":1,\"788\":1,\"959\":1,\"982\":1,\"1160\":1,\"1198\":1,\"1218\":1}}],[\"getrole\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"getadditionalhandler\",{\"1\":{\"247\":2,\"419\":2,\"604\":2,\"789\":2,\"983\":2,\"1199\":2}}],[\"getalldatadefinition\",{\"1\":{\"115\":1,\"116\":1}}],[\"getbean\",{\"1\":{\"267\":1,\"269\":1,\"432\":1,\"434\":1,\"617\":1,\"619\":1,\"802\":1,\"804\":1,\"996\":1,\"998\":1,\"1213\":1,\"1215\":1}}],[\"getbusinessid\",{\"1\":{\"247\":1,\"1199\":1}}],[\"getbyids\",{\"1\":{\"137\":1,\"366\":1,\"534\":1,\"720\":1,\"906\":1,\"1102\":1}}],[\"getbyid\",{\"1\":{\"136\":1,\"138\":1,\"365\":1,\"367\":1,\"533\":1,\"535\":1,\"719\":1,\"721\":1,\"905\":1,\"907\":1,\"1101\":1,\"1103\":1}}],[\"getvariable\",{\"1\":{\"247\":1,\"254\":2,\"315\":1,\"419\":1,\"425\":2,\"490\":1,\"604\":1,\"610\":2,\"675\":1,\"789\":1,\"795\":2,\"861\":1,\"983\":1,\"989\":2,\"1055\":1,\"1199\":1,\"1206\":2,\"1279\":1}}],[\"getpermissionlist\",{\"1\":{\"248\":1,\"317\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1,\"1281\":1}}],[\"getpermissionflag\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"getparentid\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"getlogger\",{\"1\":{\"237\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":1,\"315\":1,\"411\":1,\"418\":1,\"419\":1,\"420\":1,\"490\":1,\"596\":1,\"603\":1,\"604\":1,\"605\":1,\"675\":1,\"781\":1,\"788\":1,\"789\":1,\"790\":1,\"861\":1,\"975\":1,\"982\":1,\"983\":1,\"984\":1,\"1055\":1,\"1189\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1,\"1279\":1}}],[\"getloginuser\",{\"1\":{\"182\":1,\"246\":2,\"272\":2,\"315\":1,\"395\":1,\"418\":2,\"490\":1,\"563\":1,\"603\":2,\"675\":1,\"749\":1,\"788\":2,\"861\":1,\"935\":1,\"982\":2,\"1055\":1,\"1134\":1,\"1198\":2,\"1218\":2,\"1279\":1}}],[\"getnexttasks\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"getnextnodelist\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"getnowdate\",{\"1\":{\"247\":2,\"419\":2,\"604\":2,\"789\":2,\"983\":2,\"1199\":2}}],[\"getnodetype\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"getnodename\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"getnodecode\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"getnickname\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"getdeptname\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"getdeptid\",{\"1\":{\"208\":2,\"246\":1,\"272\":2,\"418\":1,\"588\":2,\"603\":1,\"773\":2,\"788\":1,\"959\":2,\"982\":1,\"1160\":2,\"1198\":1,\"1218\":2}}],[\"getdept\",{\"1\":{\"208\":4,\"588\":4,\"773\":4,\"959\":4,\"1160\":4}}],[\"getday\",{\"1\":{\"166\":1,\"315\":1,\"406\":1,\"490\":1,\"591\":1,\"675\":1,\"776\":1,\"861\":1,\"970\":1,\"1055\":1,\"1125\":1,\"1171\":1,\"1279\":1}}],[\"gethandler\",{\"1\":{\"271\":1,\"272\":1,\"1217\":1,\"1218\":1}}],[\"gethandlerselectvo\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"gethandlerselect\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"gethandlertype\",{\"1\":{\"207\":1,\"208\":4,\"587\":1,\"588\":4,\"772\":1,\"773\":4,\"958\":1,\"959\":4,\"1159\":1,\"1160\":4,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"getmapping\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"getcolumn\",{\"1\":{\"309\":5,\"310\":3,\"484\":5,\"485\":3,\"669\":5,\"670\":3,\"855\":5,\"856\":3,\"1049\":5,\"1050\":3,\"1273\":5,\"1274\":3}}],[\"getcreateby\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"getcreatetime\",{\"1\":{\"186\":3,\"208\":3,\"399\":3,\"567\":3,\"588\":3,\"753\":3,\"773\":3,\"939\":3,\"959\":3,\"1138\":3,\"1160\":3}}],[\"getcurrentinstance\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"getupdatetime\",{\"1\":{\"186\":1,\"399\":1,\"567\":1,\"753\":1,\"939\":1,\"1138\":1}}],[\"getusername\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"getuserid\",{\"1\":{\"182\":1,\"208\":1,\"246\":2,\"272\":4,\"315\":1,\"395\":1,\"418\":2,\"490\":1,\"563\":1,\"588\":1,\"603\":2,\"675\":1,\"749\":1,\"773\":1,\"788\":2,\"861\":1,\"935\":1,\"959\":1,\"982\":2,\"1055\":1,\"1134\":1,\"1160\":1,\"1198\":2,\"1218\":4,\"1279\":1}}],[\"getuser\",{\"1\":{\"182\":1,\"208\":2,\"246\":4,\"272\":2,\"291\":1,\"292\":3,\"315\":1,\"395\":1,\"418\":4,\"467\":1,\"468\":3,\"490\":1,\"563\":1,\"588\":2,\"603\":4,\"652\":1,\"653\":3,\"675\":1,\"749\":1,\"773\":2,\"788\":4,\"838\":1,\"839\":3,\"861\":1,\"935\":1,\"959\":2,\"982\":4,\"1032\":1,\"1033\":3,\"1055\":1,\"1134\":1,\"1160\":2,\"1198\":4,\"1218\":2,\"1255\":1,\"1256\":3,\"1279\":1,\"1296\":1,\"1297\":2,\"1346\":1,\"1347\":2}}],[\"getinstance\",{\"1\":{\"247\":1,\"248\":1,\"254\":1,\"315\":1,\"419\":1,\"420\":1,\"425\":1,\"490\":1,\"604\":1,\"605\":1,\"610\":1,\"675\":1,\"789\":1,\"790\":1,\"795\":1,\"861\":1,\"983\":1,\"984\":1,\"989\":1,\"1055\":1,\"1199\":1,\"1200\":1,\"1206\":1,\"1279\":1}}],[\"getinstanceid\",{\"1\":{\"183\":1,\"247\":1,\"323\":1,\"326\":1,\"396\":1,\"419\":1,\"496\":1,\"499\":1,\"564\":1,\"604\":1,\"681\":1,\"684\":1,\"750\":1,\"789\":1,\"867\":1,\"870\":1,\"936\":1,\"983\":1,\"1061\":1,\"1064\":1,\"1135\":1,\"1199\":1,\"1287\":1,\"1290\":1}}],[\"getid\",{\"1\":{\"186\":1,\"247\":2,\"289\":1,\"291\":1,\"399\":1,\"419\":2,\"465\":1,\"467\":1,\"567\":1,\"604\":2,\"650\":1,\"652\":1,\"753\":1,\"789\":2,\"836\":1,\"838\":1,\"939\":1,\"983\":2,\"1030\":1,\"1032\":1,\"1138\":1,\"1199\":2,\"1253\":1,\"1255\":1,\"1294\":1,\"1296\":1,\"1344\":1,\"1346\":1}}],[\"gettablename\",{\"1\":{\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"gettableinfo\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"gettaskid\",{\"1\":{\"235\":4}}],[\"gettotal\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"gettenantidcolumn\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"gettenantid\",{\"1\":{\"177\":1,\"309\":1,\"310\":1,\"314\":1,\"390\":1,\"484\":1,\"485\":1,\"489\":1,\"558\":1,\"669\":1,\"670\":1,\"674\":1,\"744\":1,\"855\":1,\"856\":1,\"860\":1,\"930\":1,\"1049\":1,\"1050\":1,\"1054\":1,\"1129\":1,\"1273\":1,\"1274\":1,\"1278\":1}}],[\"gettype\",{\"1\":{\"168\":2,\"171\":1,\"173\":1,\"218\":2,\"222\":1,\"225\":1,\"227\":1,\"229\":1,\"256\":2,\"260\":1,\"329\":2,\"333\":1,\"500\":2,\"685\":2,\"871\":2,\"1065\":2,\"1174\":2,\"1178\":1,\"1181\":1,\"1183\":1,\"1185\":1}}],[\"get\",{\"1\":{\"172\":2,\"222\":1,\"228\":2,\"247\":2,\"248\":1,\"254\":1,\"309\":2,\"310\":1,\"333\":1,\"419\":1,\"420\":1,\"425\":1,\"484\":2,\"485\":1,\"500\":1,\"604\":1,\"605\":1,\"610\":1,\"669\":2,\"670\":1,\"685\":1,\"789\":1,\"790\":1,\"795\":1,\"855\":2,\"856\":1,\"871\":1,\"983\":1,\"984\":1,\"989\":1,\"1049\":2,\"1050\":1,\"1065\":1,\"1178\":1,\"1184\":2,\"1199\":2,\"1200\":1,\"1206\":1,\"1273\":2,\"1274\":1}}],[\"getexpressionmap\",{\"1\":{\"171\":1,\"227\":1,\"1183\":1}}],[\"getone\",{\"1\":{\"141\":1,\"370\":1,\"538\":1,\"724\":1,\"910\":1,\"1106\":1}}],[\"get赋值\",{\"1\":{\"76\":1}}],[\"gen\",{\"1\":{\"55\":3}}],[\"guide\",{\"0\":{\"1360\":1,\"1362\":1,\"1364\":1,\"1366\":1,\"1368\":1,\"1370\":1},\"1\":{\"64\":3}}],[\"groupid>\",{\"1\":{\"64\":1,\"79\":1,\"193\":1,\"194\":1,\"214\":2,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":4,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":4,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":4,\"759\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":4,\"945\":1,\"965\":2,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":4,\"1145\":1,\"1146\":1,\"1166\":2,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":4,\"1291\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1341\":1,\"1348\":1}}],[\"gaussdb\",{\"1\":{\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1}}],[\"git提交规范\",{\"1\":{\"48\":1}}],[\"git\",{\"1\":{\"41\":1,\"89\":1,\"90\":1}}],[\"github\",{\"1\":{\"41\":1,\"63\":1,\"76\":1,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"573\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"1309\":1}}],[\"github地址\",{\"1\":{\"5\":1}}],[\"gitee\",{\"1\":{\"41\":4,\"1292\":1,\"1342\":1}}],[\"gitee地址\",{\"1\":{\"5\":1}}],[\"gitcode地址\",{\"1\":{\"5\":1}}],[\"人员类型\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"人大金仓\",{\"1\":{\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1}}],[\"人力资源管理\",{\"1\":{\"14\":1}}],[\"p\",{\"1\":{\"317\":2,\"1281\":2}}],[\"px\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"port\",{\"1\":{\"199\":1,\"203\":1,\"764\":1,\"768\":1,\"950\":1,\"954\":1,\"1151\":1,\"1155\":1,\"1322\":1,\"1333\":1}}],[\"postgresql\",{\"1\":{\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1}}],[\"put\",{\"1\":{\"166\":1,\"171\":1,\"197\":2,\"227\":1,\"315\":2,\"317\":5,\"323\":1,\"326\":1,\"406\":1,\"490\":2,\"496\":1,\"499\":1,\"576\":2,\"591\":1,\"675\":2,\"681\":1,\"684\":1,\"762\":1,\"776\":1,\"861\":2,\"867\":1,\"870\":1,\"948\":2,\"970\":1,\"1055\":2,\"1061\":1,\"1064\":1,\"1125\":1,\"1149\":2,\"1171\":1,\"1183\":1,\"1279\":2,\"1281\":5,\"1287\":1,\"1290\":1}}],[\"publish\",{\"1\":{\"109\":1,\"290\":2,\"300\":1,\"341\":1,\"466\":2,\"475\":1,\"509\":1,\"651\":2,\"660\":1,\"695\":1,\"837\":2,\"846\":1,\"881\":1,\"1031\":2,\"1040\":1,\"1076\":1,\"1254\":2,\"1264\":1,\"1295\":2,\"1345\":2}}],[\"public\",{\"1\":{\"55\":7,\"64\":5,\"166\":3,\"168\":1,\"171\":1,\"172\":4,\"173\":3,\"177\":5,\"180\":3,\"182\":1,\"186\":4,\"190\":2,\"197\":2,\"198\":2,\"203\":2,\"207\":1,\"208\":3,\"218\":1,\"221\":1,\"222\":3,\"224\":1,\"225\":3,\"227\":1,\"228\":4,\"229\":3,\"235\":4,\"237\":3,\"245\":1,\"246\":2,\"247\":2,\"248\":2,\"253\":5,\"254\":1,\"256\":1,\"259\":1,\"260\":3,\"271\":1,\"272\":3,\"289\":1,\"290\":1,\"291\":1,\"292\":2,\"309\":7,\"310\":8,\"313\":2,\"314\":2,\"315\":3,\"317\":2,\"326\":2,\"329\":1,\"332\":1,\"333\":3,\"390\":5,\"393\":3,\"395\":1,\"399\":4,\"403\":2,\"406\":3,\"411\":3,\"417\":1,\"418\":2,\"419\":2,\"420\":2,\"425\":1,\"465\":1,\"466\":1,\"467\":1,\"468\":2,\"484\":7,\"485\":8,\"488\":2,\"489\":2,\"490\":3,\"499\":2,\"500\":4,\"558\":5,\"561\":3,\"563\":1,\"567\":4,\"571\":2,\"576\":2,\"577\":2,\"583\":2,\"587\":1,\"588\":3,\"591\":3,\"596\":3,\"602\":1,\"603\":2,\"604\":2,\"605\":2,\"610\":1,\"650\":1,\"651\":1,\"652\":1,\"653\":2,\"669\":7,\"670\":8,\"673\":2,\"674\":2,\"675\":3,\"684\":2,\"685\":4,\"744\":5,\"747\":3,\"749\":1,\"753\":4,\"757\":2,\"762\":2,\"763\":2,\"768\":2,\"772\":1,\"773\":3,\"776\":3,\"781\":3,\"787\":1,\"788\":2,\"789\":2,\"790\":2,\"795\":1,\"836\":1,\"837\":1,\"838\":1,\"839\":2,\"855\":7,\"856\":8,\"859\":2,\"860\":2,\"861\":3,\"870\":2,\"871\":4,\"930\":5,\"933\":3,\"935\":1,\"939\":4,\"943\":2,\"948\":2,\"949\":2,\"954\":2,\"958\":1,\"959\":3,\"970\":3,\"975\":3,\"981\":1,\"982\":2,\"983\":2,\"984\":2,\"989\":1,\"1030\":1,\"1031\":1,\"1032\":1,\"1033\":2,\"1049\":7,\"1050\":8,\"1053\":2,\"1054\":2,\"1055\":3,\"1064\":2,\"1065\":4,\"1125\":3,\"1129\":5,\"1132\":3,\"1134\":1,\"1138\":4,\"1142\":2,\"1149\":2,\"1150\":2,\"1155\":2,\"1159\":1,\"1160\":3,\"1171\":3,\"1174\":1,\"1177\":1,\"1178\":3,\"1180\":1,\"1181\":3,\"1183\":1,\"1184\":4,\"1185\":3,\"1189\":3,\"1197\":1,\"1198\":2,\"1199\":2,\"1200\":2,\"1205\":5,\"1206\":1,\"1217\":1,\"1218\":3,\"1253\":1,\"1254\":1,\"1255\":1,\"1256\":2,\"1273\":7,\"1274\":8,\"1277\":2,\"1278\":2,\"1279\":3,\"1281\":2,\"1290\":2,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":2,\"1315\":1,\"1326\":1,\"1337\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":2}}],[\"persist\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"persistencecontext\",{\"1\":{\"268\":2,\"433\":2,\"618\":2,\"803\":2,\"997\":2,\"1214\":2}}],[\"persistence\",{\"1\":{\"176\":1,\"268\":1,\"285\":1,\"389\":1,\"433\":1,\"459\":1,\"557\":1,\"618\":1,\"644\":1,\"743\":1,\"803\":1,\"829\":1,\"929\":1,\"997\":1,\"1023\":1,\"1128\":1,\"1214\":1,\"1249\":1}}],[\"permissions\",{\"1\":{\"271\":1,\"272\":1,\"1217\":1,\"1218\":1}}],[\"permissionhandler\",{\"1\":{\"271\":1,\"272\":1,\"1217\":1,\"1218\":1}}],[\"permissionhandler接口\",{\"0\":{\"271\":1,\"1217\":1}}],[\"permission\",{\"1\":{\"248\":4,\"303\":1,\"413\":1,\"417\":2,\"420\":4,\"478\":1,\"598\":1,\"602\":2,\"605\":4,\"663\":1,\"783\":1,\"787\":2,\"790\":4,\"849\":1,\"977\":1,\"981\":2,\"984\":4,\"1043\":1,\"1200\":4,\"1267\":1}}],[\"permissionlist\",{\"1\":{\"246\":7,\"248\":4,\"272\":4,\"418\":7,\"420\":4,\"603\":7,\"605\":4,\"788\":7,\"790\":4,\"982\":7,\"984\":4,\"1198\":7,\"1200\":4,\"1218\":4}}],[\"permissionflag\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"235\":4,\"292\":3,\"349\":1,\"355\":1,\"357\":2,\"358\":2,\"359\":2,\"360\":2,\"361\":1,\"468\":3,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"525\":2,\"526\":2,\"527\":2,\"528\":2,\"529\":1,\"653\":3,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"839\":3,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1033\":3,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1256\":3,\"1297\":2,\"1347\":2}}],[\"permitall\",{\"1\":{\"196\":1,\"575\":1,\"761\":1,\"947\":1,\"1148\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"perf\",{\"1\":{\"48\":1,\"76\":1}}],[\"pg适配\",{\"1\":{\"85\":1}}],[\"parseobject\",{\"1\":{\"254\":1,\"425\":1,\"610\":1,\"795\":1,\"989\":1,\"1206\":1}}],[\"parseexpression\",{\"1\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"parsedatetostr\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"param\",{\"1\":{\"166\":2,\"168\":3,\"172\":6,\"207\":1,\"208\":4,\"218\":3,\"228\":6,\"237\":2,\"246\":1,\"247\":1,\"253\":4,\"254\":1,\"256\":3,\"309\":2,\"310\":1,\"326\":1,\"329\":3,\"406\":2,\"411\":2,\"418\":1,\"419\":1,\"425\":1,\"484\":2,\"485\":1,\"499\":1,\"500\":2,\"587\":1,\"588\":4,\"591\":2,\"596\":2,\"603\":1,\"604\":1,\"610\":1,\"669\":2,\"670\":1,\"684\":1,\"685\":2,\"772\":1,\"773\":4,\"776\":2,\"781\":2,\"788\":1,\"789\":1,\"795\":1,\"855\":2,\"856\":1,\"870\":1,\"871\":2,\"958\":1,\"959\":4,\"970\":2,\"975\":2,\"982\":1,\"983\":1,\"989\":1,\"1049\":2,\"1050\":1,\"1064\":1,\"1065\":2,\"1125\":2,\"1159\":1,\"1160\":4,\"1171\":2,\"1174\":3,\"1184\":6,\"1189\":2,\"1198\":1,\"1199\":1,\"1205\":4,\"1206\":1,\"1273\":2,\"1274\":1,\"1290\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"pagenum=1\",{\"1\":{\"583\":1}}],[\"pageinfo<>\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"page\",{\"1\":{\"138\":2,\"216\":1,\"367\":2,\"535\":2,\"721\":2,\"907\":2,\"967\":1,\"1103\":2,\"1168\":1}}],[\"pagination\",{\"1\":{\"64\":1}}],[\"paginationinnerinterceptor\",{\"1\":{\"64\":10}}],[\"pass通过\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"pass审批通过\",{\"1\":{\"119\":1,\"126\":1,\"134\":1,\"304\":1,\"349\":1,\"355\":1,\"363\":1,\"479\":1,\"517\":1,\"523\":1,\"531\":1,\"664\":1,\"703\":1,\"709\":1,\"717\":1,\"850\":1,\"889\":1,\"895\":1,\"903\":1,\"1044\":1,\"1084\":1,\"1091\":1,\"1099\":1,\"1268\":1}}],[\"pass\",{\"1\":{\"82\":1,\"216\":1,\"274\":1,\"292\":3,\"446\":1,\"468\":3,\"579\":1,\"631\":1,\"653\":3,\"816\":1,\"839\":3,\"967\":1,\"1010\":1,\"1033\":3,\"1168\":1,\"1230\":1,\"1237\":1,\"1256\":3,\"1297\":2,\"1311\":1,\"1347\":2}}],[\"pathrewrite\",{\"1\":{\"580\":1,\"581\":1}}],[\"path字段\",{\"1\":{\"82\":1,\"241\":1,\"1193\":1}}],[\"path\",{\"1\":{\"82\":2,\"176\":2,\"179\":2,\"189\":1,\"200\":1,\"201\":1,\"241\":1,\"289\":2,\"300\":2,\"301\":1,\"303\":3,\"305\":1,\"312\":1,\"389\":2,\"392\":2,\"402\":1,\"465\":2,\"475\":2,\"476\":1,\"478\":3,\"480\":1,\"487\":1,\"557\":2,\"560\":2,\"570\":1,\"580\":1,\"581\":1,\"650\":2,\"660\":2,\"661\":1,\"663\":3,\"665\":1,\"672\":1,\"743\":2,\"746\":2,\"756\":1,\"765\":1,\"766\":1,\"836\":2,\"846\":2,\"847\":1,\"849\":3,\"851\":1,\"858\":1,\"929\":2,\"932\":2,\"942\":1,\"951\":1,\"952\":1,\"1030\":2,\"1040\":2,\"1041\":1,\"1043\":3,\"1045\":1,\"1052\":1,\"1128\":2,\"1131\":2,\"1141\":1,\"1152\":1,\"1153\":1,\"1193\":1,\"1253\":2,\"1264\":2,\"1265\":1,\"1267\":3,\"1269\":1,\"1276\":1,\"1294\":2,\"1344\":2}}],[\"path改为form\",{\"1\":{\"82\":2}}],[\"package\",{\"1\":{\"64\":1}}],[\"plugin<\",{\"1\":{\"283\":1,\"284\":1,\"285\":1,\"286\":1,\"287\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"461\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1024\":1,\"1025\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1291\":1,\"1341\":1}}],[\"plugin\",{\"1\":{\"193\":1,\"194\":1,\"214\":2,\"237\":2,\"411\":2,\"573\":1,\"596\":2,\"759\":1,\"781\":2,\"945\":1,\"965\":2,\"975\":2,\"1145\":1,\"1146\":1,\"1166\":2,\"1189\":2,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1348\":1}}],[\"plugins\",{\"1\":{\"64\":4}}],[\"plus只支持自身的多租户方式\",{\"1\":{\"308\":1,\"483\":1,\"668\":1,\"854\":1,\"1048\":1,\"1272\":1}}],[\"plus只支持自身的逻辑删除方式\",{\"1\":{\"262\":1,\"427\":1,\"612\":1,\"797\":1,\"991\":1,\"1208\":1}}],[\"plus的自带方法\",{\"1\":{\"267\":1,\"432\":1,\"617\":1,\"802\":1,\"996\":1,\"1213\":1}}],[\"plus的自带的方式实现\",{\"1\":{\"82\":1}}],[\"plus配置\",{\"1\":{\"263\":1,\"428\":1,\"613\":1,\"798\":1,\"992\":1,\"1209\":1}}],[\"plus扩展\",{\"1\":{\"86\":1}}],[\"plus扩展包\",{\"1\":{\"78\":1,\"82\":1}}],[\"plus多租户和软件删除处理\",{\"1\":{\"84\":1}}],[\"plus多租户和逻辑删除使用方式\",{\"1\":{\"82\":1}}],[\"plus\",{\"0\":{\"64\":1,\"262\":1,\"267\":1,\"284\":1,\"308\":1,\"427\":1,\"432\":1,\"458\":1,\"483\":1,\"612\":1,\"617\":1,\"643\":1,\"668\":1,\"797\":1,\"802\":1,\"828\":1,\"854\":1,\"991\":1,\"996\":1,\"1022\":1,\"1048\":1,\"1208\":1,\"1213\":1,\"1248\":1,\"1272\":1},\"1\":{\"12\":1,\"16\":1,\"61\":1,\"64\":5,\"263\":1,\"284\":3,\"285\":1,\"428\":1,\"458\":2,\"459\":1,\"463\":1,\"613\":1,\"643\":2,\"644\":1,\"648\":1,\"798\":1,\"828\":3,\"829\":1,\"833\":1,\"992\":1,\"1022\":3,\"1023\":1,\"1027\":1,\"1209\":1,\"1248\":3,\"1249\":1,\"1291\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1341\":1,\"1349\":1,\"1355\":1}}],[\"println\",{\"1\":{\"289\":1,\"291\":1,\"292\":3,\"317\":1,\"465\":1,\"467\":1,\"468\":3,\"650\":1,\"652\":1,\"653\":3,\"836\":1,\"838\":1,\"839\":3,\"1030\":1,\"1032\":1,\"1033\":3,\"1253\":1,\"1255\":1,\"1256\":3,\"1281\":1,\"1294\":1,\"1296\":1,\"1297\":2,\"1344\":1,\"1346\":1,\"1347\":2}}],[\"private\",{\"1\":{\"55\":2,\"208\":6,\"237\":1,\"246\":1,\"247\":2,\"248\":1,\"253\":1,\"267\":1,\"269\":1,\"309\":1,\"315\":1,\"411\":1,\"418\":1,\"419\":2,\"420\":1,\"431\":1,\"432\":1,\"434\":1,\"484\":1,\"490\":1,\"588\":6,\"596\":1,\"603\":1,\"604\":2,\"605\":1,\"616\":1,\"617\":1,\"619\":1,\"669\":1,\"675\":1,\"773\":6,\"781\":1,\"788\":1,\"789\":2,\"790\":1,\"801\":1,\"802\":1,\"804\":1,\"855\":1,\"861\":1,\"959\":6,\"975\":1,\"982\":1,\"983\":2,\"984\":1,\"995\":1,\"996\":1,\"998\":1,\"1049\":1,\"1055\":1,\"1160\":6,\"1189\":1,\"1198\":1,\"1199\":2,\"1200\":1,\"1205\":1,\"1213\":1,\"1215\":1,\"1273\":1,\"1279\":1}}],[\"prefix\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"preeval\",{\"1\":{\"172\":2,\"228\":2,\"1184\":2}}],[\"proxy\",{\"1\":{\"201\":2,\"216\":5,\"579\":1,\"581\":2,\"766\":2,\"952\":2,\"967\":5,\"1153\":2,\"1168\":5,\"1311\":1}}],[\"proxytargetclass\",{\"1\":{\"64\":1}}],[\"processed\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"process\",{\"1\":{\"200\":2,\"765\":2,\"951\":2,\"1152\":2}}],[\"protected\",{\"1\":{\"196\":1,\"268\":2,\"433\":2,\"575\":1,\"618\":2,\"761\":1,\"803\":2,\"947\":1,\"997\":2,\"1148\":1,\"1214\":2,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"properties\",{\"1\":{\"63\":1,\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"provider\",{\"1\":{\"55\":2,\"176\":1,\"285\":1,\"389\":1,\"459\":1,\"557\":1,\"644\":1,\"743\":1,\"829\":1,\"929\":1,\"1023\":1,\"1128\":1,\"1249\":1}}],[\"帮助不同部门之间更好地协调工作\",{\"1\":{\"14\":1}}],[\"帮助企业在遵守法规和标准的同时\",{\"1\":{\"14\":1}}],[\"跨部门协作\",{\"1\":{\"14\":1}}],[\"系统变更管理等\",{\"1\":{\"14\":1}}],[\"i++\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"ip\",{\"1\":{\"199\":1,\"203\":1,\"216\":1,\"764\":1,\"768\":1,\"950\":1,\"954\":1,\"967\":1,\"1151\":1,\"1155\":1,\"1168\":1,\"1322\":1,\"1333\":1}}],[\"impl\",{\"1\":{\"247\":1,\"1199\":1}}],[\"implements\",{\"1\":{\"172\":1,\"177\":1,\"186\":1,\"198\":1,\"208\":1,\"222\":1,\"225\":1,\"228\":1,\"237\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":1,\"260\":1,\"272\":1,\"309\":1,\"310\":1,\"314\":1,\"315\":1,\"333\":1,\"390\":1,\"399\":1,\"411\":1,\"418\":1,\"419\":1,\"420\":1,\"484\":1,\"485\":1,\"489\":1,\"490\":1,\"500\":1,\"558\":1,\"567\":1,\"577\":1,\"588\":1,\"596\":1,\"603\":1,\"604\":1,\"605\":1,\"669\":1,\"670\":1,\"674\":1,\"675\":1,\"685\":1,\"744\":1,\"753\":1,\"763\":1,\"773\":1,\"781\":1,\"788\":1,\"789\":1,\"790\":1,\"855\":1,\"856\":1,\"860\":1,\"861\":1,\"871\":1,\"930\":1,\"939\":1,\"949\":1,\"959\":1,\"975\":1,\"982\":1,\"983\":1,\"984\":1,\"1049\":1,\"1050\":1,\"1054\":1,\"1055\":1,\"1065\":1,\"1129\":1,\"1138\":1,\"1150\":1,\"1160\":1,\"1178\":1,\"1181\":1,\"1184\":1,\"1189\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1,\"1218\":1,\"1273\":1,\"1274\":1,\"1278\":1,\"1279\":1}}],[\"importxml\",{\"1\":{\"103\":1,\"289\":1,\"336\":1,\"465\":1,\"503\":1,\"650\":1,\"689\":1,\"836\":1,\"875\":1,\"1030\":1,\"1070\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"import\",{\"1\":{\"64\":8,\"201\":3,\"581\":1,\"766\":3,\"952\":3,\"1153\":3}}],[\"ignoretable\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"ignore为false\",{\"1\":{\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"361\":1,\"529\":1,\"715\":1,\"901\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1}}],[\"ignore\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"361\":1,\"529\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1}}],[\"isnotempty\",{\"1\":{\"237\":2,\"248\":1,\"254\":1,\"411\":2,\"420\":1,\"425\":1,\"596\":2,\"605\":1,\"610\":1,\"781\":2,\"790\":1,\"795\":1,\"975\":2,\"984\":1,\"989\":1,\"1189\":2,\"1200\":1,\"1206\":1}}],[\"isnotnull\",{\"1\":{\"186\":5,\"222\":1,\"247\":2,\"333\":1,\"399\":5,\"419\":2,\"500\":1,\"567\":5,\"604\":2,\"685\":1,\"753\":5,\"789\":2,\"871\":1,\"939\":5,\"983\":2,\"1065\":1,\"1138\":5,\"1178\":1,\"1199\":2}}],[\"isnumeric\",{\"1\":{\"173\":1,\"229\":1,\"1185\":1}}],[\"isnull\",{\"1\":{\"172\":1,\"186\":1,\"228\":1,\"247\":2,\"399\":1,\"419\":1,\"567\":1,\"604\":1,\"753\":1,\"789\":1,\"939\":1,\"983\":1,\"1138\":1,\"1184\":1,\"1199\":2}}],[\"isolaction\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"isempty\",{\"1\":{\"172\":1,\"222\":3,\"228\":1,\"246\":1,\"333\":3,\"418\":1,\"500\":3,\"603\":1,\"685\":3,\"788\":1,\"871\":3,\"982\":1,\"1065\":3,\"1178\":3,\"1184\":1,\"1198\":1}}],[\"isintercept\",{\"1\":{\"168\":2,\"171\":1,\"218\":2,\"227\":1,\"256\":2,\"329\":2,\"1174\":2,\"1183\":1}}],[\"is\",{\"1\":{\"103\":1,\"300\":1,\"336\":1,\"475\":1,\"503\":1,\"660\":1,\"689\":1,\"846\":1,\"875\":1,\"1040\":1,\"1070\":1,\"1264\":1}}],[\"issue是社区的交流地\",{\"1\":{\"6\":1}}],[\"io\",{\"1\":{\"63\":1,\"76\":1}}],[\"ioexception\",{\"1\":{\"55\":1,\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"izbp18ilgi6s1lkbmmfo2jz\",{\"1\":{\"60\":2}}],[\"ideaprojects\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"id=xxx\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"id=1839683148936663047\",{\"1\":{\"203\":2,\"768\":2,\"954\":2,\"1155\":2}}],[\"id=\",{\"1\":{\"203\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"id=$\",{\"1\":{\"76\":1,\"199\":1,\"200\":1,\"201\":1,\"203\":1,\"764\":1,\"765\":1,\"766\":1,\"768\":1,\"950\":1,\"951\":1,\"952\":1,\"954\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1155\":1,\"1322\":1,\"1333\":1}}],[\"idfill\",{\"1\":{\"186\":1,\"399\":1,\"567\":1,\"753\":1,\"939\":1,\"1138\":1}}],[\"idutils\",{\"1\":{\"182\":1,\"186\":1,\"315\":1,\"395\":1,\"399\":1,\"490\":1,\"563\":1,\"567\":1,\"675\":1,\"749\":1,\"753\":1,\"861\":1,\"935\":1,\"939\":1,\"1055\":1,\"1134\":1,\"1138\":1,\"1279\":1}}],[\"id设置正序排列\",{\"0\":{\"152\":1,\"381\":1,\"549\":1,\"735\":1,\"921\":1,\"1117\":1},\"1\":{\"152\":1,\"381\":1,\"549\":1,\"735\":1,\"921\":1,\"1117\":1}}],[\"ids\",{\"1\":{\"108\":1,\"137\":2,\"148\":2,\"340\":1,\"366\":2,\"377\":2,\"508\":1,\"534\":2,\"545\":2,\"694\":1,\"720\":2,\"731\":2,\"880\":1,\"906\":2,\"917\":2,\"1075\":1,\"1102\":2,\"1113\":2}}],[\"id\",{\"1\":{\"104\":1,\"105\":2,\"106\":1,\"107\":1,\"109\":1,\"110\":1,\"111\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"122\":1,\"123\":1,\"136\":2,\"146\":2,\"166\":1,\"182\":3,\"300\":2,\"301\":5,\"302\":4,\"303\":3,\"304\":3,\"305\":4,\"306\":2,\"309\":2,\"310\":1,\"315\":3,\"338\":1,\"339\":1,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"346\":1,\"352\":1,\"353\":1,\"365\":2,\"375\":2,\"395\":3,\"406\":1,\"475\":2,\"476\":5,\"477\":4,\"478\":3,\"479\":3,\"480\":4,\"481\":2,\"484\":2,\"485\":1,\"490\":3,\"504\":1,\"505\":2,\"506\":1,\"507\":1,\"509\":1,\"510\":1,\"511\":1,\"513\":1,\"514\":1,\"520\":1,\"521\":1,\"533\":2,\"543\":2,\"563\":3,\"591\":1,\"660\":2,\"661\":5,\"662\":4,\"663\":3,\"664\":3,\"665\":4,\"666\":2,\"669\":2,\"670\":1,\"675\":3,\"690\":1,\"691\":2,\"692\":1,\"693\":1,\"695\":1,\"696\":1,\"697\":1,\"699\":1,\"700\":1,\"706\":1,\"707\":1,\"719\":2,\"729\":2,\"749\":3,\"776\":1,\"846\":2,\"847\":5,\"848\":4,\"849\":3,\"850\":3,\"851\":4,\"852\":2,\"855\":2,\"856\":1,\"861\":3,\"876\":1,\"877\":2,\"878\":1,\"879\":1,\"881\":1,\"882\":1,\"883\":1,\"885\":1,\"886\":1,\"892\":1,\"893\":1,\"905\":2,\"915\":2,\"935\":3,\"970\":1,\"1040\":2,\"1041\":5,\"1042\":4,\"1043\":3,\"1044\":3,\"1045\":4,\"1046\":2,\"1049\":2,\"1050\":1,\"1055\":3,\"1071\":1,\"1072\":2,\"1073\":1,\"1074\":1,\"1076\":1,\"1077\":1,\"1078\":1,\"1080\":1,\"1081\":1,\"1087\":1,\"1088\":1,\"1101\":2,\"1111\":2,\"1125\":1,\"1134\":3,\"1171\":1,\"1264\":2,\"1265\":5,\"1266\":4,\"1267\":3,\"1268\":3,\"1269\":4,\"1270\":2,\"1273\":2,\"1274\":1,\"1279\":3}}],[\"id内存策略新增14\",{\"1\":{\"81\":1}}],[\"id生成器类型\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"id精度丢失\",{\"0\":{\"54\":1}}],[\"iframe>\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"iframeurl\",{\"1\":{\"201\":2,\"581\":2,\"766\":2,\"952\":2,\"1153\":2}}],[\"iframe\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"iframe监听组件内设计器保存事件\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"iframeloaded\",{\"1\":{\"200\":2,\"201\":2,\"580\":2,\"581\":2,\"765\":2,\"766\":2,\"951\":2,\"952\":2,\"1152\":2,\"1153\":2}}],[\"iframe中访问设计器接口由\",{\"1\":{\"76\":1}}],[\"if\",{\"1\":{\"55\":1,\"173\":1,\"182\":1,\"183\":2,\"186\":4,\"208\":3,\"222\":3,\"229\":1,\"237\":2,\"246\":2,\"247\":5,\"248\":1,\"254\":1,\"272\":3,\"309\":3,\"310\":1,\"333\":3,\"395\":1,\"396\":2,\"399\":4,\"411\":2,\"418\":2,\"419\":4,\"420\":1,\"425\":1,\"484\":3,\"485\":1,\"500\":3,\"563\":1,\"564\":2,\"567\":4,\"588\":3,\"596\":2,\"603\":2,\"604\":4,\"605\":1,\"610\":1,\"669\":3,\"670\":1,\"685\":3,\"749\":1,\"750\":2,\"753\":4,\"773\":3,\"781\":2,\"788\":2,\"789\":4,\"790\":1,\"795\":1,\"855\":3,\"856\":1,\"871\":3,\"935\":1,\"936\":2,\"939\":4,\"959\":3,\"975\":2,\"982\":2,\"983\":4,\"984\":1,\"989\":1,\"1049\":3,\"1050\":1,\"1065\":3,\"1134\":1,\"1135\":2,\"1138\":4,\"1160\":3,\"1178\":3,\"1185\":1,\"1189\":2,\"1198\":2,\"1199\":5,\"1200\":1,\"1206\":1,\"1218\":3,\"1273\":3,\"1274\":1}}],[\"inject\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"info\",{\"1\":{\"246\":2,\"247\":2,\"248\":2,\"253\":8,\"254\":1,\"315\":2,\"418\":2,\"419\":2,\"420\":2,\"425\":1,\"490\":2,\"603\":2,\"604\":2,\"605\":2,\"610\":1,\"675\":2,\"788\":2,\"789\":2,\"790\":2,\"795\":1,\"861\":2,\"982\":2,\"983\":2,\"984\":2,\"989\":1,\"1055\":2,\"1198\":2,\"1199\":2,\"1200\":2,\"1205\":8,\"1206\":1,\"1279\":2}}],[\"inf\",{\"1\":{\"215\":1,\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"966\":1,\"975\":1,\"1167\":1,\"1189\":1}}],[\"int\",{\"1\":{\"166\":1,\"248\":1,\"406\":1,\"420\":1,\"591\":1,\"605\":1,\"776\":1,\"790\":1,\"970\":1,\"984\":1,\"1125\":1,\"1171\":1,\"1200\":1}}],[\"interface\",{\"1\":{\"168\":1,\"171\":1,\"207\":1,\"218\":1,\"221\":1,\"224\":1,\"227\":1,\"245\":1,\"256\":1,\"259\":1,\"271\":1,\"329\":1,\"332\":1,\"417\":1,\"500\":1,\"587\":1,\"602\":1,\"685\":1,\"772\":1,\"787\":1,\"871\":1,\"958\":1,\"981\":1,\"1065\":1,\"1159\":1,\"1174\":1,\"1177\":1,\"1180\":1,\"1183\":1,\"1197\":1,\"1217\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"interceptorregistry\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"interceptor\",{\"1\":{\"64\":8,\"309\":3,\"310\":3,\"484\":3,\"485\":3,\"669\":3,\"670\":3,\"855\":3,\"856\":3,\"1049\":3,\"1050\":3,\"1273\":3,\"1274\":3}}],[\"integer\",{\"1\":{\"55\":6,\"182\":1,\"315\":1,\"395\":1,\"490\":1,\"563\":1,\"675\":1,\"749\":1,\"861\":1,\"935\":1,\"1055\":1,\"1134\":1,\"1279\":1}}],[\"insertfill\",{\"1\":{\"186\":1,\"399\":1,\"567\":1,\"753\":1,\"939\":1,\"1138\":1}}],[\"inserttestleave\",{\"1\":{\"166\":1,\"182\":1,\"247\":1,\"315\":1,\"395\":1,\"406\":1,\"419\":1,\"490\":1,\"563\":1,\"591\":1,\"604\":1,\"675\":1,\"749\":1,\"776\":1,\"789\":1,\"861\":1,\"935\":1,\"970\":1,\"983\":1,\"1055\":1,\"1125\":1,\"1134\":1,\"1171\":1,\"1199\":1,\"1279\":1}}],[\"insservice流程实例接口\",{\"0\":{\"117\":1,\"347\":1,\"515\":1,\"701\":1,\"887\":1,\"1082\":1}}],[\"insservice\",{\"1\":{\"89\":1,\"166\":1,\"182\":1,\"183\":1,\"291\":1,\"292\":3,\"315\":1,\"323\":1,\"326\":1,\"395\":1,\"396\":1,\"406\":1,\"467\":1,\"468\":3,\"490\":1,\"496\":1,\"499\":1,\"563\":1,\"564\":1,\"591\":1,\"652\":1,\"653\":3,\"675\":1,\"681\":1,\"684\":1,\"749\":1,\"750\":1,\"776\":1,\"838\":1,\"839\":3,\"861\":1,\"867\":1,\"870\":1,\"935\":1,\"936\":1,\"970\":1,\"1032\":1,\"1033\":3,\"1055\":1,\"1061\":1,\"1064\":1,\"1125\":1,\"1134\":1,\"1135\":1,\"1171\":1,\"1255\":1,\"1256\":3,\"1279\":1,\"1287\":1,\"1290\":1,\"1296\":1,\"1297\":2,\"1346\":1,\"1347\":2}}],[\"instanceof\",{\"1\":{\"419\":1,\"604\":1,\"789\":1,\"983\":1}}],[\"instance表的id\",{\"1\":{\"301\":1,\"305\":1,\"476\":1,\"480\":1,\"661\":1,\"665\":1,\"847\":1,\"851\":1,\"1041\":1,\"1045\":1,\"1265\":1,\"1269\":1}}],[\"instanceids\",{\"1\":{\"121\":1,\"351\":1,\"519\":1,\"705\":1,\"891\":1,\"1086\":1}}],[\"instanceid\",{\"1\":{\"112\":1,\"119\":1,\"120\":1,\"344\":1,\"349\":1,\"350\":1,\"512\":1,\"517\":1,\"518\":1,\"698\":1,\"703\":1,\"704\":1,\"884\":1,\"889\":1,\"890\":1,\"1079\":1,\"1084\":1,\"1085\":1}}],[\"instance\",{\"1\":{\"55\":7,\"166\":3,\"182\":2,\"183\":4,\"247\":9,\"248\":3,\"254\":2,\"292\":9,\"298\":1,\"301\":1,\"305\":1,\"309\":1,\"315\":4,\"323\":2,\"326\":2,\"395\":2,\"396\":4,\"406\":3,\"419\":8,\"420\":3,\"425\":2,\"468\":9,\"473\":1,\"476\":1,\"480\":1,\"484\":1,\"490\":4,\"496\":2,\"499\":2,\"563\":2,\"564\":4,\"591\":3,\"604\":8,\"605\":3,\"610\":2,\"653\":9,\"658\":1,\"661\":1,\"665\":1,\"669\":1,\"675\":4,\"681\":2,\"684\":2,\"749\":2,\"750\":4,\"776\":3,\"789\":8,\"790\":3,\"795\":2,\"839\":9,\"844\":1,\"847\":1,\"851\":1,\"855\":1,\"861\":4,\"867\":2,\"870\":2,\"935\":2,\"936\":4,\"970\":3,\"983\":8,\"984\":3,\"989\":2,\"1033\":9,\"1038\":1,\"1041\":1,\"1045\":1,\"1049\":1,\"1055\":4,\"1061\":2,\"1064\":2,\"1125\":3,\"1134\":2,\"1135\":4,\"1171\":3,\"1199\":9,\"1200\":3,\"1206\":2,\"1256\":9,\"1262\":1,\"1265\":1,\"1269\":1,\"1273\":1,\"1279\":4,\"1287\":2,\"1290\":2,\"1297\":6,\"1347\":6}}],[\"index\",{\"1\":{\"76\":1,\"199\":1,\"200\":1,\"201\":1,\"203\":5,\"216\":5,\"583\":1,\"764\":1,\"765\":1,\"766\":1,\"768\":5,\"950\":1,\"951\":1,\"952\":1,\"954\":5,\"967\":5,\"1151\":1,\"1152\":1,\"1153\":1,\"1155\":5,\"1168\":5,\"1322\":1,\"1333\":1}}],[\"inner\",{\"1\":{\"64\":3}}],[\"include\",{\"1\":{\"63\":1}}],[\"invocationtargetexception\",{\"1\":{\"60\":1}}],[\"initialization\",{\"1\":{\"62\":2}}],[\"initflow\",{\"0\":{\"62\":1},\"1\":{\"62\":1}}],[\"init\",{\"1\":{\"48\":1}}],[\"i\",{\"1\":{\"52\":1,\"248\":4,\"420\":4,\"605\":4,\"790\":4,\"984\":4,\"1200\":4}}],[\"item\",{\"1\":{\"30\":2}}],[\"it服务管理\",{\"1\":{\"14\":1}}],[\"管理风险和合规流程\",{\"1\":{\"14\":1}}],[\"管理财务审批流程\",{\"1\":{\"14\":1}}],[\"管理项目流程\",{\"1\":{\"14\":1}}],[\"财务和会计流程\",{\"1\":{\"14\":1}}],[\"绩效评估等流程的管理\",{\"1\":{\"14\":1}}],[\"培训\",{\"1\":{\"14\":1}}],[\"在监听器中\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"在执行流程时\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"在执行互斥网关时候\",{\"1\":{\"164\":1,\"1123\":1}}],[\"在开始之前\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"在流程定义中配置\",{\"1\":{\"239\":1,\"414\":1,\"599\":1,\"784\":1,\"978\":1,\"1191\":1}}],[\"在流程节点中配置\",{\"1\":{\"239\":1,\"414\":1,\"599\":1,\"784\":1,\"978\":1,\"1191\":1}}],[\"在办理流程过程中\",{\"1\":{\"238\":1,\"412\":1,\"597\":1,\"782\":1,\"976\":1,\"1190\":1}}],[\"在resource目录下新建meta\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"在前端加载设计器页面路径后面\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"在使用mybatis扩展包时\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"在人力资源管理中\",{\"1\":{\"14\":1}}],[\"在项目管理中\",{\"1\":{\"14\":1}}],[\"售后服务等\",{\"1\":{\"14\":1}}],[\"投诉处理\",{\"1\":{\"14\":1}}],[\"客户服务流程\",{\"1\":{\"14\":1}}],[\"提示语增加流程编码\",{\"1\":{\"82\":1}}],[\"提供流程配置界面\",{\"1\":{\"98\":1}}],[\"提供角色\",{\"1\":{\"98\":1}}],[\"提供待办任务\",{\"1\":{\"98\":1}}],[\"提供集成方式\",{\"1\":{\"98\":1}}],[\"提供\",{\"1\":{\"62\":1}}],[\"提供的方案\",{\"1\":{\"60\":1,\"61\":1}}],[\"提供实例\",{\"1\":{\"55\":1}}],[\"提供解决方案\",{\"1\":{\"55\":1}}],[\"提供测试意见\",{\"1\":{\"54\":1}}],[\"提供问题答疑服务和技术分享等服务\",{\"1\":{\"27\":1}}],[\"提交审批后的状态\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"提交到自己的远程仓库\",{\"0\":{\"48\":1}}],[\"提交pr\",{\"0\":{\"42\":1}}],[\"提交流程后\",{\"1\":{\"38\":1,\"442\":1,\"627\":1,\"812\":1,\"1006\":1,\"1226\":1}}],[\"提交流程\",{\"0\":{\"38\":1,\"442\":1,\"627\":1,\"812\":1,\"1006\":1,\"1226\":1}}],[\"提高业务效率\",{\"1\":{\"14\":1}}],[\"提高工作效率\",{\"1\":{\"14\":1}}],[\"提问的规范在issue的模板里已经写好了\",{\"1\":{\"6\":1}}],[\"办理任务动态设置权限\",{\"1\":{\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1}}],[\"办理完成会生成本节点任务\",{\"1\":{\"320\":1,\"1284\":1}}],[\"办理时会校验的该权限集合\",{\"1\":{\"271\":1,\"1217\":1}}],[\"办理时会校验的该权限是否是可审批人员\",{\"1\":{\"270\":1,\"1216\":1}}],[\"办理时未生效问题\",{\"1\":{\"89\":1}}],[\"办理中途\",{\"1\":{\"233\":2,\"273\":2,\"274\":2,\"446\":2,\"631\":2,\"816\":2,\"1010\":2,\"1230\":2,\"1237\":2}}],[\"办理中动态设置权限\",{\"1\":{\"91\":1}}],[\"办理人选择项接口\",{\"0\":{\"327\":1}}],[\"办理人选择tabs切换\",{\"1\":{\"75\":1}}],[\"办理人\",{\"1\":{\"326\":1,\"499\":1,\"684\":1,\"870\":1,\"1064\":1,\"1290\":1}}],[\"办理人变更\",{\"0\":{\"232\":1}}],[\"办理人变量设置\",{\"0\":{\"491\":1,\"676\":1,\"862\":1,\"1056\":1}}],[\"办理人变量和监听器表达式不满足业务需求时\",{\"1\":{\"167\":1,\"217\":1,\"255\":1,\"328\":1,\"1173\":1}}],[\"办理人变量表达式扩展\",{\"0\":{\"328\":1}}],[\"办理人变量表达式测试\",{\"1\":{\"317\":1,\"1281\":1}}],[\"办理人变量表达式实现类\",{\"0\":{\"222\":1,\"333\":1,\"1178\":1}}],[\"办理人变量表达式策略实现类集合\",{\"1\":{\"221\":1,\"332\":1,\"1177\":1}}],[\"办理人变量表达式策略\",{\"1\":{\"221\":1,\"332\":1,\"500\":1,\"685\":1,\"871\":1,\"1065\":1,\"1177\":1}}],[\"办理人变量表达式接口\",{\"0\":{\"221\":1,\"332\":1,\"1177\":1}}],[\"办理人变量表达式\",{\"0\":{\"220\":1,\"316\":1,\"331\":1,\"1176\":1,\"1280\":1},\"1\":{\"12\":1,\"74\":2,\"1299\":1,\"1304\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1354\":1,\"1355\":1}}],[\"办理人权限处理器\",{\"0\":{\"270\":1,\"1216\":1},\"1\":{\"271\":1,\"272\":1,\"1217\":1,\"1218\":1}}],[\"办理人权限选择弹框页面\",{\"0\":{\"205\":1,\"585\":1,\"770\":1,\"956\":1,\"1157\":1,\"1313\":1,\"1324\":1,\"1335\":1}}],[\"办理人权限标识\",{\"1\":{\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"272\":1,\"349\":1,\"355\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1218\":1}}],[\"办理人唯一标识\",{\"1\":{\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"132\":1,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"361\":1,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"529\":1,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"715\":1,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"901\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1097\":1}}],[\"办理流程\",{\"0\":{\"39\":1,\"443\":1,\"628\":1,\"813\":1,\"1007\":1,\"1227\":1}}],[\"办公自动化\",{\"1\":{\"14\":1}}],[\"采购审批等\",{\"1\":{\"14\":1}}],[\"报销\",{\"1\":{\"14\":1}}],[\"企业可以利用warm\",{\"1\":{\"14\":1}}],[\"企业可以实现办公流程的自动化\",{\"1\":{\"14\":1}}],[\"企业内部流程管理\",{\"1\":{\"14\":1}}],[\"企业综合办公管理系统\",{\"1\":{\"2\":1}}],[\"以并行网关结尾\",{\"1\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"以并行网关开头\",{\"1\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"以串行网关结尾\",{\"1\":{\"277\":1,\"449\":1,\"634\":1,\"819\":1,\"1013\":1,\"1233\":1,\"1240\":1}}],[\"以串行网关开头\",{\"1\":{\"277\":1,\"449\":1,\"634\":1,\"819\":1,\"1013\":1,\"1233\":1,\"1240\":1}}],[\"以便进行修改或重新处理\",{\"1\":{\"273\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"以上业务代码中会出现很多重复代码\",{\"1\":{\"270\":1,\"1216\":1}}],[\"以上是sa\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"以接口和静态资源的方式引入\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"以ruoyi\",{\"1\":{\"61\":1}}],[\"以及warm组织成员和贡献者的红包奖励\",{\"1\":{\"51\":1}}],[\"以及开启流程代码\",{\"1\":{\"37\":1,\"441\":1,\"626\":1,\"811\":1,\"1005\":1,\"1225\":1}}],[\"以下代码再ruoyi不分离版中测试\",{\"1\":{\"583\":1}}],[\"以下为简短案例\",{\"0\":{\"1293\":1,\"1343\":1},\"1\":{\"288\":1,\"835\":1,\"1029\":1,\"1252\":1}}],[\"以下为主要接口示例\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"以下设置获取内置变量的function\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"以下是nginx代理示例\",{\"1\":{\"1311\":1}}],[\"以下是spring\",{\"1\":{\"1310\":1,\"1321\":1,\"1332\":1}}],[\"以下是错误示例\",{\"1\":{\"62\":1}}],[\"以下是存在的示例\",{\"1\":{\"60\":1}}],[\"以下是一些典型的应用场景\",{\"1\":{\"14\":1}}],[\"以下演示基于项目示例hh\",{\"1\":{\"31\":2,\"435\":2,\"620\":2,\"805\":2,\"999\":2,\"1219\":2}}],[\"以ctq\",{\"1\":{\"2\":1}}],[\"尤其是针对中小型项目\",{\"1\":{\"14\":1}}],[\"其中yyy为变量\",{\"1\":{\"166\":1,\"1125\":1}}],[\"其他不变\",{\"1\":{\"578\":1,\"1311\":1}}],[\"其他请查阅核心api\",{\"0\":{\"184\":1,\"397\":1,\"565\":1,\"751\":1,\"937\":1,\"1136\":1}}],[\"其他的扩展包可忽略\",{\"1\":{\"82\":1}}],[\"其他配置\",{\"1\":{\"55\":2}}],[\"其他修改\",{\"1\":{\"48\":1}}],[\"其设计简洁轻量但功能全面\",{\"1\":{\"14\":1}}],[\"其特点简洁轻量\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"应用场景\",{\"0\":{\"14\":1}}],[\"若您的项目无法满足以上几点\",{\"1\":{\"13\":1}}],[\"若愚\",{\"1\":{\"2\":1}}],[\"c任务设置办理人变量为\",{\"1\":{\"493\":1,\"678\":1,\"864\":1,\"1058\":1}}],[\"c任务设置办理人变量为$\",{\"1\":{\"320\":1,\"1284\":1}}],[\"curuser\",{\"1\":{\"357\":2,\"358\":2,\"359\":2,\"360\":2,\"361\":1,\"525\":2,\"526\":2,\"527\":2,\"528\":2,\"529\":1}}],[\"custompermissionhandler\",{\"1\":{\"272\":1,\"1218\":1}}],[\"customgloballistener\",{\"1\":{\"253\":2,\"1205\":2}}],[\"customshirofilterfactorybean\",{\"1\":{\"197\":2,\"576\":2,\"762\":2,\"948\":2,\"1149\":2}}],[\"customtenanthandler\",{\"1\":{\"176\":1,\"177\":2,\"179\":1,\"180\":1,\"312\":1,\"313\":1,\"314\":1,\"389\":1,\"390\":2,\"392\":1,\"393\":1,\"487\":1,\"488\":1,\"489\":1,\"557\":1,\"558\":2,\"560\":1,\"561\":1,\"672\":1,\"673\":1,\"674\":1,\"743\":1,\"744\":2,\"746\":1,\"747\":1,\"858\":1,\"859\":1,\"860\":1,\"929\":1,\"930\":2,\"932\":1,\"933\":1,\"1052\":1,\"1053\":1,\"1054\":1,\"1128\":1,\"1129\":2,\"1131\":1,\"1132\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"customdatafillhandler\",{\"1\":{\"176\":1,\"177\":1,\"179\":1,\"180\":1,\"186\":1,\"189\":1,\"190\":1,\"389\":1,\"390\":1,\"392\":1,\"393\":1,\"399\":1,\"402\":1,\"403\":1,\"557\":1,\"558\":1,\"560\":1,\"561\":1,\"567\":1,\"570\":1,\"571\":1,\"743\":1,\"744\":1,\"746\":1,\"747\":1,\"753\":1,\"756\":1,\"757\":1,\"929\":1,\"930\":1,\"932\":1,\"933\":1,\"939\":1,\"942\":1,\"943\":1,\"1128\":1,\"1129\":1,\"1131\":1,\"1132\":1,\"1138\":1,\"1141\":1,\"1142\":1}}],[\"custom和form\",{\"1\":{\"82\":1}}],[\"custom\",{\"1\":{\"82\":2,\"300\":1,\"301\":1,\"303\":1,\"305\":1,\"475\":1,\"476\":1,\"478\":1,\"480\":1,\"660\":1,\"661\":1,\"663\":1,\"665\":1,\"846\":1,\"847\":1,\"849\":1,\"851\":1,\"1040\":1,\"1041\":1,\"1043\":1,\"1045\":1,\"1264\":1,\"1265\":1,\"1267\":1,\"1269\":1}}],[\"custom改为form\",{\"1\":{\"82\":2}}],[\"customizer\",{\"1\":{\"55\":1}}],[\"cfg\",{\"1\":{\"310\":3,\"485\":3,\"670\":3,\"856\":3,\"1050\":3,\"1274\":3}}],[\"criteriaupdate\",{\"1\":{\"268\":3,\"433\":3,\"618\":3,\"803\":3,\"997\":3,\"1214\":3}}],[\"criteriaupdate<t>\",{\"1\":{\"268\":2,\"433\":2,\"618\":2,\"803\":2,\"997\":2,\"1214\":2}}],[\"criteriaquery\",{\"1\":{\"268\":3,\"433\":3,\"618\":3,\"803\":3,\"997\":3,\"1214\":3}}],[\"criteriaquery<t>\",{\"1\":{\"268\":2,\"433\":2,\"618\":2,\"803\":2,\"997\":2,\"1214\":2}}],[\"createquery\",{\"1\":{\"268\":2,\"433\":2,\"618\":2,\"803\":2,\"997\":2,\"1214\":2}}],[\"create等\",{\"1\":{\"241\":1,\"1193\":1}}],[\"create\",{\"1\":{\"240\":1,\"245\":2,\"253\":1,\"300\":1,\"301\":1,\"302\":2,\"303\":1,\"304\":1,\"305\":1,\"306\":2,\"413\":1,\"417\":2,\"475\":1,\"476\":1,\"477\":2,\"478\":1,\"479\":1,\"480\":1,\"481\":2,\"598\":1,\"602\":2,\"660\":1,\"661\":1,\"662\":2,\"663\":1,\"664\":1,\"665\":1,\"666\":2,\"783\":1,\"787\":2,\"846\":1,\"847\":1,\"848\":2,\"849\":1,\"850\":1,\"851\":1,\"852\":2,\"977\":1,\"981\":2,\"1040\":1,\"1041\":1,\"1042\":2,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":2,\"1192\":1,\"1197\":2,\"1205\":1,\"1264\":1,\"1265\":1,\"1266\":2,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":2}}],[\"catch\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"calc\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"case\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"changeorigin\",{\"1\":{\"580\":1,\"581\":1}}],[\"char\",{\"1\":{\"300\":2,\"301\":2,\"302\":1,\"303\":2,\"304\":1,\"305\":2,\"306\":2,\"475\":2,\"476\":2,\"477\":1,\"478\":2,\"479\":1,\"480\":2,\"481\":2,\"660\":2,\"661\":2,\"662\":1,\"663\":2,\"664\":1,\"665\":2,\"666\":2,\"846\":2,\"847\":2,\"848\":1,\"849\":2,\"850\":1,\"851\":2,\"852\":2,\"1040\":2,\"1041\":2,\"1042\":1,\"1043\":2,\"1044\":1,\"1045\":2,\"1046\":2,\"1264\":2,\"1265\":2,\"1266\":1,\"1267\":2,\"1268\":1,\"1269\":2,\"1270\":2}}],[\"checkauth\",{\"1\":{\"271\":1,\"1217\":1}}],[\"checkandsave\",{\"1\":{\"101\":1,\"688\":1,\"874\":1,\"1068\":1}}],[\"checklogin\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"chore\",{\"1\":{\"82\":1}}],[\"closeopenpage\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"close\",{\"1\":{\"200\":3,\"201\":3,\"580\":3,\"581\":3,\"765\":3,\"766\":3,\"951\":3,\"952\":3,\"1152\":3,\"1153\":3}}],[\"cloudhttps\",{\"1\":{\"41\":1}}],[\"cloud\",{\"1\":{\"41\":4}}],[\"clientheight\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"class>\",{\"1\":{\"268\":7,\"433\":7,\"618\":7,\"803\":7,\"997\":7,\"1214\":7}}],[\"class=\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"class<\",{\"1\":{\"55\":1}}],[\"class\",{\"1\":{\"55\":7,\"64\":1,\"166\":1,\"172\":1,\"173\":1,\"177\":2,\"180\":1,\"186\":1,\"190\":1,\"197\":1,\"198\":1,\"203\":1,\"208\":1,\"222\":1,\"225\":1,\"228\":1,\"229\":1,\"237\":5,\"246\":2,\"247\":2,\"248\":2,\"253\":2,\"254\":1,\"260\":1,\"267\":1,\"268\":1,\"269\":1,\"272\":1,\"309\":3,\"310\":3,\"313\":1,\"314\":1,\"315\":2,\"317\":1,\"326\":1,\"333\":1,\"390\":2,\"393\":1,\"399\":1,\"403\":1,\"406\":1,\"411\":5,\"418\":2,\"419\":2,\"420\":2,\"425\":1,\"432\":1,\"433\":1,\"434\":1,\"484\":3,\"485\":3,\"488\":1,\"489\":1,\"490\":2,\"499\":1,\"500\":1,\"558\":2,\"561\":1,\"567\":1,\"571\":1,\"576\":1,\"577\":1,\"583\":1,\"588\":1,\"591\":1,\"596\":5,\"603\":2,\"604\":2,\"605\":2,\"610\":1,\"617\":1,\"618\":1,\"619\":1,\"669\":3,\"670\":3,\"673\":1,\"674\":1,\"675\":2,\"684\":1,\"685\":1,\"744\":2,\"747\":1,\"753\":1,\"757\":1,\"762\":1,\"763\":1,\"768\":1,\"773\":1,\"776\":1,\"781\":5,\"788\":2,\"789\":2,\"790\":2,\"795\":1,\"802\":1,\"803\":1,\"804\":1,\"855\":3,\"856\":3,\"859\":1,\"860\":1,\"861\":2,\"870\":1,\"871\":1,\"930\":2,\"933\":1,\"939\":1,\"943\":1,\"948\":1,\"949\":1,\"954\":1,\"959\":1,\"970\":1,\"975\":5,\"982\":2,\"983\":2,\"984\":2,\"989\":1,\"996\":1,\"997\":1,\"998\":1,\"1049\":3,\"1050\":3,\"1053\":1,\"1054\":1,\"1055\":2,\"1064\":1,\"1065\":1,\"1125\":1,\"1129\":2,\"1132\":1,\"1138\":1,\"1142\":1,\"1149\":1,\"1150\":1,\"1155\":1,\"1160\":1,\"1171\":1,\"1178\":1,\"1181\":1,\"1184\":1,\"1185\":1,\"1189\":5,\"1198\":2,\"1199\":2,\"1200\":2,\"1205\":2,\"1206\":1,\"1213\":1,\"1214\":1,\"1215\":1,\"1218\":1,\"1273\":3,\"1274\":3,\"1277\":1,\"1278\":1,\"1279\":2,\"1281\":1,\"1290\":1}}],[\"c\",{\"1\":{\"47\":1}}],[\"csx\",{\"1\":{\"41\":1}}],[\"coordinate\",{\"1\":{\"303\":1,\"304\":1,\"478\":1,\"479\":1,\"663\":1,\"664\":1,\"849\":1,\"850\":1,\"1043\":1,\"1044\":1,\"1267\":1,\"1268\":1}}],[\"cooperate\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"cooperatetype\",{\"1\":{\"132\":1,\"361\":1,\"529\":1,\"715\":1,\"901\":1,\"1097\":1}}],[\"code\",{\"1\":{\"300\":1,\"301\":2,\"302\":1,\"303\":1,\"304\":2,\"305\":1,\"309\":1,\"310\":1,\"475\":1,\"476\":2,\"477\":1,\"478\":1,\"479\":2,\"480\":1,\"484\":1,\"485\":1,\"660\":1,\"661\":2,\"662\":1,\"663\":1,\"664\":2,\"665\":1,\"669\":1,\"670\":1,\"846\":1,\"847\":2,\"848\":1,\"849\":1,\"850\":2,\"851\":1,\"855\":1,\"856\":1,\"1040\":1,\"1041\":2,\"1042\":1,\"1043\":1,\"1044\":2,\"1045\":1,\"1049\":1,\"1050\":1,\"1264\":1,\"1265\":2,\"1266\":1,\"1267\":1,\"1268\":2,\"1269\":1,\"1273\":1,\"1274\":1}}],[\"countersign\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"copydef\",{\"1\":{\"111\":1,\"343\":1,\"511\":1,\"697\":1,\"883\":1,\"1078\":1}}],[\"core\",{\"1\":{\"74\":2,\"179\":2,\"237\":1,\"312\":1,\"392\":2,\"411\":1,\"487\":1,\"560\":2,\"596\":1,\"672\":1,\"746\":2,\"781\":1,\"858\":1,\"932\":2,\"975\":1,\"1052\":1,\"1131\":2,\"1189\":1,\"1276\":1}}],[\"constructmaptype\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"const\",{\"1\":{\"200\":1,\"201\":4,\"580\":1,\"581\":4,\"765\":1,\"766\":4,\"951\":1,\"952\":4,\"1152\":1,\"1153\":4}}],[\"console\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"connection\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"condition\",{\"1\":{\"304\":1,\"479\":1,\"664\":1,\"850\":1,\"1044\":1,\"1268\":1}}],[\"conditionvalue\",{\"1\":{\"172\":2,\"228\":2,\"1184\":2}}],[\"conditionstrategyeq\",{\"1\":{\"173\":1,\"229\":1,\"1185\":1}}],[\"conditionstrategyabstract\",{\"1\":{\"172\":1,\"173\":1,\"228\":1,\"229\":1,\"1184\":1,\"1185\":1}}],[\"conditionstrategy\",{\"1\":{\"74\":1,\"171\":1,\"172\":1,\"227\":1,\"228\":1,\"1183\":1,\"1184\":1}}],[\"contains\",{\"1\":{\"248\":1,\"309\":1,\"420\":1,\"484\":1,\"605\":1,\"669\":1,\"790\":1,\"855\":1,\"984\":1,\"1049\":1,\"1200\":1,\"1273\":1}}],[\"container\",{\"1\":{\"201\":3,\"581\":3,\"766\":3,\"952\":3,\"1153\":3}}],[\"controller\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"contributions\",{\"1\":{\"30\":1}}],[\"context\",{\"1\":{\"64\":2}}],[\"config调整\",{\"1\":{\"81\":1}}],[\"config\",{\"1\":{\"64\":1,\"76\":1,\"263\":2,\"428\":2,\"580\":1,\"613\":2,\"798\":2,\"992\":2,\"1209\":2}}],[\"configuration+\",{\"0\":{\"190\":1,\"403\":1,\"571\":1,\"757\":1,\"943\":1,\"1142\":1}}],[\"configuration\",{\"1\":{\"55\":1,\"64\":2,\"177\":1,\"180\":1,\"190\":1,\"197\":1,\"198\":1,\"309\":1,\"310\":1,\"313\":1,\"390\":1,\"393\":1,\"403\":1,\"484\":1,\"485\":1,\"488\":1,\"558\":1,\"561\":1,\"571\":1,\"576\":1,\"577\":1,\"669\":1,\"670\":1,\"673\":1,\"744\":1,\"747\":1,\"757\":1,\"762\":1,\"763\":1,\"855\":1,\"856\":1,\"859\":1,\"930\":1,\"933\":1,\"943\":1,\"948\":1,\"949\":1,\"1049\":1,\"1050\":1,\"1053\":1,\"1129\":1,\"1132\":1,\"1142\":1,\"1149\":1,\"1150\":1,\"1273\":1,\"1274\":1,\"1277\":1}}],[\"collaborator\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"collectors\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"collect\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"colin\",{\"1\":{\"55\":1}}],[\"cola\",{\"1\":{\"52\":1}}],[\"compareto\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"component配置方式\",{\"0\":{\"314\":1,\"489\":1,\"674\":1,\"860\":1,\"1054\":1,\"1278\":1}}],[\"component或者\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"component方式注入\",{\"0\":{\"188\":1,\"401\":1,\"569\":1,\"755\":1,\"941\":1,\"1140\":1}}],[\"component方式\",{\"1\":{\"177\":3,\"179\":1,\"180\":2,\"272\":1,\"312\":1,\"313\":1,\"314\":1,\"390\":3,\"392\":1,\"393\":2,\"487\":1,\"488\":1,\"489\":1,\"558\":3,\"560\":1,\"561\":2,\"672\":1,\"673\":1,\"674\":1,\"744\":3,\"746\":1,\"747\":2,\"858\":1,\"859\":1,\"860\":1,\"930\":3,\"932\":1,\"933\":2,\"1052\":1,\"1053\":1,\"1054\":1,\"1129\":3,\"1131\":1,\"1132\":2,\"1218\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"component\",{\"1\":{\"166\":1,\"208\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":1,\"272\":1,\"309\":1,\"315\":1,\"326\":1,\"406\":1,\"418\":1,\"419\":1,\"420\":1,\"484\":1,\"489\":1,\"490\":1,\"499\":1,\"588\":1,\"591\":1,\"603\":1,\"604\":1,\"605\":1,\"669\":1,\"675\":1,\"684\":1,\"773\":1,\"776\":1,\"788\":1,\"789\":1,\"790\":1,\"855\":1,\"861\":1,\"870\":1,\"959\":1,\"970\":1,\"982\":1,\"983\":1,\"984\":1,\"1049\":1,\"1055\":1,\"1064\":1,\"1125\":1,\"1160\":1,\"1171\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1,\"1218\":1,\"1273\":1,\"1279\":1,\"1290\":1}}],[\"common\",{\"0\":{\"1359\":1}}],[\"common增加依赖\",{\"1\":{\"64\":1}}],[\"commits\",{\"1\":{\"30\":1}}],[\"com\",{\"1\":{\"13\":1,\"23\":1,\"41\":5,\"64\":9,\"76\":1,\"176\":2,\"189\":1,\"247\":1,\"389\":2,\"392\":2,\"402\":1,\"487\":1,\"557\":2,\"560\":2,\"570\":1,\"672\":1,\"743\":2,\"756\":1,\"929\":2,\"942\":1,\"1128\":2,\"1141\":1,\"1199\":1,\"1292\":1,\"1342\":1}}],[\"com商议合作\",{\"1\":{\"13\":1}}],[\"cn\",{\"1\":{\"13\":1,\"1301\":1,\"1307\":1,\"1318\":1,\"1329\":1,\"1340\":1,\"1351\":1,\"1357\":1}}],[\"请先了解表结构\",{\"1\":{\"280\":1,\"1244\":1}}],[\"请假天数小于4\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"请假申请\",{\"1\":{\"166\":2,\"406\":2,\"591\":2,\"776\":2,\"970\":2,\"1125\":2,\"1171\":2}}],[\"请参考如下配置文件中进行修改\",{\"1\":{\"262\":1,\"427\":1,\"612\":1,\"797\":1,\"991\":1,\"1208\":1}}],[\"请求中的token的名称或者key\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"请注意地址少了\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"请注意\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"请注明软件出处\",{\"1\":{\"13\":1}}],[\"请尽快使用新的接口\",{\"1\":{\"76\":1}}],[\"请使用自定义流程状态\",{\"1\":{\"76\":1}}],[\"请联系我\",{\"1\":{\"52\":1}}],[\"请加微信号\",{\"1\":{\"29\":1}}],[\"请不要删除和修改warm\",{\"1\":{\"13\":1}}],[\"请不要删除和修改根目录下的license文件\",{\"1\":{\"13\":1}}],[\"商业使用请保留源码和相关描述文件的项目出处\",{\"1\":{\"13\":1}}],[\"本次的版本大大提升了工作流的使用便捷性\",{\"1\":{\"1303\":1,\"1353\":1}}],[\"本次升级\",{\"1\":{\"79\":1}}],[\"本节点配置办理人变量表达式\",{\"1\":{\"320\":1,\"1284\":1}}],[\"本实例采用iframe方式嵌入设计器\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"本项目代码可免费商业使用\",{\"1\":{\"13\":1}}],[\"本科毕业设计\",{\"1\":{\"2\":1}}],[\"需执行1\",{\"1\":{\"74\":1}}],[\"需要减少他人参与审批\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"需要增加他人参与审批\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"需要制定任务计划\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"需要保存草稿功能\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"需要插入的集合数据\",{\"1\":{\"150\":1,\"379\":1,\"547\":1,\"733\":1,\"919\":1,\"1115\":1}}],[\"需要单独使用\",{\"1\":{\"79\":1}}],[\"需要更多功能代码\",{\"1\":{\"13\":1}}],[\"需要注意以下几点\",{\"1\":{\"13\":1}}],[\"需求确定了以后就可以开始专注的写代码了\",{\"1\":{\"8\":1}}],[\"您如果需要源码开发方式\",{\"1\":{\"13\":1}}],[\"⭐️是我持续开发的动力\",{\"1\":{\"12\":1}}],[\"很实用\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"理论11也可以\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"兼容java8和java17\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"兼有传统tms的竞标\",{\"1\":{\"2\":1}}],[\"和部分人一起审批\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"和其他人一起审批通过\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"和postgresql\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"和spel格式的表达式\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"数据源\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"数据源绑定\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"数据类型\",{\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1}}],[\"数据表\",{\"1\":{\"298\":1,\"473\":1,\"658\":1,\"844\":1,\"1038\":1,\"1262\":1}}],[\"数据库\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"数据库支持\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"数据填充器\",{\"0\":{\"185\":1,\"1137\":1}}],[\"数据共享等等\",{\"1\":{\"2\":1}}],[\"out\",{\"1\":{\"289\":1,\"291\":1,\"292\":3,\"317\":1,\"465\":1,\"467\":1,\"468\":3,\"650\":1,\"652\":1,\"653\":3,\"836\":1,\"838\":1,\"839\":3,\"1030\":1,\"1032\":1,\"1033\":3,\"1253\":1,\"1255\":1,\"1256\":3,\"1281\":1,\"1294\":1,\"1296\":1,\"1297\":2,\"1344\":1,\"1346\":1,\"1347\":2}}],[\"opentab\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"optimistic\",{\"1\":{\"64\":1}}],[\"optimisticlockerinnerinterceptor\",{\"1\":{\"64\":5}}],[\"onmounted\",{\"1\":{\"201\":2,\"581\":2,\"766\":2,\"952\":2,\"1153\":2}}],[\"onmessage\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"obj\",{\"1\":{\"200\":2,\"201\":2,\"580\":2,\"581\":2,\"765\":2,\"766\":2,\"951\":2,\"952\":2,\"1152\":2,\"1153\":2}}],[\"objectutil\",{\"1\":{\"186\":5,\"222\":1,\"247\":2,\"333\":1,\"399\":5,\"419\":2,\"500\":1,\"567\":5,\"604\":2,\"685\":1,\"753\":5,\"789\":2,\"871\":1,\"939\":5,\"983\":2,\"1065\":1,\"1138\":5,\"1178\":1,\"1199\":2}}],[\"objects\",{\"1\":{\"182\":1,\"183\":2,\"186\":1,\"246\":1,\"395\":1,\"396\":2,\"399\":1,\"418\":1,\"563\":1,\"564\":2,\"567\":1,\"603\":1,\"749\":1,\"750\":2,\"753\":1,\"788\":1,\"935\":1,\"936\":2,\"939\":1,\"982\":1,\"1134\":1,\"1135\":2,\"1138\":1,\"1198\":1}}],[\"object\",{\"1\":{\"172\":1,\"186\":9,\"222\":1,\"228\":1,\"237\":1,\"247\":1,\"254\":1,\"317\":1,\"333\":1,\"399\":9,\"411\":1,\"419\":1,\"425\":1,\"500\":1,\"567\":9,\"596\":1,\"604\":1,\"610\":1,\"685\":1,\"753\":9,\"781\":1,\"789\":1,\"795\":1,\"871\":1,\"939\":9,\"975\":1,\"983\":1,\"989\":1,\"1065\":1,\"1138\":9,\"1178\":1,\"1184\":1,\"1189\":1,\"1199\":1,\"1206\":1,\"1281\":1}}],[\"object>\",{\"1\":{\"166\":1,\"168\":1,\"172\":2,\"218\":1,\"222\":1,\"225\":1,\"228\":2,\"237\":2,\"247\":1,\"254\":2,\"256\":1,\"260\":1,\"315\":2,\"317\":1,\"323\":1,\"326\":1,\"329\":1,\"333\":1,\"406\":1,\"411\":2,\"419\":1,\"425\":2,\"490\":2,\"496\":1,\"499\":1,\"500\":2,\"591\":1,\"596\":2,\"604\":1,\"610\":2,\"675\":2,\"681\":1,\"684\":1,\"685\":2,\"776\":1,\"781\":2,\"789\":1,\"795\":2,\"861\":2,\"867\":1,\"870\":1,\"871\":2,\"970\":1,\"975\":2,\"983\":1,\"989\":2,\"1055\":2,\"1061\":1,\"1064\":1,\"1065\":2,\"1125\":1,\"1171\":1,\"1174\":1,\"1178\":1,\"1181\":1,\"1184\":2,\"1189\":2,\"1199\":1,\"1206\":2,\"1279\":2,\"1281\":1,\"1287\":1,\"1290\":1}}],[\"objectmapper\",{\"1\":{\"55\":4,\"237\":9,\"411\":9,\"596\":9,\"781\":9,\"975\":9,\"1189\":9}}],[\"o\",{\"1\":{\"172\":2,\"222\":3,\"228\":2,\"254\":2,\"333\":3,\"419\":4,\"425\":2,\"500\":3,\"604\":4,\"610\":2,\"685\":3,\"789\":4,\"795\":2,\"871\":3,\"983\":4,\"989\":2,\"1065\":3,\"1178\":3,\"1184\":2,\"1206\":2}}],[\"overriding\",{\"1\":{\"62\":1}}],[\"override\",{\"1\":{\"55\":1,\"166\":1,\"172\":1,\"173\":2,\"177\":1,\"186\":3,\"198\":1,\"208\":2,\"222\":2,\"225\":2,\"228\":1,\"229\":2,\"237\":2,\"246\":1,\"247\":1,\"248\":1,\"260\":2,\"272\":2,\"309\":4,\"310\":3,\"314\":1,\"315\":1,\"333\":2,\"390\":1,\"399\":3,\"406\":1,\"411\":2,\"418\":1,\"419\":1,\"420\":1,\"484\":4,\"485\":3,\"489\":1,\"490\":1,\"500\":2,\"558\":1,\"567\":3,\"577\":1,\"588\":2,\"591\":1,\"596\":2,\"603\":1,\"604\":1,\"605\":1,\"669\":4,\"670\":3,\"674\":1,\"675\":1,\"685\":2,\"744\":1,\"753\":3,\"763\":1,\"773\":2,\"776\":1,\"781\":2,\"788\":1,\"789\":1,\"790\":1,\"855\":4,\"856\":3,\"860\":1,\"861\":1,\"871\":2,\"930\":1,\"939\":3,\"949\":1,\"959\":2,\"970\":1,\"975\":2,\"982\":1,\"983\":1,\"984\":1,\"1049\":4,\"1050\":3,\"1054\":1,\"1055\":1,\"1065\":2,\"1125\":1,\"1129\":1,\"1138\":3,\"1150\":1,\"1160\":2,\"1171\":1,\"1178\":2,\"1181\":2,\"1184\":1,\"1185\":2,\"1189\":2,\"1198\":1,\"1199\":1,\"1200\":1,\"1218\":2,\"1273\":4,\"1274\":3,\"1278\":1,\"1279\":1}}],[\"oceanbase\",{\"1\":{\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1}}],[\"orderby\",{\"1\":{\"157\":1,\"386\":1,\"554\":1,\"740\":1,\"926\":1,\"1122\":1}}],[\"orderbydesc\",{\"1\":{\"156\":1,\"385\":1,\"553\":1,\"739\":1,\"925\":1,\"1121\":1}}],[\"orderbyfield\",{\"1\":{\"155\":2,\"156\":2,\"157\":2,\"384\":2,\"385\":2,\"386\":2,\"552\":2,\"553\":2,\"554\":2,\"738\":2,\"739\":2,\"740\":2,\"924\":2,\"925\":2,\"926\":2,\"1120\":2,\"1121\":2,\"1122\":2}}],[\"orderbyasc\",{\"1\":{\"155\":1,\"384\":1,\"552\":1,\"738\":1,\"924\":1,\"1120\":1}}],[\"orderbyupdatetime\",{\"1\":{\"154\":1,\"383\":1,\"551\":1,\"737\":1,\"923\":1,\"1119\":1}}],[\"orderbycreatetime\",{\"1\":{\"153\":1,\"382\":1,\"550\":1,\"736\":1,\"922\":1,\"1118\":1}}],[\"orderbyid\",{\"1\":{\"152\":1,\"381\":1,\"549\":1,\"735\":1,\"921\":1,\"1117\":1}}],[\"orm扩展包使用技巧\",{\"0\":{\"266\":1,\"431\":1,\"616\":1,\"801\":1,\"995\":1,\"1212\":1}}],[\"orm\",{\"1\":{\"176\":1,\"268\":7,\"285\":1,\"389\":1,\"433\":7,\"459\":1,\"557\":1,\"618\":7,\"644\":1,\"743\":1,\"803\":7,\"829\":1,\"929\":1,\"997\":7,\"1023\":1,\"1128\":1,\"1214\":7,\"1249\":1}}],[\"orm框架本身不支持逻辑删除\",{\"1\":{\"176\":1,\"179\":1,\"265\":1,\"389\":1,\"392\":1,\"430\":1,\"557\":1,\"560\":1,\"615\":1,\"743\":1,\"746\":1,\"800\":1,\"929\":1,\"932\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1211\":1}}],[\"orm框架扩展\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"orm支持mybatis\",{\"1\":{\"86\":1}}],[\"org\",{\"1\":{\"64\":3,\"74\":1,\"176\":1,\"179\":3,\"285\":1,\"312\":1,\"389\":1,\"392\":1,\"459\":1,\"557\":1,\"560\":1,\"644\":1,\"743\":1,\"746\":3,\"829\":1,\"858\":1,\"929\":1,\"932\":3,\"1023\":1,\"1052\":1,\"1128\":1,\"1131\":3,\"1249\":1,\"1276\":1}}],[\"oracle适配\",{\"1\":{\"85\":1}}],[\"oracle\",{\"1\":{\"12\":1,\"15\":1,\"462\":1,\"647\":1,\"832\":1,\"1026\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"oa\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"oa办公\",{\"1\":{\"2\":1}}],[\"oa审批系统\",{\"1\":{\"2\":1}}],[\"内置常见表达式\",{\"1\":{\"317\":1,\"1281\":1}}],[\"内置常见的和spel条件表达式\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"内置表达式\",{\"0\":{\"165\":1,\"318\":1,\"405\":1,\"492\":1,\"590\":1,\"677\":1,\"775\":1,\"863\":1,\"969\":1,\"1057\":1,\"1124\":1,\"1170\":1,\"1282\":1}}],[\"内置json库snack3方式\",{\"1\":{\"79\":1}}],[\"内置$\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"内部已实现自动获取\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"内部有默认实现\",{\"1\":{\"176\":1,\"179\":1,\"189\":1,\"389\":1,\"392\":1,\"402\":1,\"557\":1,\"560\":1,\"570\":1,\"743\":1,\"746\":1,\"756\":1,\"929\":1,\"932\":1,\"942\":1,\"1128\":1,\"1131\":1,\"1141\":1}}],[\"内部oa\",{\"1\":{\"2\":4}}],[\"内部系统\",{\"1\":{\"2\":1}}],[\"参照如下文章\",{\"1\":{\"58\":1}}],[\"参数传递\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"参与贡献\",{\"0\":{\"4\":1}}],[\"灵活可扩展\",{\"1\":{\"12\":2,\"1299\":2,\"1305\":2,\"1316\":2,\"1327\":2,\"1338\":2,\"1349\":2,\"1355\":2}}],[\"票签所有待办权限只支持个人\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"票签通过率\",{\"1\":{\"451\":2,\"636\":2,\"821\":2,\"1015\":2,\"1235\":2,\"1242\":2}}],[\"票签签\",{\"0\":{\"162\":1}}],[\"票签等\",{\"0\":{\"158\":1}}],[\"票签和或签\",{\"1\":{\"35\":1,\"158\":1,\"439\":1,\"624\":1,\"809\":1,\"1003\":1,\"1223\":1}}],[\"票签\",{\"1\":{\"12\":1,\"79\":1,\"84\":1,\"85\":1,\"159\":1,\"274\":1,\"446\":1,\"451\":1,\"631\":1,\"636\":1,\"816\":1,\"821\":1,\"1010\":1,\"1015\":1,\"1230\":1,\"1235\":1,\"1237\":1,\"1242\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"退回不能选择通过类型\",{\"1\":{\"36\":1,\"440\":1,\"625\":1,\"810\":1,\"1004\":1,\"1224\":1}}],[\"退回\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"简洁易用\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"简易工作流\",{\"1\":{\"2\":1}}],[\"是spel表达式\",{\"1\":{\"325\":1,\"498\":1,\"683\":1,\"869\":1,\"1063\":1,\"1289\":1}}],[\"是\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"是任务完成后\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"是针对并行流程\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"是为了防止用户\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"是表达式策略类接口\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"是否可以退回任意节点\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"是否发布\",{\"1\":{\"300\":1,\"475\":1,\"660\":1,\"846\":1,\"1040\":1,\"1264\":1}}],[\"是否开启逻辑删除\",{\"1\":{\"176\":1,\"179\":1,\"265\":1,\"389\":1,\"392\":1,\"430\":1,\"557\":1,\"560\":1,\"615\":1,\"743\":1,\"746\":1,\"800\":1,\"929\":1,\"932\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1211\":1}}],[\"是否开启设计器ui\",{\"1\":{\"176\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"是否开启工作流\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"是否显示banner图\",{\"1\":{\"176\":1,\"179\":1,\"389\":1,\"392\":1,\"557\":1,\"560\":1,\"743\":1,\"746\":1,\"929\":1,\"932\":1,\"1128\":1,\"1131\":1}}],[\"是否截取表达式前缀\",{\"1\":{\"168\":2,\"218\":2,\"256\":2,\"329\":2,\"1174\":2}}],[\"是否设置为退回类型\",{\"1\":{\"67\":1}}],[\"是否任意调整\",{\"1\":{\"35\":1,\"439\":1,\"624\":1,\"809\":1,\"1003\":1,\"1223\":1}}],[\"是否能看懂\",{\"1\":{\"7\":1}}],[\"是一个可通过jar引入设计器的工作流\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"可应对不同场景\",{\"1\":{\"1299\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1}}],[\"可能需要处理跨域问题\",{\"1\":{\"578\":1,\"1311\":1}}],[\"可能导致前端页面获取丢失精度\",{\"1\":{\"54\":1}}],[\"可传递\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"可设置自定义权限策略\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"可参照warm\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"可参考官网文章逻辑删除和多租户\",{\"1\":{\"82\":1}}],[\"可在业务系统中增加接口\",{\"1\":{\"211\":1,\"962\":1,\"1163\":1}}],[\"可在不集成流程设计器情况下使用\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"可进行二开设计器\",{\"1\":{\"210\":1,\"1162\":1}}],[\"可进行扩展\",{\"1\":{\"167\":1,\"217\":1,\"255\":1,\"328\":1,\"1173\":1}}],[\"可追加多个token\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"可匿名访问\",{\"1\":{\"196\":1,\"197\":1,\"575\":1,\"576\":1,\"761\":1,\"762\":1,\"947\":1,\"948\":1,\"1148\":1,\"1149\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"可重复度\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"可配置文件注入\",{\"1\":{\"177\":1,\"180\":1,\"390\":1,\"393\":1,\"558\":1,\"561\":1,\"744\":1,\"747\":1,\"930\":1,\"933\":1,\"1129\":1,\"1132\":1}}],[\"可不设置入参\",{\"1\":{\"166\":1,\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1125\":1,\"1171\":1}}],[\"可不增加\",{\"1\":{\"75\":1}}],[\"可排序\",{\"0\":{\"140\":1,\"369\":1,\"537\":1,\"723\":1,\"909\":1,\"1105\":1},\"1\":{\"140\":1,\"369\":1,\"537\":1,\"723\":1,\"909\":1,\"1105\":1}}],[\"可任意跳转到对应节点\",{\"1\":{\"119\":1,\"126\":1,\"349\":1,\"355\":1,\"517\":1,\"523\":1,\"703\":1,\"709\":1,\"889\":1,\"895\":1,\"1084\":1,\"1091\":1}}],[\"可退回到任意节点\",{\"1\":{\"98\":1}}],[\"可通过填充器覆盖\",{\"1\":{\"185\":1,\"398\":1,\"566\":1,\"752\":1,\"938\":1,\"1137\":1}}],[\"可通过配置文件注入\",{\"1\":{\"177\":2,\"179\":1,\"180\":1,\"272\":1,\"312\":1,\"313\":1,\"314\":1,\"390\":2,\"392\":1,\"393\":1,\"487\":1,\"488\":1,\"489\":1,\"558\":2,\"560\":1,\"561\":1,\"672\":1,\"673\":1,\"674\":1,\"744\":2,\"746\":1,\"747\":1,\"858\":1,\"859\":1,\"860\":1,\"930\":2,\"932\":1,\"933\":1,\"1052\":1,\"1053\":1,\"1054\":1,\"1129\":2,\"1131\":1,\"1132\":1,\"1218\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"可通过这种方式开启\",{\"1\":{\"176\":1,\"179\":1,\"265\":1,\"389\":1,\"392\":1,\"430\":1,\"557\":1,\"560\":1,\"615\":1,\"743\":1,\"746\":1,\"800\":1,\"929\":1,\"932\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1211\":1}}],[\"可通过此配置自定义实现\",{\"1\":{\"176\":1,\"179\":1,\"189\":1,\"389\":1,\"392\":1,\"402\":1,\"557\":1,\"560\":1,\"570\":1,\"743\":1,\"746\":1,\"756\":1,\"929\":1,\"932\":1,\"942\":1,\"1128\":1,\"1131\":1,\"1141\":1}}],[\"可通过办理人变量表达式或者分派监听器\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"可通过jar包形式快速集成到项目\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"可多个网关直连\",{\"1\":{\"72\":1}}],[\"可尝试切换maven版本\",{\"0\":{\"66\":1}}],[\"可以快速集成\",{\"1\":{\"1319\":1,\"1330\":1}}],[\"可以快速接入业务系统\",{\"1\":{\"1308\":1}}],[\"可以撤销当前流程\",{\"1\":{\"452\":1}}],[\"可以不设置\",{\"1\":{\"325\":1,\"498\":1,\"683\":1,\"869\":1,\"1063\":1,\"1289\":1}}],[\"可以获取流程变量\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"可以设置流程变量\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"可以通过这种方式动态切换\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"可以通过条件表达式来判断\",{\"1\":{\"164\":1,\"1123\":1}}],[\"可以多个\",{\"1\":{\"274\":1,\"303\":1,\"446\":1,\"478\":1,\"631\":1,\"663\":1,\"816\":1,\"849\":1,\"1010\":1,\"1043\":1,\"1230\":1,\"1237\":1,\"1267\":1}}],[\"可以使用orm自身的api\",{\"1\":{\"266\":1,\"1212\":1}}],[\"可以统一使用一个流程监听器\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"可以返回其中一种或者多种\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"可以直接访问后端接口加载页面\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"可以按照本文中介绍的\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"可以语流程实例状态不同\",{\"1\":{\"181\":1,\"394\":1,\"562\":1,\"748\":1,\"934\":1,\"1133\":1}}],[\"可以配置自定义实现\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"可以跳转指定节点\",{\"1\":{\"94\":1}}],[\"可以把插件关了\",{\"1\":{\"63\":1}}],[\"可以有效降的帮助别人\",{\"1\":{\"6\":1}}],[\"可解决问题\",{\"1\":{\"62\":1}}],[\"可满足不同场景\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"可快速上手和集成\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"可扩展\",{\"1\":{\"12\":1,\"79\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"五脏俱全\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"writevalueasstring\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"writestring\",{\"1\":{\"55\":1}}],[\"window\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"width=\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"width\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"webmvcconfigurer\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"web<\",{\"1\":{\"193\":1,\"194\":1,\"214\":1,\"573\":1,\"759\":1,\"945\":1,\"965\":1,\"1145\":1,\"1146\":1,\"1166\":1,\"1298\":1,\"1309\":1,\"1320\":1,\"1331\":1,\"1348\":1}}],[\"web\",{\"1\":{\"62\":1}}],[\"ww💪\",{\"1\":{\"52\":1}}],[\"www\",{\"1\":{\"2\":1,\"13\":1,\"17\":1,\"23\":1,\"1300\":1,\"1306\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1350\":1,\"1356\":1}}],[\"warm<\",{\"1\":{\"193\":1,\"194\":1,\"214\":2,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"1145\":1,\"1146\":1,\"1166\":2,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1298\":1,\"1348\":1}}],[\"warmflowcontroller\",{\"1\":{\"203\":1,\"583\":1,\"768\":1,\"954\":1,\"1155\":1}}],[\"warmflowconfig\",{\"1\":{\"177\":1,\"180\":1,\"190\":1,\"310\":1,\"313\":1,\"390\":1,\"393\":1,\"403\":1,\"485\":1,\"488\":1,\"558\":1,\"561\":1,\"571\":1,\"670\":1,\"673\":1,\"744\":1,\"747\":1,\"757\":1,\"856\":1,\"859\":1,\"930\":1,\"933\":1,\"943\":1,\"1050\":1,\"1053\":1,\"1129\":1,\"1132\":1,\"1142\":1,\"1274\":1,\"1277\":1}}],[\"warmflow\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"warmflowinitiator\",{\"1\":{\"82\":1,\"248\":2,\"420\":2,\"605\":2,\"790\":2,\"984\":2,\"1200\":2}}],[\"warm组织成员介绍\",{\"0\":{\"25\":1}}],[\"warm\",{\"0\":{\"1302\":1,\"1352\":1},\"1\":{\"12\":1,\"13\":2,\"14\":4,\"21\":2,\"24\":1,\"27\":1,\"29\":1,\"52\":1,\"57\":2,\"64\":2,\"74\":3,\"75\":1,\"76\":6,\"77\":1,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"168\":1,\"171\":1,\"172\":1,\"173\":1,\"176\":2,\"177\":1,\"179\":6,\"189\":2,\"195\":1,\"196\":2,\"197\":2,\"198\":2,\"199\":1,\"200\":1,\"201\":1,\"203\":5,\"207\":1,\"208\":1,\"209\":5,\"216\":4,\"218\":1,\"221\":1,\"222\":1,\"224\":1,\"225\":1,\"227\":1,\"228\":1,\"229\":1,\"237\":2,\"253\":1,\"254\":1,\"256\":1,\"259\":1,\"260\":1,\"265\":2,\"268\":10,\"280\":1,\"285\":3,\"288\":1,\"312\":3,\"314\":1,\"329\":1,\"332\":1,\"333\":1,\"389\":2,\"390\":1,\"392\":6,\"402\":2,\"411\":2,\"425\":1,\"430\":2,\"433\":10,\"454\":1,\"459\":3,\"464\":1,\"487\":3,\"489\":1,\"500\":2,\"557\":2,\"558\":1,\"560\":6,\"570\":2,\"574\":2,\"575\":2,\"576\":2,\"577\":2,\"578\":1,\"579\":2,\"580\":4,\"581\":3,\"583\":5,\"587\":1,\"588\":1,\"596\":2,\"610\":1,\"615\":2,\"618\":10,\"639\":1,\"644\":3,\"649\":1,\"672\":3,\"674\":1,\"685\":2,\"743\":2,\"744\":1,\"746\":6,\"756\":2,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"768\":5,\"772\":1,\"773\":1,\"781\":2,\"795\":1,\"800\":2,\"803\":10,\"824\":1,\"829\":3,\"835\":1,\"858\":3,\"860\":1,\"871\":2,\"929\":2,\"930\":1,\"932\":6,\"942\":2,\"946\":1,\"947\":2,\"948\":2,\"949\":2,\"950\":1,\"951\":1,\"952\":1,\"954\":5,\"958\":1,\"959\":1,\"960\":5,\"967\":4,\"975\":2,\"989\":1,\"994\":2,\"997\":10,\"1018\":1,\"1023\":3,\"1029\":1,\"1052\":3,\"1054\":1,\"1065\":2,\"1128\":2,\"1129\":1,\"1131\":6,\"1141\":2,\"1147\":1,\"1148\":2,\"1149\":2,\"1150\":2,\"1151\":1,\"1152\":1,\"1153\":1,\"1155\":5,\"1159\":1,\"1160\":1,\"1161\":5,\"1168\":4,\"1174\":1,\"1177\":1,\"1178\":1,\"1180\":1,\"1181\":1,\"1183\":1,\"1184\":1,\"1185\":1,\"1189\":2,\"1205\":1,\"1206\":1,\"1211\":2,\"1214\":10,\"1244\":1,\"1249\":3,\"1252\":1,\"1276\":3,\"1278\":1,\"1292\":1,\"1299\":1,\"1301\":1,\"1305\":1,\"1307\":1,\"1310\":4,\"1311\":3,\"1315\":1,\"1316\":1,\"1318\":1,\"1321\":2,\"1322\":1,\"1326\":1,\"1327\":1,\"1329\":1,\"1332\":2,\"1333\":1,\"1337\":1,\"1338\":1,\"1340\":1,\"1342\":1,\"1349\":1,\"1351\":1,\"1355\":1,\"1357\":1}}],[\"介绍\",{\"0\":{\"11\":1}}],[\"视情况而定\",{\"1\":{\"10\":1}}],[\"4终止\",{\"1\":{\"1042\":1}}],[\"4版本后建议使用分派监听器修改办理人\",{\"1\":{\"417\":1,\"602\":1,\"787\":1,\"981\":1}}],[\"4会签\",{\"1\":{\"301\":1,\"361\":1,\"476\":1,\"529\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"4并行网关\",{\"1\":{\"301\":1,\"302\":1,\"303\":1,\"304\":2,\"305\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":2,\"480\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":2,\"665\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":2,\"851\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":2,\"1045\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":2,\"1269\":1}}],[\"4<\",{\"1\":{\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1291\":1,\"1341\":1}}],[\"4增量脚本sql\",{\"1\":{\"74\":1}}],[\"404\",{\"1\":{\"1358\":1}}],[\"400\",{\"1\":{\"300\":1,\"303\":2,\"475\":1,\"478\":2,\"660\":1,\"663\":2,\"846\":1,\"849\":2,\"1040\":1,\"1043\":2,\"1264\":1,\"1267\":2}}],[\"40\",{\"1\":{\"60\":1,\"300\":2,\"301\":3,\"302\":3,\"303\":1,\"304\":2,\"305\":1,\"306\":1,\"475\":2,\"476\":3,\"477\":3,\"478\":1,\"479\":2,\"480\":1,\"481\":1,\"660\":2,\"661\":3,\"662\":3,\"663\":1,\"664\":2,\"665\":1,\"666\":1,\"846\":2,\"847\":3,\"848\":3,\"849\":1,\"850\":2,\"851\":1,\"852\":1,\"1040\":2,\"1041\":3,\"1042\":3,\"1043\":1,\"1044\":2,\"1045\":1,\"1046\":1,\"1264\":2,\"1265\":3,\"1266\":3,\"1267\":1,\"1268\":2,\"1269\":1,\"1270\":1}}],[\"4096\",{\"1\":{\"60\":2}}],[\"4\",{\"0\":{\"15\":1,\"38\":1,\"63\":1,\"74\":1,\"82\":1,\"90\":1,\"95\":1,\"104\":1,\"121\":1,\"129\":1,\"133\":1,\"134\":1,\"139\":1,\"202\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"223\":1,\"224\":1,\"225\":1,\"242\":1,\"248\":1,\"277\":1,\"286\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":2,\"320\":1,\"339\":1,\"351\":1,\"358\":1,\"362\":1,\"363\":1,\"368\":1,\"420\":1,\"425\":1,\"442\":1,\"449\":1,\"460\":1,\"462\":1,\"497\":1,\"506\":1,\"519\":1,\"526\":1,\"530\":1,\"531\":1,\"536\":1,\"582\":1,\"584\":1,\"585\":1,\"586\":1,\"587\":1,\"588\":1,\"605\":1,\"610\":1,\"627\":1,\"634\":1,\"645\":1,\"647\":1,\"682\":1,\"692\":1,\"705\":1,\"712\":1,\"716\":1,\"717\":1,\"722\":1,\"767\":1,\"769\":1,\"770\":1,\"771\":1,\"772\":1,\"773\":1,\"790\":1,\"795\":1,\"812\":1,\"819\":1,\"830\":1,\"832\":1,\"839\":1,\"868\":1,\"878\":1,\"891\":1,\"898\":1,\"902\":1,\"903\":1,\"908\":1,\"953\":1,\"955\":1,\"956\":1,\"957\":1,\"958\":1,\"959\":1,\"984\":1,\"989\":1,\"1006\":1,\"1013\":1,\"1024\":1,\"1026\":1,\"1033\":1,\"1062\":1,\"1071\":1,\"1086\":1,\"1094\":1,\"1098\":1,\"1099\":1,\"1104\":1,\"1154\":1,\"1156\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1179\":1,\"1180\":1,\"1181\":1,\"1194\":1,\"1200\":1,\"1226\":1,\"1233\":1,\"1240\":1,\"1250\":1,\"1252\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1256\":2,\"1284\":1,\"1297\":1,\"1299\":1,\"1302\":1,\"1306\":1,\"1312\":1,\"1313\":1,\"1314\":1,\"1315\":1,\"1323\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1334\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1347\":1,\"1349\":1,\"1352\":1,\"1356\":1,\"1371\":1},\"1\":{\"9\":1,\"61\":1,\"64\":1,\"82\":1,\"165\":9,\"166\":1,\"168\":1,\"172\":2,\"173\":1,\"179\":2,\"218\":1,\"228\":2,\"229\":1,\"233\":1,\"247\":1,\"256\":1,\"273\":1,\"279\":1,\"292\":1,\"297\":1,\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"317\":1,\"329\":1,\"392\":2,\"405\":1,\"406\":1,\"419\":1,\"452\":1,\"468\":1,\"472\":1,\"473\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"560\":2,\"590\":1,\"591\":1,\"604\":1,\"637\":1,\"638\":1,\"653\":1,\"657\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"746\":2,\"775\":1,\"776\":1,\"789\":1,\"822\":1,\"823\":1,\"839\":1,\"843\":1,\"844\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"932\":2,\"969\":1,\"970\":1,\"983\":1,\"1016\":1,\"1017\":1,\"1033\":1,\"1037\":1,\"1038\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1124\":9,\"1125\":1,\"1131\":2,\"1170\":1,\"1171\":1,\"1174\":1,\"1184\":2,\"1185\":1,\"1199\":1,\"1236\":1,\"1243\":1,\"1256\":1,\"1261\":1,\"1262\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1281\":1,\"1297\":1,\"1311\":1,\"1347\":1}}],[\"3<\",{\"1\":{\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2}}],[\"3待办任务的委托人权限\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"3自动通过\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"3互斥网关\",{\"1\":{\"301\":1,\"302\":1,\"303\":1,\"304\":2,\"305\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":2,\"480\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":2,\"665\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":2,\"851\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":2,\"1045\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":2,\"1269\":1}}],[\"3委派\",{\"1\":{\"132\":1,\"301\":1,\"361\":1,\"476\":1,\"529\":1,\"661\":1,\"715\":1,\"847\":1,\"901\":1,\"1041\":1,\"1097\":1,\"1265\":1}}],[\"31\",{\"0\":{\"97\":1}}],[\"30\",{\"1\":{\"52\":4}}],[\"3\",{\"0\":{\"14\":1,\"37\":1,\"62\":1,\"72\":1,\"74\":1,\"75\":2,\"76\":1,\"77\":1,\"83\":1,\"91\":1,\"96\":1,\"103\":1,\"120\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":2,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"138\":1,\"163\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":2,\"184\":1,\"190\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":2,\"202\":1,\"203\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":2,\"220\":1,\"221\":1,\"222\":1,\"229\":1,\"235\":1,\"241\":1,\"247\":1,\"258\":1,\"259\":1,\"260\":1,\"269\":1,\"276\":1,\"282\":1,\"283\":1,\"284\":1,\"285\":2,\"286\":1,\"287\":1,\"291\":1,\"314\":1,\"319\":1,\"331\":1,\"332\":1,\"333\":1,\"338\":1,\"350\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":2,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"367\":1,\"397\":1,\"403\":1,\"407\":1,\"416\":1,\"417\":1,\"418\":1,\"419\":2,\"420\":1,\"421\":1,\"422\":1,\"423\":1,\"424\":1,\"434\":1,\"441\":1,\"448\":1,\"456\":1,\"457\":1,\"458\":1,\"459\":2,\"460\":1,\"461\":1,\"489\":1,\"494\":1,\"505\":1,\"518\":1,\"522\":1,\"523\":1,\"524\":1,\"525\":2,\"526\":1,\"527\":1,\"528\":1,\"529\":1,\"535\":1,\"565\":1,\"571\":1,\"577\":1,\"578\":1,\"579\":1,\"580\":1,\"581\":2,\"582\":1,\"583\":1,\"592\":1,\"601\":1,\"602\":1,\"603\":1,\"604\":2,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"619\":1,\"626\":1,\"633\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":2,\"645\":1,\"646\":1,\"674\":1,\"679\":1,\"691\":1,\"704\":1,\"708\":1,\"709\":1,\"710\":1,\"711\":2,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"721\":1,\"751\":1,\"757\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":2,\"767\":1,\"768\":1,\"777\":1,\"786\":1,\"787\":1,\"788\":1,\"789\":2,\"790\":1,\"791\":1,\"792\":1,\"793\":1,\"794\":1,\"804\":1,\"811\":1,\"818\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":2,\"830\":1,\"831\":1,\"838\":1,\"860\":1,\"865\":1,\"877\":1,\"890\":1,\"894\":1,\"895\":1,\"896\":1,\"897\":2,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"907\":1,\"937\":1,\"943\":1,\"949\":1,\"950\":1,\"951\":1,\"952\":2,\"953\":1,\"954\":1,\"964\":1,\"965\":1,\"966\":1,\"967\":1,\"971\":1,\"980\":1,\"981\":1,\"982\":1,\"983\":2,\"984\":1,\"985\":1,\"986\":1,\"987\":1,\"988\":1,\"998\":1,\"1005\":1,\"1012\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":2,\"1024\":1,\"1025\":1,\"1032\":1,\"1054\":1,\"1059\":1,\"1070\":1,\"1085\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":2,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1103\":1,\"1136\":1,\"1142\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":2,\"1154\":1,\"1155\":1,\"1165\":1,\"1166\":1,\"1167\":1,\"1168\":2,\"1172\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1185\":1,\"1193\":1,\"1199\":1,\"1215\":1,\"1225\":1,\"1232\":1,\"1239\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":2,\"1250\":1,\"1251\":1,\"1255\":1,\"1278\":1,\"1283\":1,\"1296\":1,\"1298\":1,\"1302\":1,\"1305\":1,\"1311\":1,\"1322\":1,\"1333\":1,\"1346\":1,\"1348\":1,\"1352\":1,\"1355\":1,\"1365\":1,\"1367\":1,\"1369\":2,\"1371\":1},\"1\":{\"9\":1,\"64\":1,\"74\":1,\"77\":1,\"82\":1,\"165\":1,\"168\":1,\"191\":1,\"218\":1,\"233\":1,\"256\":1,\"262\":1,\"270\":1,\"273\":1,\"274\":3,\"275\":3,\"279\":1,\"283\":3,\"284\":3,\"285\":2,\"286\":3,\"287\":2,\"297\":1,\"298\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":2,\"304\":1,\"305\":1,\"306\":1,\"315\":1,\"320\":1,\"329\":1,\"405\":1,\"446\":3,\"447\":3,\"452\":1,\"472\":1,\"473\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":2,\"479\":1,\"480\":1,\"481\":1,\"572\":1,\"578\":1,\"590\":1,\"612\":1,\"631\":3,\"632\":3,\"637\":1,\"638\":1,\"642\":2,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"657\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":2,\"664\":1,\"665\":1,\"666\":1,\"675\":1,\"677\":1,\"758\":1,\"775\":1,\"797\":1,\"816\":3,\"817\":3,\"822\":1,\"823\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"843\":1,\"844\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":2,\"850\":1,\"851\":1,\"852\":1,\"861\":1,\"863\":1,\"944\":1,\"969\":1,\"991\":1,\"1010\":3,\"1011\":3,\"1016\":1,\"1017\":1,\"1021\":3,\"1022\":3,\"1023\":2,\"1024\":3,\"1025\":2,\"1037\":1,\"1038\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":2,\"1044\":1,\"1045\":1,\"1046\":1,\"1055\":1,\"1057\":1,\"1124\":1,\"1143\":1,\"1170\":1,\"1174\":1,\"1208\":1,\"1216\":1,\"1230\":3,\"1231\":3,\"1236\":1,\"1237\":3,\"1238\":3,\"1243\":1,\"1247\":3,\"1248\":3,\"1249\":2,\"1250\":3,\"1251\":2,\"1261\":1,\"1262\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":2,\"1268\":1,\"1269\":1,\"1270\":1,\"1279\":1,\"1291\":1,\"1308\":1,\"1309\":1,\"1311\":1,\"1319\":1,\"1320\":1,\"1330\":1,\"1331\":1,\"1341\":1}}],[\"2待办任务的转办人权限\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"2结束结点\",{\"1\":{\"303\":1,\"478\":1,\"663\":1,\"849\":1,\"1043\":1,\"1267\":1}}],[\"2结束节点\",{\"1\":{\"301\":1,\"302\":1,\"304\":2,\"305\":1,\"476\":1,\"477\":1,\"479\":2,\"480\":1,\"661\":1,\"662\":1,\"664\":2,\"665\":1,\"847\":1,\"848\":1,\"850\":2,\"851\":1,\"1041\":1,\"1042\":1,\"1044\":2,\"1045\":1,\"1265\":1,\"1266\":1,\"1268\":2,\"1269\":1}}],[\"2转办\",{\"1\":{\"132\":1,\"301\":1,\"361\":1,\"476\":1,\"529\":1,\"661\":1,\"715\":1,\"847\":1,\"901\":1,\"1041\":1,\"1097\":1,\"1265\":1}}],[\"21\",{\"0\":{\"94\":1,\"157\":1,\"386\":1,\"554\":1,\"740\":1,\"926\":1,\"1122\":1},\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"22\",{\"0\":{\"93\":1},\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"27\",{\"0\":{\"87\":1,\"92\":1}}],[\"28\",{\"0\":{\"81\":1,\"83\":1,\"84\":1,\"98\":1}}],[\"26\",{\"0\":{\"78\":1}}],[\"23\",{\"0\":{\"77\":1,\"88\":1}}],[\"25\",{\"0\":{\"74\":1,\"79\":1},\"1\":{\"52\":14}}],[\"200\",{\"1\":{\"303\":1,\"304\":1,\"478\":1,\"479\":1,\"663\":1,\"664\":1,\"849\":1,\"850\":1,\"1043\":1,\"1044\":1,\"1267\":1,\"1268\":1}}],[\"2023\",{\"0\":{\"97\":1,\"98\":1}}],[\"2024\",{\"0\":{\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1},\"1\":{\"52\":20,\"253\":1,\"1205\":1}}],[\"20\",{\"0\":{\"156\":1,\"385\":1,\"553\":1,\"739\":1,\"925\":1,\"1121\":1},\"1\":{\"52\":5,\"60\":1,\"300\":1,\"301\":2,\"302\":1,\"303\":2,\"475\":1,\"476\":2,\"477\":1,\"478\":2,\"660\":1,\"661\":2,\"662\":1,\"663\":2,\"846\":1,\"847\":2,\"848\":1,\"849\":2,\"1040\":1,\"1041\":2,\"1042\":1,\"1043\":2,\"1264\":1,\"1265\":2,\"1266\":1,\"1267\":2}}],[\"2跳转线设置\",{\"0\":{\"36\":1,\"440\":1,\"625\":1,\"810\":1,\"1004\":1,\"1224\":1}}],[\"290631660\",{\"1\":{\"13\":1}}],[\"2\",{\"0\":{\"13\":1,\"24\":1,\"34\":1,\"35\":1,\"36\":1,\"59\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"92\":1,\"97\":1,\"102\":1,\"117\":1,\"118\":1,\"119\":2,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"127\":1,\"137\":1,\"160\":1,\"161\":1,\"162\":2,\"163\":1,\"166\":1,\"169\":1,\"172\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"183\":1,\"187\":1,\"188\":1,\"189\":2,\"190\":1,\"195\":1,\"196\":1,\"197\":2,\"198\":1,\"200\":1,\"206\":1,\"207\":1,\"208\":2,\"212\":1,\"215\":1,\"219\":1,\"222\":1,\"225\":1,\"228\":1,\"234\":1,\"240\":1,\"246\":1,\"257\":1,\"260\":1,\"264\":1,\"265\":1,\"268\":1,\"272\":1,\"275\":1,\"281\":1,\"284\":1,\"290\":1,\"296\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":2,\"314\":1,\"318\":1,\"330\":1,\"333\":1,\"337\":1,\"347\":1,\"348\":1,\"349\":2,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"356\":1,\"366\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":1,\"396\":1,\"400\":1,\"401\":1,\"402\":2,\"403\":1,\"406\":1,\"414\":1,\"415\":1,\"418\":1,\"429\":1,\"430\":1,\"433\":1,\"438\":1,\"439\":1,\"440\":1,\"447\":1,\"455\":1,\"458\":1,\"471\":1,\"485\":1,\"486\":1,\"487\":1,\"488\":2,\"489\":1,\"493\":1,\"504\":1,\"515\":1,\"516\":1,\"517\":2,\"518\":1,\"519\":1,\"520\":1,\"521\":1,\"524\":1,\"534\":1,\"558\":1,\"559\":1,\"560\":1,\"561\":1,\"564\":1,\"568\":1,\"569\":1,\"570\":2,\"571\":1,\"574\":1,\"575\":1,\"576\":2,\"577\":1,\"580\":1,\"586\":1,\"587\":1,\"588\":2,\"591\":1,\"599\":1,\"600\":1,\"603\":1,\"614\":1,\"615\":1,\"618\":1,\"623\":1,\"624\":1,\"625\":1,\"632\":1,\"640\":1,\"643\":1,\"656\":1,\"670\":1,\"671\":1,\"672\":1,\"673\":2,\"674\":1,\"678\":1,\"690\":1,\"701\":1,\"702\":1,\"703\":2,\"704\":1,\"705\":1,\"706\":1,\"707\":1,\"710\":1,\"720\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"750\":1,\"754\":1,\"755\":1,\"756\":2,\"757\":1,\"760\":1,\"761\":1,\"762\":2,\"763\":1,\"765\":1,\"771\":1,\"772\":1,\"773\":2,\"776\":1,\"784\":1,\"785\":1,\"788\":1,\"799\":1,\"800\":1,\"803\":1,\"808\":1,\"809\":1,\"810\":1,\"817\":1,\"825\":1,\"828\":1,\"837\":1,\"842\":1,\"856\":1,\"857\":1,\"858\":1,\"859\":2,\"860\":1,\"864\":1,\"876\":1,\"887\":1,\"888\":1,\"889\":2,\"890\":1,\"891\":1,\"892\":1,\"893\":1,\"896\":1,\"906\":1,\"930\":1,\"931\":1,\"932\":1,\"933\":1,\"936\":1,\"940\":1,\"941\":1,\"942\":2,\"943\":1,\"946\":1,\"947\":1,\"948\":2,\"949\":1,\"951\":1,\"957\":1,\"958\":1,\"959\":2,\"963\":1,\"966\":1,\"967\":1,\"970\":1,\"978\":1,\"979\":1,\"982\":1,\"993\":1,\"994\":1,\"997\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1011\":1,\"1019\":1,\"1022\":1,\"1031\":1,\"1036\":1,\"1050\":1,\"1051\":1,\"1052\":1,\"1053\":2,\"1054\":1,\"1058\":1,\"1069\":1,\"1082\":1,\"1083\":1,\"1084\":2,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1092\":1,\"1102\":1,\"1125\":1,\"1129\":1,\"1130\":1,\"1131\":1,\"1132\":1,\"1135\":1,\"1139\":1,\"1140\":1,\"1141\":2,\"1142\":1,\"1147\":1,\"1148\":1,\"1149\":2,\"1150\":1,\"1152\":1,\"1158\":1,\"1159\":1,\"1160\":2,\"1164\":1,\"1167\":1,\"1171\":1,\"1175\":1,\"1178\":1,\"1181\":1,\"1184\":1,\"1192\":1,\"1198\":1,\"1210\":1,\"1211\":1,\"1214\":1,\"1218\":1,\"1222\":1,\"1223\":1,\"1224\":1,\"1231\":1,\"1238\":1,\"1245\":1,\"1248\":1,\"1254\":1,\"1260\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":2,\"1278\":1,\"1282\":1,\"1293\":1,\"1294\":1,\"1295\":2,\"1296\":1,\"1297\":1,\"1304\":1,\"1310\":1,\"1314\":1,\"1315\":1,\"1321\":1,\"1325\":1,\"1326\":1,\"1332\":1,\"1336\":1,\"1337\":1,\"1343\":1,\"1344\":1,\"1345\":2,\"1346\":1,\"1347\":1,\"1354\":1,\"1363\":1},\"1\":{\"9\":1,\"10\":1,\"13\":1,\"60\":2,\"64\":1,\"66\":1,\"79\":1,\"81\":1,\"82\":1,\"84\":2,\"85\":1,\"165\":1,\"166\":1,\"168\":1,\"173\":3,\"176\":1,\"179\":1,\"181\":1,\"191\":1,\"218\":1,\"229\":3,\"233\":1,\"235\":8,\"256\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":1,\"270\":1,\"273\":2,\"274\":1,\"279\":1,\"292\":3,\"297\":1,\"298\":1,\"300\":1,\"301\":2,\"302\":2,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"309\":1,\"310\":1,\"315\":1,\"317\":1,\"318\":1,\"320\":1,\"329\":1,\"389\":1,\"392\":1,\"405\":1,\"417\":1,\"428\":1,\"429\":1,\"430\":1,\"446\":1,\"452\":1,\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2,\"468\":3,\"472\":1,\"473\":1,\"475\":1,\"476\":2,\"477\":2,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"484\":1,\"485\":1,\"492\":1,\"493\":1,\"557\":1,\"560\":1,\"562\":1,\"572\":1,\"578\":1,\"590\":1,\"602\":1,\"612\":1,\"613\":1,\"614\":1,\"615\":1,\"631\":1,\"637\":1,\"638\":1,\"653\":3,\"657\":1,\"658\":1,\"660\":1,\"661\":2,\"662\":2,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"669\":1,\"670\":1,\"675\":1,\"677\":1,\"678\":1,\"743\":1,\"746\":1,\"748\":1,\"758\":1,\"775\":1,\"787\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1,\"816\":1,\"822\":1,\"823\":1,\"839\":3,\"843\":1,\"844\":1,\"846\":1,\"847\":2,\"848\":2,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"855\":1,\"856\":1,\"861\":1,\"863\":1,\"864\":1,\"929\":1,\"932\":1,\"934\":1,\"944\":1,\"969\":1,\"981\":1,\"991\":1,\"992\":1,\"993\":1,\"994\":1,\"1010\":1,\"1016\":2,\"1017\":1,\"1033\":3,\"1037\":1,\"1038\":1,\"1040\":1,\"1041\":2,\"1042\":2,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1049\":1,\"1050\":1,\"1055\":1,\"1057\":1,\"1058\":1,\"1124\":1,\"1125\":1,\"1128\":1,\"1131\":1,\"1133\":1,\"1143\":1,\"1170\":1,\"1174\":1,\"1185\":3,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1216\":1,\"1230\":1,\"1236\":2,\"1237\":1,\"1243\":1,\"1256\":3,\"1261\":1,\"1262\":1,\"1264\":1,\"1265\":2,\"1266\":2,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1273\":1,\"1274\":1,\"1279\":1,\"1281\":1,\"1282\":1,\"1284\":2,\"1297\":2,\"1310\":1,\"1311\":1,\"1321\":1,\"1332\":1,\"1347\":2}}],[\"对于时效要求高的流程\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"对当前流程节点进行审核操作\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"对象\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"对应flow\",{\"1\":{\"301\":3,\"302\":1,\"305\":2,\"476\":3,\"477\":1,\"480\":2,\"661\":3,\"662\":1,\"665\":2,\"847\":3,\"848\":1,\"851\":2,\"1041\":3,\"1042\":1,\"1045\":2,\"1265\":3,\"1266\":1,\"1269\":2}}],[\"对应版本号\",{\"1\":{\"68\":1}}],[\"对应数据库类型\",{\"1\":{\"68\":1}}],[\"对框架有重大贡献者\",{\"1\":{\"9\":1}}],[\"对各类事项进行检查\",{\"1\":{\"2\":1}}],[\"1表示办理人角色和具体办理人\",{\"1\":{\"495\":1}}],[\"1待办任务的审批人权限\",{\"1\":{\"306\":1,\"481\":1,\"666\":1,\"852\":1,\"1046\":1,\"1270\":1}}],[\"1审批中\",{\"1\":{\"301\":1,\"302\":1,\"476\":1,\"477\":1,\"661\":1,\"662\":1,\"847\":1,\"848\":1,\"1041\":1,\"1042\":1,\"1265\":1,\"1266\":1}}],[\"1审批\",{\"1\":{\"301\":1,\"361\":1,\"476\":1,\"529\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"1中间节点\",{\"1\":{\"301\":1,\"302\":1,\"303\":1,\"304\":2,\"305\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":2,\"480\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":2,\"665\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":2,\"851\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":2,\"1045\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":2,\"1269\":1}}],[\"1激活\",{\"1\":{\"300\":1,\"302\":1,\"475\":1,\"477\":1,\"660\":1,\"662\":1,\"846\":1,\"848\":1,\"1040\":1,\"1042\":1,\"1264\":1,\"1266\":1}}],[\"1已发布\",{\"1\":{\"300\":1,\"475\":1,\"660\":1,\"846\":1,\"1040\":1,\"1264\":1}}],[\"19\",{\"0\":{\"155\":1,\"384\":1,\"552\":1,\"738\":1,\"924\":1,\"1120\":1},\"1\":{\"301\":1,\"303\":1,\"476\":1,\"478\":1,\"661\":1,\"663\":1,\"847\":1,\"849\":1,\"1041\":1,\"1043\":1,\"1265\":1,\"1267\":1}}],[\"19位\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"1839683148936663047\",{\"1\":{\"583\":3}}],[\"18\",{\"0\":{\"154\":1,\"383\":1,\"551\":1,\"737\":1,\"923\":1,\"1119\":1},\"1\":{\"301\":1,\"303\":1,\"476\":1,\"478\":1,\"661\":1,\"663\":1,\"847\":1,\"849\":1,\"1041\":1,\"1043\":1,\"1265\":1,\"1267\":1}}],[\"15\",{\"0\":{\"115\":1,\"151\":1,\"380\":1,\"548\":1,\"734\":1,\"920\":1,\"1116\":1},\"1\":{\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"317\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1281\":1}}],[\"15位雪花算法支持\",{\"1\":{\"81\":1}}],[\"15位\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"13\",{\"0\":{\"85\":1,\"113\":1,\"149\":1,\"378\":1,\"546\":1,\"732\":1,\"918\":1,\"1080\":1,\"1114\":1},\"1\":{\"273\":2,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"452\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"637\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"822\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"1016\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1236\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1}}],[\"1增量sql\",{\"1\":{\"84\":1}}],[\"14\",{\"0\":{\"82\":1,\"114\":1,\"150\":1,\"379\":1,\"547\":1,\"733\":1,\"919\":1,\"1081\":1,\"1115\":1},\"1\":{\"273\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"452\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"637\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"822\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"1016\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1236\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1}}],[\"14位\",{\"1\":{\"57\":1,\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"12l\",{\"1\":{\"317\":1,\"1281\":1}}],[\"1219286332145274880l\",{\"1\":{\"292\":2,\"468\":2,\"653\":2,\"839\":2,\"1033\":2,\"1256\":2,\"1297\":1,\"1347\":1}}],[\"1219286332141080576l\",{\"1\":{\"292\":1,\"468\":1,\"653\":1,\"839\":1,\"1033\":1,\"1256\":1,\"1297\":1,\"1347\":1}}],[\"1212437969554771968l\",{\"1\":{\"290\":1,\"466\":1,\"651\":1,\"837\":1,\"1031\":1,\"1254\":1,\"1295\":1,\"1345\":1}}],[\"12\",{\"0\":{\"75\":1,\"97\":1,\"98\":1,\"112\":1,\"148\":1,\"377\":1,\"514\":1,\"545\":1,\"700\":1,\"731\":1,\"886\":1,\"917\":1,\"1079\":1,\"1113\":1},\"1\":{\"273\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"452\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"637\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"822\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"1016\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1236\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1}}],[\"1l\",{\"1\":{\"64\":1,\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"1<\",{\"1\":{\"64\":1,\"827\":3,\"828\":3,\"829\":3,\"830\":3,\"831\":2,\"1320\":1,\"1331\":1}}],[\"17\",{\"0\":{\"89\":1,\"153\":1,\"382\":1,\"550\":1,\"736\":1,\"922\":1,\"1118\":1},\"1\":{\"60\":2,\"253\":1,\"301\":1,\"303\":1,\"476\":1,\"478\":1,\"661\":1,\"663\":1,\"847\":1,\"849\":1,\"1041\":1,\"1043\":1,\"1205\":1,\"1265\":1,\"1267\":1}}],[\"10<\",{\"1\":{\"457\":2,\"458\":2,\"459\":2,\"460\":2,\"461\":2}}],[\"101\",{\"1\":{\"326\":1,\"499\":1,\"684\":1,\"870\":1,\"1064\":1,\"1290\":1}}],[\"102l\",{\"1\":{\"317\":1,\"1281\":1}}],[\"10失效\",{\"1\":{\"301\":1,\"302\":1,\"476\":1,\"477\":1,\"661\":1,\"662\":1,\"847\":1,\"848\":1,\"1041\":1,\"1042\":1,\"1265\":1,\"1266\":1}}],[\"10\",{\"0\":{\"77\":1,\"78\":1,\"110\":1,\"146\":1,\"345\":1,\"375\":1,\"468\":1,\"512\":1,\"543\":1,\"653\":1,\"698\":1,\"729\":1,\"884\":1,\"915\":1,\"1077\":1,\"1111\":1,\"1363\":1},\"1\":{\"52\":2,\"165\":1,\"273\":1,\"300\":1,\"301\":2,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"317\":1,\"405\":1,\"452\":1,\"475\":1,\"476\":2,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"590\":1,\"637\":1,\"660\":1,\"661\":2,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"775\":1,\"822\":1,\"846\":1,\"847\":2,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"969\":1,\"1016\":1,\"1040\":1,\"1041\":2,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1124\":1,\"1170\":1,\"1236\":1,\"1264\":1,\"1265\":2,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1281\":1}}],[\"100l\",{\"1\":{\"317\":1,\"1281\":1}}],[\"100vh\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"100\",{\"1\":{\"52\":3,\"200\":2,\"201\":3,\"300\":3,\"301\":5,\"302\":1,\"303\":7,\"304\":4,\"305\":3,\"323\":1,\"475\":3,\"476\":5,\"477\":1,\"478\":7,\"479\":4,\"480\":3,\"496\":1,\"580\":2,\"581\":3,\"660\":3,\"661\":5,\"662\":1,\"663\":7,\"664\":4,\"665\":3,\"681\":1,\"765\":2,\"766\":3,\"846\":3,\"847\":5,\"848\":1,\"849\":7,\"850\":4,\"851\":3,\"867\":1,\"951\":2,\"952\":3,\"1040\":3,\"1041\":5,\"1042\":1,\"1043\":7,\"1044\":4,\"1045\":3,\"1061\":1,\"1152\":2,\"1153\":3,\"1264\":3,\"1265\":5,\"1266\":1,\"1267\":7,\"1268\":4,\"1269\":3,\"1287\":1}}],[\"11\",{\"0\":{\"74\":1,\"75\":1,\"76\":1,\"111\":1,\"147\":1,\"346\":1,\"376\":1,\"469\":1,\"470\":1,\"471\":1,\"513\":1,\"544\":1,\"654\":1,\"655\":1,\"656\":1,\"699\":1,\"730\":1,\"885\":1,\"916\":1,\"1078\":1,\"1112\":1},\"1\":{\"52\":2,\"60\":1,\"253\":1,\"273\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"452\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"637\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"822\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"1016\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1205\":1,\"1236\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1}}],[\"16\",{\"0\":{\"116\":1,\"152\":1,\"381\":1,\"549\":1,\"735\":1,\"921\":1,\"1117\":1},\"1\":{\"52\":1,\"216\":1,\"301\":1,\"303\":1,\"476\":1,\"478\":1,\"661\":1,\"663\":1,\"847\":1,\"849\":1,\"967\":1,\"1041\":1,\"1043\":1,\"1168\":1,\"1265\":1,\"1267\":1}}],[\"1节点设置\",{\"0\":{\"35\":1,\"439\":1,\"624\":1,\"809\":1,\"1003\":1,\"1223\":1}}],[\"1\",{\"0\":{\"12\":1,\"23\":1,\"33\":1,\"54\":1,\"66\":1,\"76\":1,\"84\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":2,\"94\":1,\"100\":1,\"101\":2,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"118\":1,\"126\":1,\"134\":1,\"136\":1,\"159\":1,\"161\":1,\"165\":1,\"168\":1,\"171\":1,\"175\":1,\"176\":2,\"177\":1,\"179\":1,\"180\":1,\"182\":1,\"186\":1,\"188\":1,\"192\":1,\"196\":1,\"205\":1,\"207\":1,\"211\":1,\"214\":1,\"218\":1,\"221\":1,\"224\":1,\"227\":1,\"233\":1,\"239\":1,\"245\":1,\"251\":1,\"252\":1,\"256\":1,\"259\":1,\"262\":1,\"263\":2,\"264\":1,\"267\":1,\"271\":1,\"274\":1,\"280\":1,\"283\":1,\"289\":1,\"295\":1,\"308\":1,\"309\":2,\"310\":1,\"312\":1,\"317\":1,\"329\":1,\"332\":1,\"335\":1,\"336\":2,\"337\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"348\":1,\"355\":1,\"363\":1,\"365\":1,\"388\":1,\"389\":2,\"390\":1,\"392\":1,\"393\":1,\"395\":1,\"399\":1,\"401\":1,\"405\":1,\"413\":1,\"417\":1,\"423\":1,\"424\":1,\"427\":1,\"428\":2,\"429\":1,\"432\":1,\"437\":1,\"446\":1,\"454\":1,\"457\":1,\"470\":1,\"483\":1,\"484\":2,\"485\":1,\"487\":1,\"492\":1,\"502\":1,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"513\":1,\"514\":1,\"516\":1,\"523\":1,\"531\":1,\"533\":1,\"556\":1,\"557\":2,\"558\":1,\"560\":1,\"561\":1,\"563\":1,\"567\":1,\"569\":1,\"573\":1,\"575\":1,\"579\":1,\"585\":1,\"587\":1,\"590\":1,\"598\":1,\"602\":1,\"608\":1,\"609\":1,\"612\":1,\"613\":2,\"614\":1,\"617\":1,\"622\":1,\"631\":1,\"639\":1,\"642\":1,\"655\":1,\"668\":1,\"669\":2,\"670\":1,\"672\":1,\"677\":1,\"687\":1,\"688\":2,\"689\":2,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"702\":1,\"709\":1,\"717\":1,\"719\":1,\"742\":1,\"743\":2,\"744\":1,\"746\":1,\"747\":1,\"749\":1,\"753\":1,\"755\":1,\"759\":1,\"761\":1,\"770\":1,\"772\":1,\"775\":1,\"783\":1,\"787\":1,\"793\":1,\"794\":1,\"797\":1,\"798\":2,\"799\":1,\"802\":1,\"807\":1,\"816\":1,\"824\":1,\"827\":1,\"836\":1,\"841\":1,\"854\":1,\"855\":2,\"856\":1,\"858\":1,\"863\":1,\"873\":1,\"874\":2,\"875\":2,\"876\":1,\"877\":1,\"878\":1,\"879\":1,\"880\":1,\"881\":1,\"882\":1,\"883\":1,\"884\":1,\"885\":1,\"886\":1,\"888\":1,\"895\":1,\"903\":1,\"905\":1,\"928\":1,\"929\":2,\"930\":1,\"932\":1,\"933\":1,\"935\":1,\"939\":1,\"941\":1,\"945\":1,\"947\":1,\"956\":1,\"958\":1,\"962\":1,\"965\":1,\"969\":1,\"977\":1,\"981\":1,\"987\":1,\"988\":1,\"991\":1,\"992\":2,\"993\":1,\"996\":1,\"1001\":1,\"1010\":1,\"1018\":1,\"1021\":1,\"1030\":1,\"1035\":1,\"1048\":1,\"1049\":2,\"1050\":1,\"1052\":1,\"1057\":1,\"1067\":1,\"1068\":2,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1075\":1,\"1076\":1,\"1077\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1081\":1,\"1083\":1,\"1091\":1,\"1099\":1,\"1101\":1,\"1124\":1,\"1127\":1,\"1128\":2,\"1129\":1,\"1131\":1,\"1132\":1,\"1134\":1,\"1138\":1,\"1140\":1,\"1144\":1,\"1148\":1,\"1157\":1,\"1159\":1,\"1163\":1,\"1166\":1,\"1170\":1,\"1174\":1,\"1177\":1,\"1180\":1,\"1183\":1,\"1191\":1,\"1197\":1,\"1203\":1,\"1204\":1,\"1208\":1,\"1209\":2,\"1210\":1,\"1213\":1,\"1217\":1,\"1221\":1,\"1230\":1,\"1237\":1,\"1244\":1,\"1247\":1,\"1253\":1,\"1259\":1,\"1272\":1,\"1273\":2,\"1274\":1,\"1276\":1,\"1281\":1,\"1292\":1,\"1294\":1,\"1303\":1,\"1309\":1,\"1313\":1,\"1315\":1,\"1320\":1,\"1324\":1,\"1326\":1,\"1331\":1,\"1335\":1,\"1337\":1,\"1342\":1,\"1344\":1,\"1353\":1,\"1367\":1},\"1\":{\"9\":1,\"10\":1,\"23\":1,\"52\":2,\"64\":2,\"77\":1,\"81\":1,\"82\":2,\"84\":2,\"85\":1,\"86\":2,\"165\":1,\"166\":2,\"168\":1,\"181\":1,\"185\":1,\"191\":1,\"199\":1,\"210\":1,\"216\":2,\"218\":1,\"233\":1,\"235\":16,\"236\":1,\"256\":1,\"262\":2,\"266\":1,\"270\":1,\"273\":1,\"274\":5,\"275\":5,\"279\":1,\"291\":1,\"292\":3,\"297\":1,\"298\":1,\"300\":6,\"301\":5,\"302\":5,\"303\":4,\"304\":4,\"305\":4,\"306\":3,\"308\":1,\"315\":1,\"316\":1,\"317\":3,\"318\":1,\"319\":1,\"320\":1,\"329\":1,\"405\":1,\"406\":1,\"407\":1,\"417\":1,\"427\":1,\"446\":5,\"447\":5,\"451\":1,\"452\":1,\"467\":1,\"468\":3,\"472\":1,\"473\":1,\"475\":6,\"476\":5,\"477\":5,\"478\":4,\"479\":4,\"480\":4,\"481\":3,\"492\":1,\"493\":1,\"495\":3,\"562\":1,\"566\":1,\"572\":1,\"578\":1,\"590\":1,\"591\":1,\"592\":1,\"595\":1,\"597\":1,\"602\":1,\"612\":2,\"631\":5,\"632\":5,\"636\":1,\"637\":1,\"638\":1,\"652\":1,\"653\":3,\"657\":1,\"658\":1,\"660\":6,\"661\":5,\"662\":5,\"663\":4,\"664\":4,\"665\":4,\"666\":3,\"668\":1,\"675\":1,\"677\":1,\"678\":1,\"748\":1,\"752\":1,\"758\":1,\"764\":1,\"775\":1,\"776\":1,\"777\":1,\"780\":1,\"782\":1,\"787\":1,\"797\":2,\"816\":5,\"817\":5,\"821\":1,\"822\":1,\"823\":1,\"838\":1,\"839\":3,\"843\":1,\"844\":1,\"846\":6,\"847\":5,\"848\":5,\"849\":4,\"850\":4,\"851\":4,\"852\":3,\"854\":1,\"861\":1,\"863\":1,\"864\":1,\"934\":1,\"938\":1,\"944\":1,\"950\":1,\"967\":2,\"969\":1,\"970\":1,\"971\":1,\"974\":1,\"976\":1,\"981\":1,\"991\":2,\"1010\":5,\"1011\":5,\"1015\":1,\"1016\":1,\"1017\":1,\"1032\":1,\"1033\":3,\"1037\":1,\"1038\":1,\"1040\":6,\"1041\":5,\"1042\":5,\"1043\":4,\"1044\":4,\"1045\":4,\"1046\":3,\"1048\":1,\"1055\":1,\"1057\":1,\"1058\":1,\"1124\":1,\"1125\":2,\"1133\":1,\"1137\":1,\"1143\":1,\"1151\":1,\"1162\":1,\"1168\":2,\"1170\":1,\"1171\":1,\"1172\":1,\"1174\":1,\"1188\":1,\"1208\":2,\"1212\":1,\"1216\":1,\"1230\":5,\"1231\":5,\"1235\":1,\"1236\":1,\"1237\":5,\"1238\":5,\"1242\":1,\"1243\":1,\"1255\":1,\"1256\":3,\"1261\":1,\"1262\":1,\"1264\":6,\"1265\":5,\"1266\":5,\"1267\":4,\"1268\":4,\"1269\":4,\"1270\":3,\"1272\":1,\"1279\":1,\"1280\":1,\"1281\":3,\"1282\":1,\"1283\":1,\"1284\":1,\"1296\":1,\"1297\":2,\"1310\":1,\"1311\":1,\"1319\":1,\"1321\":1,\"1322\":1,\"1330\":1,\"1332\":1,\"1333\":1,\"1346\":1,\"1347\":2}}],[\"👈点他点他\",{\"1\":{\"8\":1}}],[\"如下\",{\"1\":{\"1303\":1,\"1353\":1}}],[\"如下图中示例可以很容易实现\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"如com\",{\"1\":{\"411\":1,\"596\":1}}],[\"如角色和部门等\",{\"1\":{\"270\":1,\"1216\":1}}],[\"如包名1\",{\"1\":{\"241\":1,\"1193\":1}}],[\"如start\",{\"1\":{\"241\":1,\"1193\":1}}],[\"如org\",{\"1\":{\"237\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"如token\",{\"0\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"如\",{\"1\":{\"203\":2,\"207\":2,\"208\":1,\"274\":1,\"446\":1,\"583\":2,\"587\":2,\"588\":1,\"631\":1,\"768\":2,\"772\":2,\"773\":1,\"816\":1,\"954\":2,\"958\":2,\"959\":1,\"1010\":1,\"1155\":2,\"1159\":2,\"1160\":1,\"1230\":1,\"1237\":1,\"1315\":2,\"1326\":2,\"1337\":2}}],[\"如flag\",{\"1\":{\"172\":2,\"228\":2,\"1184\":2}}],[\"如是网关跳过取下一节点\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"如在未集成snack3库的环境下\",{\"1\":{\"79\":1}}],[\"如maven3\",{\"1\":{\"66\":1}}],[\"如果业务系统不开启租户\",{\"1\":{\"309\":1,\"484\":1,\"669\":1,\"855\":1,\"1049\":1,\"1273\":1}}],[\"如果业务和工作流引擎中的租户字段不一致\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"如果版本更新\",{\"1\":{\"280\":1,\"454\":1,\"639\":1,\"824\":1,\"1018\":1,\"1244\":1}}],[\"如果驳回\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"如果满足不了需求\",{\"1\":{\"266\":1,\"1212\":1}}],[\"如果设置了发起人审批\",{\"1\":{\"248\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1}}],[\"如果没有实例id\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"如果\",{\"1\":{\"247\":1,\"1199\":1}}],[\"如果有多个监听器\",{\"1\":{\"241\":1,\"1193\":1}}],[\"如果有多个token\",{\"1\":{\"176\":1,\"209\":1,\"929\":1,\"960\":1,\"1128\":1,\"1161\":1}}],[\"如果内置的接口不满足或者不够支持实际业务开发\",{\"1\":{\"211\":1,\"962\":1,\"1163\":1}}],[\"如果觉得内置的id\",{\"1\":{\"185\":1,\"398\":1,\"566\":1,\"752\":1,\"938\":1,\"1137\":1}}],[\"如果需要工作流共享业务系统权限\",{\"1\":{\"176\":1,\"209\":1,\"929\":1,\"960\":1,\"1128\":1,\"1161\":1}}],[\"如果不满足实际业务\",{\"1\":{\"176\":1,\"179\":1,\"189\":1,\"389\":1,\"392\":1,\"402\":1,\"557\":1,\"560\":1,\"570\":1,\"743\":1,\"746\":1,\"756\":1,\"929\":1,\"932\":1,\"942\":1,\"1128\":1,\"1131\":1,\"1141\":1}}],[\"如果截取\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"如果指定节点\",{\"1\":{\"119\":1,\"126\":1,\"349\":1,\"355\":1,\"517\":1,\"523\":1,\"703\":1,\"709\":1,\"889\":1,\"895\":1,\"1084\":1,\"1091\":1}}],[\"如果想要共享后端权限\",{\"1\":{\"75\":1}}],[\"如果扩展了条件表达式策略\",{\"1\":{\"74\":1}}],[\"如果是对全表的删除或更新操作\",{\"1\":{\"64\":1}}],[\"如果是互斥网关则会判断是否满足条件\",{\"1\":{\"39\":1,\"443\":1,\"628\":1,\"813\":1,\"1007\":1,\"1227\":1}}],[\"如果还不行\",{\"1\":{\"60\":1}}],[\"如有遗漏\",{\"1\":{\"52\":1}}],[\"如有想法可联系290631660\",{\"1\":{\"13\":1}}],[\"如需修改默认值\",{\"1\":{\"262\":1,\"427\":1,\"612\":1,\"797\":1,\"991\":1,\"1208\":1}}],[\"如需还想按照原本的自动完成\",{\"1\":{\"76\":1}}],[\"如需warm\",{\"1\":{\"29\":1}}],[\"如需求还不够清晰\",{\"1\":{\"8\":1}}],[\"如流程引擎集成与使用\",{\"1\":{\"28\":1}}],[\"如it支持请求\",{\"1\":{\"14\":1}}],[\"如发票审核\",{\"1\":{\"14\":1}}],[\"如客户咨询\",{\"1\":{\"14\":1}}],[\"如请假\",{\"1\":{\"14\":1}}],[\"如何处理long类型精度丢失问题\",{\"1\":{\"56\":1}}],[\"如何成为赞助商\",{\"1\":{\"18\":1}}],[\"如何成为项目贡献者\",{\"0\":{\"9\":1}}],[\"如何提交pr\",{\"1\":{\"8\":1}}],[\"一个自带流程设计器的工作流引擎\",{\"0\":{\"1291\":1,\"1308\":1,\"1319\":1,\"1330\":1,\"1341\":1}}],[\"一个人接触的问题有限\",{\"1\":{\"27\":1}}],[\"一名负责人通过即可通过审批节点\",{\"1\":{\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"一名办理人审批通过\",{\"1\":{\"159\":1,\"273\":1}}],[\"一般会有工具类获取\",{\"1\":{\"314\":1,\"489\":1,\"674\":1,\"860\":1,\"1054\":1,\"1278\":1}}],[\"一般以消息通知方式提醒处理人\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"一票否决\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"一次性填写不完\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"一人或者多人审批的情况\",{\"1\":{\"158\":1}}],[\"一下两种方式任选其一\",{\"1\":{\"55\":1}}],[\"一骑\",{\"1\":{\"52\":1}}],[\"一拳打爆常大宝\",{\"0\":{\"66\":1},\"1\":{\"52\":1}}],[\"一群人接触的问题无限\",{\"1\":{\"27\":1}}],[\"一点要仔细看\",{\"1\":{\"8\":1}}],[\"一定要先看一下如何正确的提交pr\",{\"1\":{\"8\":1}}],[\"觉得自己能做的可以在issue里跟作者讨论\",{\"1\":{\"8\":1}}],[\"觉得哪应该详细说明\",{\"1\":{\"7\":1}}],[\"觉得哪看不懂\",{\"1\":{\"7\":1}}],[\"重走流程\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"重新定义监听器名称\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"重启流程\",{\"1\":{\"70\":1}}],[\"重启服务\",{\"1\":{\"60\":1}}],[\"重构流程开启流程和流程办理代码\",{\"1\":{\"90\":1}}],[\"重构代码\",{\"1\":{\"89\":1,\"94\":1,\"96\":1}}],[\"重构solon和插件模块\",{\"1\":{\"82\":1}}],[\"重构skip等方法通用校验\",{\"1\":{\"76\":1}}],[\"重构测试模块\",{\"1\":{\"82\":1}}],[\"重构id生成器\",{\"1\":{\"79\":1}}],[\"重构条件表达式和办理人变量表达式\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"重构test项目\",{\"1\":{\"74\":1,\"1304\":1,\"1354\":1}}],[\"重构\",{\"1\":{\"48\":1}}],[\"重要\",{\"1\":{\"12\":1,\"25\":5,\"31\":1,\"68\":1,\"158\":1,\"164\":1,\"167\":1,\"168\":1,\"181\":1,\"185\":1,\"191\":1,\"210\":1,\"217\":1,\"218\":1,\"232\":1,\"236\":1,\"238\":1,\"239\":1,\"240\":1,\"255\":1,\"256\":1,\"262\":1,\"266\":1,\"270\":1,\"279\":1,\"297\":1,\"308\":1,\"315\":1,\"316\":1,\"328\":1,\"329\":1,\"394\":1,\"398\":1,\"410\":1,\"412\":1,\"413\":1,\"414\":1,\"427\":1,\"435\":1,\"453\":1,\"472\":1,\"483\":1,\"490\":1,\"562\":1,\"566\":1,\"572\":1,\"595\":1,\"597\":1,\"598\":1,\"599\":1,\"612\":1,\"620\":1,\"638\":1,\"657\":1,\"668\":1,\"675\":1,\"748\":1,\"752\":1,\"758\":1,\"780\":1,\"782\":1,\"783\":1,\"784\":1,\"797\":1,\"805\":1,\"823\":1,\"843\":1,\"854\":1,\"861\":1,\"934\":1,\"938\":1,\"944\":1,\"974\":1,\"976\":1,\"977\":1,\"978\":1,\"991\":1,\"999\":1,\"1017\":1,\"1037\":1,\"1048\":1,\"1055\":1,\"1123\":1,\"1133\":1,\"1137\":1,\"1143\":1,\"1162\":1,\"1173\":1,\"1174\":1,\"1188\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1208\":1,\"1212\":1,\"1216\":1,\"1219\":1,\"1243\":1,\"1261\":1,\"1272\":1,\"1279\":1,\"1280\":1,\"1310\":1,\"1311\":1,\"1312\":1,\"1316\":1}}],[\"重点来了\",{\"1\":{\"8\":1}}],[\"重庆\",{\"1\":{\"2\":1}}],[\"想参与贡献代码的小伙伴\",{\"1\":{\"8\":1}}],[\"当流程完成\",{\"1\":{\"278\":1,\"450\":1,\"635\":1,\"820\":1,\"1014\":1,\"1234\":1,\"1241\":1}}],[\"当流程有多个结束节点\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"当内置的设计器和接口不满足业务需求时\",{\"1\":{\"210\":1,\"1162\":1}}],[\"当内置的条件\",{\"1\":{\"167\":1,\"217\":1,\"255\":1,\"328\":1,\"1173\":1}}],[\"当使用jpa时指定jpapersistenceprovider\",{\"1\":{\"176\":1,\"285\":1,\"389\":1,\"459\":1,\"557\":1,\"644\":1,\"743\":1,\"829\":1,\"929\":1,\"1023\":1,\"1128\":1,\"1249\":1}}],[\"当前任务执行\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"当前任务完成后执行\",{\"1\":{\"240\":1,\"245\":1,\"253\":1,\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1,\"1192\":1,\"1197\":1,\"1205\":1}}],[\"当前流程节点的编码\",{\"1\":{\"304\":1,\"479\":1,\"664\":1,\"850\":1,\"1044\":1,\"1268\":1}}],[\"当前流程状态\",{\"1\":{\"181\":1,\"394\":1,\"562\":1,\"748\":1,\"934\":1,\"1133\":1}}],[\"当前节点上一节点处理人操作\",{\"1\":{\"452\":1}}],[\"当前节点类型\",{\"1\":{\"304\":1,\"479\":1,\"664\":1,\"850\":1,\"1044\":1,\"1268\":1}}],[\"当前节点处理人还未处理\",{\"1\":{\"452\":1}}],[\"当前节点处理人\",{\"1\":{\"273\":4,\"452\":8,\"637\":8,\"822\":8,\"1016\":8,\"1236\":8}}],[\"当前节点code\",{\"1\":{\"134\":1,\"363\":1,\"531\":1,\"717\":1,\"903\":1,\"1099\":1}}],[\"当前办理人\",{\"1\":{\"271\":1,\"272\":1,\"1217\":1,\"1218\":1}}],[\"当前办理人唯一标识\",{\"1\":{\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"525\":1,\"526\":1,\"527\":1,\"528\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1}}],[\"当前办理不可办理\",{\"1\":{\"128\":1,\"129\":1,\"357\":1,\"358\":1,\"525\":1,\"526\":1,\"711\":1,\"712\":1,\"897\":1,\"898\":1,\"1093\":1,\"1094\":1}}],[\"当未设置办理人时\",{\"1\":{\"80\":1}}],[\"当然了\",{\"1\":{\"7\":1}}],[\"当地节水系统\",{\"1\":{\"2\":1}}],[\"有多个演练环节\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"有多租户需要\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"有想扩展其他orm框架和数据库的可加qq群联系群主\",{\"1\":{\"287\":1,\"463\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1}}],[\"有一个完成\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"有偿服务\",{\"0\":{\"26\":1}}],[\"有时候作者把文档写完了也不知道用户是什么感觉\",{\"1\":{\"7\":1}}],[\"有限公司\",{\"1\":{\"2\":1}}],[\"而且可以降低社区人员的精力分散\",{\"1\":{\"6\":1}}],[\"屏幕截图\",{\"1\":{\"6\":2,\"33\":1,\"38\":1,\"40\":1,\"43\":1,\"45\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"230\":2,\"408\":2,\"437\":1,\"442\":1,\"444\":1,\"593\":2,\"622\":1,\"627\":1,\"629\":1,\"778\":2,\"807\":1,\"812\":1,\"814\":1,\"972\":2,\"1001\":1,\"1006\":1,\"1008\":1,\"1186\":2,\"1221\":1,\"1226\":1,\"1228\":1}}],[\"|$\",{\"1\":{\"492\":1,\"493\":1,\"495\":2,\"500\":1,\"677\":1,\"678\":1,\"680\":2,\"685\":1,\"863\":1,\"864\":1,\"866\":2,\"871\":1,\"1057\":1,\"1058\":1,\"1060\":2,\"1065\":1}}],[\"||\",{\"1\":{\"222\":1,\"309\":1,\"310\":1,\"333\":1,\"484\":1,\"485\":1,\"500\":1,\"669\":1,\"670\":1,\"685\":1,\"855\":1,\"856\":1,\"871\":1,\"1049\":1,\"1050\":1,\"1065\":1,\"1178\":1,\"1273\":1,\"1274\":1}}],[\"|yyy\",{\"1\":{\"166\":1,\"1125\":1}}],[\"|flag\",{\"1\":{\"165\":8,\"173\":1,\"229\":1,\"1124\":8,\"1185\":1}}],[\"|\",{\"1\":{\"5\":2,\"165\":1,\"166\":1,\"168\":2,\"218\":2,\"256\":2,\"329\":2,\"406\":1,\"492\":1,\"498\":1,\"591\":1,\"677\":1,\"683\":1,\"776\":1,\"863\":1,\"869\":1,\"970\":1,\"1057\":1,\"1063\":1,\"1124\":1,\"1125\":1,\"1171\":1,\"1174\":2}}],[\"大于等于流程设计时指定的\",{\"1\":{\"451\":1,\"636\":1,\"821\":1,\"1015\":1,\"1235\":1,\"1242\":1}}],[\"大于等于\",{\"1\":{\"165\":1,\"405\":1,\"590\":1,\"775\":1,\"969\":1,\"1124\":1,\"1170\":1}}],[\"大于\",{\"1\":{\"165\":1,\"405\":1,\"451\":1,\"590\":1,\"636\":1,\"775\":1,\"821\":1,\"969\":1,\"1015\":1,\"1124\":1,\"1170\":1,\"1235\":1,\"1242\":1}}],[\"大家也可以对文档进行改进后提交pr修改申请\",{\"1\":{\"7\":1}}],[\"大家可以在issue提出观后感\",{\"1\":{\"7\":1}}],[\"大家都知道\",{\"1\":{\"7\":1}}],[\"大家会在这里提出自己的问题\",{\"1\":{\"6\":1}}],[\"大家在寻找开源项目的时候\",{\"1\":{\"5\":1}}],[\"大多数情况也是会先看star比较多的项目\",{\"1\":{\"5\":1}}],[\"跌了会失落\",{\"1\":{\"5\":1}}],[\"涨了会开心\",{\"1\":{\"5\":1}}],[\"同时支持多对一的替换\",{\"1\":{\"317\":1,\"1281\":1}}],[\"同时支持功能强大的spel表达\",{\"1\":{\"317\":1,\"1281\":1}}],[\"同时支持spring和solon\",{\"1\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"同时构建左侧部门树状结构\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"同时star也是作者前进的动力\",{\"1\":{\"5\":1}}],[\"同时具备企业erp级的协同功能\",{\"1\":{\"2\":1}}],[\"为此抽取出这个接口\",{\"1\":{\"270\":1,\"1216\":1}}],[\"为是否可编辑\",{\"1\":{\"200\":1,\"201\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"为需要查询的流程定义id\",{\"1\":{\"200\":1,\"201\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"为了方便业务系统快速引入设计器\",{\"1\":{\"191\":1,\"572\":1,\"758\":1,\"944\":1,\"1143\":1}}],[\"为保存流程状态\",{\"1\":{\"89\":1}}],[\"为springutil指定bean\",{\"1\":{\"82\":1}}],[\"为提出问题的小伙伴答疑\",{\"1\":{\"6\":1}}],[\"为社区处理问题\",{\"0\":{\"6\":1}}],[\"为开源项目点一个star\",{\"0\":{\"5\":1}}],[\"为中心\",{\"1\":{\"2\":1}}],[\"南山客\",{\"1\":{\"2\":1}}],[\"毕业设计\",{\"1\":{\"2\":2}}],[\"基于dev分支\",{\"0\":{\"44\":1}}],[\"基于ruoyi\",{\"1\":{\"41\":2}}],[\"基于springboot的财务管理系统\",{\"1\":{\"2\":1}}],[\"基于ssm的职工管理系统\",{\"1\":{\"2\":1}}],[\"基于机器学习的只能停车管理系统\",{\"1\":{\"2\":1}}],[\"基于工业互联网的数字化安全与质量管理平台\",{\"1\":{\"2\":1}}],[\"leaveflow\",{\"1\":{\"289\":1,\"465\":1,\"650\":1,\"836\":1,\"1030\":1,\"1253\":1,\"1294\":1,\"1344\":1}}],[\"le\",{\"1\":{\"165\":2,\"1124\":2}}],[\"length\",{\"1\":{\"30\":1}}],[\"lt\",{\"1\":{\"165\":2,\"1124\":2}}],[\"lazy\",{\"1\":{\"62\":2}}],[\"language\",{\"0\":{\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1171\":1},\"1\":{\"166\":1,\"1125\":1}}],[\"lang=zh\",{\"1\":{\"60\":1}}],[\"lang=zh是否包含中文字符集\",{\"1\":{\"60\":1}}],[\"lang\",{\"1\":{\"60\":1}}],[\"ll\",{\"1\":{\"60\":1}}],[\"logging<\",{\"1\":{\"287\":1,\"461\":1,\"646\":1,\"831\":1,\"1025\":1,\"1251\":1}}],[\"loggerfactory\",{\"1\":{\"237\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":1,\"315\":1,\"411\":1,\"418\":1,\"419\":1,\"420\":1,\"490\":1,\"596\":1,\"603\":1,\"604\":1,\"605\":1,\"675\":1,\"781\":1,\"788\":1,\"789\":1,\"790\":1,\"861\":1,\"975\":1,\"982\":1,\"983\":1,\"984\":1,\"1055\":1,\"1189\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1,\"1279\":1}}],[\"logger\",{\"1\":{\"237\":1,\"246\":1,\"247\":1,\"248\":1,\"253\":1,\"315\":1,\"411\":1,\"418\":1,\"419\":1,\"420\":1,\"490\":1,\"596\":1,\"603\":1,\"604\":1,\"605\":1,\"675\":1,\"781\":1,\"788\":1,\"789\":1,\"790\":1,\"861\":1,\"975\":1,\"982\":1,\"983\":1,\"984\":1,\"1055\":1,\"1189\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1205\":1,\"1279\":1}}],[\"log\",{\"1\":{\"200\":1,\"237\":3,\"246\":3,\"247\":3,\"248\":3,\"253\":9,\"254\":1,\"315\":3,\"411\":3,\"418\":3,\"419\":3,\"420\":3,\"425\":1,\"490\":3,\"580\":1,\"596\":3,\"603\":3,\"604\":3,\"605\":3,\"610\":1,\"675\":3,\"765\":1,\"781\":3,\"788\":3,\"789\":3,\"790\":3,\"795\":1,\"861\":3,\"951\":1,\"975\":3,\"982\":3,\"983\":3,\"984\":3,\"989\":1,\"1055\":3,\"1152\":1,\"1189\":3,\"1198\":3,\"1199\":3,\"1200\":3,\"1205\":9,\"1206\":1,\"1279\":3}}],[\"loginuser\",{\"1\":{\"182\":1,\"246\":1,\"315\":1,\"395\":1,\"418\":1,\"490\":1,\"563\":1,\"603\":1,\"675\":1,\"749\":1,\"788\":1,\"861\":1,\"935\":1,\"982\":1,\"1055\":1,\"1134\":1,\"1198\":1,\"1279\":1}}],[\"logicnotdeletevalue\",{\"1\":{\"264\":1,\"429\":1,\"614\":1,\"799\":1,\"993\":1,\"1210\":1}}],[\"logicdeletevalue\",{\"1\":{\"264\":1,\"429\":1,\"614\":1,\"799\":1,\"993\":1,\"1210\":1}}],[\"logic\",{\"1\":{\"176\":3,\"179\":3,\"263\":2,\"265\":3,\"389\":3,\"392\":3,\"428\":2,\"430\":3,\"557\":3,\"560\":3,\"613\":2,\"615\":3,\"743\":3,\"746\":3,\"798\":2,\"800\":3,\"929\":3,\"932\":3,\"992\":2,\"994\":3,\"1128\":3,\"1131\":3,\"1209\":2,\"1211\":3}}],[\"logo\",{\"1\":{\"2\":1}}],[\"location\",{\"1\":{\"216\":3,\"579\":1,\"967\":3,\"1168\":3,\"1311\":1}}],[\"local\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"localhost\",{\"1\":{\"216\":3,\"579\":2,\"580\":1,\"581\":1,\"967\":3,\"1168\":3,\"1311\":2}}],[\"localcontainerentitymanagerfactorybean\",{\"1\":{\"82\":1}}],[\"locker\",{\"1\":{\"64\":1}}],[\"longvalue\",{\"1\":{\"55\":2,\"309\":2,\"310\":2,\"484\":2,\"485\":2,\"669\":2,\"670\":2,\"855\":2,\"856\":2,\"1049\":2,\"1050\":2,\"1273\":2,\"1274\":2}}],[\"long\",{\"1\":{\"55\":8,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"122\":1,\"123\":1,\"208\":3,\"345\":1,\"346\":1,\"352\":1,\"353\":1,\"513\":1,\"514\":1,\"520\":1,\"521\":1,\"588\":3,\"699\":1,\"700\":1,\"706\":1,\"707\":1,\"773\":3,\"885\":1,\"886\":1,\"892\":1,\"893\":1,\"959\":3,\"1080\":1,\"1081\":1,\"1087\":1,\"1088\":1,\"1160\":3}}],[\"luoheyu\",{\"1\":{\"54\":1}}],[\"like\",{\"1\":{\"165\":2,\"1124\":2}}],[\"liutao\",{\"1\":{\"84\":3}}],[\"link\",{\"1\":{\"247\":1,\"271\":1,\"1199\":1,\"1217\":1}}],[\"linkedhashmap<>\",{\"1\":{\"197\":1,\"576\":1,\"762\":1,\"948\":1,\"1149\":1}}],[\"linkedhashmap<string\",{\"1\":{\"197\":1,\"576\":1,\"762\":1,\"948\":1,\"1149\":1}}],[\"link2fun\",{\"1\":{\"82\":1}}],[\"linux环境\",{\"0\":{\"60\":1}}],[\"liangli\",{\"1\":{\"82\":1,\"84\":1}}],[\"liangliyun\",{\"1\":{\"41\":2}}],[\"listenervariable\",{\"1\":{\"241\":1,\"245\":1,\"246\":4,\"247\":5,\"248\":1,\"253\":12,\"254\":1,\"315\":1,\"417\":1,\"418\":4,\"419\":5,\"420\":1,\"425\":1,\"490\":1,\"602\":1,\"603\":4,\"604\":5,\"605\":1,\"610\":1,\"675\":1,\"787\":1,\"788\":4,\"789\":5,\"790\":1,\"795\":1,\"861\":1,\"981\":1,\"982\":4,\"983\":5,\"984\":1,\"989\":1,\"1055\":1,\"1193\":1,\"1197\":1,\"1198\":4,\"1199\":5,\"1200\":1,\"1205\":12,\"1206\":1,\"1279\":1}}],[\"listenervariable监听器变量新增flowparams字段\",{\"1\":{\"79\":1}}],[\"listener\",{\"1\":{\"241\":2,\"245\":5,\"246\":1,\"247\":1,\"248\":1,\"254\":1,\"300\":2,\"303\":2,\"315\":1,\"417\":6,\"418\":1,\"419\":1,\"420\":1,\"425\":1,\"475\":2,\"478\":2,\"490\":1,\"602\":6,\"603\":1,\"604\":1,\"605\":1,\"610\":1,\"660\":2,\"663\":2,\"675\":1,\"787\":6,\"788\":1,\"789\":1,\"790\":1,\"795\":1,\"846\":2,\"849\":2,\"861\":1,\"981\":6,\"982\":1,\"983\":1,\"984\":1,\"989\":1,\"1040\":2,\"1043\":2,\"1055\":1,\"1193\":2,\"1197\":5,\"1198\":1,\"1199\":1,\"1200\":1,\"1206\":1,\"1264\":2,\"1267\":2,\"1279\":1}}],[\"listenerstrategyspel\",{\"1\":{\"225\":1,\"260\":1,\"1181\":1}}],[\"listenerstrategy\",{\"1\":{\"224\":1,\"225\":1,\"259\":1,\"260\":1,\"1180\":1,\"1181\":1}}],[\"listen\",{\"1\":{\"216\":1,\"579\":1,\"967\":1,\"1168\":1,\"1311\":1}}],[\"list<tablefieldinfo>\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"list<task>\",{\"1\":{\"248\":1,\"317\":1,\"420\":1,\"605\":1,\"790\":1,\"984\":1,\"1200\":1,\"1281\":1}}],[\"list<user>\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"list<expressionstrategy<boolean>>\",{\"1\":{\"224\":1,\"259\":1,\"1180\":1}}],[\"list<expressionstrategy<list<string>>>\",{\"1\":{\"221\":1,\"332\":1,\"1177\":1}}],[\"list<sysuser>\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"list<sysdept>\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"list<sysrole>\",{\"1\":{\"208\":1,\"246\":1,\"272\":1,\"418\":1,\"588\":1,\"603\":1,\"773\":1,\"788\":1,\"959\":1,\"982\":1,\"1160\":1,\"1198\":1,\"1218\":1}}],[\"list<string>\",{\"1\":{\"207\":1,\"208\":1,\"246\":1,\"248\":1,\"271\":1,\"272\":2,\"309\":1,\"418\":1,\"420\":1,\"484\":1,\"587\":1,\"588\":1,\"603\":1,\"605\":1,\"669\":1,\"772\":1,\"773\":1,\"788\":1,\"790\":1,\"855\":1,\"958\":1,\"959\":1,\"982\":1,\"984\":1,\"1049\":1,\"1159\":1,\"1160\":1,\"1198\":1,\"1200\":1,\"1217\":1,\"1218\":2,\"1273\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"list<handlerselectvo>\",{\"1\":{\"207\":1,\"587\":1,\"772\":1,\"958\":1,\"1159\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"listbydefids\",{\"1\":{\"124\":1,\"1089\":1}}],[\"list\",{\"1\":{\"60\":2,\"139\":1,\"140\":1,\"149\":2,\"150\":2,\"151\":2,\"368\":1,\"369\":1,\"378\":2,\"379\":2,\"380\":2,\"536\":1,\"537\":1,\"546\":2,\"547\":2,\"548\":2,\"722\":1,\"723\":1,\"732\":2,\"733\":2,\"734\":2,\"908\":1,\"909\":1,\"918\":2,\"919\":2,\"920\":2,\"1104\":1,\"1105\":1,\"1114\":2,\"1115\":2,\"1116\":2}}],[\"license\",{\"1\":{\"13\":1}}],[\"lyq\",{\"1\":{\"2\":1}}],[\"e\",{\"1\":{\"237\":4,\"411\":4,\"596\":4,\"781\":4,\"975\":4,\"1189\":4}}],[\"event\",{\"1\":{\"200\":3,\"201\":2,\"580\":3,\"581\":2,\"765\":3,\"766\":2,\"951\":3,\"952\":2,\"1152\":3,\"1153\":2}}],[\"evalvariable\",{\"1\":{\"317\":1,\"1281\":1}}],[\"evalvarentity\",{\"1\":{\"317\":1,\"1281\":1}}],[\"evalvar\",{\"1\":{\"168\":2,\"218\":2,\"256\":2,\"317\":2,\"318\":1,\"325\":1,\"326\":1,\"329\":2,\"492\":1,\"498\":2,\"499\":1,\"677\":1,\"683\":2,\"684\":1,\"863\":1,\"869\":2,\"870\":1,\"1057\":1,\"1063\":2,\"1064\":1,\"1174\":2,\"1281\":2,\"1282\":1,\"1289\":1,\"1290\":1}}],[\"eval\",{\"1\":{\"165\":1,\"166\":3,\"168\":2,\"172\":1,\"218\":2,\"222\":1,\"225\":2,\"228\":1,\"256\":2,\"260\":2,\"329\":2,\"333\":1,\"406\":3,\"500\":2,\"591\":3,\"685\":2,\"776\":3,\"871\":2,\"970\":3,\"1065\":2,\"1124\":1,\"1125\":3,\"1171\":3,\"1174\":2,\"1178\":1,\"1181\":2,\"1184\":1}}],[\"equals\",{\"1\":{\"173\":1,\"208\":3,\"229\":1,\"247\":1,\"309\":3,\"310\":2,\"484\":3,\"485\":2,\"588\":3,\"669\":3,\"670\":2,\"773\":3,\"855\":3,\"856\":2,\"959\":3,\"1049\":3,\"1050\":2,\"1160\":3,\"1185\":1,\"1199\":1,\"1273\":3,\"1274\":2}}],[\"eq\",{\"1\":{\"165\":2,\"172\":2,\"173\":3,\"228\":2,\"229\":3,\"1124\":2,\"1184\":2,\"1185\":3}}],[\"error\",{\"1\":{\"216\":1,\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"967\":1,\"975\":2,\"1168\":1,\"1189\":2}}],[\"erfeijiadao\",{\"1\":{\"82\":1}}],[\"erp\",{\"1\":{\"2\":2}}],[\"executeupdate\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"existentity\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"exists\",{\"1\":{\"143\":1,\"372\":1,\"540\":1,\"726\":1,\"912\":1,\"1108\":1}}],[\"exclusions>\",{\"1\":{\"214\":1,\"287\":1,\"461\":1,\"646\":1,\"831\":1,\"965\":1,\"1025\":1,\"1166\":1,\"1251\":1}}],[\"exclusion>\",{\"1\":{\"214\":1,\"287\":2,\"461\":2,\"646\":2,\"831\":2,\"965\":1,\"1025\":2,\"1166\":1,\"1251\":2}}],[\"excludepathpatterns\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"exception\",{\"1\":{\"196\":1,\"237\":1,\"289\":1,\"290\":1,\"292\":2,\"411\":1,\"465\":1,\"466\":1,\"468\":2,\"575\":1,\"596\":1,\"650\":1,\"651\":1,\"653\":2,\"761\":1,\"781\":1,\"836\":1,\"837\":1,\"839\":2,\"947\":1,\"975\":1,\"1030\":1,\"1031\":1,\"1033\":2,\"1148\":1,\"1189\":1,\"1253\":1,\"1254\":1,\"1256\":2,\"1294\":1,\"1295\":1,\"1297\":2,\"1310\":1,\"1321\":1,\"1332\":1,\"1344\":1,\"1345\":1,\"1347\":2}}],[\"exceptioncons\",{\"1\":{\"172\":2,\"228\":2,\"1184\":2}}],[\"ext\",{\"1\":{\"118\":1,\"300\":1,\"301\":1,\"302\":1,\"348\":1,\"475\":1,\"476\":1,\"477\":1,\"516\":1,\"660\":1,\"661\":1,\"662\":1,\"702\":1,\"846\":1,\"847\":1,\"848\":1,\"888\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1083\":1,\"1264\":1,\"1265\":1,\"1266\":1}}],[\"extension\",{\"1\":{\"64\":4}}],[\"extends\",{\"1\":{\"55\":2,\"171\":1,\"173\":1,\"221\":1,\"224\":1,\"227\":1,\"229\":1,\"245\":1,\"259\":1,\"332\":1,\"417\":1,\"602\":1,\"787\":1,\"981\":1,\"1177\":1,\"1180\":1,\"1183\":1,\"1185\":1,\"1197\":1}}],[\"export\",{\"1\":{\"200\":1,\"580\":1,\"765\":1,\"951\":1,\"1152\":1}}],[\"exportxml\",{\"1\":{\"106\":1,\"338\":1,\"506\":1,\"692\":1,\"878\":1,\"1073\":1}}],[\"expressionutil\",{\"1\":{\"169\":1,\"219\":1,\"257\":1,\"317\":1,\"330\":1,\"1175\":1,\"1281\":1}}],[\"expressionstrategylist\",{\"1\":{\"221\":2,\"224\":2,\"259\":2,\"332\":2,\"1177\":2,\"1180\":2}}],[\"expressionstrategy<list<string>>\",{\"1\":{\"221\":2,\"332\":2,\"1177\":2}}],[\"expressionstrategy<boolean>>\",{\"1\":{\"171\":2,\"227\":2,\"1183\":2}}],[\"expressionstrategy<boolean>\",{\"1\":{\"171\":2,\"224\":2,\"227\":2,\"259\":2,\"1180\":2,\"1183\":2}}],[\"expressionstrategy<t>\",{\"1\":{\"168\":2,\"218\":2,\"256\":2,\"329\":2,\"1174\":2}}],[\"expressionstrategyeq\",{\"1\":{\"169\":1,\"219\":1,\"257\":1,\"330\":1,\"1175\":1}}],[\"expressionstrategy\",{\"1\":{\"168\":2,\"171\":3,\"218\":2,\"221\":2,\"224\":2,\"227\":3,\"256\":2,\"259\":2,\"329\":2,\"332\":2,\"1174\":2,\"1177\":2,\"1180\":2,\"1183\":3}}],[\"expressionstrategy接口\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"expression\",{\"0\":{\"406\":1,\"591\":1,\"776\":1,\"970\":1,\"1171\":1},\"1\":{\"74\":2,\"166\":1,\"168\":2,\"172\":3,\"218\":2,\"222\":3,\"225\":2,\"228\":3,\"256\":2,\"260\":2,\"309\":1,\"310\":1,\"329\":2,\"333\":3,\"484\":1,\"485\":1,\"500\":5,\"669\":1,\"670\":1,\"685\":5,\"855\":1,\"856\":1,\"871\":5,\"1049\":1,\"1050\":1,\"1065\":5,\"1125\":1,\"1174\":2,\"1178\":3,\"1181\":2,\"1184\":3,\"1273\":1,\"1274\":1}}],[\"end\",{\"1\":{\"417\":1,\"602\":1,\"787\":1,\"981\":1}}],[\"env\",{\"1\":{\"200\":2,\"201\":2,\"765\":2,\"766\":2,\"951\":2,\"952\":2,\"1152\":2,\"1153\":2}}],[\"enabled\",{\"1\":{\"176\":1,\"389\":1,\"557\":1,\"743\":1,\"929\":1,\"1128\":1}}],[\"enabletransactionmanagement\",{\"1\":{\"64\":2}}],[\"entitymanager\",{\"1\":{\"268\":11,\"433\":11,\"618\":11,\"803\":11,\"997\":11,\"1214\":11}}],[\"entity\",{\"1\":{\"138\":2,\"139\":2,\"140\":2,\"141\":2,\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"147\":2,\"186\":15,\"268\":10,\"367\":2,\"368\":2,\"369\":2,\"370\":2,\"371\":2,\"372\":2,\"373\":2,\"374\":2,\"376\":2,\"399\":15,\"433\":10,\"535\":2,\"536\":2,\"537\":2,\"538\":2,\"539\":2,\"540\":2,\"541\":2,\"542\":2,\"544\":2,\"567\":15,\"618\":10,\"721\":2,\"722\":2,\"723\":2,\"724\":2,\"725\":2,\"726\":2,\"727\":2,\"728\":2,\"730\":2,\"753\":15,\"803\":10,\"907\":2,\"908\":2,\"909\":2,\"910\":2,\"911\":2,\"912\":2,\"913\":2,\"914\":2,\"916\":2,\"939\":15,\"997\":10,\"1103\":2,\"1104\":2,\"1105\":2,\"1106\":2,\"1107\":2,\"1108\":2,\"1109\":2,\"1110\":2,\"1112\":2,\"1138\":15,\"1214\":10}}],[\"entfrm\",{\"1\":{\"2\":2}}],[\"else\",{\"1\":{\"55\":1,\"173\":1,\"229\":1,\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1185\":1,\"1199\":1}}],[\"easy\",{\"0\":{\"287\":1,\"461\":1,\"646\":1,\"831\":1,\"1025\":1,\"1251\":1},\"1\":{\"16\":1,\"287\":2,\"461\":2,\"463\":1,\"646\":2,\"648\":1,\"831\":2,\"833\":1,\"1025\":2,\"1027\":1,\"1251\":2,\"1291\":1,\"1341\":1}}],[\"暗影\",{\"1\":{\"2\":1}}],[\"雨巷\",{\"1\":{\"2\":1}}],[\"政务系统\",{\"1\":{\"2\":1}}],[\"智慧政务\",{\"1\":{\"2\":1}}],[\"智慧燃气平台\",{\"1\":{\"2\":2}}],[\"湖北建科工程\",{\"1\":{\"2\":1}}],[\"图灵谷\",{\"1\":{\"2\":1}}],[\"海狼oa系统\",{\"1\":{\"2\":2}}],[\"某某公司\",{\"1\":{\"2\":1}}],[\"time\",{\"1\":{\"300\":2,\"301\":2,\"302\":2,\"303\":2,\"304\":2,\"305\":2,\"306\":2,\"475\":2,\"476\":2,\"477\":2,\"478\":2,\"479\":2,\"480\":2,\"481\":2,\"660\":2,\"661\":2,\"662\":2,\"663\":2,\"664\":2,\"665\":2,\"666\":2,\"846\":2,\"847\":2,\"848\":2,\"849\":2,\"850\":2,\"851\":2,\"852\":2,\"1040\":2,\"1041\":2,\"1042\":2,\"1043\":2,\"1044\":2,\"1045\":2,\"1046\":2,\"1264\":2,\"1265\":2,\"1266\":2,\"1267\":2,\"1268\":2,\"1269\":2,\"1270\":2}}],[\"tirion\",{\"1\":{\"25\":1}}],[\"tableinfohelper\",{\"1\":{\"309\":2,\"310\":1,\"484\":2,\"485\":1,\"669\":2,\"670\":1,\"855\":2,\"856\":1,\"1049\":2,\"1050\":1,\"1273\":2,\"1274\":1}}],[\"tableinfo\",{\"1\":{\"309\":7,\"310\":3,\"484\":7,\"485\":3,\"669\":7,\"670\":3,\"855\":7,\"856\":3,\"1049\":7,\"1050\":3,\"1273\":7,\"1274\":3}}],[\"tablename\",{\"1\":{\"309\":6,\"310\":2,\"484\":6,\"485\":2,\"669\":6,\"670\":2,\"855\":6,\"856\":2,\"1049\":6,\"1050\":2,\"1273\":6,\"1274\":2}}],[\"tabs页签\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"target\",{\"1\":{\"301\":2,\"476\":2,\"580\":1,\"581\":1,\"661\":2,\"847\":2,\"1041\":2,\"1265\":2}}],[\"task表的id\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"taskmapper\",{\"1\":{\"267\":2,\"269\":1,\"432\":2,\"434\":1,\"617\":2,\"619\":1,\"802\":2,\"804\":1,\"996\":2,\"998\":1,\"1213\":2,\"1215\":1}}],[\"task\",{\"1\":{\"248\":3,\"271\":1,\"298\":2,\"301\":1,\"309\":2,\"317\":3,\"420\":3,\"473\":2,\"476\":1,\"484\":2,\"605\":3,\"658\":2,\"661\":1,\"669\":2,\"790\":3,\"844\":2,\"847\":1,\"855\":2,\"984\":3,\"1038\":2,\"1041\":1,\"1049\":2,\"1200\":3,\"1217\":1,\"1262\":2,\"1265\":1,\"1273\":2,\"1281\":3}}],[\"tasks\",{\"1\":{\"248\":2,\"420\":2,\"605\":2,\"790\":2,\"984\":2,\"1200\":2}}],[\"taskserviceimpl\",{\"1\":{\"271\":1,\"1217\":1}}],[\"taskservice\",{\"1\":{\"183\":1,\"235\":12,\"396\":1,\"564\":1,\"750\":1,\"936\":1,\"1135\":1}}],[\"taskservice待办任务接口\",{\"0\":{\"125\":1,\"354\":1,\"522\":1,\"708\":1,\"894\":1,\"1090\":1}}],[\"taskid\",{\"1\":{\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"183\":1,\"355\":1,\"356\":1,\"357\":2,\"358\":2,\"359\":2,\"360\":2,\"396\":1,\"523\":1,\"524\":1,\"525\":2,\"526\":2,\"527\":2,\"528\":2,\"564\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"750\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"936\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1135\":1}}],[\"threadlocal<>\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"threadlocal<string>\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"threadlocal\",{\"1\":{\"309\":4,\"310\":3,\"484\":4,\"485\":3,\"669\":4,\"670\":3,\"855\":4,\"856\":3,\"1049\":4,\"1050\":3,\"1273\":4,\"1274\":3}}],[\"throw\",{\"1\":{\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"975\":2,\"1189\":2}}],[\"throws\",{\"1\":{\"55\":1,\"196\":1,\"289\":1,\"290\":1,\"292\":2,\"465\":1,\"466\":1,\"468\":2,\"575\":1,\"650\":1,\"651\":1,\"653\":2,\"761\":1,\"836\":1,\"837\":1,\"839\":2,\"947\":1,\"1030\":1,\"1031\":1,\"1033\":2,\"1148\":1,\"1253\":1,\"1254\":1,\"1256\":2,\"1294\":1,\"1295\":1,\"1297\":2,\"1310\":1,\"1321\":1,\"1332\":1,\"1344\":1,\"1345\":1,\"1347\":2}}],[\"this\",{\"1\":{\"200\":4,\"580\":4,\"765\":4,\"951\":4,\"1152\":4}}],[\"t\",{\"1\":{\"168\":1,\"218\":1,\"256\":1,\"329\":1,\"1174\":1}}],[\"text\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"template>\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"tenantinterceptor\",{\"1\":{\"309\":3,\"484\":3,\"669\":3,\"855\":3,\"1049\":3,\"1273\":3}}],[\"tenantlineinnerinterceptor\",{\"1\":{\"309\":2,\"310\":4,\"484\":2,\"485\":4,\"669\":2,\"670\":4,\"855\":2,\"856\":4,\"1049\":2,\"1050\":4,\"1273\":2,\"1274\":4}}],[\"tenantlinehandler\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"tenanthandler\",{\"1\":{\"177\":3,\"180\":2,\"313\":2,\"314\":1,\"390\":3,\"393\":2,\"488\":2,\"489\":1,\"558\":3,\"561\":2,\"673\":2,\"674\":1,\"744\":3,\"747\":2,\"859\":2,\"860\":1,\"930\":3,\"933\":2,\"1053\":2,\"1054\":1,\"1129\":3,\"1132\":2,\"1277\":2,\"1278\":1}}],[\"tenant\",{\"1\":{\"176\":1,\"179\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"309\":3,\"310\":2,\"312\":1,\"389\":1,\"392\":1,\"475\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"480\":1,\"481\":1,\"484\":3,\"485\":2,\"487\":1,\"557\":1,\"560\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"669\":3,\"670\":2,\"672\":1,\"743\":1,\"746\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"855\":3,\"856\":2,\"858\":1,\"929\":1,\"932\":1,\"1040\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1045\":1,\"1046\":1,\"1049\":3,\"1050\":2,\"1052\":1,\"1128\":1,\"1131\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1273\":3,\"1274\":2,\"1276\":1}}],[\"termination\",{\"1\":{\"120\":1,\"127\":1,\"350\":1,\"356\":1,\"518\":1,\"524\":1,\"704\":1,\"710\":1,\"890\":1,\"896\":1,\"1085\":1,\"1092\":1}}],[\"testvariable\",{\"1\":{\"317\":1,\"1281\":1}}],[\"test模块的测类\",{\"1\":{\"288\":1,\"464\":1,\"649\":1,\"835\":1,\"1029\":1,\"1252\":1}}],[\"test项目中\",{\"1\":{\"288\":1,\"464\":1,\"649\":1,\"835\":1,\"1029\":1,\"1252\":1}}],[\"testleavemap\",{\"1\":{\"315\":1,\"490\":1,\"675\":1,\"861\":1,\"1055\":1,\"1279\":1}}],[\"testleavemapper\",{\"1\":{\"247\":5,\"419\":4,\"604\":4,\"789\":4,\"983\":4,\"1199\":5}}],[\"testleaveserviceimpl\",{\"1\":{\"247\":1,\"1199\":1}}],[\"testleave\",{\"1\":{\"166\":5,\"182\":4,\"183\":1,\"247\":18,\"315\":7,\"323\":1,\"326\":1,\"395\":4,\"396\":1,\"406\":5,\"419\":16,\"490\":7,\"496\":1,\"499\":1,\"563\":4,\"564\":1,\"591\":5,\"604\":16,\"675\":7,\"681\":1,\"684\":1,\"749\":4,\"750\":1,\"776\":5,\"789\":16,\"861\":7,\"867\":1,\"870\":1,\"935\":4,\"936\":1,\"970\":5,\"983\":16,\"1055\":7,\"1061\":1,\"1064\":1,\"1125\":5,\"1134\":4,\"1135\":1,\"1171\":5,\"1199\":18,\"1279\":7,\"1287\":1,\"1290\":1}}],[\"test\",{\"1\":{\"2\":1,\"179\":2,\"312\":1,\"317\":1,\"392\":2,\"487\":1,\"560\":2,\"672\":1,\"746\":2,\"858\":1,\"932\":2,\"1052\":1,\"1131\":2,\"1276\":1,\"1281\":1}}],[\"tran\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"transfer\",{\"1\":{\"128\":1,\"235\":3,\"274\":1,\"357\":1,\"446\":1,\"525\":1,\"631\":1,\"711\":1,\"816\":1,\"897\":1,\"1010\":1,\"1093\":1,\"1230\":1,\"1237\":1}}],[\"transactional\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"transaction\",{\"1\":{\"64\":1,\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"try\",{\"1\":{\"216\":1,\"237\":2,\"411\":2,\"596\":2,\"781\":2,\"967\":1,\"975\":2,\"1168\":1,\"1189\":2}}],[\"treefundto<>\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"treefundto<sysdept>\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"treefundto\",{\"1\":{\"208\":2,\"588\":2,\"773\":2,\"959\":2,\"1160\":2}}],[\"trim\",{\"1\":{\"172\":2,\"173\":3,\"228\":2,\"229\":3,\"1184\":2,\"1185\":3}}],[\"true\",{\"1\":{\"62\":3,\"64\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"171\":1,\"176\":4,\"179\":3,\"225\":1,\"227\":1,\"260\":1,\"265\":1,\"309\":1,\"310\":1,\"361\":1,\"389\":3,\"392\":3,\"430\":1,\"484\":1,\"485\":1,\"529\":1,\"557\":4,\"560\":3,\"580\":1,\"581\":1,\"615\":1,\"669\":1,\"670\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"743\":4,\"746\":3,\"800\":1,\"855\":1,\"856\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"929\":4,\"932\":3,\"994\":1,\"1049\":1,\"1050\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1128\":4,\"1131\":3,\"1181\":1,\"1183\":1,\"1211\":1,\"1273\":1,\"1274\":1}}],[\"ttc\",{\"1\":{\"60\":2}}],[\"typed\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"type=\",{\"1\":{\"268\":1,\"433\":1,\"618\":1,\"803\":1,\"997\":1,\"1214\":1}}],[\"type和listener\",{\"1\":{\"241\":1,\"1193\":1}}],[\"typefactory\",{\"1\":{\"237\":1,\"411\":1,\"596\":1,\"781\":1,\"975\":1,\"1189\":1}}],[\"type\",{\"1\":{\"55\":2,\"57\":1,\"62\":1,\"82\":1,\"176\":2,\"241\":1,\"300\":1,\"301\":3,\"302\":1,\"303\":3,\"304\":3,\"305\":1,\"306\":1,\"389\":2,\"475\":1,\"476\":3,\"477\":1,\"478\":3,\"479\":3,\"480\":1,\"481\":1,\"557\":2,\"660\":1,\"661\":3,\"662\":1,\"663\":3,\"664\":3,\"665\":1,\"666\":1,\"743\":2,\"846\":1,\"847\":3,\"848\":1,\"849\":3,\"850\":3,\"851\":1,\"852\":1,\"929\":2,\"1040\":1,\"1041\":3,\"1042\":1,\"1043\":3,\"1044\":3,\"1045\":1,\"1046\":1,\"1128\":2,\"1193\":1,\"1264\":1,\"1265\":3,\"1266\":1,\"1267\":3,\"1268\":3,\"1269\":1,\"1270\":1}}],[\"tojsonstring\",{\"1\":{\"254\":1,\"425\":1,\"610\":1,\"795\":1,\"989\":1,\"1206\":1}}],[\"tolist\",{\"1\":{\"246\":1,\"272\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1,\"1218\":1}}],[\"total是业务数据总数\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"total\",{\"1\":{\"208\":6,\"588\":6,\"773\":6,\"959\":6,\"1160\":6}}],[\"token是业务系统的token\",{\"1\":{\"209\":1,\"960\":1,\"1161\":1}}],[\"token案例\",{\"1\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1}}],[\"token\",{\"0\":{\"198\":1,\"577\":1,\"763\":1,\"949\":1,\"1150\":1},\"1\":{\"176\":1,\"209\":3,\"929\":1,\"960\":3,\"1128\":1,\"1161\":3}}],[\"tostring\",{\"1\":{\"55\":1,\"182\":1,\"208\":3,\"246\":2,\"292\":3,\"315\":1,\"395\":1,\"418\":2,\"468\":3,\"490\":1,\"563\":1,\"588\":3,\"603\":2,\"653\":3,\"675\":1,\"749\":1,\"773\":3,\"788\":2,\"839\":3,\"861\":1,\"935\":1,\"959\":3,\"982\":2,\"1033\":3,\"1055\":1,\"1134\":1,\"1160\":3,\"1198\":2,\"1256\":3,\"1279\":1,\"1297\":2,\"1347\":2}}],[\"top\",{\"1\":{\"2\":1,\"17\":1,\"1300\":1,\"1306\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1350\":1,\"1356\":1}}],[\"header\",{\"1\":{\"216\":4,\"967\":4,\"1168\":4}}],[\"height=\",{\"1\":{\"201\":1,\"581\":1,\"766\":1,\"952\":1,\"1153\":1}}],[\"height\",{\"1\":{\"200\":4,\"201\":1,\"580\":4,\"581\":1,\"765\":4,\"766\":1,\"951\":4,\"952\":1,\"1152\":4,\"1153\":1}}],[\"hikaridatasource\",{\"1\":{\"310\":1,\"485\":1,\"670\":1,\"856\":1,\"1050\":1,\"1274\":1}}],[\"his\",{\"1\":{\"298\":1,\"309\":1,\"473\":1,\"484\":1,\"658\":1,\"669\":1,\"844\":1,\"855\":1,\"1038\":1,\"1049\":1,\"1262\":1,\"1273\":1}}],[\"hisstatus\",{\"1\":{\"181\":1,\"182\":1,\"183\":2,\"394\":1,\"395\":1,\"396\":2,\"562\":1,\"563\":1,\"564\":2,\"748\":1,\"749\":1,\"750\":2,\"934\":1,\"935\":1,\"936\":2,\"1133\":1,\"1134\":1,\"1135\":2}}],[\"hibernate\",{\"1\":{\"179\":3,\"392\":3,\"560\":3,\"746\":3,\"932\":3,\"1131\":3}}],[\"hbm2ddl\",{\"1\":{\"179\":1,\"392\":1,\"560\":1,\"746\":1,\"932\":1,\"1131\":1}}],[\"hashmap\",{\"1\":{\"254\":3,\"425\":3,\"610\":3,\"795\":3,\"989\":3,\"1206\":3}}],[\"hashmap<>\",{\"1\":{\"166\":1,\"171\":1,\"227\":1,\"237\":1,\"315\":1,\"317\":1,\"323\":1,\"326\":1,\"406\":1,\"411\":1,\"490\":1,\"496\":1,\"499\":1,\"591\":1,\"596\":1,\"675\":1,\"681\":1,\"684\":1,\"776\":1,\"781\":1,\"861\":1,\"867\":1,\"870\":1,\"970\":1,\"975\":1,\"1055\":1,\"1061\":1,\"1064\":1,\"1125\":1,\"1171\":1,\"1183\":1,\"1189\":1,\"1279\":1,\"1281\":1,\"1287\":1,\"1290\":1}}],[\"handle\",{\"1\":{\"176\":2,\"179\":2,\"189\":1,\"198\":1,\"312\":1,\"389\":2,\"392\":2,\"402\":1,\"487\":1,\"557\":2,\"560\":2,\"570\":1,\"577\":1,\"672\":1,\"743\":2,\"746\":2,\"756\":1,\"763\":1,\"858\":1,\"929\":2,\"932\":2,\"942\":1,\"949\":1,\"1052\":1,\"1128\":2,\"1131\":2,\"1141\":1,\"1150\":1,\"1276\":1}}],[\"handledepute方法中删除受托人传参数错误\",{\"1\":{\"82\":1}}],[\"handler5\",{\"1\":{\"317\":2,\"1281\":2}}],[\"handler4\",{\"1\":{\"317\":2,\"1281\":2}}],[\"handler3\",{\"1\":{\"317\":2,\"1281\":2}}],[\"handler2是方法入参变量\",{\"1\":{\"325\":1,\"498\":1,\"683\":1,\"869\":1,\"1063\":1,\"1289\":1}}],[\"handler2\",{\"1\":{\"317\":2,\"318\":1,\"325\":1,\"326\":4,\"492\":1,\"498\":2,\"499\":4,\"677\":1,\"683\":2,\"684\":4,\"863\":1,\"869\":2,\"870\":4,\"1057\":1,\"1063\":2,\"1064\":4,\"1281\":2,\"1282\":1,\"1289\":1,\"1290\":4}}],[\"handler1是需要被流程变量中替换的标识\",{\"1\":{\"322\":1,\"495\":1,\"680\":1,\"866\":1,\"1060\":1,\"1286\":1}}],[\"handler1\",{\"1\":{\"317\":2,\"318\":1,\"320\":1,\"322\":1,\"323\":1,\"492\":1,\"493\":1,\"495\":2,\"496\":1,\"677\":1,\"678\":1,\"680\":2,\"681\":1,\"863\":1,\"864\":1,\"866\":2,\"867\":1,\"1057\":1,\"1058\":1,\"1060\":2,\"1061\":1,\"1281\":2,\"1282\":1,\"1284\":1,\"1286\":1,\"1287\":1}}],[\"handlerfundto<sysuser>\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"handlerfundto<sysdept>\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"handlerfundto<sysrole>\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"handlerfundto<>\",{\"1\":{\"208\":3,\"588\":3,\"773\":3,\"959\":3,\"1160\":3}}],[\"handlerfundto\",{\"1\":{\"208\":6,\"588\":6,\"773\":6,\"959\":6,\"1160\":6}}],[\"handlerselectvo\",{\"1\":{\"208\":8,\"588\":8,\"773\":8,\"959\":8,\"1160\":8}}],[\"handlerselectserviceimpl\",{\"1\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"handlerselectserviceimpl实现类\",{\"0\":{\"208\":1,\"588\":1,\"773\":1,\"959\":1,\"1160\":1}}],[\"handlerselectservice\",{\"1\":{\"207\":1,\"208\":1,\"587\":1,\"588\":1,\"772\":1,\"773\":1,\"958\":1,\"959\":1,\"1159\":1,\"1160\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"handlerselectservice接口\",{\"0\":{\"207\":1,\"587\":1,\"772\":1,\"958\":1,\"1159\":1,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"handlerquery\",{\"1\":{\"207\":1,\"208\":4,\"587\":1,\"588\":4,\"772\":1,\"773\":4,\"958\":1,\"959\":4,\"1159\":1,\"1160\":4,\"1315\":1,\"1326\":1,\"1337\":1}}],[\"handler\",{\"1\":{\"12\":1,\"118\":1,\"119\":1,\"120\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"176\":2,\"179\":2,\"182\":1,\"189\":1,\"235\":4,\"303\":2,\"312\":1,\"315\":1,\"348\":1,\"349\":1,\"350\":1,\"355\":1,\"356\":1,\"389\":2,\"392\":2,\"395\":1,\"402\":1,\"478\":2,\"487\":1,\"490\":1,\"516\":1,\"517\":1,\"518\":1,\"523\":1,\"524\":1,\"557\":2,\"560\":2,\"563\":1,\"570\":1,\"663\":2,\"672\":1,\"675\":1,\"702\":1,\"703\":1,\"704\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"743\":2,\"746\":2,\"749\":1,\"756\":1,\"849\":2,\"858\":1,\"861\":1,\"888\":1,\"889\":1,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"929\":2,\"932\":2,\"935\":1,\"942\":1,\"1043\":2,\"1052\":1,\"1055\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1128\":2,\"1131\":2,\"1134\":1,\"1141\":1,\"1267\":2,\"1276\":1,\"1279\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1}}],[\"huangjian\",{\"1\":{\"74\":2,\"1304\":2,\"1354\":2}}],[\"htm\",{\"1\":{\"216\":1,\"967\":1,\"1168\":1}}],[\"html\",{\"1\":{\"64\":3,\"76\":1,\"200\":1,\"201\":1,\"203\":3,\"216\":7,\"765\":1,\"766\":1,\"768\":3,\"951\":1,\"952\":1,\"954\":3,\"967\":7,\"1152\":1,\"1153\":1,\"1155\":3,\"1168\":7}}],[\"http\",{\"1\":{\"13\":1,\"17\":1,\"216\":2,\"579\":1,\"967\":2,\"1168\":2,\"1300\":1,\"1301\":1,\"1306\":1,\"1307\":1,\"1311\":1,\"1317\":1,\"1318\":1,\"1328\":1,\"1329\":1,\"1339\":1,\"1340\":1,\"1350\":1,\"1351\":1,\"1356\":1,\"1357\":1}}],[\"httpsecurity\",{\"1\":{\"196\":3,\"575\":3,\"761\":3,\"947\":3,\"1148\":3,\"1310\":3,\"1321\":3,\"1332\":3}}],[\"https\",{\"1\":{\"2\":1,\"23\":1,\"41\":4,\"64\":3,\"1292\":1,\"1342\":1}}],[\"hh\",{\"0\":{\"64\":1},\"1\":{\"37\":1,\"41\":2,\"208\":3,\"289\":2,\"441\":1,\"465\":2,\"588\":3,\"626\":1,\"650\":2,\"773\":3,\"811\":1,\"836\":2,\"959\":3,\"1005\":1,\"1030\":2,\"1160\":3,\"1225\":1,\"1253\":2,\"1294\":2,\"1344\":2}}],[\"hhzai\",{\"1\":{\"17\":1,\"1300\":1,\"1306\":1,\"1317\":1,\"1328\":1,\"1339\":1,\"1350\":1,\"1356\":1}}],[\"host\",{\"1\":{\"216\":3,\"967\":3,\"1168\":3}}],[\"houhou\",{\"1\":{\"21\":1,\"27\":1,\"29\":1}}],[\"holly\",{\"1\":{\"2\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":3}}],[\"h5ve团队\",{\"1\":{\"2\":1}}],[\"b任务办理时传入变量handler1=100\",{\"1\":{\"493\":1,\"678\":1,\"864\":1,\"1058\":1}}],[\"b任务或者之前任务办理时传入变量handler1=100\",{\"1\":{\"320\":1,\"1284\":1}}],[\"by\",{\"1\":{\"302\":1,\"306\":2,\"477\":1,\"481\":2,\"662\":1,\"666\":2,\"848\":1,\"852\":2,\"1042\":1,\"1046\":2,\"1266\":1,\"1270\":2}}],[\"break\",{\"1\":{\"200\":1,\"201\":1,\"580\":1,\"581\":1,\"765\":1,\"766\":1,\"951\":1,\"952\":1,\"1152\":1,\"1153\":1}}],[\"b\",{\"1\":{\"166\":2,\"406\":2,\"591\":2,\"776\":2,\"970\":2,\"1125\":2,\"1171\":2}}],[\"boolean\",{\"1\":{\"166\":2,\"168\":1,\"171\":1,\"172\":2,\"173\":1,\"203\":1,\"218\":1,\"225\":1,\"227\":1,\"228\":2,\"229\":1,\"256\":1,\"260\":1,\"309\":2,\"310\":1,\"329\":1,\"406\":2,\"484\":2,\"485\":1,\"583\":1,\"591\":2,\"669\":2,\"670\":1,\"768\":1,\"776\":2,\"855\":2,\"856\":1,\"954\":1,\"970\":2,\"1049\":2,\"1050\":1,\"1125\":2,\"1155\":1,\"1171\":2,\"1174\":1,\"1181\":1,\"1183\":1,\"1184\":2,\"1185\":1,\"1273\":2,\"1274\":1}}],[\"boot或者solon\",{\"1\":{\"279\":1,\"453\":1,\"638\":1,\"823\":1,\"1017\":1,\"1243\":1}}],[\"boot\",{\"1\":{\"2\":2,\"41\":2,\"64\":1}}],[\"block\",{\"1\":{\"64\":1}}],[\"blockattackinnerinterceptor\",{\"1\":{\"64\":5}}],[\"banner\",{\"1\":{\"176\":1,\"179\":1,\"264\":1,\"389\":1,\"392\":1,\"429\":1,\"557\":1,\"560\":1,\"614\":1,\"743\":1,\"746\":1,\"799\":1,\"929\":1,\"932\":1,\"993\":1,\"1128\":1,\"1131\":1,\"1210\":1}}],[\"banmoon\",{\"1\":{\"2\":2}}],[\"batchsize\",{\"1\":{\"150\":2,\"379\":2,\"547\":2,\"733\":2,\"919\":2,\"1115\":2}}],[\"base\",{\"1\":{\"76\":2,\"200\":2,\"201\":2,\"765\":2,\"766\":2,\"951\":2,\"952\":2,\"1152\":2,\"1153\":2}}],[\"baomidou\",{\"1\":{\"64\":8}}],[\"baomidou<\",{\"1\":{\"64\":1}}],[\"business\",{\"1\":{\"302\":1,\"477\":1,\"662\":1,\"848\":1,\"1042\":1,\"1266\":1}}],[\"businessdata\",{\"1\":{\"247\":1,\"419\":1,\"604\":1,\"789\":1,\"983\":1,\"1199\":1}}],[\"businesstype\",{\"1\":{\"247\":3,\"1199\":3}}],[\"businessid\",{\"1\":{\"118\":1,\"247\":2,\"348\":1,\"516\":1,\"702\":1,\"888\":1,\"1083\":1,\"1199\":2}}],[\"build\",{\"1\":{\"55\":1,\"166\":1,\"182\":1,\"196\":1,\"315\":1,\"395\":1,\"406\":1,\"490\":1,\"563\":1,\"575\":1,\"591\":1,\"675\":1,\"749\":1,\"761\":1,\"776\":1,\"861\":1,\"935\":1,\"947\":1,\"970\":1,\"1055\":1,\"1125\":1,\"1134\":1,\"1148\":1,\"1171\":1,\"1279\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"builder\",{\"1\":{\"55\":4}}],[\"bug\",{\"1\":{\"48\":1,\"75\":1,\"82\":1}}],[\"bean注解注入到容器\",{\"1\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"bean配置方式\",{\"0\":{\"177\":1,\"180\":1,\"190\":1,\"313\":1,\"390\":1,\"393\":1,\"403\":1,\"488\":1,\"558\":1,\"561\":1,\"571\":1,\"673\":1,\"744\":1,\"747\":1,\"757\":1,\"859\":1,\"930\":1,\"933\":1,\"943\":1,\"1053\":1,\"1129\":1,\"1132\":1,\"1142\":1,\"1277\":1}}],[\"bean\",{\"1\":{\"55\":2,\"62\":1,\"64\":2,\"177\":5,\"179\":1,\"180\":4,\"190\":1,\"196\":1,\"197\":1,\"264\":1,\"272\":1,\"309\":1,\"310\":2,\"312\":1,\"313\":2,\"314\":1,\"390\":5,\"392\":1,\"393\":4,\"403\":1,\"429\":1,\"484\":1,\"485\":2,\"487\":1,\"488\":2,\"489\":1,\"558\":5,\"560\":1,\"561\":4,\"571\":1,\"575\":1,\"576\":1,\"614\":1,\"669\":1,\"670\":2,\"672\":1,\"673\":2,\"674\":1,\"744\":5,\"746\":1,\"747\":4,\"757\":1,\"761\":1,\"762\":1,\"799\":1,\"855\":1,\"856\":2,\"858\":1,\"859\":2,\"860\":1,\"930\":5,\"932\":1,\"933\":4,\"943\":1,\"947\":1,\"948\":1,\"993\":1,\"1049\":1,\"1050\":2,\"1052\":1,\"1053\":2,\"1054\":1,\"1129\":5,\"1131\":1,\"1132\":4,\"1142\":1,\"1148\":1,\"1149\":1,\"1210\":1,\"1218\":1,\"1273\":1,\"1274\":2,\"1276\":1,\"1277\":2,\"1278\":1,\"1310\":1,\"1321\":1,\"1332\":1}}],[\"bit\",{\"1\":{\"300\":2,\"301\":2,\"302\":2,\"303\":1,\"304\":2,\"305\":1,\"475\":2,\"476\":2,\"477\":2,\"478\":1,\"479\":2,\"480\":1,\"660\":2,\"661\":2,\"662\":2,\"663\":1,\"664\":2,\"665\":1,\"846\":2,\"847\":2,\"848\":2,\"849\":1,\"850\":2,\"851\":1,\"1040\":2,\"1041\":2,\"1042\":2,\"1043\":1,\"1044\":2,\"1045\":1,\"1264\":2,\"1265\":2,\"1266\":2,\"1267\":1,\"1268\":2,\"1269\":1}}],[\"bigint\",{\"1\":{\"300\":1,\"301\":4,\"302\":2,\"303\":2,\"304\":2,\"305\":3,\"306\":2,\"309\":1,\"310\":1,\"475\":1,\"476\":4,\"477\":2,\"478\":2,\"479\":2,\"480\":3,\"481\":2,\"484\":1,\"485\":1,\"660\":1,\"661\":4,\"662\":2,\"663\":2,\"664\":2,\"665\":3,\"666\":2,\"669\":1,\"670\":1,\"846\":1,\"847\":4,\"848\":2,\"849\":2,\"850\":2,\"851\":3,\"852\":2,\"855\":1,\"856\":1,\"1040\":1,\"1041\":4,\"1042\":2,\"1043\":2,\"1044\":2,\"1045\":3,\"1046\":2,\"1049\":1,\"1050\":1,\"1264\":1,\"1265\":4,\"1266\":2,\"1267\":2,\"1268\":2,\"1269\":3,\"1270\":2,\"1273\":1,\"1274\":1}}],[\"biginteger\",{\"1\":{\"55\":4}}],[\"bigdecimal\",{\"1\":{\"166\":4,\"406\":4,\"591\":4,\"776\":4,\"970\":4,\"1125\":4,\"1171\":4}}],[\"bignumberserializer\",{\"1\":{\"55\":10}}],[\"bill\",{\"1\":{\"41\":1}}],[\"bilibili\",{\"1\":{\"23\":1}}],[\"bv1ci42117pk\",{\"1\":{\"23\":1}}],[\"半月无霜个人项目\",{\"1\":{\"2\":1}}],[\"半月无霜\",{\"1\":{\"2\":1}}],[\"仿钉钉界面的开源工作流平台\",{\"1\":{\"2\":1}}],[\"开启后默认为0\",{\"1\":{\"176\":1,\"179\":1,\"265\":1,\"389\":1,\"392\":1,\"430\":1,\"557\":1,\"560\":1,\"615\":1,\"743\":1,\"746\":1,\"800\":1,\"929\":1,\"932\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1211\":1}}],[\"开启后默认为2\",{\"1\":{\"176\":1,\"179\":1,\"265\":1,\"389\":1,\"392\":1,\"430\":1,\"557\":1,\"560\":1,\"615\":1,\"743\":1,\"746\":1,\"800\":1,\"929\":1,\"932\":1,\"994\":1,\"1128\":1,\"1131\":1,\"1211\":1}}],[\"开启流程后的状态\",{\"1\":{\"276\":1,\"448\":1,\"633\":1,\"818\":1,\"1012\":1,\"1232\":1,\"1239\":1}}],[\"开启流程是传入租户id\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"开启流程\",{\"0\":{\"118\":1,\"182\":1,\"291\":1,\"348\":1,\"395\":1,\"467\":1,\"516\":1,\"563\":1,\"652\":1,\"702\":1,\"749\":1,\"838\":1,\"888\":1,\"935\":1,\"1032\":1,\"1083\":1,\"1134\":1,\"1255\":1,\"1296\":1,\"1346\":1}}],[\"开启流程可以不默认执行到中间节点\",{\"1\":{\"72\":1}}],[\"开启流程会直接执行到开始节点后一个节点\",{\"1\":{\"37\":1,\"441\":1,\"626\":1,\"811\":1,\"1005\":1,\"1225\":1}}],[\"开启流程实例\",{\"0\":{\"37\":1,\"441\":1,\"626\":1,\"811\":1,\"1005\":1,\"1225\":1},\"1\":{\"118\":1,\"348\":1,\"516\":1,\"702\":1,\"888\":1,\"1083\":1}}],[\"开始时间\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"开始时间记录代表任务的创建时间\",{\"1\":{\"84\":1}}],[\"开始学习前\",{\"1\":{\"280\":1,\"1244\":1}}],[\"开始节点类型\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"开始节点名称\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"开始节点编码\",{\"1\":{\"301\":1,\"476\":1,\"661\":1,\"847\":1,\"1041\":1,\"1265\":1}}],[\"开始节点必须有且只有一个跳转条件\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"开始节点和结束节点必须有\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"开始节点\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"开始节点的暂存\",{\"1\":{\"273\":1,\"452\":1,\"637\":1,\"822\":1,\"1016\":1,\"1236\":1}}],[\"开始节点也能记录到历史任务记录中\",{\"1\":{\"90\":1}}],[\"开始监听器实现类例子\",{\"0\":{\"246\":1,\"418\":1,\"603\":1,\"788\":1,\"982\":1,\"1198\":1}}],[\"开始监听器\",{\"1\":{\"240\":1,\"245\":1,\"253\":1,\"413\":1,\"417\":1,\"598\":1,\"602\":1,\"783\":1,\"787\":1,\"977\":1,\"981\":1,\"1192\":1,\"1197\":1,\"1205\":1}}],[\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",{\"1\":{\"87\":1}}],[\"开发中计划\",{\"0\":{\"71\":1}}],[\"开源协议\",{\"0\":{\"13\":1}}],[\"开源工作流\",{\"1\":{\"2\":1}}],[\"开放生态\",{\"1\":{\"2\":2}}],[\"武汉数演科技有限公司\",{\"1\":{\"2\":1}}],[\"行内人员使用\",{\"1\":{\"2\":1}}],[\"外围管理平台\",{\"1\":{\"2\":1}}],[\"抚顺银行\",{\"1\":{\"2\":1}}],[\"陕西物联达智能科技有限公司\",{\"1\":{\"2\":1}}],[\"签收等功能\",{\"1\":{\"2\":1}}],[\"跟踪\",{\"1\":{\"2\":1}}],[\"派车\",{\"1\":{\"2\":1}}],[\"融运力tms是基于移动互联网的面向货主侧需求的订单履约类的tms系统\",{\"1\":{\"2\":1}}],[\"融运力tms\",{\"1\":{\"2\":1}}],[\"山东融佑信息科技有限公司\",{\"1\":{\"2\":1}}],[\"郑州如阳科技有限公司\",{\"1\":{\"2\":1}}],[\"端到端全生命周期数字化安全与质量管理\",{\"1\":{\"2\":1}}],[\"质量和安全为一体\",{\"1\":{\"2\":1}}],[\"质量管理系统\",{\"1\":{\"2\":1}}],[\"集团军要对某个区域进行长期的军事演练\",{\"1\":{\"297\":1,\"472\":1,\"657\":1,\"843\":1,\"1037\":1,\"1261\":1}}],[\"集合数据\",{\"1\":{\"151\":1,\"380\":1,\"548\":1,\"734\":1,\"920\":1,\"1116\":1}}],[\"集成项目示例\",{\"0\":{\"41\":1}}],[\"集成工作流引擎\",{\"1\":{\"2\":1}}],[\"集风险\",{\"1\":{\"2\":1}}],[\"杭州三之一智联科技有限公司\",{\"1\":{\"2\":1}}],[\"中\",{\"1\":{\"495\":1,\"680\":1,\"866\":1,\"1060\":1}}],[\"中表示\",{\"1\":{\"309\":1,\"310\":1,\"484\":1,\"485\":1,\"669\":1,\"670\":1,\"855\":1,\"856\":1,\"1049\":1,\"1050\":1,\"1273\":1,\"1274\":1}}],[\"中间和网关节点必须有跳转条件\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"中间节点不可通过或者驳回到多个中间节点\",{\"1\":{\"275\":1,\"447\":1,\"632\":1,\"817\":1,\"1011\":1,\"1231\":1,\"1238\":1}}],[\"中间节点\",{\"1\":{\"274\":1,\"446\":1,\"631\":1,\"816\":1,\"1010\":1,\"1230\":1,\"1237\":1}}],[\"中间节点拆分为或签\",{\"1\":{\"79\":1}}],[\"中调用\",{\"1\":{\"271\":1,\"1217\":1}}],[\"中更新了\",{\"1\":{\"247\":1,\"1199\":1}}],[\"中的根据无法正确删除user数据\",{\"1\":{\"81\":1}}],[\"中铁四局集团全资子公司\",{\"1\":{\"2\":1}}],[\"中交武汉智行国际\",{\"1\":{\"2\":1}}],[\"极点oa智慧网络办公系统\",{\"1\":{\"2\":1}}],[\"能力开放平台\",{\"1\":{\"2\":1}}],[\"项目地址\",{\"1\":{\"295\":1,\"470\":1,\"655\":1,\"841\":1,\"1035\":1,\"1259\":1}}],[\"项目上传中央仓库\",{\"1\":{\"98\":1}}],[\"项目代码\",{\"1\":{\"27\":1}}],[\"项目管理\",{\"1\":{\"14\":1}}],[\"项目也活的更长\",{\"1\":{\"12\":1}}],[\"项目贡献者待遇\",{\"0\":{\"10\":1}}],[\"项目介绍\",{\"0\":{\"12\":1,\"1299\":1,\"1305\":1,\"1316\":1,\"1327\":1,\"1338\":1,\"1349\":1,\"1355\":1},\"1\":{\"2\":1}}],[\"项目名称\",{\"1\":{\"2\":1,\"41\":1}}],[\"个人介绍\",{\"1\":{\"25\":5}}],[\"个人\",{\"1\":{\"2\":2}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
