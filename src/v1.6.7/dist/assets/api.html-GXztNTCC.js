import{_ as a,e as i,p as d,l}from"./app-e3DKOkdu.js";const n={};function s(o,e){return l(),i("div",null,e[0]||(e[0]=[d('<h1 id="核心api" tabindex="-1"><a class="header-anchor" href="#核心api"><span>核心api</span></a></h1><h2 id="_1、defservice流程定义接口" tabindex="-1"><a class="header-anchor" href="#_1、defservice流程定义接口"><span>1、DefService流程定义接口</span></a></h2><h3 id="_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据" tabindex="-1"><a class="header-anchor" href="#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据"><span>1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据</span></a></h3><p><code>checkAndSave(definition)</code>：校验后新增</p><h3 id="_1-2、新增流程定义-并初始化流程节点和流程跳转数据" tabindex="-1"><a class="header-anchor" href="#_1-2、新增流程定义-并初始化流程节点和流程跳转数据"><span>1.2、新增流程定义，并初始化流程节点和流程跳转数据</span></a></h3><p><code>saveAndInitNode(definition)</code>：校验后新增</p><h3 id="_1-3、导入流程定义、流程节点和流程跳转数据" tabindex="-1"><a class="header-anchor" href="#_1-3、导入流程定义、流程节点和流程跳转数据"><span>1.3、导入流程定义、流程节点和流程跳转数据</span></a></h3><p><code>importXml(is)</code>：导入流程定义xml的输入流</p><h3 id="_1-4、保存流程节点和流程跳转数据" tabindex="-1"><a class="header-anchor" href="#_1-4、保存流程节点和流程跳转数据"><span>1.4、保存流程节点和流程跳转数据</span></a></h3><p><code>saveXml(def)</code>： 传入流程定义id、流程定义xml字符串</p><ul><li>id: 流程定义id [必传]</li><li>xmlString: 流程定义xml字符串 [必传]</li></ul><h3 id="_1-5、保存流程节点和流程跳转数据" tabindex="-1"><a class="header-anchor" href="#_1-5、保存流程节点和流程跳转数据"><span>1.5、保存流程节点和流程跳转数据</span></a></h3><p><code>saveXml(id, xmlString)</code>： 传入流程定义id、流程定义xml字符串</p><ul><li>id: 流程定义id</li><li>xmlString: 流程定义xml字符串</li></ul><h3 id="_1-6、导出流程定义" tabindex="-1"><a class="header-anchor" href="#_1-6、导出流程定义"><span>1.6、导出流程定义</span></a></h3><p><code>exportXml(id)</code>： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象</p><h3 id="_1-7、获取流程定义" tabindex="-1"><a class="header-anchor" href="#_1-7、获取流程定义"><span>1.7、获取流程定义</span></a></h3><p><code>xmlString(id)</code>： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串</p><h3 id="_1-8、删除" tabindex="-1"><a class="header-anchor" href="#_1-8、删除"><span>1.8、删除</span></a></h3><p><code>removeDef(ids)</code>： 删除流程定义相关数据</p><h3 id="_1-9、发布" tabindex="-1"><a class="header-anchor" href="#_1-9、发布"><span>1.9、发布</span></a></h3><p><code>publish(id)</code>： 发布流程定义</p><h3 id="_1-10、取消发布" tabindex="-1"><a class="header-anchor" href="#_1-10、取消发布"><span>1.10、取消发布</span></a></h3><p><code>unPublish(id)</code>： 取消发布流程定义</p><h3 id="_1-11、复制流程" tabindex="-1"><a class="header-anchor" href="#_1-11、复制流程"><span>1.11、复制流程</span></a></h3><p><code>copyDef(id)</code>： 复制流程定义</p><h3 id="_1-12、获取流程图" tabindex="-1"><a class="header-anchor" href="#_1-12、获取流程图"><span>1.12、获取流程图</span></a></h3><p><code>flowChart(instanceId)</code>： 获取流程图的图片流</p><h3 id="_1-13、激活流程" tabindex="-1"><a class="header-anchor" href="#_1-13、激活流程"><span>1.13、激活流程</span></a></h3><p><code>active(Long id)</code>： 激活流程</p><h3 id="_1-14、挂起流程" tabindex="-1"><a class="header-anchor" href="#_1-14、挂起流程"><span>1.14、挂起流程</span></a></h3><p><code>unActive(Long id)</code>： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转</p><h3 id="_1-15、获取流程定义" tabindex="-1"><a class="header-anchor" href="#_1-15、获取流程定义"><span>1.15、获取流程定义</span></a></h3><p><code>getAllDataDefinition(Long id)</code>： 获取流程定义全部数据(包含节点和跳转)</p><h3 id="_1-16、查询流程设计所需的数据-比如流程图渲染-导出流程定义" tabindex="-1"><a class="header-anchor" href="#_1-16、查询流程设计所需的数据-比如流程图渲染-导出流程定义"><span>1.16、查询流程设计所需的数据，比如流程图渲染，导出流程定义</span></a></h3><p><code>getAllDataDefinition(Long id)</code>： 查询流程设计所需的数据，比如流程图渲染，导出流程定义</p><h2 id="_2、insservice流程实例接口" tabindex="-1"><a class="header-anchor" href="#_2、insservice流程实例接口"><span>2、InsService流程实例接口</span></a></h2><h3 id="_2-1、开启流程" tabindex="-1"><a class="header-anchor" href="#_2-1、开启流程"><span>2.1、开启流程</span></a></h3><p><code>start(businessId, flowParams)</code>：传入业务id，开启流程实例。flowParams包含如下字段：</p><ul><li>flowCode: 流程编码 [必传]</li><li>handler: 办理人唯一标识 [建议传]</li><li>variable: 流程变量 [按需传输]</li><li>ext: 扩展字段，预留给业务系统使用 [按需传输]</li><li>flowStatus: 流程状态，自定义流程状态[按需传输]</li></ul><h3 id="_2-2、流程跳转" tabindex="-1"><a class="header-anchor" href="#_2-2、流程跳转"><span>2.2、流程跳转</span></a></h3><p><code>skipByInsId(instanceId, flowParams)</code>：传入流程实例id，流程跳转。flowParams包含如下字段：</p><ul><li>skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]</li><li>nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点，严禁任意退回选择后置节点 [按需传输]</li><li>permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]</li><li>message: 审批意见 [按需传输]</li><li>handler: 办理人唯一标识 [建议传]</li><li>variable: 流程变量 [按需传输]</li><li>flowStatus: 流程状态，自定义流程状态 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_2-3、终止流程" tabindex="-1"><a class="header-anchor" href="#_2-3、终止流程"><span>2.3、终止流程</span></a></h3><p><code>termination(instanceId, flowParams)</code>：传入流程实例id，终止流程。flowParams包含如下字段：</p><ul><li>handler: 办理人唯一标识 [建议传]</li><li>message: 审批意见 [按需传输]</li><li>flowStatus: 流程状态，自定义流程状态 [按需传输]</li><li>permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_2-4、删除流程实例" tabindex="-1"><a class="header-anchor" href="#_2-4、删除流程实例"><span>2.4、删除流程实例</span></a></h3><p><code>remove(instanceIds)</code>：根据实例ids，删除流程</p><h3 id="_2-5、激活实例" tabindex="-1"><a class="header-anchor" href="#_2-5、激活实例"><span>2.5、激活实例</span></a></h3><p><code>active(Long id)</code>： 激活实例</p><h3 id="_2-6、挂起实例" tabindex="-1"><a class="header-anchor" href="#_2-6、挂起实例"><span>2.6、挂起实例</span></a></h3><p><code>unActive(Long id)</code>： 挂起实例，流程实例挂起后，该流程实例无法继续流转</p><h3 id="_2-7、根据流程定义id集合-查询流程实例集合" tabindex="-1"><a class="header-anchor" href="#_2-7、根据流程定义id集合-查询流程实例集合"><span>2.7、根据流程定义id集合，查询流程实例集合</span></a></h3><p><code>listByDefIds(defIds)</code>：根据流程定义id集合，查询流程实例集合</p><h2 id="_3、taskservice待办任务接口" tabindex="-1"><a class="header-anchor" href="#_3、taskservice待办任务接口"><span>3、TaskService待办任务接口</span></a></h2><h3 id="_3-1、流程跳转" tabindex="-1"><a class="header-anchor" href="#_3-1、流程跳转"><span>3.1、流程跳转</span></a></h3><p><code>skip(taskId, flowParams)</code>：传入流程任务id，流程跳转。flowParams包含如下字段：</p><ul><li>skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]</li><li>nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点，严禁任意退回选择后置节点 [按需传输]</li><li>permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]</li><li>message: 审批意见 [按需传输]</li><li>handler: 办理人唯一标识 [建议传]</li><li>variable: 流程变量 [按需传输]</li><li>flowStatus: 流程状态，自定义流程状态 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_3-2、终止流程" tabindex="-1"><a class="header-anchor" href="#_3-2、终止流程"><span>3.2、终止流程</span></a></h3><p><code>termination(taskId, flowParams)</code>：传入流程任务id，终止流程。flowParams包含如下字段：</p><ul><li>message: 审批意见 [按需传输]</li><li>handler: 办理人唯一标识 [建议传]</li><li>flowStatus: 流程状态，自定义流程状态 [按需传输]</li><li>permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_3-3、转办" tabindex="-1"><a class="header-anchor" href="#_3-3、转办"><span>3.3、转办</span></a></h3><p><code>transfer(taskId, flowParams)</code>：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：</p><ul><li>handler: 当前办理人唯一标识 [必传]</li><li>permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]</li><li>addHandlers: 转办对象 [必传]</li><li>message: 审批意见 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_3-4、委派" tabindex="-1"><a class="header-anchor" href="#_3-4、委派"><span>3.4、委派</span></a></h3><p><code>depute(taskId, flowParams)</code>：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：</p><ul><li>handler: 当前办理人唯一标识 [必传]</li><li>permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]</li><li>addHandlers: 委托对象 [必传]</li><li>message: 审批意见 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_3-5、加签" tabindex="-1"><a class="header-anchor" href="#_3-5、加签"><span>3.5、加签</span></a></h3><p><code>addSignature(taskId, flowParams)</code>：加签，增加办理人。flowParams包含如下字段：</p><ul><li>handler: 当前办理人唯一标识 [必传]</li><li>permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]</li><li>addHandlers: 加签对象 [必传]</li><li>message: 审批意见 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_3-6、减签" tabindex="-1"><a class="header-anchor" href="#_3-6、减签"><span>3.6、减签</span></a></h3><p><code>reductionSignature(taskId, flowParams)</code>：减签，减少办理人。flowParams包含如下字段：</p><ul><li>handler: 当前办理人唯一标识 [必传]</li><li>permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]</li><li>reductionHandlers: 减少办理人 [必传]</li><li>message: 审批意见 [按需传输]</li><li>ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]</li></ul><h3 id="_3-7、修改办理人" tabindex="-1"><a class="header-anchor" href="#_3-7、修改办理人"><span>3.7、修改办理人</span></a></h3><p><code>updateHandler(taskId, flowParams)</code>：传入流程任务id，修改办理人</p><ul><li>handler: 办理人唯一标识 [按需传输]</li><li>permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]</li><li>addHandlers: 增加办理人：加签，转办，委托 [按需传输]</li><li>reductionHandlers: 减少办理人：减签，委托 [按需传输]</li><li>message: 审批意见 [按需传输]</li><li>cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]</li><li>ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]</li></ul><h2 id="_4、nodeservice节点接口" tabindex="-1"><a class="header-anchor" href="#_4、nodeservice节点接口"><span>4、NodeService节点接口</span></a></h2><h3 id="_4-1、获取下一个节点列表" tabindex="-1"><a class="header-anchor" href="#_4-1、获取下一个节点列表"><span>4.1、获取下一个节点列表</span></a></h3><p><code>previousNodeList(nodeId)</code>：根据节点id获取下所有的前置节点集合</p><ul><li>nodeId: 节点id [必传]</li></ul><p><code>previousNodeList(definitionId, nowNodeCode)</code>：根据流程定义id和当前节点code获取所有的前置节点集合</p><ul><li>definitionId: 流程定义id [必传]</li><li>nowNodeCode: 当前节点code [必传]</li></ul><p><code>getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)</code>：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点</p><ul><li>definitionId: 流程定义id [必传]</li><li>nowNodeCode: 当前节点code [必传]</li><li>skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]</li><li>anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]</li><li>variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]</li></ul><h2 id="_5、公共api接口" tabindex="-1"><a class="header-anchor" href="#_5、公共api接口"><span>5、公共api接口</span></a></h2><h3 id="_5-1、根据id查询" tabindex="-1"><a class="header-anchor" href="#_5-1、根据id查询"><span>5.1、根据id查询</span></a></h3><p><code>getById(id)</code>：根据id查询</p><ul><li>id: 主键</li></ul><h3 id="_5-2、根据ids主键集合查询" tabindex="-1"><a class="header-anchor" href="#_5-2、根据ids主键集合查询"><span>5.2、根据ids主键集合查询</span></a></h3><p><code>getByIds(ids)</code>：根据ids主键集合查询</p><ul><li>ids: 主键集合</li></ul><h3 id="_5-3、分页查询" tabindex="-1"><a class="header-anchor" href="#_5-3、分页查询"><span>5.3、分页查询</span></a></h3><p><code>getById(entity, page)</code>：分页查询</p><ul><li>entity: 查询实体</li><li>page: 分页对象，支持设置排序字段</li></ul><h3 id="_5-4、查询列表" tabindex="-1"><a class="header-anchor" href="#_5-4、查询列表"><span>5.4、查询列表</span></a></h3><p><code>list(entity)</code>：查询列表</p><ul><li>entity: 查询实体</li></ul><h3 id="_5-5、查询列表-可排序" tabindex="-1"><a class="header-anchor" href="#_5-5、查询列表-可排序"><span>5.5、查询列表，可排序</span></a></h3><p><code>list(entity, query)</code>：查询列表，可排序</p><ul><li>entity: 查询实体</li><li>query: 查询代理层处理，支持设置排序字段</li></ul><h3 id="_5-6、查询一条记录" tabindex="-1"><a class="header-anchor" href="#_5-6、查询一条记录"><span>5.6、查询一条记录</span></a></h3><p><code>getOne(entity)</code>：查询一条记录</p><ul><li>entity 查询实体</li></ul><h3 id="_5-7、获取总数量" tabindex="-1"><a class="header-anchor" href="#_5-7、获取总数量"><span>5.7、获取总数量</span></a></h3><p><code>selectCount(entity)</code>：获取总数量</p><ul><li>entity: 查询实体</li></ul><h3 id="_5-8、判断是否存在" tabindex="-1"><a class="header-anchor" href="#_5-8、判断是否存在"><span>5.8、判断是否存在</span></a></h3><p><code>exists(entity)</code>：判断是否存在</p><ul><li>entity: 查询实体</li></ul><h3 id="_5-8、新增" tabindex="-1"><a class="header-anchor" href="#_5-8、新增"><span>5.8、新增</span></a></h3><p><code>save(entity)</code>：新增</p><ul><li>entity: 实体</li></ul><h3 id="_5-9、根据id修改" tabindex="-1"><a class="header-anchor" href="#_5-9、根据id修改"><span>5.9、根据id修改</span></a></h3><p><code>updateById(entity)</code>：根据id修改</p><ul><li>entity: 实体</li></ul><h3 id="_5-10、根据id删除" tabindex="-1"><a class="header-anchor" href="#_5-10、根据id删除"><span>5.10、根据id删除</span></a></h3><p><code>removeById(id)</code>：根据id删除</p><ul><li>id: 实体</li></ul><h3 id="_5-11、根据entity删除" tabindex="-1"><a class="header-anchor" href="#_5-11、根据entity删除"><span>5.11、根据entity删除</span></a></h3><p><code>remove(entity)</code>：根据entity删除</p><ul><li>entity: 实体</li></ul><h3 id="_5-12、根据ids批量删除" tabindex="-1"><a class="header-anchor" href="#_5-12、根据ids批量删除"><span>5.12、根据ids批量删除</span></a></h3><p><code>removeByIds(ids)</code>：根据ids批量删除</p><ul><li>ids: 实体</li></ul><h3 id="_5-13、批量新增" tabindex="-1"><a class="header-anchor" href="#_5-13、批量新增"><span>5.13、批量新增</span></a></h3><p><code>saveBatch(list)</code>：批量新增</p><ul><li>list: 实体集合</li></ul><h3 id="_5-14、批量新增" tabindex="-1"><a class="header-anchor" href="#_5-14、批量新增"><span>5.14、批量新增</span></a></h3><p><code>saveBatch(list, batchSize)</code>：批量新增</p><ul><li>list: 需要插入的集合数据</li><li>batchSize: 插入大小</li></ul><h3 id="_5-15、批量更新" tabindex="-1"><a class="header-anchor" href="#_5-15、批量更新"><span>5.15、批量更新</span></a></h3><p><code>updateBatch(list)</code>：批量更新</p><ul><li>list: 集合数据</li></ul><h3 id="_5-16、id设置正序排列" tabindex="-1"><a class="header-anchor" href="#_5-16、id设置正序排列"><span>5.16、id设置正序排列</span></a></h3><p><code>orderById()</code>：id设置正序排列</p><h3 id="_5-17、创建时间设置正序排列" tabindex="-1"><a class="header-anchor" href="#_5-17、创建时间设置正序排列"><span>5.17、创建时间设置正序排列</span></a></h3><p><code>orderByCreateTime()</code>：创建时间设置正序排列</p><h3 id="_5-18、更新时间设置正序排列" tabindex="-1"><a class="header-anchor" href="#_5-18、更新时间设置正序排列"><span>5.18、更新时间设置正序排列</span></a></h3><p><code>orderByUpdateTime()</code>：更新时间设置正序排列</p><h3 id="_5-19、设置正序排列" tabindex="-1"><a class="header-anchor" href="#_5-19、设置正序排列"><span>5.19、设置正序排列</span></a></h3><p><code>orderByAsc(orderByField)</code>：设置正序排列</p><ul><li>orderByField: 排序字段</li></ul><h3 id="_5-20、设置倒序排列" tabindex="-1"><a class="header-anchor" href="#_5-20、设置倒序排列"><span>5.20、设置倒序排列</span></a></h3><p><code>orderByDesc(orderByField)</code>：设置倒序排列</p><ul><li>orderByField: 排序字段</li></ul><h3 id="_5-21、用户自定义排序方案" tabindex="-1"><a class="header-anchor" href="#_5-21、用户自定义排序方案"><span>5.21、用户自定义排序方案</span></a></h3><p><code>orderBy(orderByField)</code>：用户自定义排序方案</p><ul><li>orderByField: 排序字段</li></ul>',148)]))}const h=a(n,[["render",s],["__file","api.html.vue"]]),c=JSON.parse('{"path":"/v1.3.5/primary/api.html","title":"核心api","lang":"zh-CN","frontmatter":{"description":"核心api 1、DefService流程定义接口 1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据 checkAndSave(definition)：校验后新增 1.2、新增流程定义，并初始化流程节点和流程跳转数据 saveAndInitNode(definition)：校验后新增 1.3、导入流程定义、流程节点和...","head":[["meta",{"property":"og:url","content":"https://gitee.com/warm_4/warm-flow-doc/v1.3.5/primary/api.html"}],["meta",{"property":"og:site_name","content":"Dromara Warm-Flow"}],["meta",{"property":"og:title","content":"核心api"}],["meta",{"property":"og:description","content":"核心api 1、DefService流程定义接口 1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据 checkAndSave(definition)：校验后新增 1.2、新增流程定义，并初始化流程节点和流程跳转数据 saveAndInitNode(definition)：校验后新增 1.3、导入流程定义、流程节点和..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-03T02:22:24.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-03T02:22:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"核心api\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-03T02:22:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dromara Warm-Flow工作流\\",\\"url\\":\\"https://gitee.com/warm_4/warm-flow-doc\\"}]}"]]},"git":{"createdTime":1718084392000,"updatedTime":1740968544000,"contributors":[{"name":"笨小孩","username":"笨小孩","email":"290631660@qq.com","commits":4},{"name":"闵柳华","username":"闵柳华","email":"290631660@qq.com","commits":1},{"name":"warm","username":"warm","email":"290631660@qq.com","commits":26}]},"readingTime":{"minutes":8.21,"words":2464},"filePathRelative":"v1.3.5/primary/api.md","localizedDate":"2024年6月11日","autoDesc":true,"excerpt":"\\n<h2>1、DefService流程定义接口</h2>\\n<h3>1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据</h3>\\n<p><code>checkAndSave(definition)</code>：校验后新增</p>\\n<h3>1.2、新增流程定义，并初始化流程节点和流程跳转数据</h3>\\n<p><code>saveAndInitNode(definition)</code>：校验后新增</p>\\n<h3>1.3、导入流程定义、流程节点和流程跳转数据</h3>\\n<p><code>importXml(is)</code>：导入流程定义xml的输入流</p>"}');export{h as comp,c as data};
