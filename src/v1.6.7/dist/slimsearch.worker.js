[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":2431,\"nextId\":2431,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1#_1、追加文字\",\"3\":\"1#_1-1、保存需要追加的文字\",\"4\":\"1#_1-2、追加文字\",\"5\":\"1#_1-3、效果图\",\"6\":\"1#_2、自定义流程图节点颜色\",\"7\":\"1#_2-1、配置文件\",\"8\":\"1#_2-2、效果图\",\"9\":\"2\",\"10\":\"2#_1、监听器小类\",\"11\":\"2#_2、监听器大类\",\"12\":\"2#_3、监听器生命周期图\",\"13\":\"2#_4、监听器设置\",\"14\":\"2#_5、匹配规则\",\"15\":\"2#_5、节点和流程监听器\",\"16\":\"2#_5-1、实现以下接口\",\"17\":\"2#_5-2、开始监听器实现类例子\",\"18\":\"2#_5-4、分派监听器\",\"19\":\"2#_5-4、完成监听器实现类例子\",\"20\":\"2#_5-5、创建监听器\",\"21\":\"2#_5-6、页面配置全局或节点监听器\",\"22\":\"2#_5-6-1、节点监听器-流程节点配置\",\"23\":\"2#_5-6-1、流程监听器-流程定义配置\",\"24\":\"2#_6、全局监听器\",\"25\":\"2#_7、监听器参数使用\",\"26\":\"3\",\"27\":\"3#_1、mybatis-plus\",\"28\":\"3#_1-1、配置默认逻辑删除值\",\"29\":\"3#_1-2、关闭逻辑删除方案\",\"30\":\"3#_2、通用逻辑删除\",\"31\":\"4\",\"32\":\"4#_1、实现节点扩展属性数据模型接口\",\"33\":\"4#_2、扩展属性数据模型规则\",\"34\":\"4#_3、设计器渲染效果\",\"35\":\"4#_4、扩展属性入库\",\"36\":\"4#_5、扩展属性使用\",\"37\":\"5\",\"38\":\"5#_1、mybatis-plus\",\"39\":\"6\",\"40\":\"6#_1、permissionhandler接口\",\"41\":\"6#_2、编写permissionhandler实现类\",\"42\":\"7\",\"43\":\"7#_1、mybatis-plus\",\"44\":\"7#_2、通用多租户\",\"45\":\"8\",\"46\":\"8#_1、特点\",\"47\":\"8#_2、内置表达式\",\"48\":\"8#_3、匹配规则\",\"49\":\"8#_4、变量替换时机\",\"50\":\"8#_5、可实现的效果\",\"51\":\"8#_5、默认办理人变量策略\",\"52\":\"8#前端页面设置变量\",\"53\":\"8#后端代码设置变量\",\"54\":\"8#_7、spel办理人变量策略\",\"55\":\"8#前端页面设置变量-1\",\"56\":\"8#后端代码设置变量-1\",\"57\":\"8#_8、办理人选择项接口\",\"58\":\"9\",\"59\":\"9#_1、表达式公共接口\",\"60\":\"9#_2、注册表达式实现类\",\"61\":\"9#_3、条件表达式\",\"62\":\"9#_3-1、条件表达式接口\",\"63\":\"9#_3-2、条件表达式抽象类\",\"64\":\"9#_3-3、条件表达式实现类\",\"65\":\"10\",\"66\":\"10#_1、开启流程\",\"67\":\"10#_2、流程跳转\",\"68\":\"10#_3、其他请查阅核心api\",\"69\":\"11\",\"70\":\"11#_1-下载设计器源码-改造\",\"71\":\"11#_2-源码调试\",\"72\":\"11#_3-部署\",\"73\":\"11#_3-1-先排除原依赖的前端代码\",\"74\":\"11#_3-2-设计器不分离部署-部署方案一\",\"75\":\"11#_3-3-设计器独立部署-分离部署-部署方案二\",\"76\":\"12\",\"77\":\"12#_1、表达式公共接口\",\"78\":\"12#_2、注册表达式实现类\",\"79\":\"13\",\"80\":\"14\",\"81\":\"14#json库扩展-1\",\"82\":\"15\",\"83\":\"15#_1、表达式公共接口\",\"84\":\"15#_2、注册表达式实现类\",\"85\":\"15#_3-监听器表达式\",\"86\":\"15#_3-1、监听器表达式接口\",\"87\":\"15#_3-2、监听器表达式实现类\",\"88\":\"16\",\"89\":\"16#_1、表达式公共接口\",\"90\":\"16#_2、注册表达式实现类\",\"91\":\"16#_3、办理人变量表达式\",\"92\":\"16#_3-1、办理人变量表达式接口\",\"93\":\"16#_3-2、办理人变量表达式实现类\",\"94\":\"17\",\"95\":\"18\",\"96\":\"18#参与贡献\",\"97\":\"18#为开源项目点一个star\",\"98\":\"18#为社区处理问题\",\"99\":\"18#改进社区文档-文档仓库\",\"100\":\"18#贡献代码\",\"101\":\"18#如何成为项目贡献者\",\"102\":\"18#项目贡献者待遇\",\"103\":\"18#提交pr\",\"104\":\"18#步骤一-fork项目到自己仓库\",\"105\":\"18#步骤二-基于dev分支-新建一个此pr功能点的专属分支\",\"106\":\"18#步骤三-使用git工具-将自己仓库的项目拉去到本地做代码编写\",\"107\":\"18#步骤四-使用idea打开项目-切换到新建的功能分支\",\"108\":\"18#步骤五-设置创建类的模板\",\"109\":\"18#步骤六-将编写好的代码-提交到自己的远程仓库\",\"110\":\"18#步骤七-创建pr申请-此操作在自己仓库或者要pr的仓库都可以\",\"111\":\"18#步骤八-等待作者评审-按要求更改-直到没有问题后被作者合并\",\"112\":\"19\",\"113\":\"19#_1、项目介绍\",\"114\":\"19#_2、演示地址\",\"115\":\"19#_3、与activiti、flowable对比\",\"116\":\"19#_4、应用场景\",\"117\":\"19#_5、支持数据库类型\",\"118\":\"19#_6、支持orm框架类型\",\"119\":\"20\",\"120\":\"21\",\"121\":\"21#演示地址\",\"122\":\"21#演示图\",\"123\":\"21#_1、新增定义\",\"124\":\"21#_2、流程设计\",\"125\":\"21#_2、1节点设置\",\"126\":\"21#_2、2跳转线设置\",\"127\":\"21#_3、开启流程实例\",\"128\":\"21#_4、提交流程\",\"129\":\"21#_5、办理流程\",\"130\":\"21#_6、驳回流程\",\"131\":\"22\",\"132\":\"23\",\"133\":\"23#捐赠列表\",\"134\":\"24\",\"135\":\"24#defservice流程定义\",\"136\":\"24#导入流程输入流\",\"137\":\"24#导入流程json字符串\",\"138\":\"24#导入流程json对象\",\"139\":\"24#新增流程\",\"140\":\"24#只新增流程定义表数据\",\"141\":\"24#保存流程节点和跳转\",\"142\":\"24#导出流程定义json字符串\",\"143\":\"24#获取流程定义全部数据对象\",\"144\":\"24#查询流程设计所需的数据\",\"145\":\"24#更新流程定义发布状态\",\"146\":\"24#删除\",\"147\":\"24#发布\",\"148\":\"24#取消发布\",\"149\":\"24#复制流程\",\"150\":\"24#激活流程\",\"151\":\"24#挂起流程\",\"152\":\"24#chartservice流程图绘制接口\",\"153\":\"24#流程图-渲染状态\",\"154\":\"24#流程图-不渲染状态\",\"155\":\"24#流程图-渲染状态-可扩展\",\"156\":\"24#流程图-不渲染状态-可扩展\",\"157\":\"24#流程图-渲染状态-自行渲染\",\"158\":\"24#流程图-不渲染状态-自行渲染\",\"159\":\"24#insservice流程实例\",\"160\":\"24#开启流程\",\"161\":\"24#流程跳转\",\"162\":\"24#终止流程\",\"163\":\"24#删除流程实例\",\"164\":\"24#激活实例\",\"165\":\"24#挂起实例\",\"166\":\"24#查询流程实例集合\",\"167\":\"24#taskservice待办任务\",\"168\":\"24#流程跳转-1\",\"169\":\"24#终止流程-1\",\"170\":\"24#转办\",\"171\":\"24#委派\",\"172\":\"24#加签\",\"173\":\"24#减签\",\"174\":\"24#修改办理人\",\"175\":\"24#nodeservice流程节点\",\"176\":\"24#获取已发布流程节点\",\"177\":\"24#获取前置节点\",\"178\":\"24#获取前置节点-1\",\"179\":\"24#获取后置节点\",\"180\":\"24#获取后置节点-1\",\"181\":\"24#获取后置置节点-含过滤\",\"182\":\"24#histaskservice历史记录\",\"183\":\"24#根据任务id和协作类型查询\",\"184\":\"24#根据实例id和节点编码查询\",\"185\":\"24#根据流程实例ids删除\",\"186\":\"24#公共api接口\",\"187\":\"24#根据id查询\",\"188\":\"24#根据ids主键集合查询\",\"189\":\"24#分页查询\",\"190\":\"24#查询列表\",\"191\":\"24#查询列表-可排序\",\"192\":\"24#查询一条记录\",\"193\":\"24#获取总数量\",\"194\":\"24#判断是否存在\",\"195\":\"24#新增\",\"196\":\"24#根据id修改\",\"197\":\"24#根据id删除\",\"198\":\"24#根据entity删除\",\"199\":\"24#根据ids批量删除\",\"200\":\"24#批量新增\",\"201\":\"24#批量新增-1\",\"202\":\"24#批量更新\",\"203\":\"24#id设置正序排列\",\"204\":\"24#创建时间设置正序排列\",\"205\":\"24#更新时间设置正序排列\",\"206\":\"24#设置正序排列\",\"207\":\"24#设置倒序排列\",\"208\":\"24#用户自定义排序方案\",\"209\":\"25\",\"210\":\"25#_1、流程协作规则\",\"211\":\"25#_2、使用演示\",\"212\":\"25#_2-1、或签\",\"213\":\"25#_2-2、票签\",\"214\":\"25#_2-3、会签\",\"215\":\"26\",\"216\":\"26#_1、内置表达式类型\",\"217\":\"26#_2、匹配规则\",\"218\":\"27\",\"219\":\"28\",\"220\":\"28#_1、自定义填充器-并继承datafillhandler\",\"221\":\"28#_2、注入bean\",\"222\":\"29\",\"223\":\"29#_1-引入依赖\",\"224\":\"29#_2-单体项目\",\"225\":\"29#_2-1-后端放行部分路径\",\"226\":\"29#_2-2-前端引入设计器\",\"227\":\"29#_3-微服务集成\",\"228\":\"29#_2-1-后端放行部分路径-1\",\"229\":\"29#_3-2-前端引入设计器\",\"230\":\"29#_4-设计器办理人权限数据接入\",\"231\":\"29#_4-1-办理人权限选择弹框页面\",\"232\":\"29#_4-2-实现接口获取以上页面办理人权限数据\",\"233\":\"29#_4-2-1-handlerselectservice接口\",\"234\":\"29#_4-2-2-handlerselectserviceimpl实现类\",\"235\":\"29#_5-共享后端权限-如token\",\"236\":\"30\",\"237\":\"30#_1、变更支持的类型\",\"238\":\"30#_2、接口描述\",\"239\":\"30#_3、代码示例\",\"240\":\"31\",\"241\":\"31#_1、术语\",\"242\":\"31#_2、通用规则\",\"243\":\"31#_3、流程状态\",\"244\":\"31#_4、串行网关规则\",\"245\":\"31#_5、并行网关规则\",\"246\":\"31#_6、流程图元数据流程状态规则\",\"247\":\"32\",\"248\":\"32#_1、导入sql-按需求执行\",\"249\":\"32#_2、官网流程定义案例xml\",\"250\":\"32#_3、maven依赖\",\"251\":\"32#_3-1、从首页获取最新版本\",\"252\":\"32#_3-2、mybatis\",\"253\":\"32#_3-3、mybatis-plus\",\"254\":\"32#_3-4、jpa\",\"255\":\"32#_3-5、mybatis-flex\",\"256\":\"32#_3-6、easy-query\",\"257\":\"32#_4、代码示例\",\"258\":\"32#_5、设计器引入\",\"259\":\"32#_6、初学者推荐学习路线\",\"260\":\"32#_6-1、推荐集成案例hh-vue\",\"261\":\"32#_6-2、推荐学习视频\",\"262\":\"33\",\"263\":\"33#_1-1-表清单\",\"264\":\"33#_1-2-表字段明细\",\"265\":\"33#_1-2-1-flow-definition-流程定义表\",\"266\":\"33#_1-2-2-flow-his-task-历史任务记录表\",\"267\":\"33#_1-2-3-flow-instance-流程实例表\",\"268\":\"33#_1-2-4-flow-node-流程节点表\",\"269\":\"33#_1-2-5-flow-skip-节点跳转关联表\",\"270\":\"33#_1-2-6-flow-task-待办任务表\",\"271\":\"33#_1-2-7-flow-user-流程用户表\",\"272\":\"34\",\"273\":\"35\",\"274\":\"36\",\"275\":\"37\",\"276\":\"37#_1、沟通群和公众号\",\"277\":\"37#_2、提交issue\",\"278\":\"37#_3、vip群\",\"279\":\"37#_4、内部群\",\"280\":\"38\",\"281\":\"39\",\"282\":\"39#私人服务\",\"283\":\"39#赞助商广告\",\"284\":\"40\",\"285\":\"41\",\"286\":\"41#_1、id精度丢失\",\"287\":\"41#_2、流程图片中文乱码\",\"288\":\"41#_3、initflow-未加载\",\"289\":\"41#_4、监听器等对象获取不到\",\"290\":\"41#_5、类型转换异常\",\"291\":\"41#_6、hh-vue切换mybaits-plus\",\"292\":\"41#_7、导入依赖包失败\",\"293\":\"41#_8、-stackoverflowerror-错误\",\"294\":\"41#_9、-后端接收流程xml部分丢失\",\"295\":\"42\",\"296\":\"42#未来发布计划\",\"297\":\"42#vx-x-x\",\"298\":\"42#开发中计划\",\"299\":\"42#v1-6-8-2025-03-27\",\"300\":\"42#更新日志-1\",\"301\":\"42#v1-6-7-2025-03-03\",\"302\":\"42#v1-6-6-2025-01-23\",\"303\":\"42#v1-3-8-2025-01-07\",\"304\":\"42#v1-3-7-2024-12-31\",\"305\":\"42#v1-3-6-2024-12-23\",\"306\":\"42#v1-3-5-2024-12-20\",\"307\":\"42#v1-3-4-2024-11-25\",\"308\":\"42#v1-3-3-2024-11-12\",\"309\":\"42#v1-3-1-2024-11-01\",\"310\":\"42#v1-3-0-2024-10-23\",\"311\":\"42#v1-2-8-2024-09-25\",\"312\":\"42#v1-2-7-2024-09-03\",\"313\":\"42#v1-2-6-2024-08-28\",\"314\":\"42#v1-2-4-2024-08-14\",\"315\":\"42#v1-2-3-2024-06-28\",\"316\":\"42#v1-2-1-2024-06-28\",\"317\":\"42#v1-2-0-2024-06-13\",\"318\":\"42#v1-1-9-2024-05-08\",\"319\":\"42#v1-1-7-2024-04-27\",\"320\":\"42#v1-1-6-2024-04-23\",\"321\":\"42#v1-1-5-2024-04-17\",\"322\":\"42#v1-1-4-2024-04-07\",\"323\":\"42#v1-1-3-2024-04-02\",\"324\":\"42#v1-1-2-2024-03-27\",\"325\":\"42#v1-1-1-2024-03-22\",\"326\":\"42#v1-1-0-2024-03-21\",\"327\":\"42#v1-0-4-2024-03-06\",\"328\":\"42#v1-0-3-2024-03-05\",\"329\":\"42#v1-0-2-2023-12-31\",\"330\":\"42#v1-0-0-2023-12-28\",\"331\":\"43\",\"332\":\"43#v1-6-7\",\"333\":\"43#v1-6-6\",\"334\":\"43#v1-3-7\",\"335\":\"43#v1-3-5\",\"336\":\"43#v1-3-4\",\"337\":\"43#v1-3-3\",\"338\":\"43#v1-3-1\",\"339\":\"43#v1-3-0\",\"340\":\"43#v1-2-8\",\"341\":\"43#v1-2-6\",\"342\":\"43#v1-2-4\",\"343\":\"43#v1-2-1\",\"344\":\"43#v1-2-0\",\"345\":\"43#v1-1-9\",\"346\":\"44\",\"347\":\"44#_1、defservice流程定义接口\",\"348\":\"44#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"349\":\"44#_1-1、新增流程定义、流程节点和流程跳转数据\",\"350\":\"44#_1-2、保存流程节点和流程跳转数据\",\"351\":\"44#_1-3、保存流程节点和流程跳转数据\",\"352\":\"44#_1-4、导出流程定义\",\"353\":\"44#_1-5、获取流程定义\",\"354\":\"44#_1-6、删除\",\"355\":\"44#_1-7、发布\",\"356\":\"44#_1-8、取消发布\",\"357\":\"44#_1-9、复制流程\",\"358\":\"44#_1-10、获取流程图\",\"359\":\"44#_1-11、激活流程\",\"360\":\"44#_1-12、挂起流程\",\"361\":\"44#_2、insservice流程实例接口\",\"362\":\"44#_2-1、开启流程\",\"363\":\"44#_2-2、流程跳转\",\"364\":\"44#_2-3、终止流程\",\"365\":\"44#_2-4、删除流程实例\",\"366\":\"44#_2-5、激活实例\",\"367\":\"44#_2-6、挂起实例\",\"368\":\"44#_3、taskservice待办任务接口\",\"369\":\"44#_3-1、流程跳转\",\"370\":\"44#_3-2、终止流程\",\"371\":\"44#_3-3、转办\",\"372\":\"44#_3-4、委派\",\"373\":\"44#_3-5、加签\",\"374\":\"44#_3-6、减签\",\"375\":\"44#_3-7、修改办理人\",\"376\":\"44#_4、nodeservice节点接口\",\"377\":\"44#_4-1、获取下一个节点列表\",\"378\":\"44#_5、公共api接口\",\"379\":\"44#_5-1、根据id查询\",\"380\":\"44#_5-2、根据ids主键集合查询\",\"381\":\"44#_5-3、分页查询\",\"382\":\"44#_5-4、查询列表\",\"383\":\"44#_5-5、查询列表-可排序\",\"384\":\"44#_5-6、查询一条记录\",\"385\":\"44#_5-7、获取总数量\",\"386\":\"44#_5-8、判断是否存在\",\"387\":\"44#_5-8、新增\",\"388\":\"44#_5-9、根据id修改\",\"389\":\"44#_5-10、根据id删除\",\"390\":\"44#_5-11、根据entity删除\",\"391\":\"44#_5-12、根据ids批量删除\",\"392\":\"44#_5-13、批量新增\",\"393\":\"44#_5-14、批量新增\",\"394\":\"44#_5-15、批量更新\",\"395\":\"44#_5-16、id设置正序排列\",\"396\":\"44#_5-17、创建时间设置正序排列\",\"397\":\"44#_5-18、更新时间设置正序排列\",\"398\":\"44#_5-19、设置正序排列\",\"399\":\"44#_5-20、设置倒序排列\",\"400\":\"44#_5-21、用户自定义排序方案\",\"401\":\"45\",\"402\":\"45#_1、spring\",\"403\":\"45#_1-1、yaml配置方式\",\"404\":\"45#_1-2、bean配置方式\",\"405\":\"45#_2、solon\",\"406\":\"45#_2-1、yaml配置方式\",\"407\":\"45#_2-1、bean配置方式\",\"408\":\"46\",\"409\":\"46#_1、开启流程\",\"410\":\"46#_2、流程跳转\",\"411\":\"46#_3、其他请查阅核心api\",\"412\":\"47\",\"413\":\"47#_1、自定义填充器-并继承datafillhandler\",\"414\":\"47#_2、注入bean\",\"415\":\"47#_2-1、通过-component方式注入\",\"416\":\"47#_2-2、yaml配置方式\",\"417\":\"47#_2-3、-configuration-bean配置方式\",\"418\":\"48\",\"419\":\"48#_1-引入依赖\",\"420\":\"48#_2-后端放行部分路径\",\"421\":\"48#_2-1-spring-security-放行配置\",\"422\":\"48#_2-2-shiro-放行配置\",\"423\":\"48#_2-3-sa-token-放行配置\",\"424\":\"48#_3-前端加载设计器\",\"425\":\"48#_3-2-vue2-引入\",\"426\":\"48#_3-3-vue3-引入\",\"427\":\"48#_3-4-react版本-引入\",\"428\":\"48#_3-5-前后端不分离版本\",\"429\":\"48#_4-设计器办理人权限数据接入\",\"430\":\"48#_4-1-办理人权限选择弹框页面\",\"431\":\"48#_4-2-实现接口获取以上页面办理人权限数据\",\"432\":\"48#_4-2-1-handlerselectservice接口\",\"433\":\"48#_4-2-2-handlerselectserviceimpl实现类\",\"434\":\"49\",\"435\":\"49#_1、内置表达式\",\"436\":\"49#_2、spring-expression-language-spel\",\"437\":\"49#_3、自定义表达式\",\"438\":\"50\",\"439\":\"51\",\"440\":\"52\",\"441\":\"52#json库扩展-1\",\"442\":\"53\",\"443\":\"53#_1、监听器类型\",\"444\":\"53#_2、流程监听器和节点监听器\",\"445\":\"53#_2、监听器生命周期图\",\"446\":\"53#_3、监听器使用\",\"447\":\"53#_3-1、实现以下接口\",\"448\":\"53#_3-2、开始监听器实现类例子\",\"449\":\"53#_3-3、完成监听器实现类例子\",\"450\":\"53#_3-4、分派监听器实现类例子\",\"451\":\"53#_3-5、创建监听器\",\"452\":\"53#_3-6、页面配置全局或节点监听器\",\"453\":\"53#_3-6-1、节点监听器-流程节点配置\",\"454\":\"53#_3-6-1、流程监听器-流程定义配置\",\"455\":\"53#_4、监听器参数使用\",\"456\":\"54\",\"457\":\"54#_1、mybatis-plus\",\"458\":\"54#_1-1、spring\",\"459\":\"54#_1-2、solon\",\"460\":\"54#_2、通用逻辑删除\",\"461\":\"55\",\"462\":\"55#_1、mybatis-plus\",\"463\":\"55#_2、jpa\",\"464\":\"55#_3、mybatis-flex\",\"465\":\"56\",\"466\":\"56#演示图\",\"467\":\"56#_1、新增定义\",\"468\":\"56#_2、流程设计\",\"469\":\"56#_2、1节点设置\",\"470\":\"56#_2、2跳转线设置\",\"471\":\"56#_3、开启流程实例\",\"472\":\"56#_4、提交流程\",\"473\":\"56#_5、办理流程\",\"474\":\"56#_6、驳回流程\",\"475\":\"57\",\"476\":\"57#_1、术语\",\"477\":\"57#_2、通用规则\",\"478\":\"57#_3、流程状态\",\"479\":\"57#_4、串行网关规则\",\"480\":\"57#_5、并行网关规则\",\"481\":\"57#_6、流程协作规则\",\"482\":\"58\",\"483\":\"59\",\"484\":\"59#_1、导入sql-按需求执行\",\"485\":\"59#_2、官网流程定义案例xml\",\"486\":\"59#_3、maven依赖\",\"487\":\"59#_3-1、mybatis\",\"488\":\"59#_3-2、mybatis-plus\",\"489\":\"59#_3-3、jpa\",\"490\":\"59#_3-4、mybatis-flex\",\"491\":\"59#_3-5、easy-query\",\"492\":\"59#_4、支持数据库类型\",\"493\":\"59#_5、支持orm框架类型\",\"494\":\"59#_6、设计器引入\",\"495\":\"59#_7、代码示例\",\"496\":\"59#_7-1、部署流程\",\"497\":\"59#_7-2、发布流程\",\"498\":\"59#_7-3、开启流程\",\"499\":\"59#_7-4、流程流转\",\"500\":\"59#_8、初学者推荐学习路线\",\"501\":\"59#_8-1、推荐集成案例hh-vue\",\"502\":\"59#_8-2、推荐学习视频\",\"503\":\"60\",\"504\":\"60#表清单\",\"505\":\"60#表字段明细\",\"506\":\"60#flow-definition-流程定义表\",\"507\":\"60#flow-his-task-历史任务记录表\",\"508\":\"60#flow-instance-流程实例表\",\"509\":\"60#flow-node-流程节点表\",\"510\":\"60#flow-skip-节点跳转关联表\",\"511\":\"60#flow-task-待办任务表\",\"512\":\"60#flow-user-流程用户表\",\"513\":\"61\",\"514\":\"61#_1、mybatis-plus\",\"515\":\"61#_1-1、spring\",\"516\":\"61#_1-2、solon\",\"517\":\"61#_2、通用多租户\",\"518\":\"61#_2-1、yaml配置方式\",\"519\":\"61#_2-2、bean配置方式\",\"520\":\"61#_2-3、-component配置方式\",\"521\":\"62\",\"522\":\"63\",\"523\":\"63#_1、内置表达式\",\"524\":\"63#_2、变量替换时机\",\"525\":\"63#_3、默认办理人变量策略\",\"526\":\"63#前端页面设置变量\",\"527\":\"63#后端代码设置变量\",\"528\":\"63#_4、spel办理人变量策略\",\"529\":\"63#前端页面设置变量-1\",\"530\":\"63#后端代码设置变量-1\",\"531\":\"63#_5、扩展\",\"532\":\"64\",\"533\":\"64#_1、defservice流程定义接口\",\"534\":\"64#_1-1、导入流程定义\",\"535\":\"64#_1-2、保存流程定义\",\"536\":\"64#_1-3、保存流程定义\",\"537\":\"64#_1-4、导出流程定义\",\"538\":\"64#_1-5、获取流程定义\",\"539\":\"64#_1-6、删除\",\"540\":\"64#_1-7、发布\",\"541\":\"64#_1-8、取消发布\",\"542\":\"64#_1-9、复制流程\",\"543\":\"64#_1-10、获取流程图\",\"544\":\"64#_1-11、激活流程\",\"545\":\"64#_1-12、挂起流程\",\"546\":\"64#_2、insservice流程实例接口\",\"547\":\"64#_2-1、开启流程\",\"548\":\"64#_2-2、流程跳转\",\"549\":\"64#_2-3、终止流程\",\"550\":\"64#_2-4、删除流程实例\",\"551\":\"64#_2-5、激活实例\",\"552\":\"64#_2-6、挂起实例\",\"553\":\"64#_3、taskservice待办任务接口\",\"554\":\"64#_3-1、流程跳转\",\"555\":\"64#_3-2、终止流程\",\"556\":\"64#_3-3、转办\",\"557\":\"64#_3-4、委派\",\"558\":\"64#_3-5、加签\",\"559\":\"64#_3-6、减签\",\"560\":\"64#_3-7、修改办理人\",\"561\":\"64#_4、nodeservice节点接口\",\"562\":\"64#_4-1、获取下一个节点列表\",\"563\":\"64#_5、公共api接口\",\"564\":\"64#_5-1、根据id查询\",\"565\":\"64#_5-2、根据ids主键集合查询\",\"566\":\"64#_5-3、分页查询\",\"567\":\"64#_5-4、查询列表\",\"568\":\"64#_5-5、查询列表-可排序\",\"569\":\"64#_5-6、查询一条记录\",\"570\":\"64#_5-7、获取总数量\",\"571\":\"64#_5-8、判断是否存在\",\"572\":\"64#_5-8、新增\",\"573\":\"64#_5-9、根据id修改\",\"574\":\"64#_5-10、根据id删除\",\"575\":\"64#_5-11、根据entity删除\",\"576\":\"64#_5-12、根据ids批量删除\",\"577\":\"64#_5-13、批量新增\",\"578\":\"64#_5-14、批量新增\",\"579\":\"64#_5-15、批量更新\",\"580\":\"64#_5-16、id设置正序排列\",\"581\":\"64#_5-17、创建时间设置正序排列\",\"582\":\"64#_5-18、更新时间设置正序排列\",\"583\":\"64#_5-19、设置正序排列\",\"584\":\"64#_5-20、设置倒序排列\",\"585\":\"64#_5-21、用户自定义排序方案\",\"586\":\"65\",\"587\":\"65#_1、spring\",\"588\":\"65#_1-1、yaml配置方式\",\"589\":\"65#_1-2、bean配置方式\",\"590\":\"65#_2、solon\",\"591\":\"65#_2-1、yaml配置方式\",\"592\":\"65#_2-1、bean配置方式\",\"593\":\"66\",\"594\":\"66#_1、开启流程\",\"595\":\"66#_2、流程跳转\",\"596\":\"66#_3、其他请查阅核心api\",\"597\":\"67\",\"598\":\"67#_1、自定义填充器-并继承datafillhandler\",\"599\":\"67#_2、注入bean\",\"600\":\"67#_2-1、通过-component方式注入\",\"601\":\"67#_2-2、yaml配置方式\",\"602\":\"67#_2-3、-configuration-bean配置方式\",\"603\":\"68\",\"604\":\"68#_1-引入依赖\",\"605\":\"68#_2-后端放行部分路径\",\"606\":\"68#_2-1-spring-security-放行配置\",\"607\":\"68#_2-2-shiro-放行配置\",\"608\":\"68#_2-3-sa-token-放行配置\",\"609\":\"68#_3-前端加载设计器\",\"610\":\"68#_3-1-nginx-代理配置\",\"611\":\"68#_3-2-vue2-引入\",\"612\":\"68#_3-3-vue3-引入\",\"613\":\"68#_3-4-react版本-引入\",\"614\":\"68#_3-5-前后端不分离版本\",\"615\":\"68#_4-设计器办理人权限数据接入\",\"616\":\"68#_4-1-办理人权限选择弹框页面\",\"617\":\"68#_4-2-实现接口获取以上页面办理人权限数据\",\"618\":\"68#_4-2-1-handlerselectservice接口\",\"619\":\"68#_4-2-2-handlerselectserviceimpl实现类\",\"620\":\"69\",\"621\":\"69#_1、内置表达式\",\"622\":\"69#_2、spring-expression-language-spel\",\"623\":\"69#_3、自定义表达式\",\"624\":\"70\",\"625\":\"71\",\"626\":\"72\",\"627\":\"72#json库扩展-1\",\"628\":\"73\",\"629\":\"73#_1、监听器类型\",\"630\":\"73#_2、流程监听器和节点监听器\",\"631\":\"73#_2、监听器生命周期图\",\"632\":\"73#_3、监听器使用\",\"633\":\"73#_3-1、实现以下接口\",\"634\":\"73#_3-2、开始监听器实现类例子\",\"635\":\"73#_3-3、完成监听器实现类例子\",\"636\":\"73#_3-4、分派监听器实现类例子\",\"637\":\"73#_3-5、创建监听器\",\"638\":\"73#_3-6、页面配置全局或节点监听器\",\"639\":\"73#_3-6-1、节点监听器-流程节点配置\",\"640\":\"73#_3-6-1、流程监听器-流程定义配置\",\"641\":\"73#_4、监听器参数使用\",\"642\":\"74\",\"643\":\"74#_1、mybatis-plus\",\"644\":\"74#_1-1、spring\",\"645\":\"74#_1-2、solon\",\"646\":\"74#_2、通用逻辑删除\",\"647\":\"75\",\"648\":\"75#_1、mybatis-plus\",\"649\":\"75#_2、jpa\",\"650\":\"75#_3、mybatis-flex\",\"651\":\"76\",\"652\":\"76#演示图\",\"653\":\"76#_1、新增定义\",\"654\":\"76#_2、流程设计\",\"655\":\"76#_2、1节点设置\",\"656\":\"76#_2、2跳转线设置\",\"657\":\"76#_3、开启流程实例\",\"658\":\"76#_4、提交流程\",\"659\":\"76#_5、办理流程\",\"660\":\"76#_6、驳回流程\",\"661\":\"77\",\"662\":\"77#_1、术语\",\"663\":\"77#_2、通用规则\",\"664\":\"77#_3、流程状态\",\"665\":\"77#_4、串行网关规则\",\"666\":\"77#_5、并行网关规则\",\"667\":\"77#_6、流程协作规则\",\"668\":\"78\",\"669\":\"79\",\"670\":\"79#_1、导入sql-按需求执行\",\"671\":\"79#_2、官网流程定义案例xml\",\"672\":\"79#_3、maven依赖\",\"673\":\"79#_3-1、mybatis\",\"674\":\"79#_3-2、mybatis-plus\",\"675\":\"79#_3-3、jpa\",\"676\":\"79#_3-4、mybatis-flex\",\"677\":\"79#_3-5、easy-query\",\"678\":\"79#_4、支持数据库类型\",\"679\":\"79#_5、支持orm框架类型\",\"680\":\"79#_6、代码示例\",\"681\":\"79#_7、部署流程\",\"682\":\"79#_8、发布流程\",\"683\":\"79#_9、开启流程\",\"684\":\"79#_10、流程流转\",\"685\":\"79#_11、初学者推荐学习路线\",\"686\":\"79#_11-1、推荐集成案例hh-vue\",\"687\":\"79#_11-2、推荐学习视频\",\"688\":\"80\",\"689\":\"80#表清单\",\"690\":\"80#表字段明细\",\"691\":\"80#flow-definition-流程定义表\",\"692\":\"80#flow-his-task-历史任务记录表\",\"693\":\"80#flow-instance-流程实例表\",\"694\":\"80#flow-node-流程节点表\",\"695\":\"80#flow-skip-节点跳转关联表\",\"696\":\"80#flow-task-待办任务表\",\"697\":\"80#flow-user-流程用户表\",\"698\":\"81\",\"699\":\"81#_1、mybatis-plus\",\"700\":\"81#_1-1、spring\",\"701\":\"81#_1-2、solon\",\"702\":\"81#_2、通用多租户\",\"703\":\"81#_2-1、yaml配置方式\",\"704\":\"81#_2-2、bean配置方式\",\"705\":\"81#_2-3、-component配置方式\",\"706\":\"82\",\"707\":\"83\",\"708\":\"83#_1、内置表达式\",\"709\":\"83#_2、变量替换时机\",\"710\":\"83#_3、默认办理人变量策略\",\"711\":\"83#前端页面设置变量\",\"712\":\"83#后端代码设置变量\",\"713\":\"83#_4、spel办理人变量策略\",\"714\":\"83#前端页面设置变量-1\",\"715\":\"83#后端代码设置变量-1\",\"716\":\"83#_5、扩展\",\"717\":\"84\",\"718\":\"84#_1、defservice流程定义接口\",\"719\":\"84#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"720\":\"84#_1-2、新增流程定义-并初始化流程节点和流程跳转数据\",\"721\":\"84#_1-3、导入流程定义、流程节点和流程跳转数据\",\"722\":\"84#_1-4、保存流程节点和流程跳转数据\",\"723\":\"84#_1-5、保存流程节点和流程跳转数据\",\"724\":\"84#_1-6、导出流程定义\",\"725\":\"84#_1-7、获取流程定义\",\"726\":\"84#_1-8、删除\",\"727\":\"84#_1-9、发布\",\"728\":\"84#_1-10、取消发布\",\"729\":\"84#_1-11、复制流程\",\"730\":\"84#_1-12、获取流程图\",\"731\":\"84#_1-13、激活流程\",\"732\":\"84#_1-14、挂起流程\",\"733\":\"84#_2、insservice流程实例接口\",\"734\":\"84#_2-1、开启流程\",\"735\":\"84#_2-2、流程跳转\",\"736\":\"84#_2-3、终止流程\",\"737\":\"84#_2-4、删除流程实例\",\"738\":\"84#_2-5、激活实例\",\"739\":\"84#_2-6、挂起实例\",\"740\":\"84#_2-7、根据流程定义id集合-查询流程实例集合\",\"741\":\"84#_3、taskservice待办任务接口\",\"742\":\"84#_3-1、流程跳转\",\"743\":\"84#_3-2、终止流程\",\"744\":\"84#_3-3、转办\",\"745\":\"84#_3-4、委派\",\"746\":\"84#_3-5、加签\",\"747\":\"84#_3-6、减签\",\"748\":\"84#_3-7、修改办理人\",\"749\":\"84#_4、nodeservice节点接口\",\"750\":\"84#_4-1、获取下一个节点列表\",\"751\":\"84#_5、公共api接口\",\"752\":\"84#_5-1、根据id查询\",\"753\":\"84#_5-2、根据ids主键集合查询\",\"754\":\"84#_5-3、分页查询\",\"755\":\"84#_5-4、查询列表\",\"756\":\"84#_5-5、查询列表-可排序\",\"757\":\"84#_5-6、查询一条记录\",\"758\":\"84#_5-7、获取总数量\",\"759\":\"84#_5-8、判断是否存在\",\"760\":\"84#_5-8、新增\",\"761\":\"84#_5-9、根据id修改\",\"762\":\"84#_5-10、根据id删除\",\"763\":\"84#_5-11、根据entity删除\",\"764\":\"84#_5-12、根据ids批量删除\",\"765\":\"84#_5-13、批量新增\",\"766\":\"84#_5-14、批量新增\",\"767\":\"84#_5-15、批量更新\",\"768\":\"84#_5-16、id设置正序排列\",\"769\":\"84#_5-17、创建时间设置正序排列\",\"770\":\"84#_5-18、更新时间设置正序排列\",\"771\":\"84#_5-19、设置正序排列\",\"772\":\"84#_5-20、设置倒序排列\",\"773\":\"84#_5-21、用户自定义排序方案\",\"774\":\"85\",\"775\":\"85#_1、内置表达式\",\"776\":\"85#_2、匹配规则\",\"777\":\"86\",\"778\":\"86#_1、spring\",\"779\":\"86#_1-1、yaml配置方式\",\"780\":\"86#_1-2、bean配置方式\",\"781\":\"86#_2、solon\",\"782\":\"86#_2-1、yaml配置方式\",\"783\":\"86#_2-1、bean配置方式\",\"784\":\"87\",\"785\":\"87#_1、开启流程\",\"786\":\"87#_2、流程跳转\",\"787\":\"87#_3、其他请查阅核心api\",\"788\":\"88\",\"789\":\"88#_1、自定义填充器-并继承datafillhandler\",\"790\":\"88#_2、注入bean\",\"791\":\"88#_2-1、通过-component方式注入\",\"792\":\"88#_2-2、yaml配置方式\",\"793\":\"88#_2-3、-configuration-bean配置方式\",\"794\":\"89\",\"795\":\"89#_1-引入依赖\",\"796\":\"89#springboot\",\"797\":\"89#solon\",\"798\":\"89#_2-后端放行部分路径\",\"799\":\"89#_2-1-spring-security-放行配置\",\"800\":\"89#_2-2-shiro-放行配置\",\"801\":\"89#_2-3-sa-token-放行配置\",\"802\":\"89#_3-前端加载设计器\",\"803\":\"89#_3-2-vue2-引入\",\"804\":\"89#_3-3-vue3-引入\",\"805\":\"89#_3-4-react版本-引入\",\"806\":\"89#_3-5-前后端不分离版本\",\"807\":\"89#_4-设计器办理人权限数据接入\",\"808\":\"89#_4-1-办理人权限选择弹框页面\",\"809\":\"89#_4-2-实现接口获取以上页面办理人权限数据\",\"810\":\"89#_4-2-1-handlerselectservice接口\",\"811\":\"89#_4-2-2-handlerselectserviceimpl实现类\",\"812\":\"89#_5-共享后端权限-如token\",\"813\":\"90\",\"814\":\"90#_1-下载设计器源码-改造\",\"815\":\"90#_2-源码调试\",\"816\":\"90#_3-部署\",\"817\":\"90#_3-1-先排除原依赖的前端代码\",\"818\":\"90#_3-2-设计器不分离部署-部署方案一\",\"819\":\"90#_3-3-设计器独立部署-分离部署-部署方案二\",\"820\":\"91\",\"821\":\"91#_1、内置表达式\",\"822\":\"91#_2、spring-expression-language-spel\",\"823\":\"91#_3、自定义表达式\",\"824\":\"92\",\"825\":\"92#_1、表达式公共接口\",\"826\":\"92#_2、注册表达式实现类\",\"827\":\"92#_3、办理人变量表达式\",\"828\":\"92#_3-1、办理人变量表达式接口\",\"829\":\"92#_3-2、办理人变量表达式实现类\",\"830\":\"92#_4-监听器表达式\",\"831\":\"92#_4-1、监听器表达式接口\",\"832\":\"92#_4-2、监听器表达式实现类\",\"833\":\"92#_5、条件表达式\",\"834\":\"92#_5-1、条件表达式接口\",\"835\":\"92#_5-2、条件表达式抽象类\",\"836\":\"92#_5-3、条件表达式实现类\",\"837\":\"93\",\"838\":\"94\",\"839\":\"95\",\"840\":\"95#json库扩展-1\",\"841\":\"96\",\"842\":\"96#_1、监听器大类\",\"843\":\"96#_2、监听器小类\",\"844\":\"96#_3、监听器设置\",\"845\":\"96#_4、匹配规则\",\"846\":\"96#_5、监听器生命周期图\",\"847\":\"96#_5、节点和流程监听器\",\"848\":\"96#_5-1、实现以下接口\",\"849\":\"96#_5-2、开始监听器实现类例子\",\"850\":\"96#_5-3、完成监听器实现类例子\",\"851\":\"96#_5-4、分派监听器实现类例子\",\"852\":\"96#_5-5、创建监听器\",\"853\":\"96#_5-6、页面配置全局或节点监听器\",\"854\":\"96#_5-6-1、节点监听器-流程节点配置\",\"855\":\"96#_5-6-1、流程监听器-流程定义配置\",\"856\":\"96#_6、全局监听器\",\"857\":\"96#_7、监听器参数使用\",\"858\":\"97\",\"859\":\"97#_1、mybatis-plus\",\"860\":\"97#_1-1、spring\",\"861\":\"97#_1-2、solon\",\"862\":\"97#_2、通用逻辑删除\",\"863\":\"98\",\"864\":\"98#_1、mybatis-plus\",\"865\":\"98#_2、jpa\",\"866\":\"98#_3、mybatis-flex\",\"867\":\"99\",\"868\":\"99#_1、permissionhandler接口\",\"869\":\"99#_2、编写permissionhandler实现类\",\"870\":\"100\",\"871\":\"100#演示图\",\"872\":\"100#_1、新增定义\",\"873\":\"100#_2、流程设计\",\"874\":\"100#_2、1节点设置\",\"875\":\"100#_2、2跳转线设置\",\"876\":\"100#_3、开启流程实例\",\"877\":\"100#_4、提交流程\",\"878\":\"100#_5、办理流程\",\"879\":\"100#_6、驳回流程\",\"880\":\"101\",\"881\":\"101#_1、术语\",\"882\":\"101#_2、通用规则\",\"883\":\"101#_3、流程状态\",\"884\":\"101#_4、串行网关规则\",\"885\":\"101#_5、并行网关规则\",\"886\":\"101#_6、流程协作规则\",\"887\":\"102\",\"888\":\"102#_1、术语\",\"889\":\"102#_2、通用规则\",\"890\":\"102#_3、流程状态\",\"891\":\"102#_4、串行网关规则\",\"892\":\"102#_5、并行网关规则\",\"893\":\"102#_6、流程协作规则\",\"894\":\"103\",\"895\":\"103#_1、导入sql-按需求执行\",\"896\":\"103#_2、官网流程定义案例xml\",\"897\":\"103#_3、maven依赖\",\"898\":\"103#_3-1、mybatis\",\"899\":\"103#_3-2、mybatis-plus\",\"900\":\"103#_3-3、jpa\",\"901\":\"103#_3-4、mybatis-flex\",\"902\":\"103#_3-5、easy-query\",\"903\":\"103#_4、代码示例\",\"904\":\"103#_4-1、部署流程\",\"905\":\"103#_4-2、发布流程\",\"906\":\"103#_4-3、开启流程\",\"907\":\"103#_4-4、流程流转\",\"908\":\"103#_5、设计器引入\",\"909\":\"103#_6、初学者推荐学习路线\",\"910\":\"103#_6-1、推荐集成案例hh-vue\",\"911\":\"103#_6-2、推荐学习视频\",\"912\":\"104\",\"913\":\"104#表清单\",\"914\":\"104#表字段明细\",\"915\":\"104#flow-definition-流程定义表\",\"916\":\"104#flow-his-task-历史任务记录表\",\"917\":\"104#flow-instance-流程实例表\",\"918\":\"104#flow-node-流程节点表\",\"919\":\"104#flow-skip-节点跳转关联表\",\"920\":\"104#flow-task-待办任务表\",\"921\":\"104#flow-user-流程用户表\",\"922\":\"105\",\"923\":\"105#_1、mybatis-plus\",\"924\":\"105#_1-1、spring\",\"925\":\"105#_1-2、solon\",\"926\":\"105#_2、通用多租户\",\"927\":\"105#_2-1、yaml配置方式\",\"928\":\"105#_2-2、bean配置方式\",\"929\":\"105#_2-3、-component配置方式\",\"930\":\"106\",\"931\":\"107\",\"932\":\"107#_1、特点\",\"933\":\"107#_2、内置表达式\",\"934\":\"107#_3、匹配规则\",\"935\":\"107#_4、变量替换时机\",\"936\":\"107#_5、默认办理人变量策略\",\"937\":\"107#前端页面设置变量\",\"938\":\"107#后端代码设置变量\",\"939\":\"107#_6、spel办理人变量策略\",\"940\":\"107#前端页面设置变量-1\",\"941\":\"107#后端代码设置变量-1\",\"942\":\"108\",\"943\":\"108#_1、表达式公共接口\",\"944\":\"108#_2、注册表达式实现类\",\"945\":\"108#_3、条件表达式\",\"946\":\"108#_3-1、条件表达式接口\",\"947\":\"108#_3-2、条件表达式抽象类\",\"948\":\"108#_3-3、条件表达式实现类\",\"949\":\"109\",\"950\":\"109#_1、开启流程\",\"951\":\"109#_2、流程跳转\",\"952\":\"109#_3、其他请查阅核心api\",\"953\":\"110\",\"954\":\"110#_1-下载设计器源码-改造\",\"955\":\"110#_2-源码调试\",\"956\":\"110#_3-部署\",\"957\":\"110#_3-1-先排除原依赖的前端代码\",\"958\":\"110#_3-2-设计器不分离部署-部署方案一\",\"959\":\"110#_3-3-设计器独立部署-分离部署-部署方案二\",\"960\":\"111\",\"961\":\"112\",\"962\":\"112#json库扩展-1\",\"963\":\"113\",\"964\":\"113#_1、表达式公共接口\",\"965\":\"113#_2、注册表达式实现类\",\"966\":\"113#_3-监听器表达式\",\"967\":\"113#_3-1、监听器表达式接口\",\"968\":\"113#_3-2、监听器表达式实现类\",\"969\":\"114\",\"970\":\"114#_1、表达式公共接口\",\"971\":\"114#_2、注册表达式实现类\",\"972\":\"114#_3、办理人变量表达式\",\"973\":\"114#_3-1、办理人变量表达式接口\",\"974\":\"114#_3-2、办理人变量表达式实现类\",\"975\":\"115\",\"976\":\"116\",\"977\":\"116#vip群\",\"978\":\"116#私人服务\",\"979\":\"116#特别赞助\",\"980\":\"117\",\"981\":\"118\",\"982\":\"118#_1、id精度丢失\",\"983\":\"118#_2、流程图片中文乱码\",\"984\":\"118#_3、initflow-未加载\",\"985\":\"118#_4、监听器等对象获取不到\",\"986\":\"118#_5、类型转换异常\",\"987\":\"118#_6、hh-vue切换mybaits-plus\",\"988\":\"118#_7、导入依赖包失败\",\"989\":\"118#_8、-stackoverflowerror-错误\",\"990\":\"118#_9、-后端接收流程xml部分丢失\",\"991\":\"119\",\"992\":\"119#未来发布计划\",\"993\":\"119#vx-x-x\",\"994\":\"119#开发中计划\",\"995\":\"119#v1-3-6\",\"996\":\"119#更新日志-1\",\"997\":\"119#v1-3-5-2024-12-20\",\"998\":\"119#v1-3-4-2024-11-25\",\"999\":\"119#v1-3-3-2024-11-12\",\"1000\":\"119#v1-3-1-2024-11-01\",\"1001\":\"119#v1-3-0-2024-10-23\",\"1002\":\"119#v1-2-10-2024-09-26\",\"1003\":\"119#v1-2-8-2024-09-25\",\"1004\":\"119#v1-2-7-2024-09-03\",\"1005\":\"119#v1-2-6-2024-08-28\",\"1006\":\"119#v1-2-4-2024-08-14\",\"1007\":\"119#v1-2-3-2024-06-28\",\"1008\":\"119#v1-2-1-2024-06-28\",\"1009\":\"119#v1-2-0-2024-06-13\",\"1010\":\"119#v1-1-9-2024-05-08\",\"1011\":\"119#v1-1-7-2024-04-27\",\"1012\":\"119#v1-1-6-2024-04-23\",\"1013\":\"119#v1-1-5-2024-04-17\",\"1014\":\"119#v1-1-4-2024-04-07\",\"1015\":\"119#v1-1-3-2024-04-02\",\"1016\":\"119#v1-1-2-2024-03-27\",\"1017\":\"119#v1-1-1-2024-03-22\",\"1018\":\"119#v1-1-0-2024-03-21\",\"1019\":\"119#v1-0-4-2024-03-06\",\"1020\":\"119#v1-0-3-2024-03-05\",\"1021\":\"119#v1-0-2-2023-12-31\",\"1022\":\"119#v1-0-0-2023-12-28\",\"1023\":\"120\",\"1024\":\"121\",\"1025\":\"121#参与贡献\",\"1026\":\"121#为开源项目点一个star\",\"1027\":\"121#为社区处理问题\",\"1028\":\"121#改进社区文档-文档仓库\",\"1029\":\"121#贡献代码\",\"1030\":\"121#如何成为项目贡献者\",\"1031\":\"121#项目贡献者待遇\",\"1032\":\"121#提交pr\",\"1033\":\"121#步骤一-fork项目到自己仓库\",\"1034\":\"121#步骤二-基于dev分支-新建一个此pr功能点的专属分支\",\"1035\":\"121#步骤三-使用git工具-将自己仓库的项目拉去到本地做代码编写\",\"1036\":\"121#步骤四-使用idea打开项目-切换到新建的功能分支\",\"1037\":\"121#步骤五-设置创建类的模板\",\"1038\":\"121#步骤六-将编写好的代码-提交到自己的远程仓库\",\"1039\":\"121#步骤七-创建pr申请-此操作在自己仓库或者要pr的仓库都可以\",\"1040\":\"121#步骤八-等待作者评审-按要求更改-直到没有问题后被作者合并\",\"1041\":\"122\",\"1042\":\"122#_1、项目介绍\",\"1043\":\"122#_2、演示地址\",\"1044\":\"122#_3、开源协议\",\"1045\":\"122#_4、应用场景\",\"1046\":\"122#_5、支持数据库类型\",\"1047\":\"122#_6、支持orm框架类型\",\"1048\":\"122#_7、特别赞助\",\"1049\":\"122#_8、你可以请作者喝杯咖啡表示鼓励\",\"1050\":\"123\",\"1051\":\"123#演示地址\",\"1052\":\"123#演示图\",\"1053\":\"123#_1、新增定义\",\"1054\":\"123#_2、流程设计\",\"1055\":\"123#_2、1节点设置\",\"1056\":\"123#_2、2跳转线设置\",\"1057\":\"123#_3、开启流程实例\",\"1058\":\"123#_4、提交流程\",\"1059\":\"123#_5、办理流程\",\"1060\":\"123#_6、驳回流程\",\"1061\":\"124\",\"1062\":\"125\",\"1063\":\"125#捐赠列表\",\"1064\":\"126\",\"1065\":\"126#_1、监听器大类\",\"1066\":\"126#_2、监听器小类\",\"1067\":\"126#_3、监听器设置\",\"1068\":\"126#_4、匹配规则\",\"1069\":\"126#_5、监听器生命周期图\",\"1070\":\"126#_5、节点和流程监听器\",\"1071\":\"126#_5-1、实现以下接口\",\"1072\":\"126#_5-2、开始监听器实现类例子\",\"1073\":\"126#_5-3、完成监听器实现类例子\",\"1074\":\"126#_5-4、分派监听器实现类例子\",\"1075\":\"126#_5-5、创建监听器\",\"1076\":\"126#_5-6、页面配置全局或节点监听器\",\"1077\":\"126#_5-6-1、节点监听器-流程节点配置\",\"1078\":\"126#_5-6-1、流程监听器-流程定义配置\",\"1079\":\"126#_6、全局监听器\",\"1080\":\"126#_7、监听器参数使用\",\"1081\":\"127\",\"1082\":\"127#_1、mybatis-plus\",\"1083\":\"127#_1-1、spring\",\"1084\":\"127#_1-2、solon\",\"1085\":\"127#_2、通用逻辑删除\",\"1086\":\"128\",\"1087\":\"128#_1、mybatis-plus\",\"1088\":\"128#_2、jpa\",\"1089\":\"128#_3、mybatis-flex\",\"1090\":\"129\",\"1091\":\"129#_1、permissionhandler接口\",\"1092\":\"129#_2、编写permissionhandler实现类\",\"1093\":\"130\",\"1094\":\"130#_1、mybatis-plus\",\"1095\":\"130#_1-1、spring\",\"1096\":\"130#_1-2、solon\",\"1097\":\"130#_2、通用多租户\",\"1098\":\"130#_2-1、yaml配置方式\",\"1099\":\"130#_2-2、bean配置方式\",\"1100\":\"130#_2-3、-component配置方式\",\"1101\":\"131\",\"1102\":\"131#_1、特点\",\"1103\":\"131#_2、内置表达式\",\"1104\":\"131#_3、匹配规则\",\"1105\":\"131#_4、变量替换时机\",\"1106\":\"131#_5、默认办理人变量策略\",\"1107\":\"131#前端页面设置变量\",\"1108\":\"131#后端代码设置变量\",\"1109\":\"131#_6、spel办理人变量策略\",\"1110\":\"131#前端页面设置变量-1\",\"1111\":\"131#后端代码设置变量-1\",\"1112\":\"131#_7、办理人选择项接口\",\"1113\":\"132\",\"1114\":\"132#_1、defservice流程定义接口\",\"1115\":\"132#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"1116\":\"132#_1-2、新增流程定义-并初始化流程节点和流程跳转数据\",\"1117\":\"132#_1-3、导入流程定义、流程节点和流程跳转数据\",\"1118\":\"132#_1-4、保存流程节点和流程跳转数据\",\"1119\":\"132#_1-5、保存流程节点和流程跳转数据\",\"1120\":\"132#_1-6、导出流程定义\",\"1121\":\"132#_1-7、获取流程定义\",\"1122\":\"132#_1-8、删除\",\"1123\":\"132#_1-9、发布\",\"1124\":\"132#_1-10、取消发布\",\"1125\":\"132#_1-11、复制流程\",\"1126\":\"132#_1-12、获取流程图\",\"1127\":\"132#_1-13、激活流程\",\"1128\":\"132#_1-14、挂起流程\",\"1129\":\"132#_1-15、获取流程定义\",\"1130\":\"132#_1-16、查询流程设计所需的数据-比如流程图渲染-导出流程定义\",\"1131\":\"132#_2、insservice流程实例接口\",\"1132\":\"132#_2-1、开启流程\",\"1133\":\"132#_2-2、流程跳转\",\"1134\":\"132#_2-3、终止流程\",\"1135\":\"132#_2-4、删除流程实例\",\"1136\":\"132#_2-5、激活实例\",\"1137\":\"132#_2-6、挂起实例\",\"1138\":\"132#_2-7、根据流程定义id集合-查询流程实例集合\",\"1139\":\"132#_3、taskservice待办任务接口\",\"1140\":\"132#_3-1、流程跳转\",\"1141\":\"132#_3-2、终止流程\",\"1142\":\"132#_3-3、转办\",\"1143\":\"132#_3-4、委派\",\"1144\":\"132#_3-5、加签\",\"1145\":\"132#_3-6、减签\",\"1146\":\"132#_3-7、修改办理人\",\"1147\":\"132#_4、nodeservice节点接口\",\"1148\":\"132#_4-1、获取下一个节点列表\",\"1149\":\"132#_5、公共api接口\",\"1150\":\"132#_5-1、根据id查询\",\"1151\":\"132#_5-2、根据ids主键集合查询\",\"1152\":\"132#_5-3、分页查询\",\"1153\":\"132#_5-4、查询列表\",\"1154\":\"132#_5-5、查询列表-可排序\",\"1155\":\"132#_5-6、查询一条记录\",\"1156\":\"132#_5-7、获取总数量\",\"1157\":\"132#_5-8、判断是否存在\",\"1158\":\"132#_5-8、新增\",\"1159\":\"132#_5-9、根据id修改\",\"1160\":\"132#_5-10、根据id删除\",\"1161\":\"132#_5-11、根据entity删除\",\"1162\":\"132#_5-12、根据ids批量删除\",\"1163\":\"132#_5-13、批量新增\",\"1164\":\"132#_5-14、批量新增\",\"1165\":\"132#_5-15、批量更新\",\"1166\":\"132#_5-16、id设置正序排列\",\"1167\":\"132#_5-17、创建时间设置正序排列\",\"1168\":\"132#_5-18、更新时间设置正序排列\",\"1169\":\"132#_5-19、设置正序排列\",\"1170\":\"132#_5-20、设置倒序排列\",\"1171\":\"132#_5-21、用户自定义排序方案\",\"1172\":\"133\",\"1173\":\"133#_1、流程协作规则\",\"1174\":\"133#_2、使用演示\",\"1175\":\"133#_2-1、或签\",\"1176\":\"133#_2-2、票签签\",\"1177\":\"133#_2-3、会签\",\"1178\":\"134\",\"1179\":\"134#_1、内置表达式类型\",\"1180\":\"134#_2、匹配规则\",\"1181\":\"135\",\"1182\":\"135#_1、spring\",\"1183\":\"135#_1-1、yaml配置方式\",\"1184\":\"135#_1-2、bean配置方式\",\"1185\":\"135#_2、solon\",\"1186\":\"135#_2-1、yaml配置方式\",\"1187\":\"135#_2-1、bean配置方式\",\"1188\":\"136\",\"1189\":\"136#_1、自定义填充器-并继承datafillhandler\",\"1190\":\"136#_2、注入bean\",\"1191\":\"136#_2-1、通过-component方式注入\",\"1192\":\"136#_2-2、yaml配置方式\",\"1193\":\"136#_2-3、-configuration-bean配置方式\",\"1194\":\"137\",\"1195\":\"137#_1-引入依赖\",\"1196\":\"137#springboot\",\"1197\":\"137#solon\",\"1198\":\"137#_2-后端放行部分路径\",\"1199\":\"137#_2-1-spring-security-放行配置\",\"1200\":\"137#_2-2-shiro-放行配置\",\"1201\":\"137#_2-3-sa-token-放行配置\",\"1202\":\"137#_3-前端加载设计器\",\"1203\":\"137#_3-2-vue2-引入\",\"1204\":\"137#_3-3-vue3-引入\",\"1205\":\"137#_3-4-react版本-引入\",\"1206\":\"137#_3-5-前后端不分离版本\",\"1207\":\"137#_4-设计器办理人权限数据接入\",\"1208\":\"137#_4-1-办理人权限选择弹框页面\",\"1209\":\"137#_4-2-实现接口获取以上页面办理人权限数据\",\"1210\":\"137#_4-2-1-handlerselectservice接口\",\"1211\":\"137#_4-2-2-handlerselectserviceimpl实现类\",\"1212\":\"137#_5-共享后端权限-如token\",\"1213\":\"138\",\"1214\":\"138#_1、变更支持的类型\",\"1215\":\"138#_2、接口描述\",\"1216\":\"138#_3、代码示例\",\"1217\":\"139\",\"1218\":\"139#_1、术语\",\"1219\":\"139#_2、通用规则\",\"1220\":\"139#_3、流程状态\",\"1221\":\"139#_4、串行网关规则\",\"1222\":\"139#_5、并行网关规则\",\"1223\":\"140\",\"1224\":\"140#_1、导入sql-按需求执行\",\"1225\":\"140#_2、官网流程定义案例xml\",\"1226\":\"140#_3、maven依赖\",\"1227\":\"140#_3-1、mybatis\",\"1228\":\"140#_3-2、mybatis-plus\",\"1229\":\"140#_3-3、jpa\",\"1230\":\"140#_3-4、mybatis-flex\",\"1231\":\"140#_3-5、easy-query\",\"1232\":\"140#_4、代码示例\",\"1233\":\"140#_4-1、部署流程\",\"1234\":\"140#_4-2、发布流程\",\"1235\":\"140#_4-3、开启流程\",\"1236\":\"140#_4-4、流程流转\",\"1237\":\"140#_5、设计器引入\",\"1238\":\"140#_6、初学者推荐学习路线\",\"1239\":\"140#_6-1、推荐集成案例hh-vue\",\"1240\":\"140#_6-2、推荐学习视频\",\"1241\":\"141\",\"1242\":\"141#_1-1-表清单\",\"1243\":\"141#_1-2-表字段明细\",\"1244\":\"141#_1-2-1-flow-definition-流程定义表\",\"1245\":\"141#_1-2-2-flow-his-task-历史任务记录表\",\"1246\":\"141#_1-2-3-flow-instance-流程实例表\",\"1247\":\"141#_1-2-4-flow-node-流程节点表\",\"1248\":\"141#_1-2-5-flow-skip-节点跳转关联表\",\"1249\":\"141#_1-2-6-flow-task-待办任务表\",\"1250\":\"141#_1-2-7-flow-user-流程用户表\",\"1251\":\"142\",\"1252\":\"143\",\"1253\":\"143#_1、defservice流程定义接口\",\"1254\":\"143#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"1255\":\"143#_1-1、导入流程定义、流程节点和流程跳转数据\",\"1256\":\"143#_1-2、保存流程节点和流程跳转数据\",\"1257\":\"143#_1-3、保存流程节点和流程跳转数据\",\"1258\":\"143#_1-4、导出流程定义\",\"1259\":\"143#_1-5、获取流程定义\",\"1260\":\"143#_1-6、删除\",\"1261\":\"143#_1-7、发布\",\"1262\":\"143#_1-8、取消发布\",\"1263\":\"143#_1-9、复制流程\",\"1264\":\"143#_1-10、获取流程图\",\"1265\":\"143#_1-11、激活流程\",\"1266\":\"143#_1-12、挂起流程\",\"1267\":\"143#_2、insservice流程实例接口\",\"1268\":\"143#_2-1、开启流程\",\"1269\":\"143#_2-2、流程跳转\",\"1270\":\"143#_2-3、终止流程\",\"1271\":\"143#_2-4、删除流程实例\",\"1272\":\"143#_2-5、激活实例\",\"1273\":\"143#_2-6、挂起实例\",\"1274\":\"143#_3、taskservice待办任务接口\",\"1275\":\"143#_3-1、流程跳转\",\"1276\":\"143#_3-2、终止流程\",\"1277\":\"143#_3-3、转办\",\"1278\":\"143#_3-4、委派\",\"1279\":\"143#_3-5、加签\",\"1280\":\"143#_3-6、减签\",\"1281\":\"143#_3-7、修改办理人\",\"1282\":\"143#_4、nodeservice节点接口\",\"1283\":\"143#_4-1、获取下一个节点列表\",\"1284\":\"143#_5、公共api接口\",\"1285\":\"143#_5-1、根据id查询\",\"1286\":\"143#_5-2、根据ids主键集合查询\",\"1287\":\"143#_5-3、分页查询\",\"1288\":\"143#_5-4、查询列表\",\"1289\":\"143#_5-5、查询列表-可排序\",\"1290\":\"143#_5-6、查询一条记录\",\"1291\":\"143#_5-7、获取总数量\",\"1292\":\"143#_5-8、判断是否存在\",\"1293\":\"143#_5-8、新增\",\"1294\":\"143#_5-9、根据id修改\",\"1295\":\"143#_5-10、根据id删除\",\"1296\":\"143#_5-11、根据entity删除\",\"1297\":\"143#_5-12、根据ids批量删除\",\"1298\":\"143#_5-13、批量新增\",\"1299\":\"143#_5-14、批量新增\",\"1300\":\"143#_5-15、批量更新\",\"1301\":\"143#_5-16、id设置正序排列\",\"1302\":\"143#_5-17、创建时间设置正序排列\",\"1303\":\"143#_5-18、更新时间设置正序排列\",\"1304\":\"143#_5-19、设置正序排列\",\"1305\":\"143#_5-20、设置倒序排列\",\"1306\":\"143#_5-21、用户自定义排序方案\",\"1307\":\"144\",\"1308\":\"144#_1、spring\",\"1309\":\"144#_1-1、yaml配置方式\",\"1310\":\"144#_1-2、bean配置方式\",\"1311\":\"144#_2、solon\",\"1312\":\"144#_2-1、yaml配置方式\",\"1313\":\"144#_2-1、bean配置方式\",\"1314\":\"145\",\"1315\":\"145#_1、开启流程\",\"1316\":\"145#_2、流程跳转\",\"1317\":\"145#_3、其他请查阅核心api\",\"1318\":\"146\",\"1319\":\"146#_1、自定义填充器-并继承datafillhandler\",\"1320\":\"146#_2、注入bean\",\"1321\":\"146#_2-1、通过-component方式注入\",\"1322\":\"146#_2-2、yaml配置方式\",\"1323\":\"146#_2-3、-configuration-bean配置方式\",\"1324\":\"147\",\"1325\":\"147#_1-引入依赖\",\"1326\":\"147#_2-后端放行部分路径\",\"1327\":\"147#_2-1-spring-security-放行配置\",\"1328\":\"147#_2-2-shiro-放行配置\",\"1329\":\"147#_2-3-sa-token-放行配置\",\"1330\":\"147#_3-前端加载设计器\",\"1331\":\"147#_3-2-vue2-引入\",\"1332\":\"147#_3-3-vue3-引入\",\"1333\":\"147#_3-4-react版本-引入\",\"1334\":\"147#_3-5-前后端不分离版本\",\"1335\":\"147#_4-设计器办理人权限数据接入\",\"1336\":\"147#_4-1-办理人权限选择弹框页面\",\"1337\":\"147#_4-2-实现接口获取以上页面办理人权限数据\",\"1338\":\"147#_4-2-1-handlerselectservice接口\",\"1339\":\"147#_4-2-2-handlerselectserviceimpl实现类\",\"1340\":\"147#_5-共享后端权限-如token\",\"1341\":\"147#_6-设计器二开\",\"1342\":\"147#_6-1-下载设计器源码-改造\",\"1343\":\"147#_6-2-源码调试\",\"1344\":\"147#_6-3-部署\",\"1345\":\"147#_6-3-1-先排除原依赖的前端代码\",\"1346\":\"147#_6-3-2-设计器不分离部署-部署方案一\",\"1347\":\"147#_6-3-2-设计器独立部署-分离部署-部署方案二\",\"1348\":\"148\",\"1349\":\"148#_1、内置表达式\",\"1350\":\"148#_2、spring-expression-language-spel\",\"1351\":\"148#_3、自定义表达式\",\"1352\":\"149\",\"1353\":\"150\",\"1354\":\"151\",\"1355\":\"151#json库扩展-1\",\"1356\":\"152\",\"1357\":\"152#_1、监听器类型\",\"1358\":\"152#_2、流程监听器和节点监听器\",\"1359\":\"152#_2、监听器生命周期图\",\"1360\":\"152#_3、监听器使用\",\"1361\":\"152#_3-1、实现以下接口\",\"1362\":\"152#_3-2、开始监听器实现类例子\",\"1363\":\"152#_3-3、完成监听器实现类例子\",\"1364\":\"152#_3-4、分派监听器实现类例子\",\"1365\":\"152#_3-5、创建监听器\",\"1366\":\"152#_3-6、页面配置全局或节点监听器\",\"1367\":\"152#_3-6-1、节点监听器-流程节点配置\",\"1368\":\"152#_3-6-1、流程监听器-流程定义配置\",\"1369\":\"152#_4、监听器参数使用\",\"1370\":\"153\",\"1371\":\"153#_1、mybatis-plus\",\"1372\":\"153#_1-1、spring\",\"1373\":\"153#_1-2、solon\",\"1374\":\"153#_2、通用逻辑删除\",\"1375\":\"154\",\"1376\":\"154#_1、mybatis-plus\",\"1377\":\"154#_2、jpa\",\"1378\":\"154#_3、mybatis-flex\",\"1379\":\"155\",\"1380\":\"155#演示图\",\"1381\":\"155#_1、新增定义\",\"1382\":\"155#_2、流程设计\",\"1383\":\"155#_2、1节点设置\",\"1384\":\"155#_2、2跳转线设置\",\"1385\":\"155#_3、开启流程实例\",\"1386\":\"155#_4、提交流程\",\"1387\":\"155#_5、办理流程\",\"1388\":\"155#_6、驳回流程\",\"1389\":\"156\",\"1390\":\"156#_1、术语\",\"1391\":\"156#_2、通用规则\",\"1392\":\"156#_3、流程状态\",\"1393\":\"156#_4、串行网关规则\",\"1394\":\"156#_5、并行网关规则\",\"1395\":\"156#_6、流程协作规则\",\"1396\":\"157\",\"1397\":\"158\",\"1398\":\"158#_1、导入sql-按需求执行\",\"1399\":\"158#_2、官网流程定义案例xml\",\"1400\":\"158#_3、maven依赖\",\"1401\":\"158#_3-1、mybatis\",\"1402\":\"158#_3-2、mybatis-plus\",\"1403\":\"158#_3-3、jpa\",\"1404\":\"158#_3-4、mybatis-flex\",\"1405\":\"158#_3-5、easy-query\",\"1406\":\"158#_4、支持数据库类型\",\"1407\":\"158#_5、支持orm框架类型\",\"1408\":\"158#_6、设计器引入\",\"1409\":\"158#_7、代码示例\",\"1410\":\"158#_7-1、部署流程\",\"1411\":\"158#_7-2、发布流程\",\"1412\":\"158#_7-3、开启流程\",\"1413\":\"158#_7-4、流程流转\",\"1414\":\"158#_8、初学者推荐学习路线\",\"1415\":\"158#_8-1、推荐集成案例hh-vue\",\"1416\":\"158#_8-2、推荐学习视频\",\"1417\":\"159\",\"1418\":\"159#表清单\",\"1419\":\"159#表字段明细\",\"1420\":\"159#flow-definition-流程定义表\",\"1421\":\"159#flow-his-task-历史任务记录表\",\"1422\":\"159#flow-instance-流程实例表\",\"1423\":\"159#flow-node-流程节点表\",\"1424\":\"159#flow-skip-节点跳转关联表\",\"1425\":\"159#flow-task-待办任务表\",\"1426\":\"159#flow-user-流程用户表\",\"1427\":\"160\",\"1428\":\"160#_1、mybatis-plus\",\"1429\":\"160#_1-1、spring\",\"1430\":\"160#_1-2、solon\",\"1431\":\"160#_2、通用多租户\",\"1432\":\"160#_2-1、yaml配置方式\",\"1433\":\"160#_2-2、bean配置方式\",\"1434\":\"160#_2-3、-component配置方式\",\"1435\":\"161\",\"1436\":\"162\",\"1437\":\"162#_1、内置表达式\",\"1438\":\"162#_2、变量替换时机\",\"1439\":\"162#_3、默认办理人变量策略\",\"1440\":\"162#前端页面设置变量\",\"1441\":\"162#后端代码设置变量\",\"1442\":\"162#_4、spel办理人变量策略\",\"1443\":\"162#前端页面设置变量-1\",\"1444\":\"162#后端代码设置变量-1\",\"1445\":\"162#_5、扩展\",\"1446\":\"163\",\"1447\":\"163#_1、表达式公共接口\",\"1448\":\"163#_2、注册表达式实现类\",\"1449\":\"163#_3、条件表达式\",\"1450\":\"163#_3-1、条件表达式接口\",\"1451\":\"163#_3-2、条件表达式抽象类\",\"1452\":\"163#_3-3、条件表达式实现类\",\"1453\":\"164\",\"1454\":\"164#_1、开启流程\",\"1455\":\"164#_2、流程跳转\",\"1456\":\"164#_3、其他请查阅核心api\",\"1457\":\"165\",\"1458\":\"165#_1-下载设计器源码-改造\",\"1459\":\"165#_2-源码调试\",\"1460\":\"165#_3-部署\",\"1461\":\"165#_3-1-先排除原依赖的前端代码\",\"1462\":\"165#_3-2-设计器不分离部署-部署方案一\",\"1463\":\"165#_3-3-设计器独立部署-分离部署-部署方案二\",\"1464\":\"166\",\"1465\":\"166#_1、表达式公共接口\",\"1466\":\"166#_2、注册表达式实现类\",\"1467\":\"167\",\"1468\":\"168\",\"1469\":\"168#json库扩展-1\",\"1470\":\"169\",\"1471\":\"169#_1、表达式公共接口\",\"1472\":\"169#_2、注册表达式实现类\",\"1473\":\"169#_3-监听器表达式\",\"1474\":\"169#_3-1、监听器表达式接口\",\"1475\":\"169#_3-2、监听器表达式实现类\",\"1476\":\"170\",\"1477\":\"170#_1、表达式公共接口\",\"1478\":\"170#_2、注册表达式实现类\",\"1479\":\"170#_3、办理人变量表达式\",\"1480\":\"170#_3-1、办理人变量表达式接口\",\"1481\":\"170#_3-2、办理人变量表达式实现类\",\"1482\":\"171\",\"1483\":\"171#_1、监听器小类\",\"1484\":\"171#_2、监听器大类\",\"1485\":\"171#_3、监听器生命周期图\",\"1486\":\"171#_4、监听器设置\",\"1487\":\"171#_5、匹配规则\",\"1488\":\"171#_5、节点和流程监听器\",\"1489\":\"171#_5-1、实现以下接口\",\"1490\":\"171#_5-2、开始监听器实现类例子\",\"1491\":\"171#_5-3、完成监听器实现类例子\",\"1492\":\"171#_5-4、可实现的效果\",\"1493\":\"171#_5-5、创建监听器\",\"1494\":\"171#_5-6、页面配置全局或节点监听器\",\"1495\":\"171#_5-6-1、节点监听器-流程节点配置\",\"1496\":\"171#_5-6-1、流程监听器-流程定义配置\",\"1497\":\"171#_6、全局监听器\",\"1498\":\"171#_7、监听器参数使用\",\"1499\":\"172\",\"1500\":\"172#_1、mybatis-plus\",\"1501\":\"172#_1-1、配置默认逻辑删除值\",\"1502\":\"172#_1-2、关闭逻辑删除方案\",\"1503\":\"172#_2、通用逻辑删除\",\"1504\":\"173\",\"1505\":\"173#_1、mybatis-plus\",\"1506\":\"174\",\"1507\":\"174#_1、permissionhandler接口\",\"1508\":\"174#_2、编写permissionhandler实现类\",\"1509\":\"175\",\"1510\":\"175#_1、mybatis-plus\",\"1511\":\"175#_2、通用多租户\",\"1512\":\"176\",\"1513\":\"176#_1、特点\",\"1514\":\"176#_2、内置表达式\",\"1515\":\"176#_3、匹配规则\",\"1516\":\"176#_4、变量替换时机\",\"1517\":\"176#_5、可实现的效果\",\"1518\":\"176#_5、默认办理人变量策略\",\"1519\":\"176#前端页面设置变量\",\"1520\":\"176#后端代码设置变量\",\"1521\":\"176#_7、spel办理人变量策略\",\"1522\":\"176#前端页面设置变量-1\",\"1523\":\"176#后端代码设置变量-1\",\"1524\":\"176#_8、办理人选择项接口\",\"1525\":\"177\",\"1526\":\"178\",\"1527\":\"178#参与贡献\",\"1528\":\"178#为开源项目点一个star\",\"1529\":\"178#为社区处理问题\",\"1530\":\"178#改进社区文档-文档仓库\",\"1531\":\"178#贡献代码\",\"1532\":\"178#如何成为项目贡献者\",\"1533\":\"178#项目贡献者待遇\",\"1534\":\"178#提交pr\",\"1535\":\"178#步骤一-fork项目到自己仓库\",\"1536\":\"178#步骤二-基于dev分支-新建一个此pr功能点的专属分支\",\"1537\":\"178#步骤三-使用git工具-将自己仓库的项目拉去到本地做代码编写\",\"1538\":\"178#步骤四-使用idea打开项目-切换到新建的功能分支\",\"1539\":\"178#步骤五-设置创建类的模板\",\"1540\":\"178#步骤六-将编写好的代码-提交到自己的远程仓库\",\"1541\":\"178#步骤七-创建pr申请-此操作在自己仓库或者要pr的仓库都可以\",\"1542\":\"178#步骤八-等待作者评审-按要求更改-直到没有问题后被作者合并\",\"1543\":\"179\",\"1544\":\"179#_1、项目介绍\",\"1545\":\"179#_2、演示地址\",\"1546\":\"179#_3、应用场景\",\"1547\":\"179#_4、支持数据库类型\",\"1548\":\"179#_5、支持orm框架类型\",\"1549\":\"180\",\"1550\":\"181\",\"1551\":\"181#演示地址\",\"1552\":\"181#演示图\",\"1553\":\"181#_1、新增定义\",\"1554\":\"181#_2、流程设计\",\"1555\":\"181#_2、1节点设置\",\"1556\":\"181#_2、2跳转线设置\",\"1557\":\"181#_3、开启流程实例\",\"1558\":\"181#_4、提交流程\",\"1559\":\"181#_5、办理流程\",\"1560\":\"181#_6、驳回流程\",\"1561\":\"182\",\"1562\":\"183\",\"1563\":\"183#捐赠列表\",\"1564\":\"184\",\"1565\":\"184#defservice流程定义\",\"1566\":\"184#导入流程输入流\",\"1567\":\"184#导入流程json字符串\",\"1568\":\"184#导入流程json对象\",\"1569\":\"184#新增流程\",\"1570\":\"184#只新增流程定义表数据\",\"1571\":\"184#保存流程节点和跳转\",\"1572\":\"184#导出流程定义json字符串\",\"1573\":\"184#获取流程定义全部数据对象\",\"1574\":\"184#查询流程设计所需的数据\",\"1575\":\"184#更新流程定义发布状态\",\"1576\":\"184#删除\",\"1577\":\"184#发布\",\"1578\":\"184#取消发布\",\"1579\":\"184#复制流程\",\"1580\":\"184#激活流程\",\"1581\":\"184#挂起流程\",\"1582\":\"184#chartservice流程图绘制接口\",\"1583\":\"184#流程图-渲染状态\",\"1584\":\"184#流程图-不渲染状态\",\"1585\":\"184#流程图-渲染状态-可扩展\",\"1586\":\"184#流程图-不渲染状态-可扩展\",\"1587\":\"184#流程图-渲染状态-自行渲染\",\"1588\":\"184#流程图-不渲染状态-自行渲染\",\"1589\":\"184#insservice流程实例\",\"1590\":\"184#开启流程\",\"1591\":\"184#流程跳转\",\"1592\":\"184#终止流程\",\"1593\":\"184#删除流程实例\",\"1594\":\"184#激活实例\",\"1595\":\"184#挂起实例\",\"1596\":\"184#查询流程实例集合\",\"1597\":\"184#taskservice待办任务\",\"1598\":\"184#流程跳转-1\",\"1599\":\"184#终止流程-1\",\"1600\":\"184#转办\",\"1601\":\"184#委派\",\"1602\":\"184#加签\",\"1603\":\"184#减签\",\"1604\":\"184#修改办理人\",\"1605\":\"184#nodeservice流程节点\",\"1606\":\"184#获取已发布流程节点\",\"1607\":\"184#获取前置节点\",\"1608\":\"184#获取前置节点-1\",\"1609\":\"184#获取后置节点\",\"1610\":\"184#获取后置节点-1\",\"1611\":\"184#获取后置置节点-含过滤\",\"1612\":\"184#histaskservice历史记录\",\"1613\":\"184#根据任务id和协作类型查询\",\"1614\":\"184#根据实例id和节点编码查询\",\"1615\":\"184#根据流程实例ids删除\",\"1616\":\"184#公共api接口\",\"1617\":\"184#根据id查询\",\"1618\":\"184#根据ids主键集合查询\",\"1619\":\"184#分页查询\",\"1620\":\"184#查询列表\",\"1621\":\"184#查询列表-可排序\",\"1622\":\"184#查询一条记录\",\"1623\":\"184#获取总数量\",\"1624\":\"184#判断是否存在\",\"1625\":\"184#新增\",\"1626\":\"184#根据id修改\",\"1627\":\"184#根据id删除\",\"1628\":\"184#根据entity删除\",\"1629\":\"184#根据ids批量删除\",\"1630\":\"184#批量新增\",\"1631\":\"184#批量新增-1\",\"1632\":\"184#批量更新\",\"1633\":\"184#id设置正序排列\",\"1634\":\"184#创建时间设置正序排列\",\"1635\":\"184#更新时间设置正序排列\",\"1636\":\"184#设置正序排列\",\"1637\":\"184#设置倒序排列\",\"1638\":\"184#用户自定义排序方案\",\"1639\":\"185\",\"1640\":\"185#_1、流程协作规则\",\"1641\":\"185#_2、使用演示\",\"1642\":\"185#_2-1、或签\",\"1643\":\"185#_2-2、票签\",\"1644\":\"185#_2-3、会签\",\"1645\":\"186\",\"1646\":\"186#_1、内置表达式类型\",\"1647\":\"186#_2、匹配规则\",\"1648\":\"187\",\"1649\":\"188\",\"1650\":\"188#_1、自定义填充器-并继承datafillhandler\",\"1651\":\"188#_2、注入bean\",\"1652\":\"189\",\"1653\":\"189#_1-引入依赖\",\"1654\":\"189#_2-后端放行部分路径\",\"1655\":\"189#_3-前端引入设计器\",\"1656\":\"189#_4-设计器办理人权限数据接入\",\"1657\":\"189#_4-1-办理人权限选择弹框页面\",\"1658\":\"189#_4-2-实现接口获取以上页面办理人权限数据\",\"1659\":\"189#_4-2-1-handlerselectservice接口\",\"1660\":\"189#_4-2-2-handlerselectserviceimpl实现类\",\"1661\":\"189#_5-共享后端权限-如token\",\"1662\":\"190\",\"1663\":\"190#_1、变更支持的类型\",\"1664\":\"190#_2、接口描述\",\"1665\":\"190#_3、代码示例\",\"1666\":\"191\",\"1667\":\"191#_1、术语\",\"1668\":\"191#_2、通用规则\",\"1669\":\"191#_3、流程状态\",\"1670\":\"191#_4、串行网关规则\",\"1671\":\"191#_5、并行网关规则\",\"1672\":\"191#_6、流程图元数据流程状态规则\",\"1673\":\"192\",\"1674\":\"192#_1、导入sql-按需求执行\",\"1675\":\"192#_2、官网流程定义案例xml\",\"1676\":\"192#_3、maven依赖\",\"1677\":\"192#_3-1、从首页获取最新版本\",\"1678\":\"192#_3-2、mybatis\",\"1679\":\"192#_3-3、mybatis-plus\",\"1680\":\"192#_3-4、jpa\",\"1681\":\"192#_3-5、mybatis-flex\",\"1682\":\"192#_3-6、easy-query\",\"1683\":\"192#_4、代码示例\",\"1684\":\"192#_5、设计器引入\",\"1685\":\"192#_6、初学者推荐学习路线\",\"1686\":\"192#_6-1、推荐集成案例hh-vue\",\"1687\":\"192#_6-2、推荐学习视频\",\"1688\":\"193\",\"1689\":\"193#_1-1-表清单\",\"1690\":\"193#_1-2-表字段明细\",\"1691\":\"193#_1-2-1-flow-definition-流程定义表\",\"1692\":\"193#_1-2-2-flow-his-task-历史任务记录表\",\"1693\":\"193#_1-2-3-flow-instance-流程实例表\",\"1694\":\"193#_1-2-4-flow-node-流程节点表\",\"1695\":\"193#_1-2-5-flow-skip-节点跳转关联表\",\"1696\":\"193#_1-2-6-flow-task-待办任务表\",\"1697\":\"193#_1-2-7-flow-user-流程用户表\",\"1698\":\"194\",\"1699\":\"195\",\"1700\":\"195#_1、沟通群和公众号\",\"1701\":\"195#_2、提交issue\",\"1702\":\"195#_3、内部群\",\"1703\":\"196\",\"1704\":\"197\",\"1705\":\"197#vip群\",\"1706\":\"197#私人服务\",\"1707\":\"197#特别赞助\",\"1708\":\"198\",\"1709\":\"199\",\"1710\":\"199#_1、id精度丢失\",\"1711\":\"199#_2、流程图片中文乱码\",\"1712\":\"199#_3、initflow-未加载\",\"1713\":\"199#_4、监听器等对象获取不到\",\"1714\":\"199#_5、类型转换异常\",\"1715\":\"199#_6、hh-vue切换mybaits-plus\",\"1716\":\"199#_7、导入依赖包失败\",\"1717\":\"199#_8、-stackoverflowerror-错误\",\"1718\":\"199#_9、-后端接收流程xml部分丢失\",\"1719\":\"200\",\"1720\":\"200#未来发布计划\",\"1721\":\"200#vx-x-x\",\"1722\":\"200#开发中计划\",\"1723\":\"200#v1-6-7-2025-02-24\",\"1724\":\"200#更新日志-1\",\"1725\":\"200#v1-6-6-2025-01-23\",\"1726\":\"200#v1-3-8-2025-01-07\",\"1727\":\"200#v1-3-7-2024-12-31\",\"1728\":\"200#v1-3-6-2024-12-23\",\"1729\":\"200#v1-3-5-2024-12-20\",\"1730\":\"200#v1-3-4-2024-11-25\",\"1731\":\"200#v1-3-3-2024-11-12\",\"1732\":\"200#v1-3-1-2024-11-01\",\"1733\":\"200#v1-3-0-2024-10-23\",\"1734\":\"200#v1-2-8-2024-09-25\",\"1735\":\"200#v1-2-7-2024-09-03\",\"1736\":\"200#v1-2-6-2024-08-28\",\"1737\":\"200#v1-2-4-2024-08-14\",\"1738\":\"200#v1-2-3-2024-06-28\",\"1739\":\"200#v1-2-1-2024-06-28\",\"1740\":\"200#v1-2-0-2024-06-13\",\"1741\":\"200#v1-1-9-2024-05-08\",\"1742\":\"200#v1-1-7-2024-04-27\",\"1743\":\"200#v1-1-6-2024-04-23\",\"1744\":\"200#v1-1-5-2024-04-17\",\"1745\":\"200#v1-1-4-2024-04-07\",\"1746\":\"200#v1-1-3-2024-04-02\",\"1747\":\"200#v1-1-2-2024-03-27\",\"1748\":\"200#v1-1-1-2024-03-22\",\"1749\":\"200#v1-1-0-2024-03-21\",\"1750\":\"200#v1-0-4-2024-03-06\",\"1751\":\"200#v1-0-3-2024-03-05\",\"1752\":\"200#v1-0-2-2023-12-31\",\"1753\":\"200#v1-0-0-2023-12-28\",\"1754\":\"201\",\"1755\":\"201#v1-6-6\",\"1756\":\"201#v1-3-7\",\"1757\":\"201#v1-3-5\",\"1758\":\"201#v1-3-4\",\"1759\":\"201#v1-3-3\",\"1760\":\"201#v1-3-1\",\"1761\":\"201#v1-3-0\",\"1762\":\"201#v1-2-8\",\"1763\":\"201#v1-2-6\",\"1764\":\"201#v1-2-4\",\"1765\":\"201#v1-2-1\",\"1766\":\"201#v1-2-0\",\"1767\":\"201#v1-1-9\",\"1768\":\"202\",\"1769\":\"202#_1、追加文字\",\"1770\":\"202#_1-1、保存需要追加的文字\",\"1771\":\"202#_1-2、追加文字\",\"1772\":\"202#_1-3、效果图\",\"1773\":\"202#_2、自定义流程图节点颜色\",\"1774\":\"202#_2-1、配置文件\",\"1775\":\"202#_2-2、效果图\",\"1776\":\"203\",\"1777\":\"203#_1、监听器小类\",\"1778\":\"203#_2、监听器大类\",\"1779\":\"203#_3、监听器生命周期图\",\"1780\":\"203#_4、监听器设置\",\"1781\":\"203#_5、匹配规则\",\"1782\":\"203#_5、节点和流程监听器\",\"1783\":\"203#_5-1、实现以下接口\",\"1784\":\"203#_5-2、开始监听器实现类例子\",\"1785\":\"203#_5-3、完成监听器实现类例子\",\"1786\":\"203#_5-4、可实现的效果\",\"1787\":\"203#_5-5、创建监听器\",\"1788\":\"203#_5-6、页面配置全局或节点监听器\",\"1789\":\"203#_5-6-1、节点监听器-流程节点配置\",\"1790\":\"203#_5-6-1、流程监听器-流程定义配置\",\"1791\":\"203#_6、全局监听器\",\"1792\":\"203#_7、监听器参数使用\",\"1793\":\"204\",\"1794\":\"204#_1、mybatis-plus\",\"1795\":\"204#_1-1、配置默认逻辑删除值\",\"1796\":\"204#_1-2、关闭逻辑删除方案\",\"1797\":\"204#_2、通用逻辑删除\",\"1798\":\"205\",\"1799\":\"205#_1、实现节点扩展属性数据模型接口\",\"1800\":\"205#_2、扩展属性数据模型规则\",\"1801\":\"205#_3、设计器渲染效果\",\"1802\":\"205#_4、扩展属性入库\",\"1803\":\"205#_5、扩展属性使用\",\"1804\":\"206\",\"1805\":\"206#_1、mybatis-plus\",\"1806\":\"207\",\"1807\":\"207#_1、permissionhandler接口\",\"1808\":\"207#_2、编写permissionhandler实现类\",\"1809\":\"208\",\"1810\":\"208#_1、mybatis-plus\",\"1811\":\"208#_2、通用多租户\",\"1812\":\"209\",\"1813\":\"209#_1、特点\",\"1814\":\"209#_2、内置表达式\",\"1815\":\"209#_3、匹配规则\",\"1816\":\"209#_4、变量替换时机\",\"1817\":\"209#_5、可实现的效果\",\"1818\":\"209#_5、默认办理人变量策略\",\"1819\":\"209#前端页面设置变量\",\"1820\":\"209#后端代码设置变量\",\"1821\":\"209#_7、spel办理人变量策略\",\"1822\":\"209#前端页面设置变量-1\",\"1823\":\"209#后端代码设置变量-1\",\"1824\":\"209#_8、办理人选择项接口\",\"1825\":\"210\",\"1826\":\"210#_1、表达式公共接口\",\"1827\":\"210#_2、注册表达式实现类\",\"1828\":\"210#_3、条件表达式\",\"1829\":\"210#_3-1、条件表达式接口\",\"1830\":\"210#_3-2、条件表达式抽象类\",\"1831\":\"210#_3-3、条件表达式实现类\",\"1832\":\"211\",\"1833\":\"211#_1、开启流程\",\"1834\":\"211#_2、流程跳转\",\"1835\":\"211#_3、其他请查阅核心api\",\"1836\":\"212\",\"1837\":\"212#_1-下载设计器源码-改造\",\"1838\":\"212#_2-源码调试\",\"1839\":\"212#_3-部署\",\"1840\":\"212#_3-1-先排除原依赖的前端代码\",\"1841\":\"212#_3-2-设计器不分离部署-部署方案一\",\"1842\":\"212#_3-3-设计器独立部署-分离部署-部署方案二\",\"1843\":\"213\",\"1844\":\"213#_1、表达式公共接口\",\"1845\":\"213#_2、注册表达式实现类\",\"1846\":\"214\",\"1847\":\"215\",\"1848\":\"215#json库扩展-1\",\"1849\":\"216\",\"1850\":\"216#_1、表达式公共接口\",\"1851\":\"216#_2、注册表达式实现类\",\"1852\":\"216#_3-监听器表达式\",\"1853\":\"216#_3-1、监听器表达式接口\",\"1854\":\"216#_3-2、监听器表达式实现类\",\"1855\":\"217\",\"1856\":\"217#_1、表达式公共接口\",\"1857\":\"217#_2、注册表达式实现类\",\"1858\":\"217#_3、办理人变量表达式\",\"1859\":\"217#_3-1、办理人变量表达式接口\",\"1860\":\"217#_3-2、办理人变量表达式实现类\",\"1861\":\"218\",\"1862\":\"219\",\"1863\":\"219#参与贡献\",\"1864\":\"219#为开源项目点一个star\",\"1865\":\"219#为社区处理问题\",\"1866\":\"219#改进社区文档-文档仓库\",\"1867\":\"219#贡献代码\",\"1868\":\"219#如何成为项目贡献者\",\"1869\":\"219#项目贡献者待遇\",\"1870\":\"219#提交pr\",\"1871\":\"219#步骤一-fork项目到自己仓库\",\"1872\":\"219#步骤二-基于dev分支-新建一个此pr功能点的专属分支\",\"1873\":\"219#步骤三-使用git工具-将自己仓库的项目拉去到本地做代码编写\",\"1874\":\"219#步骤四-使用idea打开项目-切换到新建的功能分支\",\"1875\":\"219#步骤五-设置创建类的模板\",\"1876\":\"219#步骤六-将编写好的代码-提交到自己的远程仓库\",\"1877\":\"219#步骤七-创建pr申请-此操作在自己仓库或者要pr的仓库都可以\",\"1878\":\"219#步骤八-等待作者评审-按要求更改-直到没有问题后被作者合并\",\"1879\":\"220\",\"1880\":\"220#_1、项目介绍\",\"1881\":\"220#_2、演示地址\",\"1882\":\"220#_3、与activiti、flowable对比\",\"1883\":\"220#_4、应用场景\",\"1884\":\"220#_5、支持数据库类型\",\"1885\":\"220#_6、支持orm框架类型\",\"1886\":\"221\",\"1887\":\"222\",\"1888\":\"222#演示地址\",\"1889\":\"222#演示图\",\"1890\":\"222#_1、新增定义\",\"1891\":\"222#_2、流程设计\",\"1892\":\"222#_2、1节点设置\",\"1893\":\"222#_2、2跳转线设置\",\"1894\":\"222#_3、开启流程实例\",\"1895\":\"222#_4、提交流程\",\"1896\":\"222#_5、办理流程\",\"1897\":\"222#_6、驳回流程\",\"1898\":\"223\",\"1899\":\"224\",\"1900\":\"224#捐赠列表\",\"1901\":\"225\",\"1902\":\"225#_1、沟通群和公众号\",\"1903\":\"225#_2、提交issue\",\"1904\":\"225#_3、内部群\",\"1905\":\"226\",\"1906\":\"227\",\"1907\":\"227#vip群\",\"1908\":\"227#私人服务\",\"1909\":\"227#特别赞助\",\"1910\":\"228\",\"1911\":\"229\",\"1912\":\"229#_1、id精度丢失\",\"1913\":\"229#_2、流程图片中文乱码\",\"1914\":\"229#_3、initflow-未加载\",\"1915\":\"229#_4、监听器等对象获取不到\",\"1916\":\"229#_5、类型转换异常\",\"1917\":\"229#_6、hh-vue切换mybaits-plus\",\"1918\":\"229#_7、导入依赖包失败\",\"1919\":\"229#_8、-stackoverflowerror-错误\",\"1920\":\"229#_9、-后端接收流程xml部分丢失\",\"1921\":\"230\",\"1922\":\"230#未来发布计划\",\"1923\":\"230#vx-x-x\",\"1924\":\"230#开发中计划\",\"1925\":\"230#v1-6-8-2025-03-20\",\"1926\":\"230#更新日志-1\",\"1927\":\"230#v1-6-7-2025-03-03\",\"1928\":\"230#v1-6-6-2025-01-23\",\"1929\":\"230#v1-3-8-2025-01-07\",\"1930\":\"230#v1-3-7-2024-12-31\",\"1931\":\"230#v1-3-6-2024-12-23\",\"1932\":\"230#v1-3-5-2024-12-20\",\"1933\":\"230#v1-3-4-2024-11-25\",\"1934\":\"230#v1-3-3-2024-11-12\",\"1935\":\"230#v1-3-1-2024-11-01\",\"1936\":\"230#v1-3-0-2024-10-23\",\"1937\":\"230#v1-2-8-2024-09-25\",\"1938\":\"230#v1-2-7-2024-09-03\",\"1939\":\"230#v1-2-6-2024-08-28\",\"1940\":\"230#v1-2-4-2024-08-14\",\"1941\":\"230#v1-2-3-2024-06-28\",\"1942\":\"230#v1-2-1-2024-06-28\",\"1943\":\"230#v1-2-0-2024-06-13\",\"1944\":\"230#v1-1-9-2024-05-08\",\"1945\":\"230#v1-1-7-2024-04-27\",\"1946\":\"230#v1-1-6-2024-04-23\",\"1947\":\"230#v1-1-5-2024-04-17\",\"1948\":\"230#v1-1-4-2024-04-07\",\"1949\":\"230#v1-1-3-2024-04-02\",\"1950\":\"230#v1-1-2-2024-03-27\",\"1951\":\"230#v1-1-1-2024-03-22\",\"1952\":\"230#v1-1-0-2024-03-21\",\"1953\":\"230#v1-0-4-2024-03-06\",\"1954\":\"230#v1-0-3-2024-03-05\",\"1955\":\"230#v1-0-2-2023-12-31\",\"1956\":\"230#v1-0-0-2023-12-28\",\"1957\":\"231\",\"1958\":\"231#v1-6-7\",\"1959\":\"231#v1-6-6\",\"1960\":\"231#v1-3-7\",\"1961\":\"231#v1-3-5\",\"1962\":\"231#v1-3-4\",\"1963\":\"231#v1-3-3\",\"1964\":\"231#v1-3-1\",\"1965\":\"231#v1-3-0\",\"1966\":\"231#v1-2-8\",\"1967\":\"231#v1-2-6\",\"1968\":\"231#v1-2-4\",\"1969\":\"231#v1-2-1\",\"1970\":\"231#v1-2-0\",\"1971\":\"231#v1-1-9\",\"1972\":\"232\",\"1973\":\"232#defservice流程定义\",\"1974\":\"232#导入流程输入流\",\"1975\":\"232#导入流程json字符串\",\"1976\":\"232#导入流程json对象\",\"1977\":\"232#新增流程\",\"1978\":\"232#只新增流程定义表数据\",\"1979\":\"232#保存流程节点和跳转\",\"1980\":\"232#导出流程定义json字符串\",\"1981\":\"232#获取流程定义全部数据对象\",\"1982\":\"232#查询流程设计所需的数据\",\"1983\":\"232#更新流程定义发布状态\",\"1984\":\"232#删除\",\"1985\":\"232#发布\",\"1986\":\"232#取消发布\",\"1987\":\"232#复制流程\",\"1988\":\"232#激活流程\",\"1989\":\"232#挂起流程\",\"1990\":\"232#chartservice流程图绘制接口\",\"1991\":\"232#流程图-渲染状态\",\"1992\":\"232#流程图-不渲染状态\",\"1993\":\"232#流程图-渲染状态-可扩展\",\"1994\":\"232#流程图-不渲染状态-可扩展\",\"1995\":\"232#流程图-渲染状态-自行渲染\",\"1996\":\"232#流程图-不渲染状态-自行渲染\",\"1997\":\"232#insservice流程实例\",\"1998\":\"232#开启流程\",\"1999\":\"232#流程跳转\",\"2000\":\"232#终止流程\",\"2001\":\"232#删除流程实例\",\"2002\":\"232#激活实例\",\"2003\":\"232#挂起实例\",\"2004\":\"232#查询流程实例集合\",\"2005\":\"232#taskservice待办任务\",\"2006\":\"232#流程跳转-1\",\"2007\":\"232#终止流程-1\",\"2008\":\"232#转办\",\"2009\":\"232#委派\",\"2010\":\"232#加签\",\"2011\":\"232#减签\",\"2012\":\"232#修改办理人\",\"2013\":\"232#nodeservice流程节点\",\"2014\":\"232#获取已发布流程节点\",\"2015\":\"232#获取前置节点\",\"2016\":\"232#获取前置节点-1\",\"2017\":\"232#获取后置节点\",\"2018\":\"232#获取后置节点-1\",\"2019\":\"232#获取后置置节点-含过滤\",\"2020\":\"232#histaskservice历史记录\",\"2021\":\"232#根据任务id和协作类型查询\",\"2022\":\"232#根据实例id和节点编码查询\",\"2023\":\"232#根据流程实例ids删除\",\"2024\":\"232#公共api接口\",\"2025\":\"232#根据id查询\",\"2026\":\"232#根据ids主键集合查询\",\"2027\":\"232#分页查询\",\"2028\":\"232#查询列表\",\"2029\":\"232#查询列表-可排序\",\"2030\":\"232#查询一条记录\",\"2031\":\"232#获取总数量\",\"2032\":\"232#判断是否存在\",\"2033\":\"232#新增\",\"2034\":\"232#根据id修改\",\"2035\":\"232#根据id删除\",\"2036\":\"232#根据entity删除\",\"2037\":\"232#根据ids批量删除\",\"2038\":\"232#批量新增\",\"2039\":\"232#批量新增-1\",\"2040\":\"232#批量更新\",\"2041\":\"232#id设置正序排列\",\"2042\":\"232#创建时间设置正序排列\",\"2043\":\"232#更新时间设置正序排列\",\"2044\":\"232#设置正序排列\",\"2045\":\"232#设置倒序排列\",\"2046\":\"232#用户自定义排序方案\",\"2047\":\"233\",\"2048\":\"233#_1、流程协作规则\",\"2049\":\"233#_2、使用演示\",\"2050\":\"233#_2-1、或签\",\"2051\":\"233#_2-2、票签\",\"2052\":\"233#_2-3、会签\",\"2053\":\"234\",\"2054\":\"234#_1、内置表达式类型\",\"2055\":\"234#_2、匹配规则\",\"2056\":\"235\",\"2057\":\"236\",\"2058\":\"236#_1、自定义填充器-并继承datafillhandler\",\"2059\":\"236#_2、注入bean\",\"2060\":\"237\",\"2061\":\"237#_1-引入依赖\",\"2062\":\"237#_2-后端放行部分路径\",\"2063\":\"237#_3-前端引入设计器\",\"2064\":\"237#_4-设计器办理人权限数据接入\",\"2065\":\"237#_4-1-办理人权限选择弹框页面\",\"2066\":\"237#_4-2-实现接口获取以上页面办理人权限数据\",\"2067\":\"237#_4-2-1-handlerselectservice接口\",\"2068\":\"237#_4-2-2-handlerselectserviceimpl实现类\",\"2069\":\"237#_5-共享后端权限-如token\",\"2070\":\"238\",\"2071\":\"238#_1、变更支持的类型\",\"2072\":\"238#_2、接口描述\",\"2073\":\"238#_3、代码示例\",\"2074\":\"239\",\"2075\":\"239#_1、术语\",\"2076\":\"239#_2、通用规则\",\"2077\":\"239#_3、流程状态\",\"2078\":\"239#_4、串行网关规则\",\"2079\":\"239#_5、并行网关规则\",\"2080\":\"239#_6、流程图元数据流程状态规则\",\"2081\":\"240\",\"2082\":\"240#_1、导入sql-按需求执行\",\"2083\":\"240#_2、官网流程定义案例xml\",\"2084\":\"240#_3、maven依赖\",\"2085\":\"240#_3-1、从首页获取最新版本\",\"2086\":\"240#_3-2、mybatis\",\"2087\":\"240#_3-3、mybatis-plus\",\"2088\":\"240#_3-4、jpa\",\"2089\":\"240#_3-5、mybatis-flex\",\"2090\":\"240#_3-6、easy-query\",\"2091\":\"240#_4、代码示例\",\"2092\":\"240#_5、设计器引入\",\"2093\":\"240#_6、初学者推荐学习路线\",\"2094\":\"240#_6-1、推荐集成案例hh-vue\",\"2095\":\"240#_6-2、推荐学习视频\",\"2096\":\"241\",\"2097\":\"241#_1-1-表清单\",\"2098\":\"241#_1-2-表字段明细\",\"2099\":\"241#_1-2-1-flow-definition-流程定义表\",\"2100\":\"241#_1-2-2-flow-his-task-历史任务记录表\",\"2101\":\"241#_1-2-3-flow-instance-流程实例表\",\"2102\":\"241#_1-2-4-flow-node-流程节点表\",\"2103\":\"241#_1-2-5-flow-skip-节点跳转关联表\",\"2104\":\"241#_1-2-6-flow-task-待办任务表\",\"2105\":\"241#_1-2-7-flow-user-流程用户表\",\"2106\":\"242\",\"2107\":\"243\",\"2108\":\"243#_1-引入依赖\",\"2109\":\"243#_2-后端放行部分路径\",\"2110\":\"243#_3-前端加载设计器\",\"2111\":\"243#_4-设计器办理人权限数据接入\",\"2112\":\"243#_4-1-办理人权限选择弹框页面\",\"2113\":\"243#_4-2-实现接口获取以上页面办理人权限数据\",\"2114\":\"243#_4-2-1-handlerselectservice接口\",\"2115\":\"243#_5、项目介绍\",\"2116\":\"243#_6、演示地址\",\"2117\":\"243#_7、官网\",\"2118\":\"244\",\"2119\":\"244#_1-引入依赖\",\"2120\":\"244#_2-后端放行部分路径\",\"2121\":\"244#_3-前端加载设计器\",\"2122\":\"244#_4-设计器办理人权限数据接入\",\"2123\":\"244#_4-1-办理人权限选择弹框页面\",\"2124\":\"244#_4-2-实现接口获取以上页面办理人权限数据\",\"2125\":\"244#_4-2-1-handlerselectservice接口\",\"2126\":\"244#_5、项目介绍\",\"2127\":\"244#_6、演示地址\",\"2128\":\"244#_7、官网\",\"2129\":\"245\",\"2130\":\"245#_1、老群被干没了-新群\",\"2131\":\"245#_2、详细更新内容\",\"2132\":\"245#_3、项目介绍\",\"2133\":\"245#_4、演示地址\",\"2134\":\"245#_7、官网\",\"2135\":\"246\",\"2136\":\"246#_1-引入依赖\",\"2137\":\"246#_2-后端放行部分路径\",\"2138\":\"246#_3-前端加载设计器\",\"2139\":\"246#_4-设计器办理人权限数据接入\",\"2140\":\"246#_4-1-办理人权限选择弹框页面\",\"2141\":\"246#_4-2-实现接口获取以上页面办理人权限数据\",\"2142\":\"246#_4-2-1-handlerselectservice接口\",\"2143\":\"246#_5、项目介绍\",\"2144\":\"246#_6、演示地址\",\"2145\":\"246#_7、官网\",\"2146\":\"247\",\"2147\":\"247#dromara-warmflow工作流动态指定办理人\",\"2148\":\"247#背景\",\"2149\":\"247#解决思路\",\"2150\":\"247#高级玩法\",\"2151\":\"247#总结\",\"2152\":\"248\",\"2153\":\"248#_1-引入依赖\",\"2154\":\"248#_2-后端放行部分路径\",\"2155\":\"248#_3-前端加载设计器\",\"2156\":\"248#_4-设计器办理人权限数据接入\",\"2157\":\"248#_4-1-办理人权限选择弹框页面\",\"2158\":\"248#_4-2-实现接口获取以上页面办理人权限数据\",\"2159\":\"248#_4-2-1-handlerselectservice接口\",\"2160\":\"248#_5、项目介绍\",\"2161\":\"249\",\"2162\":\"249#更新日志\",\"2163\":\"249#项目介绍\",\"2164\":\"249#演示地址\",\"2165\":\"249#官网\",\"2166\":\"249#演示图\",\"2167\":\"250\",\"2168\":\"250#_1、仓库地址\",\"2169\":\"250#_2、以下为简短案例\",\"2170\":\"250#_2-1、部署流程\",\"2171\":\"250#_2-2、发布流程\",\"2172\":\"250#_2-3、开启流程\",\"2173\":\"250#_2-4、流程流转\",\"2174\":\"250#_3、设计器引入\",\"2175\":\"250#_4、项目介绍\",\"2176\":\"250#_5、演示地址\",\"2177\":\"250#_6、官网\",\"2178\":\"251\",\"2179\":\"251#主要更新内容\",\"2180\":\"251#详细更新日志\",\"2181\":\"251#项目介绍\",\"2182\":\"251#演示地址\",\"2183\":\"251#官网\",\"2184\":\"251#本次更新效果图\",\"2185\":\"252\",\"2186\":\"252#作者介绍\",\"2187\":\"252#历史背景\",\"2188\":\"252#warm-flow能给你带来什么\",\"2189\":\"252#项目功能模块\",\"2190\":\"252#流程流转管理\",\"2191\":\"252#流程图管理\",\"2192\":\"252#监听器管理\",\"2193\":\"252#配置管理\",\"2194\":\"252#扩展支持\",\"2195\":\"252#orm和数据库扩展\",\"2196\":\"252#条件表达式扩展\",\"2197\":\"253\",\"2198\":\"253#_1、背景\",\"2199\":\"253#_2、gitee建新的仓库\",\"2200\":\"253#_2-1、首先要建立仓库\",\"2201\":\"253#_2-2、仓库选择开源-否则无法下载\",\"2202\":\"253#_3、下载此项目\",\"2203\":\"253#_4、上传私库的到本地\",\"2204\":\"253#_5、下载依赖\",\"2205\":\"254\",\"2206\":\"254#dromara-warmflow工作流动态指定办理人\",\"2207\":\"254#背景\",\"2208\":\"254#解决思路\",\"2209\":\"254#高级玩法\",\"2210\":\"254#总结\",\"2211\":\"255\",\"2212\":\"255#_1、背景\",\"2213\":\"255#_2、gitee建新的仓库\",\"2214\":\"255#_2-1、首先要建立仓库\",\"2215\":\"255#_2-2、仓库选择开源-否则无法下载\",\"2216\":\"255#_3、下载此项目\",\"2217\":\"255#_4、上传私库的到本地\",\"2218\":\"255#_5、下载依赖\",\"2219\":\"256\",\"2220\":\"256#_1-引入依赖\",\"2221\":\"256#_2-后端放行部分路径\",\"2222\":\"256#_3-前端加载设计器\",\"2223\":\"256#_4-设计器办理人权限数据接入\",\"2224\":\"256#_4-1-办理人权限选择弹框页面\",\"2225\":\"256#_4-2-实现接口获取以上页面办理人权限数据\",\"2226\":\"256#_4-2-1-handlerselectservice接口\",\"2227\":\"256#_5、项目介绍\",\"2228\":\"257\",\"2229\":\"257#_1、仓库地址\",\"2230\":\"257#_2、以下为简短案例\",\"2231\":\"257#_2-1、部署流程\",\"2232\":\"257#_2-2、发布流程\",\"2233\":\"257#_2-3、开启流程\",\"2234\":\"257#_2-4、流程流转\",\"2235\":\"257#_3、设计器引入\",\"2236\":\"257#_4、项目介绍\",\"2237\":\"257#_5、演示地址\",\"2238\":\"257#_6、官网\",\"2239\":\"258\",\"2240\":\"258#v1-3-5-2024-12-20\",\"2241\":\"258#v1-3-4-2024-11-25\",\"2242\":\"258#v1-3-3-2024-11-12\",\"2243\":\"258#v1-3-1-2024-11-01\",\"2244\":\"258#v1-3-0-2024-10-23\",\"2245\":\"258#v1-2-10-2024-09-26\",\"2246\":\"258#v1-2-8-2024-09-25\",\"2247\":\"258#v1-2-7-2024-09-03\",\"2248\":\"258#v1-2-6-2024-08-28\",\"2249\":\"258#v1-2-4-2024-08-14\",\"2250\":\"258#v1-2-3-2024-06-28\",\"2251\":\"258#v1-2-1-2024-06-28\",\"2252\":\"258#v1-2-0-2024-06-13\",\"2253\":\"258#v1-1-9-2024-05-08\",\"2254\":\"259\",\"2255\":\"259#作者介绍\",\"2256\":\"259#历史背景\",\"2257\":\"259#warm-flow能给你带来什么\",\"2258\":\"259#项目功能模块\",\"2259\":\"259#流程流转管理\",\"2260\":\"259#流程图管理\",\"2261\":\"259#监听器管理\",\"2262\":\"259#配置管理\",\"2263\":\"259#扩展支持\",\"2264\":\"259#orm和数据库扩展\",\"2265\":\"259#条件表达式扩展\",\"2266\":\"260\",\"2267\":\"260#dromara-warmflow工作流动态指定办理人\",\"2268\":\"260#背景\",\"2269\":\"260#解决思路\",\"2270\":\"260#高级玩法\",\"2271\":\"260#总结\",\"2272\":\"261\",\"2273\":\"261#作者介绍\",\"2274\":\"261#历史背景\",\"2275\":\"261#warm-flow能给你带来什么\",\"2276\":\"261#项目功能模块\",\"2277\":\"261#流程流转管理\",\"2278\":\"261#流程图管理\",\"2279\":\"261#监听器管理\",\"2280\":\"261#配置管理\",\"2281\":\"261#扩展支持\",\"2282\":\"261#orm和数据库扩展\",\"2283\":\"261#条件表达式扩展\",\"2284\":\"262\",\"2285\":\"262#_1、背景\",\"2286\":\"262#_2、gitee建新的仓库\",\"2287\":\"262#_2-1、首先要建立仓库\",\"2288\":\"262#_2-2、仓库选择开源-否则无法下载\",\"2289\":\"262#_3、下载此项目\",\"2290\":\"262#_4、上传私库的到本地\",\"2291\":\"262#_5、下载依赖\",\"2292\":\"263\",\"2293\":\"263#dromara-warmflow工作流动态指定办理人\",\"2294\":\"263#背景\",\"2295\":\"263#解决思路\",\"2296\":\"263#高级玩法\",\"2297\":\"263#总结\",\"2298\":\"264\",\"2299\":\"264#作者介绍\",\"2300\":\"264#历史背景\",\"2301\":\"264#warm-flow能给你带来什么\",\"2302\":\"264#项目功能模块\",\"2303\":\"264#流程流转管理\",\"2304\":\"264#流程图管理\",\"2305\":\"264#监听器管理\",\"2306\":\"264#配置管理\",\"2307\":\"264#扩展支持\",\"2308\":\"264#orm和数据库扩展\",\"2309\":\"264#条件表达式扩展\",\"2310\":\"265\",\"2311\":\"265#_1、背景\",\"2312\":\"265#_2、gitee建新的仓库\",\"2313\":\"265#_2-1、首先要建立仓库\",\"2314\":\"265#_2-2、仓库选择开源-否则无法下载\",\"2315\":\"265#_3、下载此项目\",\"2316\":\"265#_4、上传私库的到本地\",\"2317\":\"265#_5、下载依赖\",\"2318\":\"266\",\"2319\":\"266#_1-引入依赖\",\"2320\":\"266#_2-后端放行部分路径\",\"2321\":\"266#_3-前端加载设计器\",\"2322\":\"266#_4-设计器办理人权限数据接入\",\"2323\":\"266#_4-1-办理人权限选择弹框页面\",\"2324\":\"266#_4-2-实现接口获取以上页面办理人权限数据\",\"2325\":\"266#_4-2-1-handlerselectservice接口\",\"2326\":\"266#_5、项目介绍\",\"2327\":\"267\",\"2328\":\"267#更新日志\",\"2329\":\"267#项目介绍\",\"2330\":\"267#演示地址\",\"2331\":\"267#官网\",\"2332\":\"267#演示图\",\"2333\":\"268\",\"2334\":\"268#_1、仓库地址\",\"2335\":\"268#_2、以下为简短案例\",\"2336\":\"268#_2-1、部署流程\",\"2337\":\"268#_2-2、发布流程\",\"2338\":\"268#_2-3、开启流程\",\"2339\":\"268#_2-4、流程流转\",\"2340\":\"268#_3、设计器引入\",\"2341\":\"268#_4、项目介绍\",\"2342\":\"268#_5、演示地址\",\"2343\":\"268#_6、官网\",\"2344\":\"269\",\"2345\":\"269#_1-引入依赖\",\"2346\":\"269#_2-后端放行部分路径\",\"2347\":\"269#_3-前端加载设计器\",\"2348\":\"269#_4-设计器办理人权限数据接入\",\"2349\":\"269#_4-1-办理人权限选择弹框页面\",\"2350\":\"269#_4-2-实现接口获取以上页面办理人权限数据\",\"2351\":\"269#_4-2-1-handlerselectservice接口\",\"2352\":\"269#_5、项目介绍\",\"2353\":\"270\",\"2354\":\"270#更新日志\",\"2355\":\"270#项目介绍\",\"2356\":\"270#演示地址\",\"2357\":\"270#官网\",\"2358\":\"270#演示图\",\"2359\":\"271\",\"2360\":\"271#_1、仓库地址\",\"2361\":\"271#_2、以下为简短案例\",\"2362\":\"271#_2-1、部署流程\",\"2363\":\"271#_2-2、发布流程\",\"2364\":\"271#_2-3、开启流程\",\"2365\":\"271#_2-4、流程流转\",\"2366\":\"271#_3、设计器引入\",\"2367\":\"271#_4、项目介绍\",\"2368\":\"271#_5、演示地址\",\"2369\":\"271#_6、官网\",\"2370\":\"272\",\"2371\":\"272#主要更新内容\",\"2372\":\"272#详细更新日志\",\"2373\":\"272#项目介绍\",\"2374\":\"272#演示地址\",\"2375\":\"272#官网\",\"2376\":\"272#本次更新效果图\",\"2377\":\"273\",\"2378\":\"274\",\"2379\":\"275\",\"2380\":\"276\",\"2381\":\"277\",\"2382\":\"278\",\"2383\":\"279\",\"2384\":\"280\",\"2385\":\"281\",\"2386\":\"282\",\"2387\":\"283\",\"2388\":\"284\",\"2389\":\"285\",\"2390\":\"286\",\"2391\":\"287\",\"2392\":\"288\",\"2393\":\"289\",\"2394\":\"290\",\"2395\":\"291\",\"2396\":\"292\",\"2397\":\"293\",\"2398\":\"294\",\"2399\":\"295\",\"2400\":\"296\",\"2401\":\"297\",\"2402\":\"298\",\"2403\":\"299\",\"2404\":\"300\",\"2405\":\"301\",\"2406\":\"302\",\"2407\":\"303\",\"2408\":\"304\",\"2409\":\"305\",\"2410\":\"306\",\"2411\":\"307\",\"2412\":\"308\",\"2413\":\"309\",\"2414\":\"310\",\"2415\":\"311\",\"2416\":\"312\",\"2417\":\"313\",\"2418\":\"314\",\"2419\":\"315\",\"2420\":\"316\",\"2421\":\"317\",\"2422\":\"318\",\"2423\":\"319\",\"2424\":\"320\",\"2425\":\"321\",\"2426\":\"322\",\"2427\":\"323\",\"2428\":\"324\",\"2429\":\"325\",\"2430\":\"326\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,26],\"1\":[1],\"2\":[2],\"3\":[2,63],\"4\":[3,53],\"5\":[3],\"6\":[2],\"7\":[3,15],\"8\":[2],\"9\":[1,8],\"10\":[2,18],\"11\":[2,13],\"12\":[2],\"13\":[2,29],\"14\":[2,2],\"15\":[2],\"16\":[3,30],\"17\":[3,75],\"18\":[3,65],\"19\":[3,98],\"20\":[2,2],\"21\":[3],\"22\":[6],\"23\":[6],\"24\":[2,54],\"25\":[2,35],\"26\":[1],\"27\":[3,14],\"28\":[2],\"29\":[3,62],\"30\":[2,19],\"31\":[1,4],\"32\":[2,11],\"33\":[2],\"34\":[2],\"35\":[2,16],\"36\":[2,3],\"37\":[1,4],\"38\":[3,14],\"39\":[1,8],\"40\":[2,22],\"41\":[2,52],\"42\":[1],\"43\":[3,3],\"44\":[2],\"45\":[1,6],\"46\":[2,67],\"47\":[2,11],\"48\":[2,7],\"49\":[2,15],\"50\":[2,1],\"51\":[2],\"52\":[1,5],\"53\":[1,18],\"54\":[2],\"55\":[1,7],\"56\":[1,30],\"57\":[2,5],\"58\":[1,3],\"59\":[2,48],\"60\":[2,6],\"61\":[2,1],\"62\":[3,28],\"63\":[3,54],\"64\":[2,33],\"65\":[1,9],\"66\":[2,37],\"67\":[2,19],\"68\":[2],\"69\":[1,3],\"70\":[3,3],\"71\":[2,4],\"72\":[2],\"73\":[3,20],\"74\":[5,12],\"75\":[5,62],\"76\":[1],\"77\":[2,48],\"78\":[2,6],\"79\":[1,1],\"80\":[1,4],\"81\":[1,73],\"82\":[1,3],\"83\":[2,48],\"84\":[2,6],\"85\":[2],\"86\":[3,20],\"87\":[3,26],\"88\":[1,3],\"89\":[2,48],\"90\":[2,6],\"91\":[2,2],\"92\":[3,20],\"93\":[3,35],\"94\":[1,105],\"95\":[1],\"96\":[1],\"97\":[1,13],\"98\":[1,10],\"99\":[1,10],\"100\":[1,9],\"101\":[1,11],\"102\":[1,5],\"103\":[1],\"104\":[2,1],\"105\":[3],\"106\":[3,1],\"107\":[3,1],\"108\":[2,4],\"109\":[3,22],\"110\":[4,1],\"111\":[4,1],\"112\":[1],\"113\":[2,74],\"114\":[2,15],\"115\":[3,119],\"116\":[2,39],\"117\":[2,14],\"118\":[2,7],\"119\":[1,37],\"120\":[1],\"121\":[1,16],\"122\":[1],\"123\":[2,8],\"124\":[2],\"125\":[2,8],\"126\":[2,6],\"127\":[2,5],\"128\":[2,5],\"129\":[2,2],\"130\":[2,1],\"131\":[1,77],\"132\":[1,6],\"133\":[1,58],\"134\":[1],\"135\":[1],\"136\":[1,3],\"137\":[1,3],\"138\":[1,3],\"139\":[1,4],\"140\":[1,3],\"141\":[1,3],\"142\":[1,6],\"143\":[1,5],\"144\":[1,4],\"145\":[1,7],\"146\":[1,3],\"147\":[1,3],\"148\":[1,3],\"149\":[1,3],\"150\":[1,3],\"151\":[1,5],\"152\":[1],\"153\":[3,12],\"154\":[3,6],\"155\":[3,16],\"156\":[3,14],\"157\":[3,11],\"158\":[3,4],\"159\":[1],\"160\":[1,22],\"161\":[1,40],\"162\":[1,26],\"163\":[1,4],\"164\":[1,4],\"165\":[1,6],\"166\":[1,4],\"167\":[1],\"168\":[1,37],\"169\":[1,26],\"170\":[1,25],\"171\":[1,25],\"172\":[1,23],\"173\":[1,22],\"174\":[1,35],\"175\":[1],\"176\":[1,3],\"177\":[1,6],\"178\":[1,8],\"179\":[1,6],\"180\":[1,8],\"181\":[2,22],\"182\":[1],\"183\":[1,9],\"184\":[1,9],\"185\":[1,3],\"186\":[1],\"187\":[1,4],\"188\":[1,4],\"189\":[1,7],\"190\":[1,4],\"191\":[2,8],\"192\":[1,4],\"193\":[1,4],\"194\":[1,4],\"195\":[1,4],\"196\":[1,4],\"197\":[1,4],\"198\":[1,4],\"199\":[1,4],\"200\":[1,4],\"201\":[1,6],\"202\":[1,4],\"203\":[1,2],\"204\":[1,2],\"205\":[1,2],\"206\":[1,4],\"207\":[1,4],\"208\":[1,4],\"209\":[3,7],\"210\":[2,8],\"211\":[2],\"212\":[3],\"213\":[2],\"214\":[3],\"215\":[1,4],\"216\":[2,39],\"217\":[2,69],\"218\":[1],\"219\":[1,5],\"220\":[3,32],\"221\":[2],\"222\":[1,9],\"223\":[2],\"224\":[2],\"225\":[3,6],\"226\":[2,16],\"227\":[2,5],\"228\":[3,96],\"229\":[3,16],\"230\":[2,2],\"231\":[3],\"232\":[3],\"233\":[4,27],\"234\":[3,135],\"235\":[4,27],\"236\":[1,5],\"237\":[2,10],\"238\":[2,1],\"239\":[2],\"240\":[1,63],\"241\":[2,56],\"242\":[2,35],\"243\":[2,18],\"244\":[2,7],\"245\":[2,10],\"246\":[3,32],\"247\":[1,15],\"248\":[3,16],\"249\":[2,1],\"250\":[2],\"251\":[3],\"252\":[3],\"253\":[3],\"254\":[3,8],\"255\":[4,9],\"256\":[4,10],\"257\":[2,8],\"258\":[2,2],\"259\":[2],\"260\":[4,1],\"261\":[3,6],\"262\":[1,35],\"263\":[2,26],\"264\":[3],\"265\":[2,81],\"266\":[2,113],\"267\":[3,86],\"268\":[3,95],\"269\":[3,71],\"270\":[3,66],\"271\":[3,49],\"272\":[1,70],\"273\":[1],\"274\":[1],\"275\":[1],\"276\":[2,10],\"277\":[2,9],\"278\":[2,21],\"279\":[3,46],\"280\":[1,6],\"281\":[1],\"282\":[1,15],\"283\":[1,36],\"284\":[1,7],\"285\":[1],\"286\":[2,125],\"287\":[2,62],\"288\":[3,25],\"289\":[2,15],\"290\":[2,1],\"291\":[4,103],\"292\":[2,8],\"293\":[3,4],\"294\":[2,3],\"295\":[1],\"296\":[1],\"297\":[2,13],\"298\":[1],\"299\":[6,15],\"300\":[1],\"301\":[5,36],\"302\":[5,65],\"303\":[6,3],\"304\":[6,5],\"305\":[6,3],\"306\":[6,29],\"307\":[6,45],\"308\":[5,17],\"309\":[6,31],\"310\":[6,19],\"311\":[6,32],\"312\":[6,9],\"313\":[6,30],\"314\":[6,92],\"315\":[6,4],\"316\":[6,39],\"317\":[6,11],\"318\":[6,9],\"319\":[6,4],\"320\":[6,7],\"321\":[6,25],\"322\":[6,11],\"323\":[6,4],\"324\":[6,9],\"325\":[5,4],\"326\":[6,8],\"327\":[6,3],\"328\":[6,5],\"329\":[6,4],\"330\":[5,34],\"331\":[1,8],\"332\":[3,21],\"333\":[2,160],\"334\":[3,56],\"335\":[3,131],\"336\":[3,24],\"337\":[2,7],\"338\":[3,50],\"339\":[3,5],\"340\":[3,27],\"341\":[3,8],\"342\":[3,28],\"343\":[3,5],\"344\":[3,6],\"345\":[3,5],\"346\":[1],\"347\":[2],\"348\":[3,3],\"349\":[3,3],\"350\":[3,9],\"351\":[3,6],\"352\":[3,6],\"353\":[3,6],\"354\":[3,3],\"355\":[3,3],\"356\":[3,3],\"357\":[3,3],\"358\":[3,3],\"359\":[3,4],\"360\":[3,6],\"361\":[2],\"362\":[3,22],\"363\":[2,37],\"364\":[3,26],\"365\":[3,4],\"366\":[3,4],\"367\":[3,6],\"368\":[2],\"369\":[3,37],\"370\":[3,26],\"371\":[2,23],\"372\":[3,23],\"373\":[3,21],\"374\":[3,20],\"375\":[3,35],\"376\":[2],\"377\":[3,22],\"378\":[2],\"379\":[3,4],\"380\":[3,4],\"381\":[3,7],\"382\":[3,4],\"383\":[3,8],\"384\":[3,4],\"385\":[3,4],\"386\":[3,4],\"387\":[3,4],\"388\":[3,4],\"389\":[3,4],\"390\":[3,4],\"391\":[3,4],\"392\":[3,4],\"393\":[3,6],\"394\":[3,4],\"395\":[3,2],\"396\":[3,2],\"397\":[3,2],\"398\":[3,4],\"399\":[3,4],\"400\":[3,4],\"401\":[1],\"402\":[2],\"403\":[2,73],\"404\":[3,27],\"405\":[2],\"406\":[3,69],\"407\":[3,20],\"408\":[1,12],\"409\":[2,37],\"410\":[2,19],\"411\":[2],\"412\":[1,7],\"413\":[3,32],\"414\":[2],\"415\":[4],\"416\":[2,17],\"417\":[4,11],\"418\":[1,13],\"419\":[2,15],\"420\":[2,6],\"421\":[5,26],\"422\":[3,28],\"423\":[5,28],\"424\":[2,14],\"425\":[4,76],\"426\":[3,85],\"427\":[4,1],\"428\":[3,43],\"429\":[2,2],\"430\":[3],\"431\":[3],\"432\":[4,27],\"433\":[3,135],\"434\":[1],\"435\":[2,20],\"436\":[6,63],\"437\":[2,4],\"438\":[1,4],\"439\":[1],\"440\":[1,6],\"441\":[1,73],\"442\":[1,8],\"443\":[2,18],\"444\":[2,13],\"445\":[2],\"446\":[2],\"447\":[3,37],\"448\":[3,75],\"449\":[2,84],\"450\":[3,63],\"451\":[3,2],\"452\":[3],\"453\":[6,4],\"454\":[6],\"455\":[2,35],\"456\":[1],\"457\":[3,14],\"458\":[2,15],\"459\":[3,21],\"460\":[2,19],\"461\":[1,13],\"462\":[3,14],\"463\":[2,67],\"464\":[3,16],\"465\":[1,3],\"466\":[1],\"467\":[2,7],\"468\":[2],\"469\":[2,7],\"470\":[2,5],\"471\":[2,4],\"472\":[2,4],\"473\":[2,1],\"474\":[2,1],\"475\":[1],\"476\":[2,56],\"477\":[2,35],\"478\":[2,18],\"479\":[2,7],\"480\":[2,10],\"481\":[2,31],\"482\":[1,64],\"483\":[1,20],\"484\":[3,13],\"485\":[2,1],\"486\":[2],\"487\":[3,22],\"488\":[4,23],\"489\":[2,34],\"490\":[4,23],\"491\":[4,29],\"492\":[2,9],\"493\":[2,8],\"494\":[2,2],\"495\":[2,8],\"496\":[3,35],\"497\":[3,8],\"498\":[3,14],\"499\":[3,37],\"500\":[2],\"501\":[4,1],\"502\":[3,2],\"503\":[1,37],\"504\":[1,26],\"505\":[1],\"506\":[1,81],\"507\":[1,113],\"508\":[1,86],\"509\":[1,95],\"510\":[1,71],\"511\":[1,66],\"512\":[1,49],\"513\":[1],\"514\":[3,5],\"515\":[2,89],\"516\":[3,81],\"517\":[2],\"518\":[3,18],\"519\":[2,15],\"520\":[3,20],\"521\":[1,73],\"522\":[1],\"523\":[2,15],\"524\":[2,13],\"525\":[2],\"526\":[1,7],\"527\":[1,18],\"528\":[2],\"529\":[1,9],\"530\":[1,30],\"531\":[2,53],\"532\":[1],\"533\":[2],\"534\":[2,5],\"535\":[3,11],\"536\":[3,7],\"537\":[3,3],\"538\":[3,3],\"539\":[3,3],\"540\":[3,3],\"541\":[3,3],\"542\":[3,3],\"543\":[3,3],\"544\":[3,4],\"545\":[3,6],\"546\":[2],\"547\":[3,22],\"548\":[2,33],\"549\":[3,22],\"550\":[3,4],\"551\":[3,4],\"552\":[3,6],\"553\":[2],\"554\":[3,33],\"555\":[3,22],\"556\":[2,20],\"557\":[3,21],\"558\":[3,17],\"559\":[3,19],\"560\":[3,36],\"561\":[2],\"562\":[3,22],\"563\":[2],\"564\":[3,4],\"565\":[3,4],\"566\":[3,7],\"567\":[3,4],\"568\":[3,8],\"569\":[3,4],\"570\":[3,4],\"571\":[3,4],\"572\":[3,4],\"573\":[3,4],\"574\":[3,4],\"575\":[3,4],\"576\":[3,4],\"577\":[3,4],\"578\":[3,6],\"579\":[3,4],\"580\":[3,2],\"581\":[3,2],\"582\":[3,2],\"583\":[3,4],\"584\":[3,4],\"585\":[3,4],\"586\":[1],\"587\":[2],\"588\":[2,73],\"589\":[3,27],\"590\":[2],\"591\":[3,69],\"592\":[3,20],\"593\":[1,12],\"594\":[2,37],\"595\":[2,19],\"596\":[2],\"597\":[1,7],\"598\":[3,32],\"599\":[2],\"600\":[4],\"601\":[2,17],\"602\":[4,11],\"603\":[1,13],\"604\":[2,16],\"605\":[2,6],\"606\":[5,26],\"607\":[3,28],\"608\":[5,28],\"609\":[2,19],\"610\":[4,14],\"611\":[4,77],\"612\":[3,82],\"613\":[4,1],\"614\":[3,42],\"615\":[2,2],\"616\":[3],\"617\":[3],\"618\":[4,27],\"619\":[3,135],\"620\":[1],\"621\":[2,20],\"622\":[6,63],\"623\":[2,4],\"624\":[1,4],\"625\":[1],\"626\":[1,6],\"627\":[1,72],\"628\":[1,8],\"629\":[2,18],\"630\":[2,13],\"631\":[2],\"632\":[2],\"633\":[3,37],\"634\":[3,75],\"635\":[2,84],\"636\":[3,63],\"637\":[3,2],\"638\":[3],\"639\":[6,4],\"640\":[6],\"641\":[2,35],\"642\":[1],\"643\":[3,14],\"644\":[2,15],\"645\":[3,21],\"646\":[2,19],\"647\":[1,13],\"648\":[3,14],\"649\":[2,66],\"650\":[3,16],\"651\":[1,3],\"652\":[1],\"653\":[2,7],\"654\":[2],\"655\":[2,7],\"656\":[2,5],\"657\":[2,4],\"658\":[2,4],\"659\":[2,1],\"660\":[2,1],\"661\":[1],\"662\":[2,56],\"663\":[2,35],\"664\":[2,18],\"665\":[2,7],\"666\":[2,10],\"667\":[2,31],\"668\":[1,64],\"669\":[1,20],\"670\":[3,13],\"671\":[2,1],\"672\":[2],\"673\":[3,21],\"674\":[4,22],\"675\":[2,33],\"676\":[4,22],\"677\":[4,31],\"678\":[2,9],\"679\":[2,8],\"680\":[2,6],\"681\":[2,35],\"682\":[2,8],\"683\":[2,14],\"684\":[2,37],\"685\":[2],\"686\":[4,1],\"687\":[3,2],\"688\":[1,37],\"689\":[1,26],\"690\":[1],\"691\":[1,81],\"692\":[1,113],\"693\":[1,86],\"694\":[1,95],\"695\":[1,71],\"696\":[1,66],\"697\":[1,49],\"698\":[1],\"699\":[3,5],\"700\":[2,89],\"701\":[3,81],\"702\":[2],\"703\":[3,17],\"704\":[2,15],\"705\":[3,20],\"706\":[1,73],\"707\":[1],\"708\":[2,15],\"709\":[2,13],\"710\":[2],\"711\":[1,7],\"712\":[1,18],\"713\":[2],\"714\":[1,9],\"715\":[1,30],\"716\":[2,53],\"717\":[1],\"718\":[2],\"719\":[3,3],\"720\":[4,3],\"721\":[4,3],\"722\":[3,9],\"723\":[3,6],\"724\":[3,6],\"725\":[3,6],\"726\":[3,3],\"727\":[3,3],\"728\":[3,3],\"729\":[3,3],\"730\":[3,3],\"731\":[3,4],\"732\":[3,6],\"733\":[2],\"734\":[3,22],\"735\":[2,37],\"736\":[3,26],\"737\":[3,4],\"738\":[3,4],\"739\":[3,6],\"740\":[4,4],\"741\":[2],\"742\":[3,37],\"743\":[3,26],\"744\":[2,25],\"745\":[3,25],\"746\":[3,23],\"747\":[3,22],\"748\":[3,35],\"749\":[2],\"750\":[3,22],\"751\":[2],\"752\":[3,4],\"753\":[3,4],\"754\":[3,7],\"755\":[3,4],\"756\":[3,8],\"757\":[3,4],\"758\":[3,4],\"759\":[3,4],\"760\":[3,4],\"761\":[3,4],\"762\":[3,4],\"763\":[3,4],\"764\":[3,4],\"765\":[3,4],\"766\":[3,6],\"767\":[3,4],\"768\":[3,2],\"769\":[3,2],\"770\":[3,2],\"771\":[3,4],\"772\":[3,4],\"773\":[3,4],\"774\":[1,5],\"775\":[2,34],\"776\":[2,75],\"777\":[1],\"778\":[2],\"779\":[2,80],\"780\":[3,27],\"781\":[2],\"782\":[3,69],\"783\":[3,20],\"784\":[1,12],\"785\":[2,37],\"786\":[2,19],\"787\":[2],\"788\":[1,7],\"789\":[3,32],\"790\":[2],\"791\":[4],\"792\":[2,17],\"793\":[4,11],\"794\":[1,13],\"795\":[2],\"796\":[1,16],\"797\":[1,16],\"798\":[2,6],\"799\":[5,26],\"800\":[3,28],\"801\":[5,28],\"802\":[2,14],\"803\":[4,76],\"804\":[3,85],\"805\":[4,1],\"806\":[3,43],\"807\":[2,2],\"808\":[3],\"809\":[3],\"810\":[4,27],\"811\":[3,135],\"812\":[4,27],\"813\":[1,5],\"814\":[3,3],\"815\":[2,3],\"816\":[2],\"817\":[3,20],\"818\":[5,12],\"819\":[5,62],\"820\":[1],\"821\":[2,20],\"822\":[6,63],\"823\":[2,4],\"824\":[1,5],\"825\":[2,56],\"826\":[2,6],\"827\":[2,2],\"828\":[3,20],\"829\":[3,35],\"830\":[2],\"831\":[3,20],\"832\":[3,26],\"833\":[2,1],\"834\":[3,28],\"835\":[3,54],\"836\":[3,33],\"837\":[1,4],\"838\":[1],\"839\":[1,6],\"840\":[1,73],\"841\":[1,8],\"842\":[2,13],\"843\":[2,14],\"844\":[2,29],\"845\":[2,2],\"846\":[2],\"847\":[2],\"848\":[3,30],\"849\":[3,75],\"850\":[3,98],\"851\":[3,63],\"852\":[2,2],\"853\":[3],\"854\":[6],\"855\":[6],\"856\":[2,54],\"857\":[2,35],\"858\":[1],\"859\":[3,14],\"860\":[2,15],\"861\":[3,21],\"862\":[2,19],\"863\":[1,6],\"864\":[3,14],\"865\":[2,67],\"866\":[3,16],\"867\":[1,12],\"868\":[2,24],\"869\":[2,52],\"870\":[1,3],\"871\":[1],\"872\":[2,7],\"873\":[2],\"874\":[2,7],\"875\":[2,5],\"876\":[2,4],\"877\":[2,4],\"878\":[2,1],\"879\":[2,1],\"880\":[1],\"881\":[2,56],\"882\":[2,35],\"883\":[2,18],\"884\":[2,7],\"885\":[2,10],\"886\":[2,31],\"887\":[1,62],\"888\":[2,56],\"889\":[2,35],\"890\":[2,18],\"891\":[2,7],\"892\":[2,10],\"893\":[2,31],\"894\":[1,20],\"895\":[3,16],\"896\":[2,1],\"897\":[2],\"898\":[3,23],\"899\":[4,24],\"900\":[2,33],\"901\":[4,24],\"902\":[4,31],\"903\":[2,8],\"904\":[3,35],\"905\":[3,8],\"906\":[3,14],\"907\":[2,37],\"908\":[2,2],\"909\":[2],\"910\":[4,1],\"911\":[3,2],\"912\":[1,37],\"913\":[1,26],\"914\":[1],\"915\":[1,81],\"916\":[1,113],\"917\":[1,86],\"918\":[1,95],\"919\":[1,71],\"920\":[1,66],\"921\":[1,49],\"922\":[1],\"923\":[3,5],\"924\":[2,89],\"925\":[3,81],\"926\":[2],\"927\":[3,18],\"928\":[2,15],\"929\":[3,20],\"930\":[1,73],\"931\":[1,8],\"932\":[2,67],\"933\":[2,11],\"934\":[2,7],\"935\":[2,14],\"936\":[2],\"937\":[1,5],\"938\":[1,18],\"939\":[2],\"940\":[1,7],\"941\":[1,30],\"942\":[1,5],\"943\":[2,56],\"944\":[2,6],\"945\":[2,1],\"946\":[3,28],\"947\":[3,54],\"948\":[2,33],\"949\":[1,12],\"950\":[2,37],\"951\":[2,19],\"952\":[2],\"953\":[1,5],\"954\":[3,3],\"955\":[2,4],\"956\":[2],\"957\":[3,20],\"958\":[5,12],\"959\":[5,62],\"960\":[1,1],\"961\":[1,6],\"962\":[1,73],\"963\":[1,5],\"964\":[2,56],\"965\":[2,6],\"966\":[2],\"967\":[3,20],\"968\":[3,26],\"969\":[1,5],\"970\":[2,56],\"971\":[2,6],\"972\":[2,2],\"973\":[3,20],\"974\":[3,35],\"975\":[1,6],\"976\":[1],\"977\":[1,22],\"978\":[1,7],\"979\":[1,7],\"980\":[1,7],\"981\":[1],\"982\":[2,125],\"983\":[2,62],\"984\":[3,25],\"985\":[2,15],\"986\":[2,1],\"987\":[4,103],\"988\":[2,8],\"989\":[3,4],\"990\":[2,3],\"991\":[1,5],\"992\":[1],\"993\":[2,10],\"994\":[1],\"995\":[3,13],\"996\":[1],\"997\":[6,29],\"998\":[6,45],\"999\":[5,17],\"1000\":[6,31],\"1001\":[6,16],\"1002\":[6,5],\"1003\":[6,32],\"1004\":[6,9],\"1005\":[6,30],\"1006\":[6,92],\"1007\":[6,4],\"1008\":[6,39],\"1009\":[6,10],\"1010\":[6,8],\"1011\":[6,4],\"1012\":[6,7],\"1013\":[6,25],\"1014\":[6,11],\"1015\":[6,4],\"1016\":[6,9],\"1017\":[5,4],\"1018\":[6,8],\"1019\":[6,3],\"1020\":[6,5],\"1021\":[6,4],\"1022\":[5,34],\"1023\":[1,92],\"1024\":[1],\"1025\":[1],\"1026\":[1,13],\"1027\":[1,10],\"1028\":[1,10],\"1029\":[1,9],\"1030\":[1,11],\"1031\":[1,5],\"1032\":[1],\"1033\":[2,1],\"1034\":[3],\"1035\":[3,1],\"1036\":[3,1],\"1037\":[2,4],\"1038\":[3,22],\"1039\":[4,1],\"1040\":[4,1],\"1041\":[1],\"1042\":[2,70],\"1043\":[2,7],\"1044\":[2,31],\"1045\":[2,52],\"1046\":[2,9],\"1047\":[2,7],\"1048\":[2,2],\"1049\":[2,1],\"1050\":[1,3],\"1051\":[1,8],\"1052\":[1],\"1053\":[2,8],\"1054\":[2],\"1055\":[2,8],\"1056\":[2,6],\"1057\":[2,5],\"1058\":[2,5],\"1059\":[2,2],\"1060\":[2,1],\"1061\":[1,55],\"1062\":[1,6],\"1063\":[1,54],\"1064\":[1,8],\"1065\":[2,13],\"1066\":[2,14],\"1067\":[2,29],\"1068\":[2,2],\"1069\":[2],\"1070\":[2],\"1071\":[3,30],\"1072\":[3,75],\"1073\":[3,98],\"1074\":[3,63],\"1075\":[2,2],\"1076\":[3],\"1077\":[6],\"1078\":[6],\"1079\":[2,54],\"1080\":[2,35],\"1081\":[1],\"1082\":[3,75],\"1083\":[2,15],\"1084\":[3,21],\"1085\":[2,19],\"1086\":[1,6],\"1087\":[3,14],\"1088\":[2,67],\"1089\":[3,16],\"1090\":[1,12],\"1091\":[2,22],\"1092\":[2,52],\"1093\":[1],\"1094\":[3,5],\"1095\":[2,89],\"1096\":[3,81],\"1097\":[2],\"1098\":[3,18],\"1099\":[2,15],\"1100\":[3,20],\"1101\":[1,8],\"1102\":[2,67],\"1103\":[2,11],\"1104\":[2,7],\"1105\":[2,15],\"1106\":[2],\"1107\":[1,5],\"1108\":[1,18],\"1109\":[2],\"1110\":[1,7],\"1111\":[1,30],\"1112\":[2,5],\"1113\":[1],\"1114\":[2],\"1115\":[3,3],\"1116\":[4,3],\"1117\":[4,3],\"1118\":[3,9],\"1119\":[3,6],\"1120\":[3,6],\"1121\":[3,6],\"1122\":[3,3],\"1123\":[3,3],\"1124\":[3,3],\"1125\":[3,3],\"1126\":[3,3],\"1127\":[3,4],\"1128\":[3,6],\"1129\":[3,6],\"1130\":[5,6],\"1131\":[2],\"1132\":[3,22],\"1133\":[2,37],\"1134\":[3,26],\"1135\":[3,4],\"1136\":[3,4],\"1137\":[3,6],\"1138\":[4,4],\"1139\":[2],\"1140\":[3,37],\"1141\":[3,26],\"1142\":[2,25],\"1143\":[3,25],\"1144\":[3,23],\"1145\":[3,22],\"1146\":[3,35],\"1147\":[2],\"1148\":[3,27],\"1149\":[2],\"1150\":[3,4],\"1151\":[3,4],\"1152\":[3,7],\"1153\":[3,4],\"1154\":[3,8],\"1155\":[3,4],\"1156\":[3,4],\"1157\":[3,4],\"1158\":[3,4],\"1159\":[3,4],\"1160\":[3,4],\"1161\":[3,4],\"1162\":[3,4],\"1163\":[3,4],\"1164\":[3,6],\"1165\":[3,4],\"1166\":[3,2],\"1167\":[3,2],\"1168\":[3,2],\"1169\":[3,4],\"1170\":[3,4],\"1171\":[3,4],\"1172\":[3,7],\"1173\":[2,8],\"1174\":[2],\"1175\":[3],\"1176\":[2],\"1177\":[3],\"1178\":[1,5],\"1179\":[2,37],\"1180\":[2,67],\"1181\":[1],\"1182\":[2],\"1183\":[2,80],\"1184\":[3,27],\"1185\":[2],\"1186\":[3,69],\"1187\":[3,20],\"1188\":[1,7],\"1189\":[3,32],\"1190\":[2],\"1191\":[4],\"1192\":[2,17],\"1193\":[4,11],\"1194\":[1,13],\"1195\":[2],\"1196\":[1,16],\"1197\":[1,16],\"1198\":[2,6],\"1199\":[5,26],\"1200\":[3,28],\"1201\":[5,28],\"1202\":[2,14],\"1203\":[4,76],\"1204\":[3,85],\"1205\":[4,1],\"1206\":[3,43],\"1207\":[2,2],\"1208\":[3],\"1209\":[3],\"1210\":[4,27],\"1211\":[3,135],\"1212\":[4,27],\"1213\":[1,5],\"1214\":[2,14],\"1215\":[2,1],\"1216\":[2,27],\"1217\":[1,60],\"1218\":[2,56],\"1219\":[2,35],\"1220\":[2,18],\"1221\":[2,7],\"1222\":[2,10],\"1223\":[1,20],\"1224\":[3,16],\"1225\":[2,1],\"1226\":[2],\"1227\":[3,21],\"1228\":[4,22],\"1229\":[2,31],\"1230\":[4,22],\"1231\":[4,29],\"1232\":[2,8],\"1233\":[3,35],\"1234\":[3,8],\"1235\":[3,14],\"1236\":[2,37],\"1237\":[2,2],\"1238\":[2],\"1239\":[4,1],\"1240\":[3],\"1241\":[1,37],\"1242\":[2,26],\"1243\":[3],\"1244\":[2,81],\"1245\":[2,113],\"1246\":[3,86],\"1247\":[3,95],\"1248\":[3,71],\"1249\":[3,66],\"1250\":[3,49],\"1251\":[1,73],\"1252\":[1],\"1253\":[2],\"1254\":[3,3],\"1255\":[3,3],\"1256\":[3,9],\"1257\":[3,6],\"1258\":[3,6],\"1259\":[3,6],\"1260\":[3,3],\"1261\":[3,3],\"1262\":[3,3],\"1263\":[3,3],\"1264\":[3,3],\"1265\":[3,4],\"1266\":[3,6],\"1267\":[2],\"1268\":[3,22],\"1269\":[2,37],\"1270\":[3,26],\"1271\":[3,4],\"1272\":[3,4],\"1273\":[3,6],\"1274\":[2],\"1275\":[3,37],\"1276\":[3,26],\"1277\":[2,23],\"1278\":[3,23],\"1279\":[3,21],\"1280\":[3,20],\"1281\":[3,35],\"1282\":[2],\"1283\":[3,22],\"1284\":[2],\"1285\":[3,4],\"1286\":[3,4],\"1287\":[3,7],\"1288\":[3,4],\"1289\":[3,8],\"1290\":[3,4],\"1291\":[3,4],\"1292\":[3,4],\"1293\":[3,4],\"1294\":[3,4],\"1295\":[3,4],\"1296\":[3,4],\"1297\":[3,4],\"1298\":[3,4],\"1299\":[3,6],\"1300\":[3,4],\"1301\":[3,2],\"1302\":[3,2],\"1303\":[3,2],\"1304\":[3,4],\"1305\":[3,4],\"1306\":[3,4],\"1307\":[1],\"1308\":[2],\"1309\":[2,80],\"1310\":[3,27],\"1311\":[2],\"1312\":[3,69],\"1313\":[3,20],\"1314\":[1,12],\"1315\":[2,37],\"1316\":[2,19],\"1317\":[2],\"1318\":[1,7],\"1319\":[3,32],\"1320\":[2],\"1321\":[4],\"1322\":[2,17],\"1323\":[4,11],\"1324\":[1,13],\"1325\":[2,15],\"1326\":[2,6],\"1327\":[5,26],\"1328\":[3,28],\"1329\":[5,28],\"1330\":[2,14],\"1331\":[4,76],\"1332\":[3,85],\"1333\":[4,1],\"1334\":[3,43],\"1335\":[2,2],\"1336\":[3],\"1337\":[3],\"1338\":[4,27],\"1339\":[3,135],\"1340\":[4,27],\"1341\":[2],\"1342\":[4,3],\"1343\":[3,3],\"1344\":[3],\"1345\":[4,19],\"1346\":[6,12],\"1347\":[7,62],\"1348\":[1],\"1349\":[2,20],\"1350\":[6,63],\"1351\":[2,4],\"1352\":[1,4],\"1353\":[1],\"1354\":[1,6],\"1355\":[1,73],\"1356\":[1,8],\"1357\":[2,18],\"1358\":[2,13],\"1359\":[2],\"1360\":[2],\"1361\":[3,37],\"1362\":[3,75],\"1363\":[2,84],\"1364\":[3,63],\"1365\":[3,2],\"1366\":[3],\"1367\":[6,4],\"1368\":[6],\"1369\":[2,35],\"1370\":[1],\"1371\":[3,14],\"1372\":[2,15],\"1373\":[3,21],\"1374\":[2,19],\"1375\":[1,13],\"1376\":[3,14],\"1377\":[2,67],\"1378\":[3,16],\"1379\":[1,3],\"1380\":[1],\"1381\":[2,7],\"1382\":[2],\"1383\":[2,7],\"1384\":[2,5],\"1385\":[2,4],\"1386\":[2,4],\"1387\":[2,1],\"1388\":[2,1],\"1389\":[1],\"1390\":[2,56],\"1391\":[2,35],\"1392\":[2,18],\"1393\":[2,7],\"1394\":[2,10],\"1395\":[2,31],\"1396\":[1,62],\"1397\":[1,20],\"1398\":[3,13],\"1399\":[2,1],\"1400\":[2],\"1401\":[3,22],\"1402\":[4,23],\"1403\":[2,32],\"1404\":[4,23],\"1405\":[4,29],\"1406\":[2,9],\"1407\":[2,8],\"1408\":[2,2],\"1409\":[2,8],\"1410\":[3,35],\"1411\":[3,8],\"1412\":[3,14],\"1413\":[3,37],\"1414\":[2],\"1415\":[4,1],\"1416\":[3,2],\"1417\":[1,37],\"1418\":[1,26],\"1419\":[1],\"1420\":[1,81],\"1421\":[1,113],\"1422\":[1,90],\"1423\":[1,95],\"1424\":[1,71],\"1425\":[1,66],\"1426\":[1,49],\"1427\":[1],\"1428\":[3,5],\"1429\":[2,89],\"1430\":[3,81],\"1431\":[2],\"1432\":[3,18],\"1433\":[2,15],\"1434\":[3,20],\"1435\":[1,73],\"1436\":[1],\"1437\":[2,15],\"1438\":[2,13],\"1439\":[2],\"1440\":[1,7],\"1441\":[1,18],\"1442\":[2],\"1443\":[1,9],\"1444\":[1,30],\"1445\":[2,53],\"1446\":[1,3],\"1447\":[2,48],\"1448\":[2,6],\"1449\":[2,1],\"1450\":[3,28],\"1451\":[3,54],\"1452\":[2,33],\"1453\":[1,9],\"1454\":[2,37],\"1455\":[2,19],\"1456\":[2],\"1457\":[1,3],\"1458\":[3,3],\"1459\":[2,4],\"1460\":[2],\"1461\":[3,20],\"1462\":[5,12],\"1463\":[5,62],\"1464\":[1],\"1465\":[2,48],\"1466\":[2,6],\"1467\":[1,1],\"1468\":[1,4],\"1469\":[1,73],\"1470\":[1,3],\"1471\":[2,48],\"1472\":[2,6],\"1473\":[2],\"1474\":[3,20],\"1475\":[3,26],\"1476\":[1,3],\"1477\":[2,48],\"1478\":[2,6],\"1479\":[2,2],\"1480\":[3,20],\"1481\":[3,35],\"1482\":[1,8],\"1483\":[2,18],\"1484\":[2,13],\"1485\":[2],\"1486\":[2,29],\"1487\":[2,2],\"1488\":[2],\"1489\":[3,30],\"1490\":[3,75],\"1491\":[3,98],\"1492\":[3,63],\"1493\":[2,2],\"1494\":[3],\"1495\":[6],\"1496\":[6],\"1497\":[2,54],\"1498\":[2,35],\"1499\":[1],\"1500\":[3,14],\"1501\":[2],\"1502\":[3,62],\"1503\":[2,19],\"1504\":[1,4],\"1505\":[3,14],\"1506\":[1,8],\"1507\":[2,22],\"1508\":[2,52],\"1509\":[1],\"1510\":[3,3],\"1511\":[2],\"1512\":[1,6],\"1513\":[2,67],\"1514\":[2,11],\"1515\":[2,7],\"1516\":[2,15],\"1517\":[2,1],\"1518\":[2],\"1519\":[1,5],\"1520\":[1,18],\"1521\":[2],\"1522\":[1,7],\"1523\":[1,30],\"1524\":[2,5],\"1525\":[1,100],\"1526\":[1],\"1527\":[1],\"1528\":[1,13],\"1529\":[1,10],\"1530\":[1,10],\"1531\":[1,9],\"1532\":[1,11],\"1533\":[1,5],\"1534\":[1],\"1535\":[2,1],\"1536\":[3],\"1537\":[3,1],\"1538\":[3,1],\"1539\":[2,4],\"1540\":[3,22],\"1541\":[4,1],\"1542\":[4,1],\"1543\":[1],\"1544\":[2,73],\"1545\":[2,15],\"1546\":[2,52],\"1547\":[2,14],\"1548\":[2,7],\"1549\":[1,37],\"1550\":[1],\"1551\":[1,16],\"1552\":[1],\"1553\":[2,8],\"1554\":[2],\"1555\":[2,8],\"1556\":[2,6],\"1557\":[2,5],\"1558\":[2,5],\"1559\":[2,2],\"1560\":[2,1],\"1561\":[1,77],\"1562\":[1,6],\"1563\":[1,58],\"1564\":[1],\"1565\":[1],\"1566\":[1,3],\"1567\":[1,3],\"1568\":[1,3],\"1569\":[1,4],\"1570\":[1,3],\"1571\":[1,3],\"1572\":[1,6],\"1573\":[1,5],\"1574\":[1,4],\"1575\":[1,7],\"1576\":[1,3],\"1577\":[1,3],\"1578\":[1,3],\"1579\":[1,3],\"1580\":[1,3],\"1581\":[1,5],\"1582\":[1],\"1583\":[3,12],\"1584\":[3,6],\"1585\":[3,16],\"1586\":[3,14],\"1587\":[3,11],\"1588\":[3,4],\"1589\":[1],\"1590\":[1,22],\"1591\":[1,37],\"1592\":[1,26],\"1593\":[1,4],\"1594\":[1,4],\"1595\":[1,6],\"1596\":[1,4],\"1597\":[1],\"1598\":[1,37],\"1599\":[1,26],\"1600\":[1,25],\"1601\":[1,25],\"1602\":[1,23],\"1603\":[1,22],\"1604\":[1,35],\"1605\":[1],\"1606\":[1,3],\"1607\":[1,6],\"1608\":[1,8],\"1609\":[1,6],\"1610\":[1,8],\"1611\":[2,22],\"1612\":[1],\"1613\":[1,9],\"1614\":[1,9],\"1615\":[1,3],\"1616\":[1],\"1617\":[1,4],\"1618\":[1,4],\"1619\":[1,7],\"1620\":[1,4],\"1621\":[2,8],\"1622\":[1,4],\"1623\":[1,4],\"1624\":[1,4],\"1625\":[1,4],\"1626\":[1,4],\"1627\":[1,4],\"1628\":[1,4],\"1629\":[1,4],\"1630\":[1,4],\"1631\":[1,6],\"1632\":[1,4],\"1633\":[1,2],\"1634\":[1,2],\"1635\":[1,2],\"1636\":[1,4],\"1637\":[1,4],\"1638\":[1,4],\"1639\":[3,7],\"1640\":[2,8],\"1641\":[2],\"1642\":[3],\"1643\":[2],\"1644\":[3],\"1645\":[1,4],\"1646\":[2,39],\"1647\":[2,69],\"1648\":[1],\"1649\":[1,5],\"1650\":[3,32],\"1651\":[2],\"1652\":[1,9],\"1653\":[2],\"1654\":[2,6],\"1655\":[2,15],\"1656\":[2,2],\"1657\":[3],\"1658\":[3],\"1659\":[4,27],\"1660\":[3,135],\"1661\":[4,27],\"1662\":[1,5],\"1663\":[2,10],\"1664\":[2,1],\"1665\":[2],\"1666\":[1,63],\"1667\":[2,56],\"1668\":[2,35],\"1669\":[2,18],\"1670\":[2,7],\"1671\":[2,10],\"1672\":[3,32],\"1673\":[1,15],\"1674\":[3,16],\"1675\":[2,1],\"1676\":[2],\"1677\":[3],\"1678\":[3],\"1679\":[3],\"1680\":[3,8],\"1681\":[4,9],\"1682\":[4,10],\"1683\":[2,8],\"1684\":[2,2],\"1685\":[2],\"1686\":[4,1],\"1687\":[3],\"1688\":[1,35],\"1689\":[2,26],\"1690\":[3],\"1691\":[2,81],\"1692\":[2,113],\"1693\":[3,86],\"1694\":[3,95],\"1695\":[3,71],\"1696\":[3,66],\"1697\":[3,49],\"1698\":[1,70],\"1699\":[1],\"1700\":[2,10],\"1701\":[2,9],\"1702\":[3,46],\"1703\":[1,6],\"1704\":[1],\"1705\":[1,22],\"1706\":[1,7],\"1707\":[1,7],\"1708\":[1,7],\"1709\":[1],\"1710\":[2,125],\"1711\":[2,62],\"1712\":[3,25],\"1713\":[2,15],\"1714\":[2,1],\"1715\":[4,103],\"1716\":[2,8],\"1717\":[3,4],\"1718\":[2,3],\"1719\":[1],\"1720\":[1],\"1721\":[2,16],\"1722\":[1],\"1723\":[6,6],\"1724\":[1],\"1725\":[5,65],\"1726\":[6,3],\"1727\":[6,5],\"1728\":[6,3],\"1729\":[6,29],\"1730\":[6,45],\"1731\":[5,17],\"1732\":[6,31],\"1733\":[6,19],\"1734\":[6,32],\"1735\":[6,9],\"1736\":[6,30],\"1737\":[6,92],\"1738\":[6,4],\"1739\":[6,39],\"1740\":[6,11],\"1741\":[6,9],\"1742\":[6,4],\"1743\":[6,7],\"1744\":[6,25],\"1745\":[6,11],\"1746\":[6,4],\"1747\":[6,9],\"1748\":[5,4],\"1749\":[6,8],\"1750\":[6,3],\"1751\":[6,5],\"1752\":[6,4],\"1753\":[5,34],\"1754\":[1,6],\"1755\":[2,160],\"1756\":[3,56],\"1757\":[3,131],\"1758\":[3,24],\"1759\":[2,7],\"1760\":[3,50],\"1761\":[3,5],\"1762\":[3,27],\"1763\":[3,8],\"1764\":[3,28],\"1765\":[3,5],\"1766\":[3,6],\"1767\":[3,5],\"1768\":[1],\"1769\":[2],\"1770\":[2,63],\"1771\":[3,53],\"1772\":[3],\"1773\":[2],\"1774\":[3,15],\"1775\":[2],\"1776\":[1,8],\"1777\":[2,18],\"1778\":[2,13],\"1779\":[2],\"1780\":[2,29],\"1781\":[2,2],\"1782\":[2],\"1783\":[3,30],\"1784\":[3,75],\"1785\":[3,98],\"1786\":[3,63],\"1787\":[2,2],\"1788\":[3],\"1789\":[6],\"1790\":[6],\"1791\":[2,54],\"1792\":[2,35],\"1793\":[1],\"1794\":[3,14],\"1795\":[2],\"1796\":[3,62],\"1797\":[2,19],\"1798\":[1,4],\"1799\":[2,11],\"1800\":[2],\"1801\":[2],\"1802\":[2,16],\"1803\":[2,3],\"1804\":[1,4],\"1805\":[3,14],\"1806\":[1,8],\"1807\":[2,22],\"1808\":[2,52],\"1809\":[1],\"1810\":[3,3],\"1811\":[2],\"1812\":[1,6],\"1813\":[2,67],\"1814\":[2,11],\"1815\":[2,7],\"1816\":[2,15],\"1817\":[2,1],\"1818\":[2],\"1819\":[1,5],\"1820\":[1,18],\"1821\":[2],\"1822\":[1,7],\"1823\":[1,30],\"1824\":[2,5],\"1825\":[1,3],\"1826\":[2,48],\"1827\":[2,6],\"1828\":[2,1],\"1829\":[3,28],\"1830\":[3,54],\"1831\":[2,33],\"1832\":[1,9],\"1833\":[2,37],\"1834\":[2,19],\"1835\":[2],\"1836\":[1,3],\"1837\":[3,3],\"1838\":[2,4],\"1839\":[2],\"1840\":[3,20],\"1841\":[5,12],\"1842\":[5,62],\"1843\":[1],\"1844\":[2,48],\"1845\":[2,6],\"1846\":[1,1],\"1847\":[1,4],\"1848\":[1,73],\"1849\":[1,3],\"1850\":[2,48],\"1851\":[2,6],\"1852\":[2],\"1853\":[3,20],\"1854\":[3,26],\"1855\":[1,3],\"1856\":[2,48],\"1857\":[2,6],\"1858\":[2,2],\"1859\":[3,20],\"1860\":[3,35],\"1861\":[1,103],\"1862\":[1],\"1863\":[1],\"1864\":[1,13],\"1865\":[1,10],\"1866\":[1,10],\"1867\":[1,9],\"1868\":[1,11],\"1869\":[1,5],\"1870\":[1],\"1871\":[2,1],\"1872\":[3],\"1873\":[3,1],\"1874\":[3,1],\"1875\":[2,4],\"1876\":[3,22],\"1877\":[4,1],\"1878\":[4,1],\"1879\":[1],\"1880\":[2,74],\"1881\":[2,15],\"1882\":[3,119],\"1883\":[2,39],\"1884\":[2,14],\"1885\":[2,7],\"1886\":[1,37],\"1887\":[1],\"1888\":[1,16],\"1889\":[1],\"1890\":[2,8],\"1891\":[2],\"1892\":[2,8],\"1893\":[2,6],\"1894\":[2,5],\"1895\":[2,5],\"1896\":[2,2],\"1897\":[2,1],\"1898\":[1,77],\"1899\":[1,6],\"1900\":[1,58],\"1901\":[1],\"1902\":[2,10],\"1903\":[2,9],\"1904\":[3,46],\"1905\":[1,6],\"1906\":[1],\"1907\":[1,22],\"1908\":[1,9],\"1909\":[1,7],\"1910\":[1,7],\"1911\":[1],\"1912\":[2,125],\"1913\":[2,62],\"1914\":[3,25],\"1915\":[2,15],\"1916\":[2,1],\"1917\":[4,103],\"1918\":[2,8],\"1919\":[3,4],\"1920\":[2,3],\"1921\":[1],\"1922\":[1],\"1923\":[2,13],\"1924\":[1],\"1925\":[6,5],\"1926\":[1],\"1927\":[5,36],\"1928\":[5,65],\"1929\":[6,3],\"1930\":[6,5],\"1931\":[6,3],\"1932\":[6,29],\"1933\":[6,45],\"1934\":[5,17],\"1935\":[6,31],\"1936\":[6,19],\"1937\":[6,32],\"1938\":[6,9],\"1939\":[6,30],\"1940\":[6,92],\"1941\":[6,4],\"1942\":[6,39],\"1943\":[6,11],\"1944\":[6,9],\"1945\":[6,4],\"1946\":[6,7],\"1947\":[6,25],\"1948\":[6,11],\"1949\":[6,4],\"1950\":[6,9],\"1951\":[5,4],\"1952\":[6,8],\"1953\":[6,3],\"1954\":[6,5],\"1955\":[6,4],\"1956\":[5,34],\"1957\":[1,8],\"1958\":[3,21],\"1959\":[2,160],\"1960\":[3,56],\"1961\":[3,131],\"1962\":[3,24],\"1963\":[2,7],\"1964\":[3,50],\"1965\":[3,5],\"1966\":[3,27],\"1967\":[3,8],\"1968\":[3,28],\"1969\":[3,5],\"1970\":[3,6],\"1971\":[3,5],\"1972\":[1],\"1973\":[1],\"1974\":[1,3],\"1975\":[1,3],\"1976\":[1,3],\"1977\":[1,4],\"1978\":[1,3],\"1979\":[1,3],\"1980\":[1,6],\"1981\":[1,5],\"1982\":[1,4],\"1983\":[1,7],\"1984\":[1,3],\"1985\":[1,3],\"1986\":[1,3],\"1987\":[1,3],\"1988\":[1,3],\"1989\":[1,5],\"1990\":[1],\"1991\":[3,12],\"1992\":[3,6],\"1993\":[3,16],\"1994\":[3,14],\"1995\":[3,11],\"1996\":[3,4],\"1997\":[1],\"1998\":[1,22],\"1999\":[1,40],\"2000\":[1,26],\"2001\":[1,4],\"2002\":[1,4],\"2003\":[1,6],\"2004\":[1,4],\"2005\":[1],\"2006\":[1,37],\"2007\":[1,26],\"2008\":[1,25],\"2009\":[1,25],\"2010\":[1,23],\"2011\":[1,22],\"2012\":[1,35],\"2013\":[1],\"2014\":[1,3],\"2015\":[1,6],\"2016\":[1,8],\"2017\":[1,6],\"2018\":[1,8],\"2019\":[2,22],\"2020\":[1],\"2021\":[1,9],\"2022\":[1,9],\"2023\":[1,3],\"2024\":[1],\"2025\":[1,4],\"2026\":[1,4],\"2027\":[1,7],\"2028\":[1,4],\"2029\":[2,8],\"2030\":[1,4],\"2031\":[1,4],\"2032\":[1,4],\"2033\":[1,4],\"2034\":[1,4],\"2035\":[1,4],\"2036\":[1,4],\"2037\":[1,4],\"2038\":[1,4],\"2039\":[1,6],\"2040\":[1,4],\"2041\":[1,2],\"2042\":[1,2],\"2043\":[1,2],\"2044\":[1,4],\"2045\":[1,4],\"2046\":[1,4],\"2047\":[3,7],\"2048\":[2,8],\"2049\":[2],\"2050\":[3],\"2051\":[2],\"2052\":[3],\"2053\":[1,4],\"2054\":[2,39],\"2055\":[2,69],\"2056\":[1],\"2057\":[1,5],\"2058\":[3,32],\"2059\":[2],\"2060\":[1,9],\"2061\":[2],\"2062\":[2,6],\"2063\":[2,16],\"2064\":[2,2],\"2065\":[3],\"2066\":[3],\"2067\":[4,27],\"2068\":[3,135],\"2069\":[4,27],\"2070\":[1,5],\"2071\":[2,10],\"2072\":[2,1],\"2073\":[2],\"2074\":[1,63],\"2075\":[2,56],\"2076\":[2,35],\"2077\":[2,18],\"2078\":[2,7],\"2079\":[2,10],\"2080\":[3,32],\"2081\":[1,15],\"2082\":[3,16],\"2083\":[2,1],\"2084\":[2],\"2085\":[3],\"2086\":[3],\"2087\":[3],\"2088\":[3,8],\"2089\":[4,9],\"2090\":[4,10],\"2091\":[2,8],\"2092\":[2,2],\"2093\":[2],\"2094\":[4,1],\"2095\":[3],\"2096\":[1,35],\"2097\":[2,26],\"2098\":[3],\"2099\":[2,81],\"2100\":[2,113],\"2101\":[3,86],\"2102\":[3,95],\"2103\":[3,71],\"2104\":[3,66],\"2105\":[3,49],\"2106\":[1,70],\"2107\":[1,10],\"2108\":[2,17],\"2109\":[2,32],\"2110\":[2,14],\"2111\":[2,2],\"2112\":[3],\"2113\":[3],\"2114\":[4,27],\"2115\":[2,61],\"2116\":[2,7],\"2117\":[2,6],\"2118\":[1,7],\"2119\":[2,18],\"2120\":[2,33],\"2121\":[2,32],\"2122\":[2,4],\"2123\":[3],\"2124\":[3],\"2125\":[4,27],\"2126\":[2,63],\"2127\":[2,7],\"2128\":[2,6],\"2129\":[5],\"2130\":[4,10],\"2131\":[3,42],\"2132\":[2,62],\"2133\":[2,7],\"2134\":[2,6],\"2135\":[1,10],\"2136\":[2,17],\"2137\":[2,32],\"2138\":[2,14],\"2139\":[2,2],\"2140\":[3],\"2141\":[3],\"2142\":[4,27],\"2143\":[2,61],\"2144\":[2,7],\"2145\":[2,6],\"2146\":[1],\"2147\":[2],\"2148\":[2,7],\"2149\":[1,30],\"2150\":[1,29],\"2151\":[1,4],\"2152\":[1,11],\"2153\":[2,17],\"2154\":[2,32],\"2155\":[2,14],\"2156\":[2,2],\"2157\":[3],\"2158\":[3],\"2159\":[4,27],\"2160\":[2],\"2161\":[7,6],\"2162\":[1,65],\"2163\":[1,15],\"2164\":[1,7],\"2165\":[1,6],\"2166\":[1],\"2167\":[1,23],\"2168\":[2,6],\"2169\":[2],\"2170\":[3,35],\"2171\":[2,8],\"2172\":[3,14],\"2173\":[3,36],\"2174\":[2,19],\"2175\":[2,61],\"2176\":[2,7],\"2177\":[2,6],\"2178\":[3],\"2179\":[1,5],\"2180\":[1,36],\"2181\":[1,16],\"2182\":[1,7],\"2183\":[1,5],\"2184\":[1],\"2185\":[1],\"2186\":[1,23],\"2187\":[1,35],\"2188\":[2,60],\"2189\":[1],\"2190\":[1,53],\"2191\":[1,15],\"2192\":[1,17],\"2193\":[1,77],\"2194\":[1],\"2195\":[1,6],\"2196\":[1,14],\"2197\":[1],\"2198\":[2,5],\"2199\":[2,9],\"2200\":[3,2],\"2201\":[1,2],\"2202\":[2,8],\"2203\":[2,97],\"2204\":[2,37],\"2205\":[1],\"2206\":[2],\"2207\":[2,7],\"2208\":[1,30],\"2209\":[1,29],\"2210\":[1,4],\"2211\":[1],\"2212\":[2,5],\"2213\":[2,9],\"2214\":[3,2],\"2215\":[1,2],\"2216\":[2,8],\"2217\":[2,97],\"2218\":[2,37],\"2219\":[1,11],\"2220\":[2,17],\"2221\":[2,32],\"2222\":[2,14],\"2223\":[2,2],\"2224\":[3],\"2225\":[3],\"2226\":[4,27],\"2227\":[2],\"2228\":[1,23],\"2229\":[2,6],\"2230\":[2],\"2231\":[3,35],\"2232\":[2,8],\"2233\":[3,14],\"2234\":[3,36],\"2235\":[2,19],\"2236\":[2,61],\"2237\":[2,7],\"2238\":[2,6],\"2239\":[1],\"2240\":[6,129],\"2241\":[6,21],\"2242\":[5,7],\"2243\":[6,50],\"2244\":[6,8],\"2245\":[6,1],\"2246\":[6,27],\"2247\":[6,1],\"2248\":[6,10],\"2249\":[6,30],\"2250\":[6,1],\"2251\":[6,7],\"2252\":[6,8],\"2253\":[6,7],\"2254\":[1],\"2255\":[1,23],\"2256\":[1,35],\"2257\":[2,60],\"2258\":[1],\"2259\":[1,53],\"2260\":[1,15],\"2261\":[1,17],\"2262\":[1,77],\"2263\":[1],\"2264\":[1,6],\"2265\":[1,14],\"2266\":[1],\"2267\":[2],\"2268\":[2,7],\"2269\":[1,30],\"2270\":[1,29],\"2271\":[1,4],\"2272\":[1],\"2273\":[1,23],\"2274\":[1,35],\"2275\":[2,60],\"2276\":[1],\"2277\":[1,53],\"2278\":[1,15],\"2279\":[1,17],\"2280\":[1,77],\"2281\":[1],\"2282\":[1,6],\"2283\":[1,14],\"2284\":[1],\"2285\":[2,5],\"2286\":[2,9],\"2287\":[3,2],\"2288\":[1,2],\"2289\":[2,8],\"2290\":[2,97],\"2291\":[2,37],\"2292\":[1],\"2293\":[2],\"2294\":[2,7],\"2295\":[1,30],\"2296\":[1,29],\"2297\":[1,4],\"2298\":[1],\"2299\":[1,23],\"2300\":[1,35],\"2301\":[2,60],\"2302\":[1],\"2303\":[1,53],\"2304\":[1,15],\"2305\":[1,17],\"2306\":[1,77],\"2307\":[1],\"2308\":[1,6],\"2309\":[1,14],\"2310\":[1],\"2311\":[2,5],\"2312\":[2,9],\"2313\":[3,2],\"2314\":[1,2],\"2315\":[2,8],\"2316\":[2,97],\"2317\":[2,37],\"2318\":[1,11],\"2319\":[2,17],\"2320\":[2,32],\"2321\":[2,14],\"2322\":[2,2],\"2323\":[3],\"2324\":[3],\"2325\":[4,27],\"2326\":[2],\"2327\":[7,6],\"2328\":[1,65],\"2329\":[1,15],\"2330\":[1,7],\"2331\":[1,6],\"2332\":[1],\"2333\":[1,23],\"2334\":[2,6],\"2335\":[2],\"2336\":[3,35],\"2337\":[2,8],\"2338\":[3,14],\"2339\":[3,36],\"2340\":[2,19],\"2341\":[2,61],\"2342\":[2,7],\"2343\":[2,6],\"2344\":[1,11],\"2345\":[2,17],\"2346\":[2,32],\"2347\":[2,14],\"2348\":[2,2],\"2349\":[3],\"2350\":[3],\"2351\":[4,27],\"2352\":[2],\"2353\":[7,6],\"2354\":[1,65],\"2355\":[1,15],\"2356\":[1,7],\"2357\":[1,6],\"2358\":[1],\"2359\":[1,23],\"2360\":[2,6],\"2361\":[2],\"2362\":[3,35],\"2363\":[2,8],\"2364\":[3,14],\"2365\":[3,36],\"2366\":[2,19],\"2367\":[2,61],\"2368\":[2,7],\"2369\":[2,6],\"2370\":[3],\"2371\":[1,5],\"2372\":[1,36],\"2373\":[1,16],\"2374\":[1,7],\"2375\":[1,5],\"2376\":[1],\"2377\":[1,3],\"2378\":[1],\"2379\":[1],\"2380\":[1],\"2381\":[1],\"2382\":[1],\"2383\":[1],\"2384\":[1],\"2385\":[3],\"2386\":[1],\"2387\":[3],\"2388\":[1],\"2389\":[3],\"2390\":[1],\"2391\":[3],\"2392\":[1],\"2393\":[1],\"2394\":[1],\"2395\":[1],\"2396\":[1],\"2397\":[2],\"2398\":[1],\"2399\":[2],\"2400\":[1],\"2401\":[1],\"2402\":[1],\"2403\":[1],\"2404\":[1],\"2405\":[3],\"2406\":[1],\"2407\":[1],\"2408\":[1],\"2409\":[1],\"2410\":[1],\"2411\":[1],\"2412\":[1],\"2413\":[1],\"2414\":[1],\"2415\":[1],\"2416\":[1],\"2417\":[1],\"2418\":[1],\"2419\":[1],\"2420\":[1],\"2421\":[2],\"2422\":[1],\"2423\":[1],\"2424\":[1],\"2425\":[1],\"2426\":[1],\"2427\":[1],\"2428\":[1],\"2429\":[1],\"2430\":[1]},\"averageFieldLength\":[2.3159193747429043,22.329246544713975],\"storedFields\":{\"0\":{\"h\":\"首页\",\"t\":[\"❤️特别赞助\",\"{{ item.title }}\",\"{{ item.description }}\",\"优秀开源集成案例\",\" （如果您的开源项目也使用了 Warm-Flow，您可以 在此 提交） \",\" （更多开源项目详情，您可以 在此 查看） \",\"正在使用 Warm-Flow 的企业 / 个人（29家）\",\" （如果您的企业也使用了 Warm-Flow，您可以 在此 提交） \",\" （更多使用企业/个人详情，您可以 在此 查看） \",\"Dromara 成员项目\",\" 为往圣继绝学，一个人或许能走的更快，但一群人会走的更远。 \",\"👍友情链接\"]},\"1\":{\"h\":\"流程图管理\"},\"2\":{\"h\":\"1、追加文字\"},\"3\":{\"h\":\"1.1、保存需要追加的文字\",\"t\":[\"以下是在全局分派监听器中追加文字示例，也可以在流程或者节点监听器。\",\"/** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); String defJsonStr = listenerVariable.getInstance().getDefJson(); if (StringUtils.isNotBlank(defJsonStr)) { DefJson defJson = FlowEngine.jsonConvert.strToBean(defJsonStr, DefJson.class); for (NodeJson nodeJson : defJson.getNodeList()) { if (nodeJson.getNodeCode().equals(listenerVariable.getNode().getNodeCode())) { Long userId = Long.valueOf(listenerVariable.getFlowParams().getHandler()); SysUser sysUser = userService.selectUserById(userId); if (sysUser != null && StringUtils.isNotEmpty(sysUser.getNickName())) { nodeJson.getExtMap().put(\\\"办理人\\\", sysUser.getNickName()); } nodeJson.getExtMap().put(\\\"办理时间\\\", LocalDateTime.now().format(DateTimeFormatter.ofPattern(\\\"yy-MM-dd\\\"))); } } listenerVariable.getInstance().setDefJson(FlowEngine.jsonConvert.objToStr(defJson)); } log.info(\\\"全局分派监听器执行结束......\\\"); }\"]},\"4\":{\"h\":\"1.2、追加文字\",\"t\":[\" /** * 查询流程图 * * @param instanceId * @return */ @GetMapping(\\\"/flowChart/{instanceId}\\\") public R<String> flowChart(@PathVariable(\\\"instanceId\\\") Long instanceId) { return R.ok(chartService.chartIns(instanceId, (flowChartChain) -> { List<FlowChart> flowChartList = flowChartChain.getFlowChartList(); flowChartList.forEach(flowChart -> { if (flowChart instanceof BetweenChart) { BetweenChart betweenChart = (BetweenChart) flowChart; Map<String, Object> extMap = betweenChart.getNodeJson().getExtMap(); // 给节点顶部增加文字说明 // betweenChart.topText(\\\"办理时间: 2025-02-08 12:12:12\\\", Color.red); if (MapUtil.isNotEmpty(extMap)) { for(Map.Entry<String, Object> entry : extMap.entrySet()){ // 给节点中追加文字 betweenChart.addText(entry.getKey() + \\\":\\\", Color.red); betweenChart.addText((String) entry.getValue(), Color.red); } } } }); })); }\"]},\"5\":{\"h\":\"1.3、效果图\"},\"6\":{\"h\":\"2、自定义流程图节点颜色\"},\"7\":{\"h\":\"2.1、配置文件\",\"t\":[\"# warm-flow工作流配置 warm-flow: ... ##流程状态对应的三元色 chart-status-color: ## 未办理 - 157,255,0 ## 待办理 - 0,0,0 ## 已办理 - 255,200,0\"]},\"8\":{\"h\":\"2.2、效果图\"},\"9\":{\"h\":\"监听器\",\"t\":[\"提示\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。\",\"支持类包名配置和表达式配置。\"]},\"10\":{\"h\":\"1、监听器小类\",\"t\":[\"start：开始监听器，任务开始办理时执行，数据初始化，办理人权限设置等\",\"assignment： 分派办理人监听器，动态修改代办任务信息，但不限于\",\"finish：完成监听器，当前任务完成后执行，可对业务表更新，消息通知等\",\"create：创建监听器，任务创建时执行，比如数据初始化\"]},\"11\":{\"h\":\"2、监听器大类\",\"t\":[\"节点监听器：在流程节点中配置，作用范围当前节点，只会执行小类中任意一个\",\"流程监听器：在流程定义中配置，作用范围当前流程定义，只会执行小类中任意一个\",\"全局监听器：实现全局监听器四个接口，作用范围当前所有流程，包含可执行所有小类\",\"执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"12\":{\"h\":\"3、监听器生命周期图\"},\"13\":{\"h\":\"4、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应\",\"listener_type：监听器类型，如start,assignment,finish,create等\",\"listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等\",\"监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"14\":{\"h\":\"5、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"15\":{\"h\":\"5、节点和流程监听器\"},\"16\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"17\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"18\":{\"h\":\"5.4、分派监听器\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"当前节点分派监听器：执行时修改【下个节点配置办理人权限】或者其他\",\"下个节点配置办理人权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"19\":{\"h\":\"5.4、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowEngine.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowEngine.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"20\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"21\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"22\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"23\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"24\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"25\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"26\":{\"h\":\"逻辑删除\"},\"27\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"提示\",\"Mybatis-plus只支持自身的逻辑删除方式, 默认开启。 如若关闭, 需高版本比如3.5.3或者以上\",\"默认逻辑未删除值：0，逻辑已删除值：1\",\"如需修改默认值，请参考如下配置文件中进行修改\"]},\"28\":{\"h\":\"1.1、配置默认逻辑删除值\"},\"29\":{\"h\":\"1.2、关闭逻辑删除方案\",\"t\":[\"/** * 关闭逻辑删除，需高版本比如3.5.3或者以上 * * @author warm */ @Component public class PlusPostInitTableInfoHandler implements PostInitTableInfoHandler { List<String> tableNames = Arrays.asList(\\\"flow_definition\\\", \\\"flow_node\\\", \\\"flow_skip\\\", \\\"flow_instance\\\", \\\"flow_task\\\" , \\\"flow_his_task\\\", \\\"flow_user\\\"); @Override public void postTableInfo(TableInfo tableInfo, Configuration configuration) { String tableName = tableInfo.getTableName(); if (tableNames.contains(tableName)) { Class<?> clazz = tableInfo.getClass(); Field[] fields = clazz.getDeclaredFields(); try { for (Field field : fields) { if (\\\"withLogicDelete\\\".equals(field.getName())) { field.setAccessible(true); // 关闭逻辑删除 field.set(tableInfo, false); } } } catch (IllegalAccessException e) { throw new FlowException(\\\"反射设置对象值异常\\\"); } } } }\"]},\"30\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"31\":{\"h\":\"节点扩展属性\",\"t\":[\"提示\",\"当业务系统需要给节点添加扩展属性时，可以按照这个进行扩展。\"]},\"32\":{\"h\":\"1、实现节点扩展属性数据模型接口\",\"t\":[\"演示项目hh-vue中实现类NodeExtServiceImpl\",\"public interface NodeExtService { /** * 获取节点扩展属性 * @return 结果 */ List<NodeExt> getNodeExt(); }\"]},\"33\":{\"h\":\"2、扩展属性数据模型规则\"},\"34\":{\"h\":\"3、设计器渲染效果\"},\"35\":{\"h\":\"4、扩展属性入库\",\"t\":[\"点击保存后，保存到节点表的ext字段，格式如下：\",\" [ { \\\"code\\\": \\\"base1\\\", -- 编码 \\\"value\\\": \\\"1\\\" -- 值，如果复选框，多个值，用逗号拼接 }, { \\\"code\\\": \\\"btn_auth1\\\", -- 编码 \\\"value\\\": \\\"1,2\\\" -- 值，如果复选框，多个值，用逗号拼接 } ]\"]},\"36\":{\"h\":\"5、扩展属性使用\",\"t\":[\"业务系统自行查询，按照自己的需求，自行实现\"]},\"37\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"提示\",\"组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"38\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"39\":{\"h\":\"办理人权限处理器\",\"t\":[\"提示\",\"审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员\",\"工作流api中很多需要获取当前办理人id，进行保存或者校验\",\"以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"40\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link FlowParams#getPermissionFlag} 中获取 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"41\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"42\":{\"h\":\"多租户\"},\"43\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"提示\",\"Mybatis-plus只支持自身的多租户方式\"]},\"44\":{\"h\":\"2、通用多租户\"},\"45\":{\"h\":\"办理人变量表达式\",\"t\":[\"提示\",\"业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"46\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowEngine.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowEngine.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"47\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"48\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"49\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"3、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"50\":{\"h\":\"5、可实现的效果\",\"t\":[\"如下图中示例可以很容易实现\"]},\"51\":{\"h\":\"5、默认办理人变量策略\"},\"52\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"53\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"54\":{\"h\":\"7、spel办理人变量策略\"},\"55\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"56\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"57\":{\"h\":\"8、办理人选择项接口\",\"t\":[\"通过此接口可以给办理人选择，增加默认选项比如发起人、部门领导审批之类的（待开发）\"]},\"58\":{\"h\":\"条件表达式扩展\",\"t\":[\"提示\",\"当内置的条件表达式不满足业务需求时，可进行扩展\"]},\"59\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"60\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"61\":{\"h\":\"3、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"62\":{\"h\":\"3.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"63\":{\"h\":\"3.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"64\":{\"h\":\"3.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"65\":{\"h\":\"自定义流程状态\",\"t\":[\"提示\",\"flowStatus：流程实例表状态，当前流程状态\",\"hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"66\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"67\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"68\":{\"h\":\"3、其他请查阅核心api\"},\"69\":{\"h\":\"设计器二开\",\"t\":[\"提示\",\"当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"70\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"71\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\",\"业务系统配置设计器的地址\"]},\"72\":{\"h\":\"3 部署\"},\"73\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"74\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"75\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"76\":{\"h\":\"条件表达式扩展\"},\"77\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"78\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"79\":{\"h\":\"表单管理\",\"t\":[\"待补充\"]},\"80\":{\"h\":\"json库扩展\",\"t\":[\"提示\",\"目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"81\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"82\":{\"h\":\"监听器表达式扩展\",\"t\":[\"提示\",\"当内置的监听器表达式不满足业务需求时，可进行扩展\"]},\"83\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"84\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"85\":{\"h\":\"3. 监听器表达式\"},\"86\":{\"h\":\"3.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"87\":{\"h\":\"3.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"88\":{\"h\":\"办理人变量表达式扩展\",\"t\":[\"提示\",\"当内置的办理人变量不满足业务需求时，可进行扩展\"]},\"89\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"90\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"91\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"92\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"93\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"94\":{\"h\":\"公司使用列表\",\"t\":[\"公司/个人\",\"项目名称\",\"项目介绍\",\"LOGO\\\\代码地址\",\"抚顺银行\",\"外围管理平台\",\"行内人员使用\",\"昆明倍特技术服务\",\"协同办公系统\",\"协同办公系统\",\"北京瑞科科技\",\"研发项目管理系统\",\"内部项目审核系统\",\"哈尔滨金睿科技有限公司\",\"供热收费、客服系统\",\"供热收费、客服系统\",\"中交武汉智行国际\",\"能力开放平台\",\"内部系统，流程审批\",\"新理益智慧网络科技（重庆）有限公司\",\"极点OA智慧网络办公系统\",\"企业综合办公管理系统\",\"安徽数智建造研究院有限公司\",\"进销存运营平台\",\"中铁四局集团全资子公司，集成工作流引擎\",\"杭州三之一智联科技有限公司\",\"质量管理系统\",\"基于工业互联网的数字化安全与质量管理平台，集风险、质量和安全为一体，以CTQ（关键质量特性）为中心，端到端全生命周期数字化安全与质量管理。\",\"郑州如阳科技有限公司\",\"智慧燃气平台\",\"智慧燃气平台\",\"山东融佑信息科技有限公司\",\"融运力TMS\",\"融运力TMS是基于移动互联网的面向货主侧需求的订单履约类的TMS系统，兼有传统TMS的竞标、派车、跟踪、签收等功能，同时具备企业ERP级的协同功能\",\"陕西物联达智能科技有限公司\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"H5VE团队\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"武汉数演科技有限公司\",\"开源工作流\",\"仿钉钉界面的开源工作流平台\",\"半月无霜\",\"banmoon-test\",\"半月无霜个人项目\",\"https://www.banmoon.top\",\"餐云汇团队\",\"餐云汇一站式闭环整体解决方案\",\"餐云汇一站式闭环整体解决方案\",\"某某公司\",\"合规管控系统\",\"对各类事项进行检查，上报不合规的地方来审批整改\",\"晨帆智能\",\"****系统智能设计平台\",\"二三维智能设计软件统一平台\",\"个人\",\"海狼OA系统\",\"海狼OA系统\",\"xx自来水股份有限公司\",\"节水信息管理系统\",\"当地节水系统\",\"图灵谷\",\"内部OA\",\"内部OA\",\"湖北建科工程\",\"内部OA\",\"内部OA\",\"Holly\",\"智慧政务\",\"政务系统\",\"雨巷\",\"OA审批系统\",\"公司内部OA办公系统\",\"暗影\",\"erp\",\"erp\",\"LYQ\",\"XX单位综合信息服务系统\",\"简易工作流，OA办公，数据共享等等\",\"若愚\",\"测试检测平台\",\"starrydesert\",\"基于SSM的职工管理系统\",\"毕业设计\",\"zyflzz\",\"基于机器学习的只能停车管理系统\",\"毕业设计\",\"南山客\",\"基于SpringBoot的财务管理系统\",\"本科毕业设计\"]},\"95\":{\"h\":\"如何贡献\"},\"96\":{\"h\":\"参与贡献\"},\"97\":{\"h\":\"为开源项目点一个Star\",\"t\":[\"Star的多少关系到项目能否被更多人看到 同时Star也是作者前进的动力(作者每天都在盯着Star 涨了会开心 跌了会失落) 大家在寻找开源项目的时候, 大多数情况也是会先看Star比较多的项目 所以请给您觉得好的开源项目点一个小小的Star, 让好的项目能够被更多人看到\",\"github地址 | gitee地址 | gitCode地址\"]},\"98\":{\"h\":\"为社区处理问题\",\"t\":[\"Issue是社区的交流地 大家会在这里提出自己的问题 或者是项目的功能异常\",\"提问的规范在Issue的模板里已经写好了 按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",\"屏幕截图\",\"为提出问题的小伙伴答疑 可以有效降的帮助别人\",\"而且可以降低社区人员的精力分散 使精力全部投入到项目设计研发中\",\"屏幕截图\"]},\"99\":{\"h\":\"\",\"t\":[\"大家都知道 我们程序员都不擅长写作\",\"有时候作者把文档写完了也不知道用户是什么感觉 是否能看懂\",\"所以参与社区文档建设绝对是一件意义重大的事情\",\"大家可以在Issue提出观后感 觉得哪看不懂 觉得哪应该详细说明\",\"当然了 大家也可以对文档进行改进后提交PR修改申请\"]},\"100\":{\"h\":\"贡献代码\",\"t\":[\"想参与贡献代码的小伙伴 重点来了: 作者会经常在Issue里发布需求认领 觉得自己能做的可以在Issue里跟作者讨论 如需求还不够清晰 或者做的过程中遇到了什么问题\",\"需求确定了以后就可以开始专注的写代码了 但在开始写代码之前 一定要先看一下如何正确的提交PR\"]},\"101\":{\"h\":\"如何成为项目贡献者\",\"t\":[\"1.对框架有重大贡献者(由作者与团队成员判定) 2.完成社区发布的两项复杂任务 3.持续完成社区发布的简单任务若干(作者会关注到) 4.持续为社区优化文档或处理issue若干(作者会关注到)\"]},\"102\":{\"h\":\"项目贡献者待遇\",\"t\":[\"1.捐献红包和群主不定时红包 2.每年还会发放IDEA正版授权,视情况而定\"]},\"103\":{\"h\":\"提交pr\"},\"104\":{\"h\":\"步骤一 Fork项目到自己仓库\",\"t\":[\"屏幕截图\"]},\"105\":{\"h\":\"步骤二 基于dev分支 新建一个此PR功能点的专属分支\"},\"106\":{\"h\":\"步骤三 使用Git工具 将自己仓库的项目拉去到本地做代码编写\",\"t\":[\"屏幕截图\"]},\"107\":{\"h\":\"步骤四 使用Idea打开项目 切换到新建的功能分支\",\"t\":[\"屏幕截图\"]},\"108\":{\"h\":\"步骤五 设置创建类的模板\",\"t\":[\"新创建的类使用这个模板生成注释，使用方式在类上面写上 /c，然后按回车会自动生成\"]},\"109\":{\"h\":\"步骤六 将编写好的代码 提交到自己的远程仓库\",\"t\":[\"屏幕截图\",\"git提交规范\",\"[init] 初始化 [feat] 增加新功能 [fix] 修复问题/BUG [perf] 优化/性能提升 [refactor] 重构 [revert] 撤销修改 [style] 代码风格相关无影响运行结果的 [update] 其他修改 [upgrade] 升级版本\"]},\"110\":{\"h\":\"步骤七 创建PR申请(此操作在自己仓库或者要PR的仓库都可以)\",\"t\":[\"屏幕截图\"]},\"111\":{\"h\":\"步骤八 等待作者评审 按要求更改 直到没有问题后被作者合并\",\"t\":[\"屏幕截图\"]},\"112\":{\"h\":\"介绍\"},\"113\":{\"h\":\"1、项目介绍\",\"t\":[\"提示\",\"Dromara Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，数据入库，并支持追加文字和自定义流程图节点颜色等扩展\",\"流程设计器：可通过jar包形式快速集成到项目，支持节点属性扩展，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架支持：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex、Jpa和Easy-Query，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle、PostgreSQL和SQL Server，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"希望一键三连，你的⭐️ Star ⭐️是我持续开发的动力，项目也活的更长\"]},\"114\":{\"h\":\"2、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top 项目地址：https://gitee.com/min290/hh-vue.git\"]},\"115\":{\"h\":\"3、与Activiti、Flowable对比\",\"t\":[\"工作流\",\"Activiti\",\"Flowable\",\"Warm-Flow\",\"项目背景\",\"Apache 基金会。\",\"由 Activiti 原团队创建，功能更优化。\",\"国产工作流引擎（Dromara 社区）\",\"社区活跃度\",\"社区规模大，但近年活跃度下降。\",\"社区活跃，迭代快\",\"文档和Ruoyi-Vue实战案例较完善，社区活跃，更新快。\",\"数据库表结构\",\"约 25 张表，分类简单。\",\"约 40 张表（部分版本达 79 张），分类更细。\",\"仅 7 张表，结构极简，维护成本低。\",\"功能与扩展性\",\"基础 BPMN 支持，插件机制有限。\",\"支持动态流程修改、REST API、多实例任务优化。\",\"审批功能全面，基于json定义，支持办理人变量表达式、监听器、变量表达式表达式、动态权限。\",\"流程设计器\",\"需独立部署或集成第三方工具。\",\"需额外配置或扩展。\",\"通过 Jar 包快速集成，支持节点属性扩展，适配 SpringBoot 和 Solon。\",\"数据驱动\",\"内部是通过mybatis进行增删改成，对其他orm不支持。\",\"同左。\",\"支持多 ORM 框架。\",\"多租户与软删除\",\"需自行实现或依赖外部框架。\",\"原生支持多租户和软删除。\",\"原生支持多租户和软删除，也可复用 ORM 框架实现。\",\"数据库支持\",\"主流数据库（MySQL、Oracle 等）。\",\"同左。\",\"支持 MySQL、Oracle、PostgreSQL、SQL Server，和国产数据库。\",\"条件表达式\",\"基础条件支持。\",\"支持 SpEL 表达式。\",\"内置 SpEL 和自定义表达式，支持动态权限和参数传递。\",\"办理人表达式\",\"基于 UEL实现，支持简单变量和固定角色分配。\",\"支持UEL、SpEL 表达式，可通过动态变量、角色、部门等灵活分配任务。\",\"默认表达式和支持 SpEL ，支持自定义规则。\",\"生成的流程图片\",\"生成静态 BPMN 流程图，颜色和样式固定。\",\"支持标准流程图生成，但动态修改颜色或添加注释需结合前端代码\",\"原生支持动态追加文字、设置节点状态颜色（如进行中/已完成）\",\"适用场景\",\"简单流程或旧系统兼容。\",\"复杂流程、高扩展性需求。\",\"国产化、轻量级项目，快速审批场景，灵活扩展和低代码集成。\"]},\"116\":{\"h\":\"4、应用场景\",\"t\":[\"Dromara Warm-Flow作为一个国产的工作流引擎，其设计简洁轻量但功能全面，适用于多种应用场景，尤其是针对中小型项目。以下是一些典型的应用场景：\",\"企业内部流程管理：用于管理企业的日常业务流程，如请假、报销、采购审批等。\",\"项目管理：在项目管理中，Dromara Warm-Flow可以用来跟踪项目任务的状态，管理项目流程，确保项目按计划进行。\",\"客户服务流程：用于管理客户服务请求，如客户咨询、投诉处理、售后服务等。\",\"人力资源管理：在人力资源管理中，Warm-Flow可用于员工招聘、培训、绩效评估等流程的管理。\",\"财务和会计流程：管理财务审批流程，如发票审核、预算审批等。\",\"IT服务管理：用于IT服务请求的处理，如IT支持请求、系统变更管理等。\",\"合规性和风险管理：帮助企业在遵守法规和标准的同时，管理风险和合规流程。\"]},\"117\":{\"h\":\"5、支持数据库类型\",\"t\":[\"目前支持MySQL 、Oracle、PostgreSQL和SQL Server，其他数据库只需要转换表结构，使用Mybatis-Plus、Mybatis-Flex和Easy-Query即可兼容\",\" MySQL\",\" Oracle\",\" PostgreSQL\",\" SQL Server\",\" ......\"]},\"118\":{\"h\":\"6、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"119\":{\"h\":\"开源协议\",\"t\":[\"注意\",\"Dromara Warm-Flow采用APACHE LICENSE 2.0开源协议，项目代码、文档均开源免费可商用，遵循开源协议即可\",\"开发完成请务必登记使用项目列表，登记地址\",\"已申请软著，您如果需要源码二开，需要注意以下几点：\",\"请不要删除和修改根目录下的LICENSE文件。\",\"请不要删除和修改Warm-Flow源码头部的版权声明。\",\"本项目代码可免费商业使用，商业使用请保留源码和相关描述文件的项目出处，作者声明等。\",\"分发源码时候，请注明软件出处 https://warm-flow.dromara.org/\",\"不可二次分发开源参与同类竞品，如有想法可联系290631660@qq.com商议合作。\",\"若您的项目无法满足以上几点，需要更多功能代码，获取可找作者定制化开发，290631660@qq.com\"]},\"120\":{\"h\":\"功能演示\"},\"121\":{\"h\":\"演示地址\",\"t\":[\"注意\",\"admin/admin123\",\"演示地址：http://www.hhzai.top\",\"项目地址：https://gitee.com/min290/hh-vue.git\"]},\"122\":{\"h\":\"演示图\"},\"123\":{\"h\":\"1、新增定义\",\"t\":[\"提示\",\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"124\":{\"h\":\"2、流程设计\"},\"125\":{\"h\":\"2、1节点设置\",\"t\":[\"提示\",\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"126\":{\"h\":\"2、2跳转线设置\",\"t\":[\"提示\",\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"127\":{\"h\":\"3、开启流程实例\",\"t\":[\"提示\",\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"128\":{\"h\":\"4、提交流程\",\"t\":[\"提示\",\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"129\":{\"h\":\"5、办理流程\",\"t\":[\"提示\",\"如果是互斥网关则会判断是否满足条件\"]},\"130\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"131\":{\"h\":\"开源集成案例\",\"t\":[\"作者\",\"项目名称\",\"描述\",\"晓华\",\"hh-vue\",\"官方演示项目，基于ruoyi-vue集成，springboot2+vue2\",\"疯狂的狮子Li\",\"RuoYi-Vue-Plus\",\"多租户后台管理系统 重写RuoYi-Vue所有功能 集成 Sa-Token、Mybatis-Plus、Flowable、SpringDoc、Hutool、OSS 定期同步\",\"玲娜贝er\",\"ruoyi-plus-vben5\",\"基于vben最新版本v5 & ant-design-vue 的 RuoYi-Vue-Plus 前端项目\",\"seven\",\"seaflow\",\"seaflow 是一款 开源仿钉钉工作流 平台， 前端使用 vue3+element plus ， 实现 流程设计和审批功能， 后端基于国产工作流Dromara warm-flow 实现流程控制， 大大缩短了学习成本\",\"晓华/Zhen\",\"ruoyi-vue3\",\"基于ruoyi-vue3集成前端\",\"梁小梁/Zhen\",\"Ruoyi-Cloud/RuoYi-Vue3\",\"基于Ruoyi-Cloud集成的跑批系统,spring-cloud(nacos)+vue3\",\"quick\",\"quick-boot\",\"基于 Spring Cloud 2022 、Spring Boot 3、React、AMIS 和 APIJSON 的低代码系统的设计和实现。该系统可以帮助企业快速开发和部署高质量的 Web 应用程序\"]},\"132\":{\"h\":\"捐赠\",\"t\":[\"感谢所有捐赠者，你们的支持是我最大的动力。这些费用将用于服务器、域名和相关服务的费用，以及warm组织成员和贡献者的红包奖励。\"]},\"133\":{\"h\":\"捐赠列表\",\"t\":[\"如有遗漏，请联系我。\",\"捐献者\",\"金额/元\",\"留言\",\"时间\",\"E*2\",\"100\",\"感谢您对开源项目的支持\",\"2025-01-09\",\"一拳打爆常大宝\",\"20\",\"感谢您对开源项目的支持\",\"2024-08-08\",\"李*佳\",\"30\",\"感谢您对开源项目的支持\",\"2024-08-02\",\"*佳\",\"30\",\"希望有交流机会\",\"2024-08-01\",\"*子\",\"30\",\"准备试用，致敬\",\"2024-07-16\",\"i*d\",\"1\",\"感谢您对开源项目的支持\",\"2024-07-11\",\"自由飞翔\",\"100\",\"感谢您对开源项目的支持\",\"2024-07-03\",\"文斌\",\"100\",\"Dromara warm-flow项目非常好，希望能发展壮大\",\"2024-06-25\",\"*入\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*梁\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*马\",\"100\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*热\",\"68\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*巴\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*敏\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*剑\",\"1\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"一骑\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"姜杰\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Cola\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Dotor-ww💪\",\"30\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*荒\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*飞鸿\",\"11\",\"感谢您对开源项目的支持\",\"2024-06-25\"]},\"134\":{\"h\":\"核心接口api\"},\"135\":{\"h\":\"DefService流程定义\"},\"136\":{\"h\":\"导入流程输入流\",\"t\":[\"importIs(is)：流程定义的输入流\"]},\"137\":{\"h\":\"导入流程json字符串\",\"t\":[\"importJson(defStr)：流程定义defJson的json字符串\"]},\"138\":{\"h\":\"导入流程json对象\",\"t\":[\"importDef(defJson)：流程定义json对象\"]},\"139\":{\"h\":\"新增流程\",\"t\":[\"saveAndInitNode(definition)：新增流程定义，并初始化流程节点和流程跳转数据\"]},\"140\":{\"h\":\"只新增流程定义表数据\",\"t\":[\"checkAndSave(definition)：流程定义对象\"]},\"141\":{\"h\":\"保存流程节点和跳转\",\"t\":[\"saveDef(defJson)：流程定义json对象\"]},\"142\":{\"h\":\"导出流程定义json字符串\",\"t\":[\"exportJson(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)的json字符串\"]},\"143\":{\"h\":\"获取流程定义全部数据对象\",\"t\":[\"getAllDataDefinition(id)： 获取流程定义全部数据(包含节点和跳转)\"]},\"144\":{\"h\":\"查询流程设计所需的数据\",\"t\":[\"queryDesign(id)： 查询流程设计所需的数据，比如流程图渲染\"]},\"145\":{\"h\":\"更新流程定义发布状态\",\"t\":[\"updatePublishStatus(defIds, publishStatus)：\",\"defIds: 流程定义id列表 [必传]\",\"publishStatus: 流程定义发布状态 [必传]\"]},\"146\":{\"h\":\"删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"147\":{\"h\":\"发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"148\":{\"h\":\"取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"149\":{\"h\":\"复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"150\":{\"h\":\"激活流程\",\"t\":[\"active(id)： 激活流程\"]},\"151\":{\"h\":\"挂起流程\",\"t\":[\"unActive(id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"152\":{\"h\":\"ChartService流程图绘制接口\"},\"153\":{\"h\":\"流程图(渲染状态)\",\"t\":[\"chartIns(instanceId)：根据流程实例ID,获取流程图的图片流(渲染状态)\",\"instanceId: 流程实例id [必传]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"154\":{\"h\":\"流程图(不渲染状态)\",\"t\":[\"chartDef(definitionId)：根据流程定义ID,获取流程图的图片流(不渲染状态), 返回base64编码的图片流字符串\"]},\"155\":{\"h\":\"流程图(渲染状态)-可扩展\",\"t\":[\"chartIns(instanceId)：根据流程实例ID,获取流程图的图片流(渲染状态)\",\"instanceId: 流程实例id [必传]\",\"consumer: 可获取流程图对象，可用于修改流程图样式或者新增内容 [按需传输]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"156\":{\"h\":\"流程图(不渲染状态)-可扩展\",\"t\":[\"chartDef(definitionId)：根据流程实例ID,获取流程图的图片流(不渲染状态), 返回base64编码的图片流字符串\",\"instanceId: 流程实例id [必传]\",\"consumer: 可获取流程图对象，可用于修改流程图样式或者新增内容 [按需传输]\"]},\"157\":{\"h\":\"流程图(渲染状态)-自行渲染\",\"t\":[\"chartInsObj(instanceId)：根据流程实例ID,获取流程图对象\",\"instanceId: 流程实例id [必传]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"158\":{\"h\":\"流程图(不渲染状态)-自行渲染\",\"t\":[\"chartDefObj(definitionId)：根据流程定义ID,获取流程图对象\"]},\"159\":{\"h\":\"InsService流程实例\"},\"160\":{\"h\":\"开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"161\":{\"h\":\"流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 办理是忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"162\":{\"h\":\"终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"163\":{\"h\":\"删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"164\":{\"h\":\"激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"165\":{\"h\":\"挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"166\":{\"h\":\"查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"167\":{\"h\":\"TaskService待办任务\"},\"168\":{\"h\":\"流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"169\":{\"h\":\"终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"170\":{\"h\":\"转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"171\":{\"h\":\"委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"172\":{\"h\":\"加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"173\":{\"h\":\"减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"174\":{\"h\":\"修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"175\":{\"h\":\"NodeService流程节点\"},\"176\":{\"h\":\"获取已发布流程节点\",\"t\":[\"getPublishByFlowCode(flowCode)：根据流程编码获取已发布流程节点集合\"]},\"177\":{\"h\":\"获取前置节点\",\"t\":[\"previousNodeList(nodeId)：根据节点id获取下所有的前置节点集合\",\"nodeId: 节点id [必传]\"]},\"178\":{\"h\":\"获取前置节点\",\"t\":[\"previousNodeList(definitionId, nowNodeCode)：根据流程定义id和当前节点code获取所有的前置节点集合\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\"]},\"179\":{\"h\":\"获取后置节点\",\"t\":[\"suffixNodeList(nodeId)：根据节点id获取下所有的后置节点集合\",\"nodeId: 节点id [必传]\"]},\"180\":{\"h\":\"获取后置节点\",\"t\":[\"suffixNodeList(definitionId, nowNodeCode)：根据流程定义id和当前节点code获取所有的后置节点集合\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\"]},\"181\":{\"h\":\"获取后置置节点-含过滤\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"182\":{\"h\":\"HisTaskService历史记录\"},\"183\":{\"h\":\"根据任务id和协作类型查询\",\"t\":[\"listByTaskIdAndCooperateTypes(taskId, Integer... cooperateTypes)：根据任务id和协作类型查询\",\"taskId: taskId [必传]\",\"cooperateTypes: 协作类型集合 [按需传输]\"]},\"184\":{\"h\":\"根据实例Id和节点编码查询\",\"t\":[\"getByInsAndNodeCodes(instanceId, nodeCodes)：根据实例Id和节点编码查询\",\"instanceId: 实例Id [必传]\",\"nodeCodes: 节点编码 [按需传输]\"]},\"185\":{\"h\":\"根据流程实例Ids删除\",\"t\":[\"deleteByInsIds(instanceIds)：根据流程实例Ids删除\"]},\"186\":{\"h\":\"公共api接口\"},\"187\":{\"h\":\"根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"188\":{\"h\":\"根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"189\":{\"h\":\"分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"190\":{\"h\":\"查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"191\":{\"h\":\"查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"192\":{\"h\":\"查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"193\":{\"h\":\"获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"194\":{\"h\":\"判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"195\":{\"h\":\"新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"196\":{\"h\":\"根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"197\":{\"h\":\"根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"198\":{\"h\":\"根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"199\":{\"h\":\"根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"200\":{\"h\":\"批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"201\":{\"h\":\"批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"202\":{\"h\":\"批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"203\":{\"h\":\"id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"204\":{\"h\":\"创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"205\":{\"h\":\"更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"206\":{\"h\":\"设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"207\":{\"h\":\"设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"208\":{\"h\":\"用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"209\":{\"h\":\"流程协作(票签等)\",\"t\":[\"提示\",\"审批过程中可能存在，一人或者多人审批的情况，不同情况对应不同协作类型（会签、票签和或签）\"]},\"210\":{\"h\":\"1、流程协作规则\",\"t\":[\"或签：一名办理人审批通过，审批节点才会通过 票签：满足设定的通过率，部分审批人审批通过，审批节点才会通过 会签：所有审批人审批通过，审批节点才会通过\"]},\"211\":{\"h\":\"2、使用演示\"},\"212\":{\"h\":\"2.1、或签\"},\"213\":{\"h\":\"2.2、票签\"},\"214\":{\"h\":\"2.3、会签\"},\"215\":{\"h\":\"条件表达式\",\"t\":[\"提示\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"216\":{\"h\":\"1、内置表达式类型\",\"t\":[\"1、默认: default@@${flag == 5 && flag > 4}\",\"2、SpEL: spel@@#{@user.eval(#flag)}\",\"3、大于: gt@@flag|4\",\"4、大于等于: ge@@flag|4\",\"5、等于: eq@@flag|4\",\"6、不等于： ne@@flag|4\",\"7、小于: lt@@flag|4\",\"8、小于等于: le@@flag|4\",\"9、包含: like@@flag|4\",\"10、不包含: notNike@@flag|4\",\"11、自定义表达式\"]},\"217\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：xxx@@yyy|zzz，xxx为表达式类型，其中yyy为变量名，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）:spel@@#{@user.eval(#flag)}表达式，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"218\":{\"h\":\"配置文件\"},\"219\":{\"h\":\"数据填充器\",\"t\":[\"提示\",\"如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"220\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"221\":{\"h\":\"2、注入bean\"},\"222\":{\"h\":\"设计器集成\",\"t\":[\"提示\",\"为了方便业务系统快速引入设计器，不需要搬运并且适配等工作\",\"可以按照本文中介绍的，使用设计器，并快速接入业务系统\",\"设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"223\":{\"h\":\"1. 引入依赖\"},\"224\":{\"h\":\"2. 单体项目\"},\"225\":{\"h\":\"2.1 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/**\"]},\"226\":{\"h\":\"2.2. 前端引入设计器\",\"t\":[\"提示\",\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\"]},\"227\":{\"h\":\"3. 微服务集成\",\"t\":[\"微服务集成原来和单体类似，都是后端放行部分路径，前端加载页面，比如以RuoYi-Cloud为例\"]},\"228\":{\"h\":\"2.1 后端放行部分路径\",\"t\":[\"与单体不同，需要在gateway里面放行\",\"# 安全配置 security: # 不校验白名单 ignore: whites: - /auth/logout - /auth/login - /auth/register - /*/v2/api-docs - /*/v3/api-docs - /csrf - /warm-flow-ui/** - /warm-flow/**\",\"这是RuoYi-Cloud网关服务的过滤器，根据上面的白名单进行放行部分代码\",\"/** * 放行白名单配置 * * @author RuoYi */ @Configuration @RefreshScope @ConfigurationProperties(prefix = \\\"security.ignore\\\") public class IgnoreWhiteProperties { /** * 放行白名单配置，网关不校验此处的白名单 */ private List<String> whites = new ArrayList<>(); public List<String> getWhites() { return whites; } public void setWhites(List<String> whites) { this.whites = whites; } }\",\"/** * 网关鉴权 * * @author RuoYi */ @Component public class AuthFilter implements GlobalFilter, Ordered { private static final Logger log = LoggerFactory.getLogger(AuthFilter.class); // 排除过滤的 uri 地址，nacos自行添加 @Autowired private IgnoreWhiteProperties ignoreWhite; @Override public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) { ServerHttpRequest request = exchange.getRequest(); ServerHttpRequest.Builder mutate = request.mutate(); String url = request.getURI().getPath(); // 跳过不需要验证的路径 if (StringUtils.matches(url, ignoreWhite.getWhites())) { return chain.filter(exchange); } .... 其他校验 return chain.filter(exchange.mutate().request(mutate.build()).build()); } }\",\"配置网关路由\",\"spring: cloud: gateway: routes: # 流程服务 - id: ruoyi-flow uri: lb://ruoyi-flow predicates: - Path=/flow/** filters: - StripPrefix=1\"]},\"229\":{\"h\":\"3.2. 前端引入设计器\",\"t\":[\"提示\",\"设计器引入和单体类似，不过要多加一个网关路由flow，示例：ip:port/flow/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\"]},\"230\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"231\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"232\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"233\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"234\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"235\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"236\":{\"h\":\"办理人变更\",\"t\":[\"提示\",\"审批业务中经常会出现办理人中途变更的情况，比如增加办理人，任务转办给别人等。\"]},\"237\":{\"h\":\"1、变更支持的类型\",\"t\":[\"转办：任务转给其他人办理\",\"委派：求助其他人审批，然后参照他的意见决定是否审批通过\",\"加签：办理中途，希望其他人一起参与办理\",\"减签：办理中途，希望某些人不参与办理\"]},\"238\":{\"h\":\"2、接口描述\",\"t\":[\"接口描述地址\"]},\"239\":{\"h\":\"3、代码示例\"},\"240\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"求助其他人审批，然后参照他的意见决定是否审批通过\",\"4\",\"转办\",\"任务转给其他人办理\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的发起人，以便进行修改或重新处理\",\"7\",\"撤销\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"办理中途，希望其他人一起参与办理\",\"11\",\"减签\",\"办理中途，希望某些人不参与办理\",\"12\",\"会签\",\"所有审批人审批通过，审批节点才会通过\",\"13\",\"票签\",\"满足设定的通过率，部分审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"一名办理人审批通过，审批节点才会通过\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"241\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"242\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"243\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"244\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"245\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"246\":{\"h\":\"6、流程图元数据流程状态规则：\",\"t\":[\"目标节点，待办\",\"开启流程: \",\"初始化流程定义json\",\"其他的：未办\",\"通过: \",\"途径节点和跳转线：已办，\",\"退回: \",\"途径节点和跳转线：未办，\",\"目标节点之后的所有结点和跳转线：未办\",\"目标节点是结束节点: \",\"目标节点和起始节点：已办\",\"所有待办：未办\",\"如果办理过程中存在并行网关，则需要判断是否需要生成新任务 \",\"获取目标节点最近的并行网关集合\",\"根据目标节点递归往上找最近的并行网关，或者直到不是网关为止\",\"查询每个并行网关的所有的前置路线，记录总数量和已办理数量，如果已办数量=总数量-1，说明可以生成新任务\",\"如果前置节点是非并行网关，总数量+1，已办数量按实际情况记录\",\"如果前置节点是并行网关，递归往上找，直至找到非并行网关，记录总数量和已办数量。\"]},\"247\":{\"h\":\"快速开始\",\"t\":[\"提示\",\"在开始之前，我们假定您已经:\",\"熟悉 Java 环境配置及其开发\",\"熟悉 关系型 数据库，比如 MySQL\",\"熟悉 Spring Boot或者Solon 及相关框架\",\"熟悉 Java 构建工具，比如 Maven\"]},\"248\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"249\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"250\":{\"h\":\"3、maven依赖\"},\"251\":{\"h\":\"3.1、从首页获取最新版本\"},\"252\":{\"h\":\"3.2、mybatis\"},\"253\":{\"h\":\"3.3、mybatis-plus\"},\"254\":{\"h\":\"3.4、jpa\",\"t\":[\"https://gitee.com/warm_4/warm-flow-jpa.git\"]},\"255\":{\"h\":\"3.5、mybatis-flex\",\"t\":[\"https://gitee.com/rigangxia/warm-flow-mybatis-flex.git\"]},\"256\":{\"h\":\"3.6、easy-query\",\"t\":[\"https://gitee.com/link2fun/warm-flow-easy-query.git\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"257\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"258\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"259\":{\"h\":\"6、初学者推荐学习路线\"},\"260\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"261\":{\"h\":\"6.2、推荐学习视频\",\"t\":[\"给作者一些支持，一键三连，点赞+关注+评论666，这对作者很重要，谢谢！\"]},\"262\":{\"h\":\"表结构\",\"t\":[\"表描述\",\"流程定义的相关的三张表\",\"1、集团军要对某个区域进行长期的军事演练（流程定义表）\",\"2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表）\",\"3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表）\",\"流程实例三张表\",\"4、今天要进行一次军事演练（流程实例表）\",\"5、首先，按照任务计划，解放军执行第一个任务（待办任务表）\",\"6、后续会根据不同情况，进行不同的军事演练任务（待办任务表）\",\"7、演练要记录过程 （历史任务表）\",\"8、任务的需要分配执行人 (流程用户表)\",\"9、最终军事演练完成，流程完成\"]},\"263\":{\"h\":\"1.1 表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"264\":{\"h\":\"1.2 表字段明细\"},\"265\":{\"h\":\"1.2.1\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"266\":{\"h\":\"1.2.2\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"267\":{\"h\":\"1.2.3\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"268\":{\"h\":\"1.2.4\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"269\":{\"h\":\"1.2.5\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"270\":{\"h\":\"1.2.6\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"271\":{\"h\":\"1.2.7\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"272\":{\"h\":\"流程变量\",\"t\":[\"提示\",\"流程变量，map类型，用于流程执行中的数据转递\",\"在执行流程时，可以设置流程变量\",\"在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"273\":{\"h\":\"\"},\"274\":{\"h\":\"\"},\"275\":{\"h\":\"联系我\"},\"276\":{\"h\":\"1、沟通群和公众号\",\"t\":[\"沟通群\",\"公众号\",\"加入沟通群和公众号的好处：\",\"第一时间收到框架更新通知。\",\"第一时间收到框架 bug 通知。\",\"第一时间收到新增开源案例通知。\",\"第一时间收到最新技术文章通知。\"]},\"277\":{\"h\":\"2、提交issue\",\"t\":[\"issue描述清楚问题，方便我们快速定位问题\",\"https://gitee.com/dromara/warm-flow/issues\"]},\"278\":{\"h\":\"3、VIP群\",\"t\":[\"项目代码、文档，均开源免费可商用，遵循开源协议，不代表着项目收费\",\"VIP群由四名后端与一名前端工程师组成，提供问题答疑服务和技术分享等服务，欢迎加群交流\",\"支付后加微信号warm-houhou，邀请进入vip群\",\"问问题等于做习题 听作者解答问题等于习题讲解\",\"一个人接触的问题有限 一群人接触的问题无限 早进群早接触更多的问题\",\"承诺: 看见必回复 让你感受作者有多话痨\",\"加群扫码: 99元\"]},\"279\":{\"h\":\"4、内部群：\",\"t\":[\"为感谢对 Warm-Flow 生态做出贡献的同学，我们特创建了内部群：【Warm-Flow 生态共享与合作】\",\"加入群聊条件，以下满足其一即可：\",\"写过5篇以上有关 Warm-Flow 的原创博客。\",\"有开源项目集成了 Warm-Flow。\",\"有为 Warm-Flow 录制过教程视频，发表在公共平台（总时长>30分钟，且播放量>2000）。\",\"其它一些您认为有对 Warm-Flow 生态做出贡献的行为，可以直接联系我们，经内部投票评审通过即可加入（不要害羞，大胆联系我们哦 😊 ）\",\"加入群聊的好处：\",\"更及时的获知 Warm-Flow 下一步更新计划。\",\"在 Warm-Flow 遇到的任何疑问都可以当面与作者沟通，可协助解决问题。\",\"可提出未来版本更新需求，将具有更高的优先级进行评审与开发。\",\"加群申请微信号：warm-houhou\",\"注：此为专属内部群聊，不满足上述条件的同学请勿过分申请打扰，谢谢合作。满足条件者可以在申请加入时备注上您的项目名称 （例如：xx开源项目作者集成了 Warm-Flow，申请加入群聊），如果字数太多无法写完，也可在开源交流群里@管理员协助交流。\"]},\"280\":{\"h\":\"新闻\",\"t\":[\" {{ getTypeValue(item.type) }} \",\"{{ item.title }}\",\"{{ item.pushTime }}\"]},\"281\":{\"h\":\"有偿服务\"},\"282\":{\"h\":\"私人服务\",\"t\":[\"关于Dromara Warm-Flow工作流私人培训、集成服务\",\"当然有其他合适的私活也可以介绍给作者，比如项目开发，ui设计等等\",\"合作方式：\",\"合作费用：请加联系方式询问\",\"微信：warm-houhou（非诚勿扰）\"]},\"283\":{\"h\":\"赞助商广告\",\"t\":[\"Warm-Flow是基于Apache-2.0开源的项目，但我们每年都在支付第三方域名，云服务器，CDN流量费，推广开发费用。为了项目能够健康长久的发展下去，我们在Warm-Flow官网提供多个赞助商广告位。\",\"如您在Warm-Flow官网投放广告，可获得首页以及文档所有页面的展示.\",\"合作方式：\",\"合作费用：请加联系方式询问\",\"电子邮箱：290631660@qq.com\",\"微信：warm-houhou（非诚勿扰）\",\"准备材料：\",\"首页特别赞助LOGO图：大小控制在100k以内\",\"首页特别赞助描述文字：一段不超过30字的简单介绍\",\"文档页banner图片，大小控制在500KB以内\",\"链接URL格式：https://xxx.com?from=warmflow\"]},\"284\":{\"h\":\"团队\",\"t\":[\"avatar\",\"name\",\"email\",\"role\",\"contributions\",\"{{ item.name }}\",\"{{ item.email }}\",\"{{ item.role }}\",\"{{ item.contributions }}\"]},\"285\":{\"h\":\"常见问题\"},\"286\":{\"h\":\"1、id精度丢失\",\"t\":[\"方案1：处理长度过长的Long类型\",\"只处理长度过长的Long类型，前端页面就不会丢失精度了 (感谢【Colin】提供解决方案)\",\"创建一个BigNumberSerializer（用来处理超过JS数据范围的Long类型）\",\"👇 代码详情 👇\",\"/** * 超出 JS 最大最小值 处理 */ @JacksonStdImpl public class BigNumberSerializer extends NumberSerializer { /** * 根据 JS Number.MAX_SAFE_INTEGER 与 Number.MIN_SAFE_INTEGER 得来 */ private static final long MAX_SAFE_INTEGER = 9007199254740991L; private static final long MIN_SAFE_INTEGER = -9007199254740991L; /** * 提供实例 */ public static final BigNumberSerializer INSTANCE = new BigNumberSerializer(Number.class); public BigNumberSerializer(Class<? extends Number> rawType) { super(rawType); } @Override public void serialize(Number value, JsonGenerator gen, SerializerProvider provider) throws IOException { // 超出范围 序列化位字符串 if (value.longValue() > MIN_SAFE_INTEGER && value.longValue() < MAX_SAFE_INTEGER) { super.serialize(value, gen, provider); } else { gen.writeString(value.toString()); } } }\",\"添加JacksonConfig配置全局序列化（针对所有属性），一下两种方式任选其一\",\"👇 代码详情 👇\",\"@Configuration public class JacksonConfig { // 方式一 @Bean public Jackson2ObjectMapperBuilderCustomizer customizer() { return builder -> { ... 其他配置.... JavaTimeModule javaTimeModule = new JavaTimeModule(); //Long,BigInteger 转为 String 防止 js 丢失精度 javaTimeModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); builder.modules(javaTimeModule); }; } // 方式二 @Bean public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() { final Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder(); final ObjectMapper objectMapper = builder.build(); ... 其他配置.... SimpleModule simpleModule = new SimpleModule(); // Long,BigInteger 转为 String 防止 js 丢失精度 simpleModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); objectMapper.registerModule(simpleModule); return new MappingJackson2HttpMessageConverter(objectMapper); } }\",\"方案2：序列化所有long类型\",\"如何处理Long类型精度丢失问题 👇点击👇\",\"方案3：通过yml配置\",\"通过设置id生成器类型，修改id生成方式\",\"# warm-flow工作流配置 warm-flow: # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19\",\"方案4：自定义id生成策略\",\"参照如下文章，继承填充器接口，修改id生成方式\",\"Dromara Warm-Flow工作流引擎数据库主键自增策略实现👇\"]},\"287\":{\"h\":\"2、流程图片中文乱码\",\"t\":[\"linux环境：安装中文字体\",\"生成的流程图中文乱码或者报错InternalError; java.lang.reflect,InvocationTargetException\",\"由于服务器上缺少中文字体，通过检查fc-list :lang=zh是否包含中文字符集（以下是存在的示例）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ zhFonts]# fc-list :lang=zh /usr/share/fonts/zhFonts/SIMSUN.TTC: 新宋体,NSimSun:style=常规,Regular /usr/share/fonts/zhFonts/SIMSUN.TTC: 宋体,SimSun:style=常规,Regular\",\"zhFonts.zip将文件解压至/usr/share/fonts目录下，如果还不行，添加到jre的lib/fonts目录（感谢【我们好像在哪儿见过 】提供的方案）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ fonts]# ll 总用量 8 drwxr-xr-x 2 root root 4096 5月 17 00:20 dejavu drwxr-xr-x 2 root root 4096 5月 17 11:40 zhFonts\",\"重启服务\",\"docker环境：安装中文字体\",\"以ruoyi-vue-plus-4.x中dockerfile为例，添加中文字体即可 （感谢【格调@main】提供的方案）\"]},\"288\":{\"h\":\"3、initFlow()未加载\",\"t\":[\"提示\",\"spring开启懒加载后，导致FlowAutoConfig.initFlow()未加载。（由社区【星 Q】提供）\",\"删除\\\"lazy-initialization: true\\\",可解决问题，以下是错误示例\",\"spring: main: allow-bean-definition-overriding: true lazy-initialization: true web-application-type: servlet\"]},\"289\":{\"h\":\"4、监听器等对象获取不到\",\"t\":[\"提示\",\"热部署插件jrebel或者devtools导致问题，检查是否使用热部署插件，比如spring.devtools，可以把插件关了，或者加上排除配置spring-devtools.properties\",\"restart.include.flow=/org.dromara.warm.*.jar\"]},\"290\":{\"h\":\"5、类型转换异常\",\"t\":[\"同上\"]},\"291\":{\"h\":\"6、hh-vue切换mybaits-plus\",\"t\":[\"提示\",\"1、根pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"2、ruoyi-flow的pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"3、ruoyi-common增加依赖\",\" <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.5.1</version> </dependency>\",\"4、MyBatisConfig.java注释掉，新增MybatisPlusConfig\",\"👇 代码详情 👇\",\"package com.ruoyi.framework.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; /** * Mybatis Plus 配置 * * @author ruoyi */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 分页插件 interceptor.addInnerInterceptor(paginationInnerInterceptor()); // 乐观锁插件 interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor()); // 阻断插件 interceptor.addInnerInterceptor(blockAttackInnerInterceptor()); return interceptor; } /** * 分页插件，自动识别数据库类型 https://baomidou.com/guide/interceptor-pagination.html */ public PaginationInnerInterceptor paginationInnerInterceptor() { PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); // 设置数据库类型为mysql paginationInnerInterceptor.setDbType(DbType.MYSQL); // 设置最大单页限制数量，默认 500 条，-1 不受限制 paginationInnerInterceptor.setMaxLimit(-1L); return paginationInnerInterceptor; } /** * 乐观锁插件 https://baomidou.com/guide/interceptor-optimistic-locker.html */ public OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor() { return new OptimisticLockerInnerInterceptor(); } /** * 如果是对全表的删除或更新操作，就会终止该操作 https://baomidou.com/guide/interceptor-block-attack.html */ public BlockAttackInnerInterceptor blockAttackInnerInterceptor() { return new BlockAttackInnerInterceptor(); } }\",\"5、ruoyi-admin的application.yml中配置mybatis改为mybatis-plus\"]},\"292\":{\"h\":\"7、导入依赖包失败\",\"t\":[\"可尝试切换maven版本 （感谢【一拳打爆常大宝】）\",\"如maven3.9.6切换为低版本3.8.2\"]},\"293\":{\"h\":\"8、 StackOverflowError 错误\",\"t\":[\"提示\",\"查看跳转线退回的，是否设置为退回类型，后续有时间再做校验\"]},\"294\":{\"h\":\"9、 后端接收流程xml部分丢失\",\"t\":[\"提示\",\"一般是xxs过滤导致，排查下接口就行或者对象就行\"]},\"295\":{\"h\":\"更新日志\"},\"296\":{\"h\":\"未来发布计划\"},\"297\":{\"h\":\"vx.x.x\",\"t\":[\"事件\",\"流程图合法性检验\",\"把不能退回到开始节点去掉，会有什么影响\",\"子流程\",\"会签和票签通过率策略，支持扩展\",\"重启流程\",\"包容网关\",\"取回 @xiarigang\",\"开启流程可以不默认执行到中间节点 @晓华\"]},\"298\":{\"h\":\"开发中计划\"},\"299\":{\"h\":\"v1.6.8 2025-03-27\",\"t\":[\"取回 @xiarigang\",\"撤销 @xiarigang\",\"包容网关 @晓华\",\"实体类、dto、vo等独立成一个模块，方便微服务接入 @晓华\",\"[fix] 流程复制后，丢失原有的，驳回到指定节点配置信息\",\"[fix] 流程图退回状态设置，缺少判空\"]},\"300\":{\"h\":\"更新日志\"},\"301\":{\"h\":\"v1.6.7 2025-03-03\",\"t\":[\"升级指南\",\"[feat] 设计器支持节点扩展属性设置\",\"[feat] 流程图扩展，新增接口，方便追加文字\",\"[feat] 流程状态支持颜色支持自定义\",\"[update] 节点表版本号字段标识下个版本删除\",\"[update] Jackson反序列化时忽略未知字段\",\"[update] 删除部分代码，调整注释\",\"[update] 修改当票签和会签节点时，注意事项描述\",\"[fix] 规范solon,api注解 防止某些情况获取不到方法参数名\",\"[fix] 删除流程实例的时候，办理用户不存在，导致删除失败\",\"[fix] #IBP397：修复当设计流程，开始节点出现再负坐标时，文字名称未显示\",\"[fix] #IBP3LK：修复开启流程，流程图第一个节点不是待办颜色\",\"[fix] 网关节点编辑文字报错处理\",\"[remove] 移除流程定义xml导入导出方式\",\"[remove] 移除多余的skip_Any_Node字段\",\"[style] 常量改成大写和下划线\"]},\"302\":{\"h\":\"v1.6.6 2025-01-23\",\"t\":[\"升级指南\",\"[feat] 导入、导出和保存等新增json格式支持DefService.importIs/importJson/importDef/saveDef/exportJson\",\"[feat] 新增获取后置节点方法NodeService.suffixNodeList\",\"[feat] 新增网关直连和测试案例\",\"[feat] 流程图右上角新增完成状态颜色示例\",\"[feat] 新增流程图查询接口和扩展接口ChartService\",\"[feat] 新增历史表数据同步为新的流程图元数据\",\"[feat] 新增sqlserver全量脚本\",\"[update] 导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json的api\",\"[update] FlowFactory修改为FlowEngine\",\"[update] 历史表目标节点编码和目标节点名称字段长度改为200\",\"[update] 通过或者退回到并行网关，开启多个任务，改为只产生一条历史记录\",\"[update] 退回或者任务完成，其他需要被删除的任务不需要记录历史表，因为已经存在退回记录，不需要重复记录\",\"[update] 转办、委派、加签和减签，改为只产生一条历史记录\",\"[update] 批量保存改为默认1000条一批\",\"[update] 流程设计保存，增加遮罩层\",\"[refactor] 流程图绘制调整重构\",\"[refactor] 移除mybatis-flex,easy-query和jpa的扩展包，独立成项目，由专门人维护\",\"[refactor] 实体类和dao获取改为通过反射，解耦orm-core包\",\"[refactor] 重构获取前置节点方法NodeService.previousNodeList\",\"[fix] 修复退回时存在其他代办任务，未删除的问题\",\"[fix] 修复流程退回目标节点前存在并行网关，导致不生成代办任务的问题\",\"[fix] 修复条件表达式中如果有|或导致错误分隔的问题\",\"[fix] 修复绘制流程图，错误判断同一条录像的key\",\"[fix] 修复结束节点还执行创建监听器的问题\",\"[remove] 移除DefService获取流程图api，由ChartService中chartIns和chartDef代替\",\"[remove] 删除前端log打印\",\"[remove] 移除oracle和postgresql升级脚本，后续只提供mysql升级脚本，所有的全量脚本，其他升级脚本的自行转换\"]},\"303\":{\"h\":\"v1.3.8 2025-01-07\",\"t\":[\"[fix] 修复最新设计器代码未复制到到jar包\"]},\"304\":{\"h\":\"v1.3.7 2024-12-31\",\"t\":[\"升级指南\",\"[fix] 修复设计器驳回指定节点显示异常问题\",\"[fix] 流程实例查询SQL BUG\"]},\"305\":{\"h\":\"v1.3.6 2024-12-23\",\"t\":[\"[fix] 修复设计器驳回指定节点显示异常问题\"]},\"306\":{\"h\":\"v1.3.5 2024-12-20\",\"t\":[\"升级指南\",\"[feat] 新增获取所有前置节点接口\",\"[feat] 设计器新增设置驳回指定节点\",\"[feat] 条件表达式新增默认策略default|${flag == 5 && flag > 4}\",\"[feat] 新增mybatis-plus关闭逻辑删除案例\",\"[update] 退回不校验是否办理过\",\"[update] 复制流程版本号支持自动递增\",\"[update] 结点命名全部改成节点\",\"[refactor] 导入流程方法拆成两个方法，读取is流和导入实体类，insertFlow改为公共方法\",\"[refactor] 条件表达式原本太繁琐，进行精简, @@eq@@|flag@@eq@5 --> eq|flag|5\",\"[refactor] 任意跳转，改成退回选择目标节点，票签必填，修改字段名称\"]},\"307\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"升级指南\",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器优化配置（类中配置增加类型接口，或者优化页面配置）\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[update] 修改项目的groupId\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"308\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"升级指南\",\"[feat] 新增支持接入业务系统token，支持多token\",\"[update] 办理人选择tabs切换\",\"[update] 没有左侧树状选择数据时，左侧隐藏\",\"[fix] 统一修复分页bug\",\"[fix] 修复删除流程实例信息，未删除办理人信息 @xiarigang\",\"[fix] 修改【Bug】 会签节点委派 @vanlin\",\"[fix] 统一修复分页bug\"]},\"309\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"升级指南\",\"[feat] 新增boot3+java17支持\",\"[feat] 流程设计器新增快捷键支持\",\"[feat] 新增流程状态枚举（终止、作废、撤销和取回）\",\"[feat] 新增转办、委派、加签和减签方法，老方法标识即将删除，接入监听器\",\"[update] 终止流程状态改为更合理的终止状态\",\"[update] 流程复制克隆改set/get赋值\",\"[refactor] 重构skip等方法通用校验\",\"[perf] 流程图清晰度调整\",\"[fix] 流程图查询异常处理\",\"[fix] 修复历史记录表，创建时间和更新时间一样的问题\",\"[remove] FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\"]},\"310\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"[feat] 设计器独立 @zhen\",\"[feat] 使用jar引入方式引入设计器\",\"[feat] 新增办理人变量表达式流程案例\",\"[feat] 新增方法，获取流程变量的map类型\",\"[update] 节点线条保存关联名称\",\"[fix] 修复mybatis扩展包中，flowStatus变量书写错误的问题\",\"[fix] 更新时间有值时，取更新时间，不是创建时间\",\"[fix] 修复mybatis-plus扩展包，配置了其他id策略不生效的问题\"]},\"311\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"升级指南\",\"[feat] json库支持snack3、jackson、fastjson和gson，并且支持扩展\",\"[feat] 增加办理人变量表达式，支持${xxx}替换和spel，并支持扩展\",\"[feat] ListenerVariable监听器变量新增FlowParams字段，方便开始监听器全局传递参数\",\"[feat] 终止新增对开始和完成监听器的支持\",\"[update] springboot项目的条件表达式默认支持spel\",\"[update] 历史记录改为单条保存，删除重复代码\",\"[update] 修改FlowUserDao的bean名称\",\"[update] 中间节点拆分为或签，会签，票签\",\"[fix] 修复历史记录创建时间相等，导致流程图渲染异常\",\"[fix]修复Mybatis逻辑删除变成真实删除的缺陷 @xiarigang\",\"[refactor] 重构id生成器，支持orm默认策略，删除数据填充默认实现类，改为匿名类\"]},\"312\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"[update] 历史任务表流程状态支持外部传入\",\"[update] 修改办理人接口，当未设置办理人时，不做权限校验\",\"[update] ModifyHandler增加链式调用\",\"[fix] 修复流程监听器导出失败的问题\"]},\"313\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"升级指南\",\"[feat] 增加获取下个节点集合api @xiarigang\",\"[feat] 流程监听器 @xiaoxiaoliu889\",\"[feat] id内存策略新增14、15位雪花算法支持\",\"[feat] 流程激活和挂起案例 @xiaoxiaoliu889\",\"[feat] 增加基于流程定义Id获取流程图 @xiaoxiaoliu889\",\"[update] 流程状态改成字符串类型 @xiarigang\",\"[update] 测试模块拆分独立仓库\",\"[update] modes-sb删除加载配置文件，改为有上层jar加载\",\"[update] flex solon版本yml弄错了，config调整\",\"[refactor] 流程版本号生成逻辑重构 @xiaoxiaoliu889\",\"[fix] 修复deleteByTaskIds 中的根据无法正确删除user数据\",\"[fix] 修复 jpa solon注解问题 @vanlin\",\"[fix] 修复 并行网关三个任务分支的时候，错误结束流程的问题\"]},\"314\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"升级指南\",\"[feat] 激活和挂起 @xiaoxiaoliu889\",\"[feat] 不同节点也支持配置审批表单路径 @vanlin\",\"[feat] 支持接收外部流程状态，支持流程状态扩展 @vanlin\",\"[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式\",\"[feat] 新增分派监听器，支持代办任务中办理人等动态修改 @liangli\",\"[feat] 新增Easy-Query框架支持 @link2fun\",\"[feat] 新增Mybatis-Flex的solon扩展包 @xiarigang\",\"[feat] 新增Jpa的solon扩展包 @vanlin\",\"[feat] 历史表新增跳转类型，记录跳转类型 @vanlin\",\"[feat] 增加组件加载，yml控制开关 @疯狂的狮子Li\",\"[update] 之前强依赖流程状态的通过的，改为跳转类型，历史数据考虑如何处理 @vanlin\",\"[update] 之前所有保存流程状态地方，全部提供可接受外部传入 @vanlin\",\"[update] 流程开启，校验节点是否发布，提示语增加流程编码\",\"[update] 删除校验是否任意跳转\",\"[update] 修改扩展字段ext注释，删除FlowConfigUtil多余的代码\",\"[update] SqlSessionFactory改为构造函数引入\",\"[update] 替换异常类，UtilException高版本不兼容\",\"[update] from_custom改为form_custom，from_path改为form_path\",\"[remove] 移除节点前置执行权限处理器\",\"[remove] 删除cooperateAutoPass方法\",\"[update] 代办改为待办\",\"[refactor] 重构测试模块，完善mybatis-plus多租户和逻辑删除使用方式\",\"[refactor] 重构solon和插件模块\",\"[fix] 修复加签批量提交报错\",\"[fix] 修复TaskServiceImpl#handleDepute方法中删除受托人传参数错误\",\"[fix] 修复 JPA flowUserDao bug @vanlin\",\"[fix] 流程第三个节点为网关时无法渲染颜色\",\"[fix] 修复查看流程图模糊的问题 @erfeijiadao\",\"[fix] 修復开始节点直连网关，流程图渲染有问题\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 修复流程定义和流程实例相同，处于非结束节点，流程实例不能存在相同的业务id\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 删除不必要的··符号，修复postgresql与mysql关键词符号问题。\",\"[fix] 修复流程已完成，流程图结束节点显示为黑色\",\"[fix] 修复已办任务查询审批想起无效问题\",\"[fix] 设置开始节点 skip_type = PASS\",\"[fix] 为SpringUtil指定bean name,解决 LocalContainerEntityManagerFactoryBean 依赖问题\",\"[chore] 升级dom4j为安全版本2.1.3\"]},\"315\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"[fix] 修复更新拼上了多余的条件\",\"[fix] 修复保存流程xml报错问题\"]},\"316\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"升级指南\",\"[feat] 新增mybatis-flex扩展包 @xiarigang\",\"[feat] 新增抄送演示案例 @adru*\",\"[feat] 历史记录表新增ext扩展字段，方便保存历史过程数据 @adru*\",\"[update] 保存下一个节点办理人时，不校验是否有审批人\",\"[update] 调整扩展包配置，新增测试模块\",\"[update] 票签,会签，将待办任务的创建时间赋予历史任务开始时间 @liutao\",\"[update] 调整mybatis-plus多租户和软件删除处理\",\"[update] 修改任务历史表时间定义，任务审批通过，将待办任务的创建时间赋予历史任务开始时间 @liutao*\",\"[update] 修正pg的sql文件名，新增1.2.1增量sql @liutao\",\"[update] 会签票签，开始时间记录代表任务的创建时间\",\"[remove] 删除监听器自定义参数,修改扩展字段名称\",\"[fix] 监听器问题修复 @liangli\",\"[fix] solon插件包增加userMapper.xml加载\",\"[fix] 修复填充器不接收外部设置的时间\",\"[fix] 修复userMapper.xml中updateLogic的某个负值错误\"]},\"317\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"升级指南\",\"待办表解偶用户，新增用户表（查询方式需要改动）\",\"会签，票签\",\"加减签\",\"转办完善\",\"jpa扩展\",\"oracle适配\",\"pg适配\"]},\"318\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"升级指南\",\"orm支持mybatis-plus扩展\",\"多租户字段隔离提供全局配置，自动获取\",\"增加软删除可以配置化\",\"新增三个测试模块\",\"修复设置默认填充器时候，判空错误\"]},\"319\":{\"h\":\"v1.1.7 2024-04-27\",\"t\":[\"启动流程时，支持第二个节点为网关节点的情况\",\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",\"修复终止流程bug\"]},\"320\":{\"h\":\"v1.1.6 2024-04-23\",\"t\":[\"支持转办功能\",\"任务自动流转到创建人\",\"考虑流程终止功能\",\"修复流程流转异常\",\"实体类支持序列化\",\"修复java17以上@Resource包路径变更的问题\"]},\"321\":{\"h\":\"v1.1.5 2024-04-17\",\"t\":[\"支持自定义填充\",\"新增配置文件，部分功能可配置\",\"重构代码，insService.skip标识即将删除，改用taskService.skip\",\"引入日志门面\",\"修复已经设置后续节点动态权限后，办理时未生效问题；\",\"枚举扩展getByKey方法 @Holly_Git\",\"调整实例类结构，方便链式写法\",\"修复并行网关后面没有中间节点\",\"修复开始任务记录待办，为保存流程状态\",\"新增链式查询排序提供id排序\",\"新增历史任务记录结束节点\",\"新增赋值流程记录创建更新时间\",\"优化表实体类链式赋值\",\"待办已办查询标记为即将删除, 已挪到业务系统中\"]},\"322\":{\"h\":\"v1.1.4 2024-04-07\",\"t\":[\"修复监听器部分判空bug 感谢@Holly_Git\",\"新增创建任务监听器\",\"修改flow_node监听类型和监听路径字段长度\",\"新增监听器生命周期概念，完善文档\",\"重构流程开启流程和流程办理代码\",\"开始节点也能记录到历史任务记录中\"]},\"323\":{\"h\":\"v1.1.3 2024-04-02\",\"t\":[\"新增权限监听器，办理中动态设置权限 感谢@Holly\"]},\"324\":{\"h\":\"v1.1.2 2024-03-27\",\"t\":[\"流程定义新增复制按钮\",\"补齐sql脚本，完善文档\",\"跳转条件获取方式变更为流程变量 感谢@Holly\",\"监听器变量新增返回节点信息 感谢@Holly\",\"新增根据流程定义和当前节点code获取下一节点api接口. 感谢@Holly\",\"删除多余的字段和代码\"]},\"325\":{\"h\":\"v1.1.1 2024-03-22\",\"t\":[\"[fix] 修复xml脚本中遗漏伪命的问题，完善sql\"]},\"326\":{\"h\":\"v1.1.0 2024-03-21\",\"t\":[\"可以跳转指定节点\",\"增加全局变量\",\"增加监听器\",\"重构代码，解偶orm，方便扩展不同orm和数据，新增代码示例\",\"修复并行网关流程流程图显示错误问题\"]},\"327\":{\"h\":\"v1.0.4 2024-03-06\",\"t\":[\"[update] 美化后台返回的流程图\"]},\"328\":{\"h\":\"v1.0.3 2024-03-05\",\"t\":[\"[update] 重构代码，解偶orm操作，方便扩展其他orm框架\"]},\"329\":{\"h\":\"v1.0.2 2023-12-31\",\"t\":[\"[fix] 修复solon版本业务系统可不用单独加载warm-flow的xml\"]},\"330\":{\"h\":\"v1.0.0 2023-12-28\",\"t\":[\"完善流程设计器和流程图，新增vue3版本\",\"放弃js引擎，自研条件表达式\",\"新增支持条件表达式\",\"可退回到任意节点\",\"支持生成流程图\",\"流程设计器开发\",\"互斥网关，并行网关（会签、或签）功能开发\",\"抽离spring生态依赖，支持solon，并且保持事务与业务系统一致\",\"支持待办任务和已办任务，通过权限标识过滤数据\",\"新增多租户模式\",\"原生提供排序\",\"原生提供分页查询\",\"项目上传中央仓库\",\"工作流模块抽取为独立项目，提供集成方式\",\"已办任务和任务记录，审批页面中包含业务详情页面\",\"提供待办任务、提供角色、部门等权限配置\",\"提供流程配置界面\",\"流程配置文件改为表单填报方式\",\"用户角色抽取出来\",\"整理流程表，调整表名和字段名\"]},\"331\":{\"h\":\"升级指南\",\"t\":[\"注意\",\"更新脚本在项目里面的sql文件下，对应数据库类型，对应版本号\",\"只提供mysql升级脚本和全量脚本，其他升级脚本的自行由mysql升级脚本转换\",\"如果二开设计器，请自行手动同步\"]},\"332\":{\"h\":\"v1.6.7\",\"t\":[\"执行升级脚本1.6.7版本warm-flow_1.6.7.sql\",\"如果二开设计器，请自行手动同步，参考工作流引擎源码中warm-flow-ui文件夹的提交记录，提交时间范围：2025/1/21 11:46 ~ 2025/2/24 14:59\"]},\"333\":{\"h\":\"v1.6.6\",\"t\":[\"执行升级脚本1.6.0版本warm-flow_1.6.0.sql\",\"导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json方式\",\"全局FlowFactory替换成FlowEngine\",\"mybatis-flex,easy-query和jpa的扩展包迁移到新的仓库，独立维护\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"条件表达式前端拼接需要把原本eq|flag|5格式 改成 eq@@flag|5,\",\"spel|#{@user.eval(#flag)}改成spel@@#{@user.eval(flag)}\",\"default|${flag == 5 && flag > 4}``改成``default@@${flag == 5 && flag > 4}\",\"最后流程图数据同步：通过DefService.hisToDefJson接口，把历史任务表记录转成新的流程图元数据，保存到实例表中的defJson，新版本流程图才能正常查看\",\"原skip.vue：|分隔回显\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"|\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true});\",\"现skip.vue：@@分隔回显\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"@@\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true});\",\"原/PropertySetting/index.vue：|分隔回显\",\"if (skipCondition) { let conditionSpl = skipCondition.split('|') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' condition = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' conditionValue = conditionSpl && conditionSpl.length > 2 ? conditionSpl[2] : '' } }\",\"现/PropertySetting/index.vue：@@分隔回显\",\"if (skipCondition) { let conditionSpl = skipCondition.split('@@') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' let conditionOneSpl = conditionSpl[1].split(\\\"|\\\") condition = conditionOneSpl && conditionOneSpl.length > 0 ? conditionOneSpl[0] : '' conditionValue = conditionOneSpl && conditionOneSpl.length > 1 ? conditionOneSpl[1] : '' } }\",\"原DefController.java：导入\",\"public R<Void> importDefinition(MultipartFile file) throws Exception { defService.importXml(file.getInputStream()); return R.ok(); }\",\"现DefController.java：导入\",\"public R<Void> importDefinition(MultipartFile file) throws Exception { defService.importIs(file.getInputStream()); return R.ok(); }\",\"原DefController.java：导出\",\"public void exportDefinition(@PathVariable(\\\"id\\\") Long id, HttpServletResponse response) throws Exception { Document document = defService.exportXml(id); // 设置生成xml的格式 OutputFormat of = OutputFormat.createPrettyPrint(); // 设置编码格式 of.setEncoding(\\\"UTF-8\\\"); of.setIndent(true); of.setIndent(\\\" \\\"); of.setNewlines(true); // 创建一个xml文档编辑器 XMLWriter writer = new XMLWriter(response.getOutputStream(), of); writer.setEscapeText(false); response.reset(); response.setCharacterEncoding(\\\"UTF-8\\\"); response.setContentType(\\\"application/x-msdownload\\\"); response.setHeader(\\\"Content-Disposition\\\", \\\"attachment;\\\"); writer.write(document); writer.close(); }\",\"现DefController.java：导出\",\"public ResponseEntity<byte[]> exportDefinition(@PathVariable(\\\"id\\\") Long id) { // 要导出的字符串 String content = defService.exportJson(id); // 设置响应头 HttpHeaders headers = new HttpHeaders(); headers.add(HttpHeaders.CONTENT_DISPOSITION, \\\"attachment; filename=exported_string.txt\\\"); // 返回响应 return ResponseEntity.ok() .headers(headers) .contentType(MediaType.TEXT_PLAIN) .body(content.getBytes(StandardCharsets.UTF_8)); }\"]},\"334\":{\"h\":\"v1.3.7\",\"t\":[\"执行1.3.7版本升级脚本\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"流程设计时，办理人有多个，回显通过,分隔，改为@@\",\"流程设计时，办理人设置了多个，入库拼接通过,拼接改为@@\",\"原between.vue：,分隔回显\",\"/** 选择角色权限范围触发 */ function getPermissionFlag() { form.value.permissionFlag = form.value.permissionFlag ? form.value.permissionFlag.split(\\\",\\\") : [\\\"\\\"]; if (form.value.listenerType) { const listenerTypes = form.value.listenerType.split(\\\",\\\"); const listenerPaths = form.value.listenerPath.split(\\\"@@\\\"); form.value.listenerRows = listenerTypes.map((type, index) => ({ listenerType: type, listenerPath: listenerPaths[index] })); } }\",\"现between.vue：@@分隔回显\",\"/** 选择角色权限范围触发 */ function getPermissionFlag() { form.value.permissionFlag = form.value.permissionFlag ? form.value.permissionFlag.split(\\\"@@\\\") : [\\\"\\\"]; if (form.value.listenerType) { const listenerTypes = form.value.listenerType.split(\\\",\\\"); const listenerPaths = form.value.listenerPath.split(\\\"@@\\\"); form.value.listenerRows = listenerTypes.map((type, index) => ({ listenerType: type, listenerPath: listenerPaths[index] })); } }\",\"原/PropertySetting/index.vue：入库拼接,\",\"watch(() => form.value.permissionFlag, (n) => { // 监听节点属性变化并更新 props.lf.setProperties(objId.value, { permissionFlag: Array.isArray(n) ? n.filter(e => e).join(',') : n }) }, { deep: true });\",\"现/PropertySetting/index.vue：入库拼接@@\",\"watch(() => form.value.permissionFlag, (n) => { // 监听节点属性变化并更新 props.lf.setProperties(objId.value, { permissionFlag: Array.isArray(n) ? n.filter(e => e).join('@@') : n }) }, { deep: true });\"]},\"335\":{\"h\":\"v1.3.5\",\"t\":[\"执行升级脚本1.3.5版本升级脚本warm-flow_x.x.x.sql\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"条件表达式前端拼接需要把原本@@eq@@|flag@@eq@5格式 改成 eq|flag|5,\",\"@@spel@@|#{@user.eval(#flag)}改成spel|#{@user.eval(flag)}\",\"新增默认表达default|${flag == 5 && flag > 4}\",\"原between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" style=\\\"width: 20%\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" style=\\\"width: 35%;margin-left: 1%\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> <el-option label=\\\"spel表达式\\\" value=\\\"spel\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" style=\\\"width: 42%;margin-left: 1%;margin-right: 1%;\\\"/> </el-form-item> </slot>\",\"现between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" :style=\\\"{ width: !spelFlag? '30%' : '0%' }\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" :style=\\\"{ width: spelFlag? '18%' : '25%', 'margin-left': '1%' }\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"默认\\\" value=\\\"default\\\"/> <el-option label=\\\"spel\\\" value=\\\"spel\\\"/> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" :style=\\\"{ width: spelFlag? '80%' : '43%', 'margin-left': '1%' }\\\"/> </el-form-item> </slot>\",\"原between.vue：跳转条件下拉框js\",\"watch(() => form, n => { n = n.value; let skipCondition = n.skipCondition; skipCondition = \\\"@@\\\" + n.conditionType + \\\"@@|\\\"; if (n.conditionType !== 'spel') { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"@@\\\" + n.conditionType + \\\"@@\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = obj === 'spel'; } if (props.modelValue?.conditionType === 'spel') spelFlag.value = true;\",\"现between.vue：跳转条件下拉框\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"|\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = (obj === 'spel' || obj === 'default'); } if (props.modelValue?.conditionType === 'spel' || props.modelValue?.conditionType === 'default') { spelFlag.value = true; }\",\"原/PropertySetting/index.vue：回显js\",\"let skipCondition = n.properties.skipCondition let conditionSpl = skipCondition ? skipCondition.split('@@|') : [] let conditionSplTwo = conditionSpl && conditionSpl.length > 0 ? conditionSpl[1]: [] let condition, conditionType, conditionValue = ''; if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] === '@@spel') { conditionType = 'spel' conditionValue = conditionSplTwo } else if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] !== '@@spel') { condition = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[0] : '' conditionType = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[1] : '' conditionValue = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[2] : '' }\",\"现/PropertySetting/index.vue：回显js\",\"let skipCondition = n.properties.skipCondition let condition, conditionType, conditionValue = '' if (skipCondition) { let conditionSpl = skipCondition.split('|') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' condition = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' conditionValue = conditionSpl && conditionSpl.length > 2 ? conditionSpl[2] : '' } }\"]},\"336\":{\"h\":\"v1.3.4\",\"t\":[\"办理人变量表达式，删除策略前缀，通过$和#区分，需执行1.3.4.升级脚本warm-flow_x.x.x.sql\",\"依赖的groupId：org.dromara，改为org.dromara.warm\",\"如果扩展了条件表达式策略 \",\"接口或者抽象类前缀由ExpressionStrategy改为 ConditionStrategy\",\"全局搜索org.dromara.warm.flow.core.expression 替换为org.dromara.warm.flow.core.expression,然后检查是否正确\"]},\"337\":{\"h\":\"v1.3.3\",\"t\":[\"独立设计器放行路径增加/warm-flow，如果想要共享后端权限(比如token)，可不增加，并且按照官网流程设计器引入进行设置\"]},\"338\":{\"h\":\"v1.3.1\",\"t\":[\"依赖的groupId：io.github.minliuhua，改为org.dromara\",\"包名：com.warm， 改为org.dromara.warm\",\"节点详情进入改为双击\",\"终止操作的流程状态改为更合理的终止状态，如需还想按照原本的自动完成，请使用自定义流程状态\",\"FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\",\"转办、委派、加签和减签方法，老方法标识即将删除, 请尽快使用新的接口\",\"终止免校验权限改为设置ignore字段\",\"设计器引入优化 \",\"设计器后端放行地址/warm-flow/**删除，不再需要\",\"前端加载设计器代理配置,vue.config.js或者nginx中的代理，/warm-flow-ui/删除，不再需要\",\"iframe中访问设计器接口由/warm-flow-ui/${definitionId}?disabled=${disabled}，改为VUE_APP_BASE_API +/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\",\"VUE_APP_BASE_API是前端访问前缀比如prod-api\"]},\"339\":{\"h\":\"v1.3.0\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"340\":{\"h\":\"v1.2.8\",\"t\":[\"本次升级，内置json库snack3方式，改为spi方式加载，业务项目中存在哪种json就会使用哪种的实现， 支持顺序按顺序加载一种：snack3、jackson、fastjson、gson，并且目前只实现了这四种，可扩展\",\"如在未集成snack3库的环境下，还需要使用snack3库，需要单独使用（原组件使用snack3库）\",\" <dependency> <groupId>org.noear</groupId> <artifactId>snack3</artifactId> <version>3.2.88</version> </dependency>\"]},\"341\":{\"h\":\"v1.2.6\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"流程状态字段flow_status改为string类型，业务系统需要对应修改\"]},\"342\":{\"h\":\"v1.2.4\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"流程定义表from_custom改为form_custom，from_path改为form_path，涉及到这两个字段的前后段都要修改\",\"反显审批流程表单，改为通过task表新增的form_custom和form_path字段\",\"只针对mybatis-plus扩展包，其他的扩展包可忽略，多租户和逻辑删除，改为通过mybatis-plus的自带的方式实现( 可参考官网文章逻辑删除和多租户)，并且流程表的逻辑删除字段都更新为0\",\"原本的我发起[warmFlowInitiator], 组件内部不在维护替换，由分派监听器实现替换\"]},\"343\":{\"h\":\"v1.2.1\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"344\":{\"h\":\"v1.2.0\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"工具包路径调整\"]},\"345\":{\"h\":\"v1.1.9\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"346\":{\"h\":\"核心api\"},\"347\":{\"h\":\"1、DefService流程定义接口\"},\"348\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"349\":{\"h\":\"1.1、新增流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"350\":{\"h\":\"1.2、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"351\":{\"h\":\"1.3、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"352\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"353\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"354\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"355\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"356\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"357\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"358\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"359\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"360\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"361\":{\"h\":\"2、InsService流程实例接口\"},\"362\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"363\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"364\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"365\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"366\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"367\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"368\":{\"h\":\"3、TaskService待办任务接口\"},\"369\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"370\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"371\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"372\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"373\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"374\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"375\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"376\":{\"h\":\"4、NodeService节点接口\"},\"377\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"378\":{\"h\":\"5、公共api接口\"},\"379\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"380\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"381\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"382\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"383\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"384\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"385\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"386\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"387\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"388\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"389\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"390\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"391\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"392\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"393\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"394\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"395\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"396\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"397\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"398\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"399\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"400\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"401\":{\"h\":\"配置文件\"},\"402\":{\"h\":\"1、spring\"},\"403\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"404\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"405\":{\"h\":\"2、solon\"},\"406\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"407\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"408\":{\"h\":\"自定义流程状态\",\"t\":[\"[!IMPORTANT] 1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"409\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"410\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"411\":{\"h\":\"3、其他请查阅核心api\"},\"412\":{\"h\":\"填充器\",\"t\":[\"[!IMPORTANT] 1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"413\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"414\":{\"h\":\"2、注入bean\"},\"415\":{\"h\":\"2.1、通过@Component方式注入\"},\"416\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"417\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"418\":{\"h\":\"设计器引入\",\"t\":[\"[!IMPORTANT] 1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"419\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"420\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"421\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"422\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"423\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\"); } }\"]},\"424\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"425\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"426\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"427\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"428\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"429\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"430\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"431\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"432\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"433\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"434\":{\"h\":\"条件表达式\"},\"435\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"436\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"437\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"438\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"439\":{\"h\":\"表单管理\"},\"440\":{\"h\":\"json库扩展\",\"t\":[\"[!IMPORTANT] 1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"441\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"442\":{\"h\":\"监听器\",\"t\":[\"[!IMPORTANT] 1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"443\":{\"h\":\"1、监听器类型\",\"t\":[\"[!IMPORTANT] create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"444\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"[!IMPORTANT] 流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"445\":{\"h\":\"2、监听器生命周期图\"},\"446\":{\"h\":\"3、监听器使用\"},\"447\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"448\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"449\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"450\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"451\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"452\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"453\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"454\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"455\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"456\":{\"h\":\"逻辑删除\"},\"457\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"458\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"459\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"460\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"461\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"462\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"463\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"464\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"465\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"[!IMPORTANT] 以下演示基于项目示例hh-vue\"]},\"466\":{\"h\":\"演示图\"},\"467\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"468\":{\"h\":\"2、流程设计\"},\"469\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"470\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"471\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"472\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"473\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"474\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"475\":{\"h\":\"流程规则\"},\"476\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"477\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"478\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"479\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"480\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"481\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"482\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"工作流中的某个节点上，允许返回到上一个节点进行修改，属于退回中的一种\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"483\":{\"h\":\"快速开始\",\"t\":[\"[!IMPORTANT]在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"484\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"485\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"486\":{\"h\":\"3、maven依赖\"},\"487\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"488\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"489\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"490\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"491\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.1</version> </dependency>\"]},\"492\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"493\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"494\":{\"h\":\"6、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"495\":{\"h\":\"7、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"496\":{\"h\":\"7.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"497\":{\"h\":\"7.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"498\":{\"h\":\"7.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"499\":{\"h\":\"7.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"500\":{\"h\":\"8、初学者推荐学习路线\"},\"501\":{\"h\":\"8.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"502\":{\"h\":\"8.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"503\":{\"h\":\"表结构\",\"t\":[\"[!IMPORTANT]\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"504\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"505\":{\"h\":\"表字段明细\"},\"506\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"507\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"508\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"509\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"510\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"511\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"512\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"513\":{\"h\":\"多租户\"},\"514\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的多租户方式\"]},\"515\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"516\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"517\":{\"h\":\"2、通用多租户\"},\"518\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"519\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"520\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"521\":{\"h\":\"流程变量\",\"t\":[\"[!IMPORTANT] 1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"522\":{\"h\":\"办理人变量设置\"},\"523\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"524\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"525\":{\"h\":\"3、默认办理人变量策略\"},\"526\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"527\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"528\":{\"h\":\"4、spel办理人变量策略\"},\"529\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"530\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"531\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"532\":{\"h\":\"核心api\"},\"533\":{\"h\":\"1、DefService流程定义接口\"},\"534\":{\"h\":\"1.1、导入流程定义\",\"t\":[\"importXml(is)：导入流程定义xml的输入流is，保存流程定义数据，返回流程定义对象\"]},\"535\":{\"h\":\"1.2、保存流程定义\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串，保存流程定义数据。def包含如下字段：\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"536\":{\"h\":\"1.3、保存流程定义\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串，保存流程定义数据\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"537\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义xml的Document对象\"]},\"538\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml的字符串\"]},\"539\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"540\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"541\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"542\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"543\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"544\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"545\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"546\":{\"h\":\"2、InsService流程实例接口\"},\"547\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"548\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\"]},\"549\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\"]},\"550\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"551\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"552\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"553\":{\"h\":\"3、TaskService待办任务接口\"},\"554\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\"]},\"555\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\"]},\"556\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, curUser, permissionFlag, addHandlers, message)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"557\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, curUser, permissionFlag, addHandlers, message)：委派, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"558\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, curUser, permissionFlag, addHandlers, message)：加签，增加办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"559\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, curUser, permissionFlag, addHandlers, message)：减签，减少办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"560\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(modifyHandler)：修改办理人\",\"curUser: 办理人唯一标识 [按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签）[按需传输]\"]},\"561\":{\"h\":\"4、NodeService节点接口\"},\"562\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"563\":{\"h\":\"5、公共api接口\"},\"564\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"565\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"566\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"567\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"568\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"569\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"570\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"571\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"572\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"573\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"574\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"575\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"576\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"577\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"578\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"579\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"580\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"581\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"582\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"583\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"584\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"585\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"586\":{\"h\":\"配置文件\"},\"587\":{\"h\":\"1、spring\"},\"588\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"589\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"590\":{\"h\":\"2、solon\"},\"591\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: com.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"592\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"593\":{\"h\":\"自定义流程状态\",\"t\":[\"[!IMPORTANT] 1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"594\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"595\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"596\":{\"h\":\"3、其他请查阅核心api\"},\"597\":{\"h\":\"填充器\",\"t\":[\"[!IMPORTANT] 1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"598\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"599\":{\"h\":\"2、注入bean\"},\"600\":{\"h\":\"2.1、通过@Component方式注入\"},\"601\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"602\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"603\":{\"h\":\"设计器引入\",\"t\":[\"[!IMPORTANT] 1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"604\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"605\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这两个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/**\"]},\"606\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"607\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"608\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"609\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口地址为：/warm-flow-ui/${definitionId}?disabled=${disabled} 2、总体思路就是把前端接口(比如80)代理成后端接口(8080)，去访问该地址，其他不变 3、或者直接通过后端接口访问该地址，可能需要处理跨域问题\"]},\"610\":{\"h\":\"3.1 nginx 代理配置\",\"t\":[\"server { listen 80; server_name localhost; location /warm-flow-ui/ { proxy_pass http://localhost:8080/warm-flow-ui/; } }\"]},\"611\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"代理到后端需要vue.config.js配置代码\",\"\\\"/warm-flow-ui\\\": { target: `http://localhost:8080/warm-flow-ui`, changeOrigin: true, pathRewrite: { '/warm-flow-ui': '/' } },\",\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // definitionId为需要查询的流程定义id， // disabled为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = `/warm-flow-ui/${definitionId}?disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"612\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"vue3项目引入过程同上vue2\",\"\\\"/warm-flow-ui\\\": { target: `http://localhost:8080`, changeOrigin: true, pathRewrite: { '/warm-flow-ui': '/' } },\",\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // definitionId为需要查询的流程定义id， // disabled为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(`/warm-flow-ui/${definitionId}?disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"613\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"614\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"前后端不分离项目，前后端端口一致，不需要代理（以下代码再ruoyi不分离版中测试）\",\"可以直接访问后端接口加载页面，如：/warm-flow/1839683148936663047?disabled=false\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/\\\" + definitionId + \\\"?disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow/1839683148936663047?disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/1839683148936663047?disabled=false&pageNum=1\\\"); }\"]},\"615\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"616\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"617\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"618\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"619\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"620\":{\"h\":\"条件表达式\"},\"621\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"622\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"623\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"624\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"625\":{\"h\":\"表单管理\"},\"626\":{\"h\":\"json库扩展\",\"t\":[\"[!IMPORTANT] 1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"627\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件com.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如com.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"628\":{\"h\":\"监听器\",\"t\":[\"[!IMPORTANT] 1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"629\":{\"h\":\"1、监听器类型\",\"t\":[\"[!IMPORTANT] create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"630\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"[!IMPORTANT] 流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"631\":{\"h\":\"2、监听器生命周期图\"},\"632\":{\"h\":\"3、监听器使用\"},\"633\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"634\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"635\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"636\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"637\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"638\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"639\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"640\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"641\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"642\":{\"h\":\"逻辑删除\"},\"643\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"644\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"645\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"646\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"647\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"648\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"649\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>com.warm.flow.orm.entity.FlowDefinition</class> <class>com.warm.flow.orm.entity.FlowHisTask</class> <class>com.warm.flow.orm.entity.FlowInstance</class> <class>com.warm.flow.orm.entity.FlowNode</class> <class>com.warm.flow.orm.entity.FlowSkip</class> <class>com.warm.flow.orm.entity.FlowTask</class> <class>com.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"650\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"651\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"[!IMPORTANT] 以下演示基于项目示例hh-vue\"]},\"652\":{\"h\":\"演示图\"},\"653\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"654\":{\"h\":\"2、流程设计\"},\"655\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"656\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"657\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"658\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"659\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"660\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"661\":{\"h\":\"流程规则\"},\"662\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"663\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"664\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"665\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"666\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"667\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"668\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"工作流中的某个节点上，允许返回到上一个节点进行修改，属于退回中的一种\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"669\":{\"h\":\"快速开始\",\"t\":[\"[!IMPORTANT]在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"670\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"671\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"672\":{\"h\":\"3、maven依赖\"},\"673\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"674\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"675\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"676\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"677\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.0</version> </dependency>\"]},\"678\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"679\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"680\":{\"h\":\"6、代码示例\",\"t\":[\"测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\"]},\"681\":{\"h\":\"7、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"682\":{\"h\":\"8、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"683\":{\"h\":\"9、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"684\":{\"h\":\"10、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"685\":{\"h\":\"11、初学者推荐学习路线\"},\"686\":{\"h\":\"11.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"687\":{\"h\":\"11.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"688\":{\"h\":\"表结构\",\"t\":[\"[!IMPORTANT]\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"689\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"690\":{\"h\":\"表字段明细\"},\"691\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"692\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"693\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"694\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"695\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"696\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"697\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"698\":{\"h\":\"多租户\"},\"699\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的多租户方式\"]},\"700\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"701\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"702\":{\"h\":\"2、通用多租户\"},\"703\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler\"]},\"704\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"705\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"706\":{\"h\":\"流程变量\",\"t\":[\"[!IMPORTANT] 1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"707\":{\"h\":\"办理人变量设置\"},\"708\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"709\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"710\":{\"h\":\"3、默认办理人变量策略\"},\"711\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"712\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"713\":{\"h\":\"4、spel办理人变量策略\"},\"714\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"715\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"716\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"717\":{\"h\":\"核心api\"},\"718\":{\"h\":\"1、DefService流程定义接口\"},\"719\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"720\":{\"h\":\"1.2、新增流程定义，并初始化流程节点和流程跳转数据\",\"t\":[\"saveAndInitNode(definition)：校验后新增\"]},\"721\":{\"h\":\"1.3、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"722\":{\"h\":\"1.4、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"723\":{\"h\":\"1.5、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"724\":{\"h\":\"1.6、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"725\":{\"h\":\"1.7、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"726\":{\"h\":\"1.8、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"727\":{\"h\":\"1.9、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"728\":{\"h\":\"1.10、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"729\":{\"h\":\"1.11、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"730\":{\"h\":\"1.12、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"731\":{\"h\":\"1.13、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"732\":{\"h\":\"1.14、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"733\":{\"h\":\"2、InsService流程实例接口\"},\"734\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"735\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"736\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"737\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"738\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"739\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"740\":{\"h\":\"2.7、根据流程定义id集合，查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"741\":{\"h\":\"3、TaskService待办任务接口\"},\"742\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"743\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"744\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"745\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"746\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"747\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"748\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"749\":{\"h\":\"4、NodeService节点接口\"},\"750\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"751\":{\"h\":\"5、公共api接口\"},\"752\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"753\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"754\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"755\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"756\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"757\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"758\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"759\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"760\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"761\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"762\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"763\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"764\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"765\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"766\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"767\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"768\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"769\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"770\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"771\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"772\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"773\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"774\":{\"h\":\"条件表达式\",\"t\":[\"[!IMPORTANT] 在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"775\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于: @@gt@@|flag@@gt@@4\",\"2、大于等于: @@ge@@|flag@@ge@@4\",\"3、等于: @@eq@@|flag@@eq@@4\",\"4、不等于： @@ne@@|flag@@ne@@4\",\"5、小于: @@lt@@|flag@@lt@@4\",\"6、小于等于: @@le@@|flag@@le@@4\",\"7、包含: @@like@@|flag@@like@@4\",\"8、不包含: @@notNike@@|flag@@notNike@@4\",\"9、SpEL: @@spel@@|#{@user.eval(#flag)}\",\"10、自定义表达式\"]},\"776\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：@@xxx@@|yyy@@xxx@@zzz，xxx为表达式策略，其中yyy为变量，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）: 前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"777\":{\"h\":\"配置文件\"},\"778\":{\"h\":\"1、spring\"},\"779\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"780\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"781\":{\"h\":\"2、solon\"},\"782\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"783\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"784\":{\"h\":\"自定义流程状态\",\"t\":[\"[!IMPORTANT] 1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"785\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"786\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"787\":{\"h\":\"3、其他请查阅核心api\"},\"788\":{\"h\":\"数据填充器\",\"t\":[\"[!IMPORTANT] 1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"789\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"790\":{\"h\":\"2、注入bean\"},\"791\":{\"h\":\"2.1、通过@Component方式注入\"},\"792\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"793\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"794\":{\"h\":\"设计器引入\",\"t\":[\"[!IMPORTANT] 1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"795\":{\"h\":\"1. 引入依赖\"},\"796\":{\"h\":\"springboot\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"797\":{\"h\":\"solon\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-solon-web</artifactId> <version>版本号</version> </dependency>\"]},\"798\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"799\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"800\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"801\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"802\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"803\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"804\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"805\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"806\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"807\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"808\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"809\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"810\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"811\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"812\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"813\":{\"h\":\"设计器二开\",\"t\":[\"[!IMPORTANT] 1、当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"814\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"815\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\"]},\"816\":{\"h\":\"3 部署\"},\"817\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"818\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"819\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"820\":{\"h\":\"条件表达式\"},\"821\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"822\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"823\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"824\":{\"h\":\"表达式扩展\",\"t\":[\"[!IMPORTANT] 当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"825\":{\"h\":\"1、表达式公共接口\",\"t\":[\"[!IMPORTANT]ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"826\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"827\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"828\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"829\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"830\":{\"h\":\"4. 监听器表达式\"},\"831\":{\"h\":\"4.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"832\":{\"h\":\"4.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"833\":{\"h\":\"5、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"834\":{\"h\":\"5.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"835\":{\"h\":\"5.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"836\":{\"h\":\"5.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"837\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"838\":{\"h\":\"表单管理\"},\"839\":{\"h\":\"json库扩展\",\"t\":[\"[!IMPORTANT] 1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"840\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"841\":{\"h\":\"监听器\",\"t\":[\"[!IMPORTANT] 在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。 支持类包名配置和表达式配置。\"]},\"842\":{\"h\":\"1、监听器大类\",\"t\":[\"[!IMPORTANT] 节点监听器：在流程节点中配置，只有指定节点任务才会执行 流程监听器：在流程定义中配置，该流程所有节点任务都会执行 全局监听器：实现全局监听器接口，所有流程的节点任务都会执行 执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"843\":{\"h\":\"2、监听器小类\",\"t\":[\"[!IMPORTANT] start：开始监听器，任务开始办理时执行 assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行 create：创建监听器，任务创建时执行\"]},\"844\":{\"h\":\"3、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应 listener_type：监听器类型，如start,assignment,finish,create等 listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等 监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"845\":{\"h\":\"4、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"846\":{\"h\":\"5、监听器生命周期图\"},\"847\":{\"h\":\"5、节点和流程监听器\"},\"848\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"849\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"850\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"851\":{\"h\":\"5.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"852\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"853\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"854\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"855\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"856\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"857\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"858\":{\"h\":\"逻辑删除\"},\"859\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"860\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"861\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"862\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"863\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"[!IMPORTANT] 1、组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"864\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"865\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"866\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"867\":{\"h\":\"办理人权限处理器\",\"t\":[\"[!IMPORTANT] 1、审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员 2、工作流api中很多需要获取当前办理人id，进行保存或者校验 3、以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"868\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link TaskServiceImpl#checkAuth(Task, FlowParams)} 中调用 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"869\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"870\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"[!IMPORTANT] 以下演示基于项目示例hh-vue\"]},\"871\":{\"h\":\"演示图\"},\"872\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"873\":{\"h\":\"2、流程设计\"},\"874\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"875\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"876\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"877\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"878\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"879\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"880\":{\"h\":\"流程规则\"},\"881\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"882\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"883\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"884\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"885\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"886\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"887\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"888\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"889\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"890\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"891\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"892\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"893\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"894\":{\"h\":\"快速开始\",\"t\":[\"[!IMPORTANT]在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"895\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"896\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"897\":{\"h\":\"3、maven依赖\"},\"898\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"899\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"900\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"901\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"902\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.4</version> </dependency>\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"903\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"904\":{\"h\":\"4.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"905\":{\"h\":\"4.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"906\":{\"h\":\"4.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"907\":{\"h\":\"4.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"908\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"909\":{\"h\":\"6、初学者推荐学习路线\"},\"910\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"911\":{\"h\":\"6.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"912\":{\"h\":\"表结构\",\"t\":[\"[!IMPORTANT]\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"913\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"914\":{\"h\":\"表字段明细\"},\"915\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"916\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"917\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"918\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"919\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"920\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"921\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"922\":{\"h\":\"多租户\"},\"923\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的多租户方式\"]},\"924\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"925\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"926\":{\"h\":\"2、通用多租户\"},\"927\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"928\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"929\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"930\":{\"h\":\"流程变量\",\"t\":[\"[!IMPORTANT] 1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"931\":{\"h\":\"办理人变量表达式\",\"t\":[\"[!IMPORTANT] 1、业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"932\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowFactory.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowFactory.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"933\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"934\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"935\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"2、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"936\":{\"h\":\"5、默认办理人变量策略\"},\"937\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"938\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"939\":{\"h\":\"6、spel办理人变量策略\"},\"940\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"941\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"942\":{\"h\":\"条件表达式扩展\",\"t\":[\"[!IMPORTANT] 当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"943\":{\"h\":\"1、表达式公共接口\",\"t\":[\"[!IMPORTANT]ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"944\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"945\":{\"h\":\"3、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"946\":{\"h\":\"3.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"947\":{\"h\":\"3.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"948\":{\"h\":\"3.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"949\":{\"h\":\"自定义流程状态\",\"t\":[\"[!IMPORTANT] 1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"950\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"951\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"952\":{\"h\":\"3、其他请查阅核心api\"},\"953\":{\"h\":\"设计器二开\",\"t\":[\"[!IMPORTANT] 1、当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"954\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"955\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\",\"业务系统配置设计器的地址\"]},\"956\":{\"h\":\"3 部署\"},\"957\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"958\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"959\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"960\":{\"h\":\"表单管理\",\"t\":[\"待补充\"]},\"961\":{\"h\":\"json库扩展\",\"t\":[\"[!IMPORTANT] 1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"962\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"963\":{\"h\":\"监听器表达式扩展\",\"t\":[\"[!IMPORTANT] 当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"964\":{\"h\":\"1、表达式公共接口\",\"t\":[\"[!IMPORTANT]ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"965\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"966\":{\"h\":\"3. 监听器表达式\"},\"967\":{\"h\":\"3.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"968\":{\"h\":\"3.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"969\":{\"h\":\"办理人变量表达式扩展\",\"t\":[\"[!IMPORTANT] 当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"970\":{\"h\":\"1、表达式公共接口\",\"t\":[\"[!IMPORTANT]ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"971\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"972\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"973\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"974\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"975\":{\"h\":\"新闻公告\",\"t\":[\" {{ getTypeValue(item.type) }} \",\"{{ item.title }}\",\"{{ item.pushTime }}\"]},\"976\":{\"h\":\"有偿服务\"},\"977\":{\"h\":\"VIP群\",\"t\":[\"项目代码、文档，均开源免费可商用，遵循开源协议，不代表着项目收费\",\"VIP群由四名后端与一名前端工程师组成，提供问题答疑服务和技术分享等服务，欢迎加群交流\",\"支付后加微信号【warm-houhou】，邀请进入vip群\",\"问问题等于做习题 听作者解答问题等于习题讲解 一个人接触的问题有限 一群人接触的问题无限 早进群早接触更多的问题 承诺: 看见必回复 让你感受作者有多话痨\",\"加群扫码: 99元\"]},\"978\":{\"h\":\"私人服务\",\"t\":[\"作者提供作者私人服务，关于Dromara Warm-Flow工作流私人培训，如流程引擎集成与使用，技术咨询等，包括但不限于\"]},\"979\":{\"h\":\"特别赞助\",\"t\":[\"如需Dromara Warm-Flow官网挂广告，请加微信号【warm-houhou】联系我\"]},\"980\":{\"h\":\"团队\",\"t\":[\"avatar\",\"name\",\"email\",\"role\",\"contributions\",\"{{ item.name }}\",\"{{ item.email }}\",\"{{ item.role }}\",\"{{ item.contributions }}\"]},\"981\":{\"h\":\"常见问题\"},\"982\":{\"h\":\"1、id精度丢失\",\"t\":[\"方案1：处理长度过长的Long类型\",\"只处理长度过长的Long类型，前端页面就不会丢失精度了 (感谢【Colin】提供解决方案)\",\"创建一个BigNumberSerializer（用来处理超过JS数据范围的Long类型）\",\"👇 代码详情 👇\",\"/** * 超出 JS 最大最小值 处理 */ @JacksonStdImpl public class BigNumberSerializer extends NumberSerializer { /** * 根据 JS Number.MAX_SAFE_INTEGER 与 Number.MIN_SAFE_INTEGER 得来 */ private static final long MAX_SAFE_INTEGER = 9007199254740991L; private static final long MIN_SAFE_INTEGER = -9007199254740991L; /** * 提供实例 */ public static final BigNumberSerializer INSTANCE = new BigNumberSerializer(Number.class); public BigNumberSerializer(Class<? extends Number> rawType) { super(rawType); } @Override public void serialize(Number value, JsonGenerator gen, SerializerProvider provider) throws IOException { // 超出范围 序列化位字符串 if (value.longValue() > MIN_SAFE_INTEGER && value.longValue() < MAX_SAFE_INTEGER) { super.serialize(value, gen, provider); } else { gen.writeString(value.toString()); } } }\",\"添加JacksonConfig配置全局序列化（针对所有属性），一下两种方式任选其一\",\"👇 代码详情 👇\",\"@Configuration public class JacksonConfig { // 方式一 @Bean public Jackson2ObjectMapperBuilderCustomizer customizer() { return builder -> { ... 其他配置.... JavaTimeModule javaTimeModule = new JavaTimeModule(); //Long,BigInteger 转为 String 防止 js 丢失精度 javaTimeModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); builder.modules(javaTimeModule); }; } // 方式二 @Bean public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() { final Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder(); final ObjectMapper objectMapper = builder.build(); ... 其他配置.... SimpleModule simpleModule = new SimpleModule(); // Long,BigInteger 转为 String 防止 js 丢失精度 simpleModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); objectMapper.registerModule(simpleModule); return new MappingJackson2HttpMessageConverter(objectMapper); } }\",\"方案2：序列化所有long类型\",\"如何处理Long类型精度丢失问题 👇点击👇\",\"方案3：通过yml配置\",\"通过设置id生成器类型，修改id生成方式\",\"# warm-flow工作流配置 warm-flow: # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19\",\"方案4：自定义id生成策略\",\"参照如下文章，继承填充器接口，修改id生成方式\",\"Dromara Warm-Flow工作流引擎数据库主键自增策略实现👇\"]},\"983\":{\"h\":\"2、流程图片中文乱码\",\"t\":[\"linux环境：安装中文字体\",\"生成的流程图中文乱码或者报错InternalError; java.lang.reflect,InvocationTargetException\",\"由于服务器上缺少中文字体，通过检查fc-list :lang=zh是否包含中文字符集（以下是存在的示例）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ zhFonts]# fc-list :lang=zh /usr/share/fonts/zhFonts/SIMSUN.TTC: 新宋体,NSimSun:style=常规,Regular /usr/share/fonts/zhFonts/SIMSUN.TTC: 宋体,SimSun:style=常规,Regular\",\"zhFonts.zip将文件解压至/usr/share/fonts目录下，如果还不行，添加到jre的lib/fonts目录（感谢【我们好像在哪儿见过 】提供的方案）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ fonts]# ll 总用量 8 drwxr-xr-x 2 root root 4096 5月 17 00:20 dejavu drwxr-xr-x 2 root root 4096 5月 17 11:40 zhFonts\",\"重启服务\",\"docker环境：安装中文字体\",\"以ruoyi-vue-plus-4.x中dockerfile为例，添加中文字体即可 （感谢【格调@main】提供的方案）\"]},\"984\":{\"h\":\"3、initFlow()未加载\",\"t\":[\"提示\",\"spring开启懒加载后，导致FlowAutoConfig.initFlow()未加载。（由社区【星 Q】提供）\",\"删除\\\"lazy-initialization: true\\\",可解决问题，以下是错误示例\",\"spring: main: allow-bean-definition-overriding: true lazy-initialization: true web-application-type: servlet\"]},\"985\":{\"h\":\"4、监听器等对象获取不到\",\"t\":[\"提示\",\"热部署插件jrebel或者devtools导致问题，检查是否使用热部署插件，比如spring.devtools，可以把插件关了，或者加上排除配置spring-devtools.properties\",\"restart.include.flow=/org.dromara.warm.*.jar\"]},\"986\":{\"h\":\"5、类型转换异常\",\"t\":[\"同上\"]},\"987\":{\"h\":\"6、hh-vue切换mybaits-plus\",\"t\":[\"提示\",\"1、根pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"2、ruoyi-flow的pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"3、ruoyi-common增加依赖\",\" <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.5.1</version> </dependency>\",\"4、MyBatisConfig.java注释掉，新增MybatisPlusConfig\",\"👇 代码详情 👇\",\"package com.ruoyi.framework.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; /** * Mybatis Plus 配置 * * @author ruoyi */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 分页插件 interceptor.addInnerInterceptor(paginationInnerInterceptor()); // 乐观锁插件 interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor()); // 阻断插件 interceptor.addInnerInterceptor(blockAttackInnerInterceptor()); return interceptor; } /** * 分页插件，自动识别数据库类型 https://baomidou.com/guide/interceptor-pagination.html */ public PaginationInnerInterceptor paginationInnerInterceptor() { PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); // 设置数据库类型为mysql paginationInnerInterceptor.setDbType(DbType.MYSQL); // 设置最大单页限制数量，默认 500 条，-1 不受限制 paginationInnerInterceptor.setMaxLimit(-1L); return paginationInnerInterceptor; } /** * 乐观锁插件 https://baomidou.com/guide/interceptor-optimistic-locker.html */ public OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor() { return new OptimisticLockerInnerInterceptor(); } /** * 如果是对全表的删除或更新操作，就会终止该操作 https://baomidou.com/guide/interceptor-block-attack.html */ public BlockAttackInnerInterceptor blockAttackInnerInterceptor() { return new BlockAttackInnerInterceptor(); } }\",\"5、ruoyi-admin的application.yml中配置mybatis改为mybatis-plus\"]},\"988\":{\"h\":\"7、导入依赖包失败\",\"t\":[\"可尝试切换maven版本 （感谢【一拳打爆常大宝】）\",\"如maven3.9.6切换为低版本3.8.2\"]},\"989\":{\"h\":\"8、 StackOverflowError 错误\",\"t\":[\"提示\",\"查看跳转线退回的，是否设置为退回类型，后续有时间再做校验\"]},\"990\":{\"h\":\"9、 后端接收流程xml部分丢失\",\"t\":[\"提示\",\"一般是xxs过滤导致，排查下接口就行或者对象就行\"]},\"991\":{\"h\":\"更新日志\",\"t\":[\"[!IMPORTANT] 更新脚本在项目里面的sql文件下，对应数据库类型，对应版本号\"]},\"992\":{\"h\":\"未来发布计划\"},\"993\":{\"h\":\"vx.x.x\",\"t\":[\"事件\",\"流程图合法性检验\",\"把不能退回到开始节点去掉，会有什么影响\",\"子流程\",\"会签和票签通过率策略，支持扩展\",\"重启流程\",\"适配国产数据库\",\"包容网关\"]},\"994\":{\"h\":\"开发中计划\"},\"995\":{\"h\":\"v1.3.6\",\"t\":[\"新增流程图元数据 @晓华\",\"接入仿钉钉设计器 @Zhen\",\"动态表单支持 @vanlin\",\"取回 @xiarigang\",\"可多个网关直连 @晓华\",\"开启流程可以不默认执行到中间节点 @晓华\",\"新增办理人选择项接口 @晓华\",\"[feat] 流程定义数据保存支持json格式 @xiarigang\"]},\"996\":{\"h\":\"更新日志\"},\"997\":{\"h\":\"v1.3.5 2024-12-20\",\"t\":[\"[feat] 新增获取所有前置节点接口\",\"[feat] 设计器新增设置驳回指定节点\",\"[feat] 条件表达式新增默认策略default|${flag == 5 && flag > 4}\",\"[feat] 新增mybatis-plus关闭逻辑删除案例\",\"[update] 退回不校验是否办理过\",\"[update] 复制流程版本号支持自动递增\",\"[update] 结点命名全部改成节点\",\"[refactor] 导入流程方法拆成两个方法，读取is流和导入实体类，insertFlow改为公共方法\",\"[refactor] 条件表达式原本太繁琐，进行精简, @@eq@@|flag@@eq@5 --> eq|flag|5\",\"[refactor] 任意跳转，改成退回选择目标节点，票签必填，修改字段名称\"]},\"998\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器优化配置（类中配置增加类型接口，或者优化页面配置）\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[update] 修改项目的groupId\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"999\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"[feat] 新增支持接入业务系统token，支持多token\",\"[update] 办理人选择tabs切换\",\"[update] 没有左侧树状选择数据时，左侧隐藏\",\"[fix] 统一修复分页bug\",\"[fix] 修复删除流程实例信息，未删除办理人信息 @xiarigang\",\"[fix] 修改【Bug】 会签节点委派 @vanlin\",\"[fix] 统一修复分页bug\"]},\"1000\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"[feat] 新增boot3+java17支持\",\"[feat] 流程设计器新增快捷键支持\",\"[feat] 新增流程状态枚举（终止、作废、撤销和取回）\",\"[feat] 新增转办、委派、加签和减签方法，老方法标识即将删除，接入监听器\",\"[update] 终止流程状态改为更合理的终止状态\",\"[update] 流程复制克隆改set/get赋值\",\"[refactor] 重构skip等方法通用校验\",\"[perf] 流程图清晰度调整\",\"[fix] 流程图查询异常处理\",\"[fix] 修复历史记录表，创建时间和更新时间一样的问题\",\"[remove] FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\"]},\"1001\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"[feat] 设计器独立 @zhen\",\"[feat] 使用jar引入方式引入设计器\",\"[feat] 新增办理人变量表达式流程案例\",\"[feat] 新增方法，获取流程变量的map类型\",\"[update] 节点线条保存关联名称\",\"[fix] 修复mybatis扩展包中，flowStatus变量书写错误的问题\",\"[fix] 更新时间有值时，取更新时间，不是创建时间\"]},\"1002\":{\"h\":\"v1.2.10 2024-09-26\",\"t\":[\"[fix] 修复mybatis-plus扩展包，配置了其他id策略不生效的问题\"]},\"1003\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"[feat] json库支持snack3、jackson、fastjson和gson，并且支持扩展\",\"[feat] 增加办理人变量表达式，支持${xxx}替换和spel，并支持扩展\",\"[feat] ListenerVariable监听器变量新增FlowParams字段，方便开始监听器全局传递参数\",\"[feat] 终止新增对开始和完成监听器的支持\",\"[update] springboot项目的条件表达式默认支持spel\",\"[update] 历史记录改为单条保存，删除重复代码\",\"[update] 修改FlowUserDao的bean名称\",\"[update] 中间节点拆分为或签，会签，票签\",\"[fix] 修复历史记录创建时间相等，导致流程图渲染异常\",\"[fix]修复Mybatis逻辑删除变成真实删除的缺陷 @xiarigang\",\"[refactor] 重构id生成器，支持orm默认策略，删除数据填充默认实现类，改为匿名类\"]},\"1004\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"[update] 历史任务表流程状态支持外部传入\",\"[update] 修改办理人接口，当未设置办理人时，不做权限校验\",\"[update] ModifyHandler增加链式调用\",\"[fix] 修复流程监听器导出失败的问题\"]},\"1005\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"[feat] 增加获取下个节点集合api @xiarigang\",\"[feat] 流程监听器 @xiaoxiaoliu889\",\"[feat] id内存策略新增14、15位雪花算法支持\",\"[feat] 流程激活和挂起案例 @xiaoxiaoliu889\",\"[feat] 增加基于流程定义Id获取流程图 @xiaoxiaoliu889\",\"[update] 流程状态改成字符串类型 @xiarigang\",\"[update] 测试模块拆分独立仓库\",\"[update] modes-sb删除加载配置文件，改为有上层jar加载\",\"[update] flex solon版本yml弄错了，config调整\",\"[refactor] 流程版本号生成逻辑重构 @xiaoxiaoliu889\",\"[fix] 修复deleteByTaskIds 中的根据无法正确删除user数据\",\"[fix] 修复 jpa solon注解问题 @vanlin\",\"[fix] 修复 并行网关三个任务分支的时候，错误结束流程的问题\"]},\"1006\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"[feat] 激活和挂起 @xiaoxiaoliu889\",\"[feat] 不同节点也支持配置审批表单路径 @vanlin\",\"[feat] 支持接收外部流程状态，支持流程状态扩展 @vanlin\",\"[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式\",\"[feat] 新增分派监听器，支持代办任务中办理人等动态修改 @liangli\",\"[feat] 新增Easy-Query框架支持 @link2fun\",\"[feat] 新增Mybatis-Flex的solon扩展包 @xiarigang\",\"[feat] 新增Jpa的solon扩展包 @vanlin\",\"[feat] 历史表新增跳转类型，记录跳转类型 @vanlin\",\"[feat] 增加组件加载，yml控制开关 @疯狂的狮子Li\",\"[update] 之前强依赖流程状态的通过的，改为跳转类型，历史数据考虑如何处理 @vanlin\",\"[update] 之前所有保存流程状态地方，全部提供可接受外部传入 @vanlin\",\"[update] 流程开启，校验节点是否发布，提示语增加流程编码\",\"[update] 删除校验是否任意跳转\",\"[update] 修改扩展字段ext注释，删除FlowConfigUtil多余的代码\",\"[update] SqlSessionFactory改为构造函数引入\",\"[update] 替换异常类，UtilException高版本不兼容\",\"[update] from_custom改为form_custom，from_path改为form_path\",\"[remove] 移除节点前置执行权限处理器\",\"[remove] 删除cooperateAutoPass方法\",\"[update] 代办改为待办\",\"[refactor] 重构测试模块，完善mybatis-plus多租户和逻辑删除使用方式\",\"[refactor] 重构solon和插件模块\",\"[fix] 修复加签批量提交报错\",\"[fix] 修复TaskServiceImpl#handleDepute方法中删除受托人传参数错误\",\"[fix] 修复 JPA flowUserDao bug @vanlin\",\"[fix] 流程第三个节点为网关时无法渲染颜色\",\"[fix] 修复查看流程图模糊的问题 @erfeijiadao\",\"[fix] 修復开始节点直连网关，流程图渲染有问题\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 修复流程定义和流程实例相同，处于非结束节点，流程实例不能存在相同的业务id\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 删除不必要的··符号，修复postgresql与mysql关键词符号问题。\",\"[fix] 修复流程已完成，流程图结束节点显示为黑色\",\"[fix] 修复已办任务查询审批想起无效问题\",\"[fix] 设置开始节点 skip_type = PASS\",\"[fix] 为SpringUtil指定bean name,解决 LocalContainerEntityManagerFactoryBean 依赖问题\",\"[chore] 升级dom4j为安全版本2.1.3\"]},\"1007\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"[fix] 修复更新拼上了多余的条件\",\"[fix] 修复保存流程xml报错问题\"]},\"1008\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"[feat] 新增mybatis-flex扩展包 @xiarigang\",\"[feat] 新增抄送演示案例 @adru*\",\"[feat] 历史记录表新增ext扩展字段，方便保存历史过程数据 @adru*\",\"[update] 保存下一个节点办理人时，不校验是否有审批人\",\"[update] 调整扩展包配置，新增测试模块\",\"[update] 票签,会签，将待办任务的创建时间赋予历史任务开始时间 @liutao\",\"[update] 调整mybatis-plus多租户和软件删除处理\",\"[update] 修改任务历史表时间定义，任务审批通过，将待办任务的创建时间赋予历史任务开始时间 @liutao*\",\"[update] 修正pg的sql文件名，新增1.2.1增量sql @liutao\",\"[update] 会签票签，开始时间记录代表任务的创建时间\",\"[remove] 删除监听器自定义参数,修改扩展字段名称\",\"[fix] 监听器问题修复 @liangli\",\"[fix] solon插件包增加userMapper.xml加载\",\"[fix] 修复填充器不接收外部设置的时间\",\"[fix] 修复userMapper.xml中updateLogic的某个负值错误\"]},\"1009\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"待办表解偶用户，新增用户表（查询方式需要改动）\",\"会签，票签\",\"加减签\",\"转办完善\",\"jpa扩展\",\"oracle适配\",\"pg适配\"]},\"1010\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"orm支持mybatis-plus扩展\",\"多租户字段隔离提供全局配置，自动获取\",\"增加软删除可以配置化\",\"新增三个测试模块\",\"修复设置默认填充器时候，判空错误\"]},\"1011\":{\"h\":\"v1.1.7 2024-04-27\",\"t\":[\"启动流程时，支持第二个节点为网关节点的情况\",\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",\"修复终止流程bug\"]},\"1012\":{\"h\":\"v1.1.6 2024-04-23\",\"t\":[\"支持转办功能\",\"任务自动流转到创建人\",\"考虑流程终止功能\",\"修复流程流转异常\",\"实体类支持序列化\",\"修复java17以上@Resource包路径变更的问题\"]},\"1013\":{\"h\":\"v1.1.5 2024-04-17\",\"t\":[\"支持自定义填充\",\"新增配置文件，部分功能可配置\",\"重构代码，insService.skip标识即将删除，改用taskService.skip\",\"引入日志门面\",\"修复已经设置后续节点动态权限后，办理时未生效问题；\",\"枚举扩展getByKey方法 @Holly_Git\",\"调整实例类结构，方便链式写法\",\"修复并行网关后面没有中间节点\",\"修复开始任务记录待办，为保存流程状态\",\"新增链式查询排序提供id排序\",\"新增历史任务记录结束节点\",\"新增赋值流程记录创建更新时间\",\"优化表实体类链式赋值\",\"待办已办查询标记为即将删除, 已挪到业务系统中\"]},\"1014\":{\"h\":\"v1.1.4 2024-04-07\",\"t\":[\"修复监听器部分判空bug 感谢@Holly_Git\",\"新增创建任务监听器\",\"修改flow_node监听类型和监听路径字段长度\",\"新增监听器生命周期概念，完善文档\",\"重构流程开启流程和流程办理代码\",\"开始节点也能记录到历史任务记录中\"]},\"1015\":{\"h\":\"v1.1.3 2024-04-02\",\"t\":[\"新增权限监听器，办理中动态设置权限 感谢@Holly\"]},\"1016\":{\"h\":\"v1.1.2 2024-03-27\",\"t\":[\"流程定义新增复制按钮\",\"补齐sql脚本，完善文档\",\"跳转条件获取方式变更为流程变量 感谢@Holly\",\"监听器变量新增返回节点信息 感谢@Holly\",\"新增根据流程定义和当前节点code获取下一节点api接口. 感谢@Holly\",\"删除多余的字段和代码\"]},\"1017\":{\"h\":\"v1.1.1 2024-03-22\",\"t\":[\"[fix] 修复xml脚本中遗漏伪命的问题，完善sql\"]},\"1018\":{\"h\":\"v1.1.0 2024-03-21\",\"t\":[\"可以跳转指定节点\",\"增加全局变量\",\"增加监听器\",\"重构代码，解偶orm，方便扩展不同orm和数据，新增代码示例\",\"修复并行网关流程流程图显示错误问题\"]},\"1019\":{\"h\":\"v1.0.4 2024-03-06\",\"t\":[\"[update] 美化后台返回的流程图\"]},\"1020\":{\"h\":\"v1.0.3 2024-03-05\",\"t\":[\"[update] 重构代码，解偶orm操作，方便扩展其他orm框架\"]},\"1021\":{\"h\":\"v1.0.2 2023-12-31\",\"t\":[\"[fix] 修复solon版本业务系统可不用单独加载warm-flow的xml\"]},\"1022\":{\"h\":\"v1.0.0 2023-12-28\",\"t\":[\"完善流程设计器和流程图，新增vue3版本\",\"放弃js引擎，自研条件表达式\",\"新增支持条件表达式\",\"可退回到任意节点\",\"支持生成流程图\",\"流程设计器开发\",\"互斥网关，并行网关（会签、或签）功能开发\",\"抽离spring生态依赖，支持solon，并且保持事务与业务系统一致\",\"支持待办任务和已办任务，通过权限标识过滤数据\",\"新增多租户模式\",\"原生提供排序\",\"原生提供分页查询\",\"项目上传中央仓库\",\"工作流模块抽取为独立项目，提供集成方式\",\"已办任务和任务记录，审批页面中包含业务详情页面\",\"提供待办任务、提供角色、部门等权限配置\",\"提供流程配置界面\",\"流程配置文件改为表单填报方式\",\"用户角色抽取出来\",\"整理流程表，调整表名和字段名\"]},\"1023\":{\"h\":\"公司使用列表\",\"t\":[\"公司/个人\",\"项目名称\",\"项目介绍\",\"LOGO\\\\代码地址\",\"中交武汉智行国际\",\"能力开放平台\",\"内部系统，流程审批\",\"新理益智慧网络科技（重庆）有限公司\",\"极点OA智慧网络办公系统\",\"企业综合办公管理系统\",\"安徽数智建造研究院有限公司\",\"进销存运营平台\",\"中铁四局集团全资子公司，集成工作流引擎\",\"杭州三之一智联科技有限公司\",\"质量管理系统\",\"基于工业互联网的数字化安全与质量管理平台，集风险、质量和安全为一体，以CTQ（关键质量特性）为中心，端到端全生命周期数字化安全与质量管理。\",\"郑州如阳科技有限公司\",\"智慧燃气平台\",\"智慧燃气平台\",\"山东融佑信息科技有限公司\",\"融运力TMS\",\"融运力TMS是基于移动互联网的面向货主侧需求的订单履约类的TMS系统，兼有传统TMS的竞标、派车、跟踪、签收等功能，同时具备企业ERP级的协同功能\",\"陕西物联达智能科技有限公司\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"H5VE团队\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"抚顺银行\",\"外围管理平台\",\"行内人员使用\",\"武汉数演科技有限公司\",\"开源工作流\",\"仿钉钉界面的开源工作流平台\",\"半月无霜\",\"banmoon-test\",\"半月无霜个人项目\",\"https://www.banmoon.top\",\"某某公司\",\"合规管控系统\",\"对各类事项进行检查，上报不合规的地方来审批整改\",\"个人\",\"海狼OA系统\",\"海狼OA系统\",\"xx自来水股份有限公司\",\"节水信息管理系统\",\"当地节水系统\",\"图灵谷\",\"内部OA\",\"内部OA\",\"湖北建科工程\",\"内部OA\",\"内部OA\",\"Holly\",\"智慧政务\",\"政务系统\",\"雨巷\",\"OA审批系统\",\"公司内部OA办公系统\",\"暗影\",\"erp\",\"erp\",\"LYQ\",\"XX单位综合信息服务系统\",\"简易工作流，OA办公，数据共享等等\",\"若愚\",\"测试检测平台\",\"starrydesert\",\"基于SSM的职工管理系统\",\"毕业设计\",\"zyflzz\",\"基于机器学习的只能停车管理系统\",\"毕业设计\",\"南山客\",\"基于SpringBoot的财务管理系统\",\"本科毕业设计\"]},\"1024\":{\"h\":\"如何贡献\"},\"1025\":{\"h\":\"参与贡献\"},\"1026\":{\"h\":\"为开源项目点一个Star\",\"t\":[\"Star的多少关系到项目能否被更多人看到 同时Star也是作者前进的动力(作者每天都在盯着Star 涨了会开心 跌了会失落) 大家在寻找开源项目的时候, 大多数情况也是会先看Star比较多的项目 所以请给您觉得好的开源项目点一个小小的Star, 让好的项目能够被更多人看到\",\"github地址 | gitee地址 | gitCode地址\"]},\"1027\":{\"h\":\"为社区处理问题\",\"t\":[\"Issue是社区的交流地 大家会在这里提出自己的问题 或者是项目的功能异常\",\"提问的规范在Issue的模板里已经写好了 按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",\"屏幕截图\",\"为提出问题的小伙伴答疑 可以有效降的帮助别人\",\"而且可以降低社区人员的精力分散 使精力全部投入到项目设计研发中\",\"屏幕截图\"]},\"1028\":{\"h\":\"\",\"t\":[\"大家都知道 我们程序员都不擅长写作\",\"有时候作者把文档写完了也不知道用户是什么感觉 是否能看懂\",\"所以参与社区文档建设绝对是一件意义重大的事情\",\"大家可以在Issue提出观后感 觉得哪看不懂 觉得哪应该详细说明\",\"当然了 大家也可以对文档进行改进后提交PR修改申请\"]},\"1029\":{\"h\":\"贡献代码\",\"t\":[\"想参与贡献代码的小伙伴 重点来了: 作者会经常在Issue里发布需求认领 觉得自己能做的可以在Issue里跟作者讨论 如需求还不够清晰 或者做的过程中遇到了什么问题\",\"需求确定了以后就可以开始专注的写代码了 但在开始写代码之前 一定要先看一下如何正确的提交PR\"]},\"1030\":{\"h\":\"如何成为项目贡献者\",\"t\":[\"1.对框架有重大贡献者(由作者与团队成员判定) 2.完成社区发布的两项复杂任务 3.持续完成社区发布的简单任务若干(作者会关注到) 4.持续为社区优化文档或处理issue若干(作者会关注到)\"]},\"1031\":{\"h\":\"项目贡献者待遇\",\"t\":[\"1.捐献红包和群主不定时红包 2.每年还会发放IDEA正版授权,视情况而定\"]},\"1032\":{\"h\":\"提交pr\"},\"1033\":{\"h\":\"步骤一 Fork项目到自己仓库\",\"t\":[\"屏幕截图\"]},\"1034\":{\"h\":\"步骤二 基于dev分支 新建一个此PR功能点的专属分支\"},\"1035\":{\"h\":\"步骤三 使用Git工具 将自己仓库的项目拉去到本地做代码编写\",\"t\":[\"屏幕截图\"]},\"1036\":{\"h\":\"步骤四 使用Idea打开项目 切换到新建的功能分支\",\"t\":[\"屏幕截图\"]},\"1037\":{\"h\":\"步骤五 设置创建类的模板\",\"t\":[\"新创建的类使用这个模板生成注释，使用方式在类上面写上 /c，然后按回车会自动生成\"]},\"1038\":{\"h\":\"步骤六 将编写好的代码 提交到自己的远程仓库\",\"t\":[\"屏幕截图\",\"git提交规范\",\"[init] 初始化 [feat] 增加新功能 [fix] 修复问题/BUG [perf] 优化/性能提升 [refactor] 重构 [revert] 撤销修改 [style] 代码风格相关无影响运行结果的 [update] 其他修改 [upgrade] 升级版本\"]},\"1039\":{\"h\":\"步骤七 创建PR申请(此操作在自己仓库或者要PR的仓库都可以)\",\"t\":[\"屏幕截图\"]},\"1040\":{\"h\":\"步骤八 等待作者评审 按要求更改 直到没有问题后被作者合并\",\"t\":[\"屏幕截图\"]},\"1041\":{\"h\":\"介绍\"},\"1042\":{\"h\":\"1、项目介绍\",\"t\":[\"[!IMPORTANT] Dromara Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"希望一键三连，你的⭐️ Star ⭐️是我持续开发的动力，项目也活的更长\"]},\"1043\":{\"h\":\"2、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1044\":{\"h\":\"3、开源协议\",\"t\":[\"Dromara Warm-Flow采用APACHE LICENSE 2.0开源协议，已申请软著，您如果需要源码开发方式，需要注意以下几点：\",\"请不要删除和修改根目录下的LICENSE文件。\",\"请不要删除和修改Warm-Flow源码头部的版权声明。\",\"本项目代码可免费商业使用，商业使用请保留源码和相关描述文件的项目出处，作者声明等。\",\"分发源码时候，请注明软件出处 https://warm-flow.dromara.org/\",\"不可二次分发开源参与同类竞品，如有想法可联系290631660@qq.com商议合作。\",\"若您的项目无法满足以上几点，需要更多功能代码，获取可找作者定制化开发，290631660@qq.com\"]},\"1045\":{\"h\":\"4、应用场景\",\"t\":[\"Dromara Warm-Flow作为一个国产的工作流引擎，其设计简洁轻量但功能全面，适用于多种应用场景，尤其是针对中小型项目。以下是一些典型的应用场景：\",\"企业内部流程管理：用于管理企业的日常业务流程，如请假、报销、采购审批等。\",\"项目管理：在项目管理中，Dromara Warm-Flow可以用来跟踪项目任务的状态，管理项目流程，确保项目按计划进行。\",\"办公自动化：通过Warm-Flow，企业可以实现办公流程的自动化，提高工作效率，减少人为错误。\",\"客户服务流程：用于管理客户服务请求，如客户咨询、投诉处理、售后服务等。\",\"人力资源管理：在人力资源管理中，Warm-Flow可用于员工招聘、培训、绩效评估等流程的管理。\",\"财务和会计流程：管理财务审批流程，如发票审核、预算审批等。\",\"IT服务管理：用于IT服务请求的处理，如IT支持请求、系统变更管理等。\",\"业务流程优化：企业可以利用Dromara Warm-Flow来分析和优化现有业务流程，提高业务效率。\",\"合规性和风险管理：帮助企业在遵守法规和标准的同时，管理风险和合规流程。\",\"跨部门协作：Dromara Warm-Flow支持跨部门的流程协作，帮助不同部门之间更好地协调工作。\"]},\"1046\":{\"h\":\"5、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"1047\":{\"h\":\"6、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1048\":{\"h\":\"7、特别赞助\",\"t\":[\"如何成为赞助商 加群联系作者详谈\"]},\"1049\":{\"h\":\"8、你可以请作者喝杯咖啡表示鼓励\",\"t\":[\"捐赠地址\"]},\"1050\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"[!IMPORTANT] 以下演示基于项目示例hh-vue\"]},\"1051\":{\"h\":\"演示地址\",\"t\":[\"注意\",\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1052\":{\"h\":\"演示图\"},\"1053\":{\"h\":\"1、新增定义\",\"t\":[\"提示\",\"流程编码和流程版本：确定唯一 审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1054\":{\"h\":\"2、流程设计\"},\"1055\":{\"h\":\"2、1节点设置\",\"t\":[\"提示\",\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1056\":{\"h\":\"2、2跳转线设置\",\"t\":[\"提示\",\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1057\":{\"h\":\"3、开启流程实例\",\"t\":[\"提示\",\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1058\":{\"h\":\"4、提交流程\",\"t\":[\"提示\",\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1059\":{\"h\":\"5、办理流程\",\"t\":[\"提示\",\"如果是互斥网关则会判断是否满足条件\"]},\"1060\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1061\":{\"h\":\"开源集成案例\",\"t\":[\"作者\",\"项目名称\",\"描述\",\"晓华\",\"hh-vue / 演示\",\"基于ruoyi-vue集成，springboot2+vue2\",\"seven\",\"seaflow / 演示\",\"seaflow 是一款 开源仿钉钉工作流 平台， 前端使用 vue3+element plus ， 实现 流程设计和审批功能， 后端基于国产工作流Dromara warm-flow 实现流程控制， 大大缩短了学习成本\",\"晓华/Zhen\",\"ruoyi-vue3\",\"基于ruoyi-vue3集成前端\",\"梁小梁/Zhen\",\"Ruoyi-Cloud/RuoYi-Vue3\",\"基于Ruoyi-Cloud集成的跑批系统,spring-cloud(nacos)+vue3\",\"quick\",\"quick-boot / 演示\",\"基于 Spring Cloud 2022 、Spring Boot 3、React、AMIS 和 APIJSON 的低代码系统的设计和实现。该系统可以帮助企业快速开发和部署高质量的 Web 应用程序\"]},\"1062\":{\"h\":\"捐赠\",\"t\":[\"感谢所有捐赠者，你们的支持是我最大的动力。这些费用将用于服务器、域名和相关服务的费用，以及warm组织成员和贡献者的红包奖励。\"]},\"1063\":{\"h\":\"捐赠列表\",\"t\":[\"如有遗漏，请联系我。\",\"捐献者\",\"金额/元\",\"留言\",\"时间\",\"一拳打爆常大宝\",\"20\",\"感谢您对开源项目的支持\",\"2024-08-08\",\"李*佳\",\"30\",\"感谢您对开源项目的支持\",\"2024-08-02\",\"*佳\",\"30\",\"希望有交流机会\",\"2024-08-01\",\"*子\",\"30\",\"准备试用，致敬\",\"2024-07-16\",\"i*d\",\"1\",\"感谢您对开源项目的支持\",\"2024-07-11\",\"自由飞翔\",\"100\",\"感谢您对开源项目的支持\",\"2024-07-03\",\"文斌\",\"100\",\"Dromara warm-flow项目非常好，希望能发展壮大\",\"2024-06-25\",\"*入\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*梁\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*马\",\"100\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*热\",\"68\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*巴\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*敏\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*剑\",\"1\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"一骑\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"姜杰\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Cola\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Dotor-ww💪\",\"30\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*荒\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*飞鸿\",\"11\",\"感谢您对开源项目的支持\",\"2024-06-25\"]},\"1064\":{\"h\":\"监听器\",\"t\":[\"[!IMPORTANT] 在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。 支持类包名配置和表达式配置。\"]},\"1065\":{\"h\":\"1、监听器大类\",\"t\":[\"[!IMPORTANT] 节点监听器：在流程节点中配置，只有指定节点任务才会执行 流程监听器：在流程定义中配置，该流程所有节点任务都会执行 全局监听器：实现全局监听器接口，所有流程的节点任务都会执行 执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"1066\":{\"h\":\"2、监听器小类\",\"t\":[\"[!IMPORTANT] start：开始监听器，任务开始办理时执行 assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行 create：创建监听器，任务创建时执行\"]},\"1067\":{\"h\":\"3、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应 listener_type：监听器类型，如start,assignment,finish,create等 listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等 监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"1068\":{\"h\":\"4、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"1069\":{\"h\":\"5、监听器生命周期图\"},\"1070\":{\"h\":\"5、节点和流程监听器\"},\"1071\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"1072\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"1073\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"1074\":{\"h\":\"5.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"1075\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"1076\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"1077\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"1078\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"1079\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"1080\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"1081\":{\"h\":\"逻辑删除\"},\"1082\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启。 如若关闭, 需高版本比如3.5.3或者以上 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\",\"/** * 关闭逻辑删除 * * @author warm */ @Component public class PlusPostInitTableInfoHandler implements PostInitTableInfoHandler { List<String> tableNames = Arrays.asList(\\\"flow_definition\\\", \\\"flow_node\\\", \\\"flow_skip\\\", \\\"flow_instance\\\", \\\"flow_task\\\" , \\\"flow_his_task\\\", \\\"flow_user\\\"); @Override public void postTableInfo(TableInfo tableInfo, Configuration configuration) { String tableName = tableInfo.getTableName(); if (tableNames.contains(tableName)) { Class<?> clazz = tableInfo.getClass(); Field[] fields = clazz.getDeclaredFields(); try { for (Field field : fields) { if (\\\"withLogicDelete\\\".equals(field.getName())) { field.setAccessible(true); // 关闭逻辑删除 field.set(tableInfo, false); } } } catch (IllegalAccessException e) { throw new FlowException(\\\"反射设置对象值异常\\\"); } } } }\"]},\"1083\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"1084\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"1085\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"1086\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"[!IMPORTANT] 1、组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"1087\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"1088\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"1089\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"1090\":{\"h\":\"办理人权限处理器\",\"t\":[\"[!IMPORTANT] 1、审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员 2、工作流api中很多需要获取当前办理人id，进行保存或者校验 3、以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"1091\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link FlowParams#getPermissionFlag} 中获取 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"1092\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"1093\":{\"h\":\"多租户\"},\"1094\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的多租户方式\"]},\"1095\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"1096\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"1097\":{\"h\":\"2、通用多租户\"},\"1098\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"1099\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1100\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"1101\":{\"h\":\"办理人变量表达式\",\"t\":[\"[!IMPORTANT] 1、业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"1102\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowFactory.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowFactory.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"1103\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"1104\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"1105\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"3、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1106\":{\"h\":\"5、默认办理人变量策略\"},\"1107\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1108\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1109\":{\"h\":\"6、spel办理人变量策略\"},\"1110\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1111\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1112\":{\"h\":\"7、办理人选择项接口\",\"t\":[\"通过此接口可以给办理人选择，增加默认选项比如发起人、部门领导审批之类的（待开发）\"]},\"1113\":{\"h\":\"核心api\"},\"1114\":{\"h\":\"1、DefService流程定义接口\"},\"1115\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"1116\":{\"h\":\"1.2、新增流程定义，并初始化流程节点和流程跳转数据\",\"t\":[\"saveAndInitNode(definition)：校验后新增\"]},\"1117\":{\"h\":\"1.3、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"1118\":{\"h\":\"1.4、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"1119\":{\"h\":\"1.5、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"1120\":{\"h\":\"1.6、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"1121\":{\"h\":\"1.7、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"1122\":{\"h\":\"1.8、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"1123\":{\"h\":\"1.9、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"1124\":{\"h\":\"1.10、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"1125\":{\"h\":\"1.11、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"1126\":{\"h\":\"1.12、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"1127\":{\"h\":\"1.13、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"1128\":{\"h\":\"1.14、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"1129\":{\"h\":\"1.15、获取流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 获取流程定义全部数据(包含节点和跳转)\"]},\"1130\":{\"h\":\"1.16、查询流程设计所需的数据，比如流程图渲染，导出流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 查询流程设计所需的数据，比如流程图渲染，导出流程定义\"]},\"1131\":{\"h\":\"2、InsService流程实例接口\"},\"1132\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"1133\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1134\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1135\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"1136\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"1137\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"1138\":{\"h\":\"2.7、根据流程定义id集合，查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"1139\":{\"h\":\"3、TaskService待办任务接口\"},\"1140\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1141\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1142\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1143\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1144\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1145\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1146\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"1147\":{\"h\":\"4、NodeService节点接口\"},\"1148\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"previousNodeList(nodeId)：根据节点id获取下所有的前置节点集合\",\"nodeId: 节点id [必传]\",\"previousNodeList(definitionId, nowNodeCode)：根据流程定义id和当前节点code获取所有的前置节点集合\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"1149\":{\"h\":\"5、公共api接口\"},\"1150\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"1151\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"1152\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"1153\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"1154\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"1155\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"1156\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"1157\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"1158\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"1159\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"1160\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"1161\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"1162\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"1163\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"1164\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"1165\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"1166\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"1167\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"1168\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"1169\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"1170\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"1171\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"1172\":{\"h\":\"流程协作(票签等)\",\"t\":[\"[!IMPORTANT] 审批过程中可能存在，一人或者多人审批的情况，不同情况对应不同协作类型（会签、票签和或签）\"]},\"1173\":{\"h\":\"1、流程协作规则\",\"t\":[\"或签：一名办理人审批通过，审批节点才会通过 票签：满足设定的通过率，部分审批人审批通过，审批节点才会通过 会签：所有审批人审批通过，审批节点才会通过\"]},\"1174\":{\"h\":\"2、使用演示\"},\"1175\":{\"h\":\"2.1、或签\"},\"1176\":{\"h\":\"2.2、票签签\"},\"1177\":{\"h\":\"2.3、会签\"},\"1178\":{\"h\":\"条件表达式\",\"t\":[\"[!IMPORTANT] 在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"1179\":{\"h\":\"1、内置表达式类型\",\"t\":[\"1、默认: default|${flag == 5 && flag > 4}\",\"2、SpEL: spel|#{@user.eval(#flag)}\",\"3、大于: gt|flag|4\",\"4、大于等于: ge|flag|4\",\"5、等于: eq|flag|4\",\"6、不等于： ne|flag|4\",\"7、小于: lt|flag|4\",\"8、小于等于: le|flag|4\",\"9、包含: like|flag|4\",\"10、不包含: notNike|flag|4\",\"11、自定义表达式\"]},\"1180\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：xxx|yyy|zzz，xxx为表达式类型，其中yyy为变量名，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）:#{@user.eval(#flag)}表达式，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1181\":{\"h\":\"配置文件\"},\"1182\":{\"h\":\"1、spring\"},\"1183\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"1184\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"1185\":{\"h\":\"2、solon\"},\"1186\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"1187\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1188\":{\"h\":\"数据填充器\",\"t\":[\"[!IMPORTANT] 1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"1189\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"1190\":{\"h\":\"2、注入bean\"},\"1191\":{\"h\":\"2.1、通过@Component方式注入\"},\"1192\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"1193\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"1194\":{\"h\":\"设计器集成\",\"t\":[\"[!IMPORTANT] 1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"1195\":{\"h\":\"1. 引入依赖\"},\"1196\":{\"h\":\"springboot\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"1197\":{\"h\":\"solon\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-solon-web</artifactId> <version>版本号</version> </dependency>\"]},\"1198\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"1199\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1200\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"1201\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"1202\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1203\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"1204\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"1205\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"1206\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"1207\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1208\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1209\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1210\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1211\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"1212\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"1213\":{\"h\":\"办理人变更\",\"t\":[\"[!IMPORTANT] 审批业务中经常会出现办理人中途变更的情况，比如增加办理人，任务转办给别人等。\"]},\"1214\":{\"h\":\"1、变更支持的类型\",\"t\":[\"1、转办：任务转给其他人办理 2、委派：求助其他人审批，然后参照他的意见决定是否审批通过 3、加签：办理中途，希望其他人一起参与办理 4、减签：办理中途，希望某些人不参与办理\"]},\"1215\":{\"h\":\"2、接口描述\",\"t\":[\"接口描述地址\"]},\"1216\":{\"h\":\"3、代码示例\",\"t\":[\"/** * 转办 */ public void transfer(TaskService taskService) { taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"转办\\\")); } /** * 委派 */ public void depute(TaskService taskService){ taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"委派\\\")); } /** * 加签 */ public void addSignature(TaskService taskService){ taskService.addSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"加签\\\")); } /** * 减签 */ public void reductionSignature(TaskService taskService){ taskService.reductionSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .reductionHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"减签\\\")); }\"]},\"1217\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"求助其他人审批，然后参照他的意见决定是否审批通过\",\"4\",\"转办\",\"任务转给其他人办理\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"办理中途，希望其他人一起参与办理\",\"11\",\"减签\",\"办理中途，希望某些人不参与办理\",\"12\",\"会签\",\"所有审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"满足设定的通过率，部分审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"一名办理人审批通过，审批节点才会通过\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"1218\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1219\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1220\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1221\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1222\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1223\":{\"h\":\"快速开始\",\"t\":[\"[!IMPORTANT]在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"1224\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"1225\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"1226\":{\"h\":\"3、maven依赖\"},\"1227\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1228\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1229\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1230\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1231\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>最新版本</version> </dependency>\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1232\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1233\":{\"h\":\"4.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1234\":{\"h\":\"4.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1235\":{\"h\":\"4.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1236\":{\"h\":\"4.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1237\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1238\":{\"h\":\"6、初学者推荐学习路线\"},\"1239\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1240\":{\"h\":\"6.2、推荐学习视频\"},\"1241\":{\"h\":\"表结构\",\"t\":[\"[!IMPORTANT]\",\"表描述\",\"流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表）\",\"流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成\"]},\"1242\":{\"h\":\"1.1 表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1243\":{\"h\":\"1.2 表字段明细\"},\"1244\":{\"h\":\"1.2.1\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1245\":{\"h\":\"1.2.2\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1246\":{\"h\":\"1.2.3\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1247\":{\"h\":\"1.2.4\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1248\":{\"h\":\"1.2.5\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1249\":{\"h\":\"1.2.6\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1250\":{\"h\":\"1.2.7\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1251\":{\"h\":\"流程变量\",\"t\":[\"[!IMPORTANT] 1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1252\":{\"h\":\"核心api\"},\"1253\":{\"h\":\"1、DefService流程定义接口\"},\"1254\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"1255\":{\"h\":\"1.1、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"1256\":{\"h\":\"1.2、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"1257\":{\"h\":\"1.3、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"1258\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"1259\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"1260\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"1261\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"1262\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"1263\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"1264\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"1265\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"1266\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"1267\":{\"h\":\"2、InsService流程实例接口\"},\"1268\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"1269\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1270\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1271\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"1272\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"1273\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"1274\":{\"h\":\"3、TaskService待办任务接口\"},\"1275\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1276\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1277\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1278\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1279\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1280\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1281\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"1282\":{\"h\":\"4、NodeService节点接口\"},\"1283\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"1284\":{\"h\":\"5、公共api接口\"},\"1285\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"1286\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"1287\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"1288\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"1289\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"1290\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"1291\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"1292\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"1293\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"1294\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"1295\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"1296\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"1297\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"1298\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"1299\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"1300\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"1301\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"1302\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"1303\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"1304\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"1305\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"1306\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"1307\":{\"h\":\"配置文件\"},\"1308\":{\"h\":\"1、spring\"},\"1309\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"1310\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"1311\":{\"h\":\"2、solon\"},\"1312\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"1313\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1314\":{\"h\":\"自定义流程状态\",\"t\":[\"[!IMPORTANT] 1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"1315\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"1316\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"1317\":{\"h\":\"3、其他请查阅核心api\"},\"1318\":{\"h\":\"填充器\",\"t\":[\"[!IMPORTANT] 1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"1319\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"1320\":{\"h\":\"2、注入bean\"},\"1321\":{\"h\":\"2.1、通过@Component方式注入\"},\"1322\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"1323\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"1324\":{\"h\":\"设计器引入\",\"t\":[\"[!IMPORTANT] 1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"1325\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"1326\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"1327\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1328\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"1329\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"1330\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1331\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"1332\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"1333\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"1334\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"1335\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1336\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1337\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1338\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1339\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"1340\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到headerAuthorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"1341\":{\"h\":\"6. 设计器二开\"},\"1342\":{\"h\":\"6.1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"1343\":{\"h\":\"6.2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\"]},\"1344\":{\"h\":\"6.3 部署\"},\"1345\":{\"h\":\"6.3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara</groupId> </exclusion> </exclusions> </dependency>\"]},\"1346\":{\"h\":\"6.3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"1347\":{\"h\":\"6.3.2 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"1348\":{\"h\":\"条件表达式\"},\"1349\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"1350\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1351\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"1352\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"1353\":{\"h\":\"表单管理\"},\"1354\":{\"h\":\"json库扩展\",\"t\":[\"[!IMPORTANT] 1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"1355\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"1356\":{\"h\":\"监听器\",\"t\":[\"[!IMPORTANT] 1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"1357\":{\"h\":\"1、监听器类型\",\"t\":[\"[!IMPORTANT] create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"1358\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"[!IMPORTANT] 流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"1359\":{\"h\":\"2、监听器生命周期图\"},\"1360\":{\"h\":\"3、监听器使用\"},\"1361\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"1362\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"1363\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"1364\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"1365\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"1366\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"1367\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"1368\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"1369\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"1370\":{\"h\":\"逻辑删除\"},\"1371\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"1372\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"1373\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"1374\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"1375\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"1376\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"1377\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"1378\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"1379\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"[!IMPORTANT] 以下演示基于项目示例hh-vue\"]},\"1380\":{\"h\":\"演示图\"},\"1381\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1382\":{\"h\":\"2、流程设计\"},\"1383\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1384\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1385\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1386\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1387\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"1388\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1389\":{\"h\":\"流程规则\"},\"1390\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1391\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1392\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1393\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1394\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1395\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"1396\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"1397\":{\"h\":\"快速开始\",\"t\":[\"[!IMPORTANT]在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"1398\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"1399\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"1400\":{\"h\":\"3、maven依赖\"},\"1401\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1402\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1403\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1404\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1405\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.3</version> </dependency>\"]},\"1406\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"1407\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1408\":{\"h\":\"6、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1409\":{\"h\":\"7、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1410\":{\"h\":\"7.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1411\":{\"h\":\"7.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1412\":{\"h\":\"7.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1413\":{\"h\":\"7.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1414\":{\"h\":\"8、初学者推荐学习路线\"},\"1415\":{\"h\":\"8.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1416\":{\"h\":\"8.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"1417\":{\"h\":\"表结构\",\"t\":[\"[!IMPORTANT]\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"1418\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1419\":{\"h\":\"表字段明细\"},\"1420\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1421\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1422\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 4终止 5作废 6撤销 7取回 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1423\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1424\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1425\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1426\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1427\":{\"h\":\"多租户\"},\"1428\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"[!IMPORTANT] 1、Mybatis-plus只支持自身的多租户方式\"]},\"1429\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"1430\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"1431\":{\"h\":\"2、通用多租户\"},\"1432\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"1433\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1434\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"1435\":{\"h\":\"流程变量\",\"t\":[\"[!IMPORTANT] 1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1436\":{\"h\":\"办理人变量设置\"},\"1437\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"1438\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1439\":{\"h\":\"3、默认办理人变量策略\"},\"1440\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1441\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1442\":{\"h\":\"4、spel办理人变量策略\"},\"1443\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1444\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1445\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1446\":{\"h\":\"条件表达式扩展\",\"t\":[\"提示\",\"当内置的条件表达式不满足业务需求时，可进行扩展\"]},\"1447\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1448\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1449\":{\"h\":\"3、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"1450\":{\"h\":\"3.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"1451\":{\"h\":\"3.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"1452\":{\"h\":\"3.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"1453\":{\"h\":\"自定义流程状态\",\"t\":[\"提示\",\"flowStatus：流程实例表状态，当前流程状态\",\"hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"1454\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"1455\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"1456\":{\"h\":\"3、其他请查阅核心api\"},\"1457\":{\"h\":\"设计器二开\",\"t\":[\"提示\",\"当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"1458\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"1459\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\",\"业务系统配置设计器的地址\"]},\"1460\":{\"h\":\"3 部署\"},\"1461\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"1462\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"1463\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"1464\":{\"h\":\"条件表达式扩展\"},\"1465\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1466\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1467\":{\"h\":\"表单管理\",\"t\":[\"待补充\"]},\"1468\":{\"h\":\"json库扩展\",\"t\":[\"提示\",\"目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"1469\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"1470\":{\"h\":\"监听器表达式扩展\",\"t\":[\"提示\",\"当内置的监听器表达式不满足业务需求时，可进行扩展\"]},\"1471\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1472\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1473\":{\"h\":\"3. 监听器表达式\"},\"1474\":{\"h\":\"3.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1475\":{\"h\":\"3.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"1476\":{\"h\":\"办理人变量表达式扩展\",\"t\":[\"提示\",\"当内置的办理人变量不满足业务需求时，可进行扩展\"]},\"1477\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1478\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1479\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"1480\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1481\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1482\":{\"h\":\"监听器\",\"t\":[\"提示\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。\",\"支持类包名配置和表达式配置。\"]},\"1483\":{\"h\":\"1、监听器小类\",\"t\":[\"start：开始监听器，任务开始办理时执行，数据初始化，办理人权限设置等\",\"assignment： 分派办理人监听器，动态修改代办任务信息，但不限于\",\"finish：完成监听器，当前任务完成后执行，可对业务表更新，消息通知等\",\"create：创建监听器，任务创建时执行，比如数据初始化\"]},\"1484\":{\"h\":\"2、监听器大类\",\"t\":[\"节点监听器：在流程节点中配置，作用范围当前节点，只会执行小类中任意一个\",\"流程监听器：在流程定义中配置，作用范围当前流程定义，只会执行小类中任意一个\",\"全局监听器：实现全局监听器四个接口，作用范围当前所有流程，包含可执行所有小类\",\"执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"1485\":{\"h\":\"3、监听器生命周期图\"},\"1486\":{\"h\":\"4、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应\",\"listener_type：监听器类型，如start,assignment,finish,create等\",\"listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等\",\"监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"1487\":{\"h\":\"5、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"1488\":{\"h\":\"5、节点和流程监听器\"},\"1489\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"1490\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"1491\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowEngine.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowEngine.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"1492\":{\"h\":\"5.4、可实现的效果\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"1493\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"1494\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"1495\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"1496\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"1497\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"1498\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"1499\":{\"h\":\"逻辑删除\"},\"1500\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"提示\",\"Mybatis-plus只支持自身的逻辑删除方式, 默认开启。 如若关闭, 需高版本比如3.5.3或者以上\",\"默认逻辑未删除值：0，逻辑已删除值：1\",\"如需修改默认值，请参考如下配置文件中进行修改\"]},\"1501\":{\"h\":\"1.1、配置默认逻辑删除值\"},\"1502\":{\"h\":\"1.2、关闭逻辑删除方案\",\"t\":[\"/** * 关闭逻辑删除，需高版本比如3.5.3或者以上 * * @author warm */ @Component public class PlusPostInitTableInfoHandler implements PostInitTableInfoHandler { List<String> tableNames = Arrays.asList(\\\"flow_definition\\\", \\\"flow_node\\\", \\\"flow_skip\\\", \\\"flow_instance\\\", \\\"flow_task\\\" , \\\"flow_his_task\\\", \\\"flow_user\\\"); @Override public void postTableInfo(TableInfo tableInfo, Configuration configuration) { String tableName = tableInfo.getTableName(); if (tableNames.contains(tableName)) { Class<?> clazz = tableInfo.getClass(); Field[] fields = clazz.getDeclaredFields(); try { for (Field field : fields) { if (\\\"withLogicDelete\\\".equals(field.getName())) { field.setAccessible(true); // 关闭逻辑删除 field.set(tableInfo, false); } } } catch (IllegalAccessException e) { throw new FlowException(\\\"反射设置对象值异常\\\"); } } } }\"]},\"1503\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"1504\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"提示\",\"组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"1505\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"1506\":{\"h\":\"办理人权限处理器\",\"t\":[\"提示\",\"审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员\",\"工作流api中很多需要获取当前办理人id，进行保存或者校验\",\"以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"1507\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link FlowParams#getPermissionFlag} 中获取 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"1508\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"1509\":{\"h\":\"多租户\"},\"1510\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"提示\",\"Mybatis-plus只支持自身的多租户方式\"]},\"1511\":{\"h\":\"2、通用多租户\"},\"1512\":{\"h\":\"办理人变量表达式\",\"t\":[\"提示\",\"业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"1513\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowEngine.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowEngine.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"1514\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"1515\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"1516\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"3、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1517\":{\"h\":\"5、可实现的效果\",\"t\":[\"如下图中示例可以很容易实现\"]},\"1518\":{\"h\":\"5、默认办理人变量策略\"},\"1519\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1520\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1521\":{\"h\":\"7、spel办理人变量策略\"},\"1522\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1523\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1524\":{\"h\":\"8、办理人选择项接口\",\"t\":[\"通过此接口可以给办理人选择，增加默认选项比如发起人、部门领导审批之类的（待开发）\"]},\"1525\":{\"h\":\"公司使用列表\",\"t\":[\"公司/个人\",\"项目名称\",\"项目介绍\",\"LOGO\\\\代码地址\",\"抚顺银行\",\"外围管理平台\",\"行内人员使用\",\"哈尔滨金睿科技有限公司\",\"供热收费、客服系统\",\"供热收费、客服系统\",\"中交武汉智行国际\",\"能力开放平台\",\"内部系统，流程审批\",\"新理益智慧网络科技（重庆）有限公司\",\"极点OA智慧网络办公系统\",\"企业综合办公管理系统\",\"安徽数智建造研究院有限公司\",\"进销存运营平台\",\"中铁四局集团全资子公司，集成工作流引擎\",\"杭州三之一智联科技有限公司\",\"质量管理系统\",\"基于工业互联网的数字化安全与质量管理平台，集风险、质量和安全为一体，以CTQ（关键质量特性）为中心，端到端全生命周期数字化安全与质量管理。\",\"郑州如阳科技有限公司\",\"智慧燃气平台\",\"智慧燃气平台\",\"山东融佑信息科技有限公司\",\"融运力TMS\",\"融运力TMS是基于移动互联网的面向货主侧需求的订单履约类的TMS系统，兼有传统TMS的竞标、派车、跟踪、签收等功能，同时具备企业ERP级的协同功能\",\"陕西物联达智能科技有限公司\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"H5VE团队\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"武汉数演科技有限公司\",\"开源工作流\",\"仿钉钉界面的开源工作流平台\",\"半月无霜\",\"banmoon-test\",\"半月无霜个人项目\",\"https://www.banmoon.top\",\"餐云汇团队\",\"餐云汇一站式闭环整体解决方案\",\"餐云汇一站式闭环整体解决方案\",\"某某公司\",\"合规管控系统\",\"对各类事项进行检查，上报不合规的地方来审批整改\",\"晨帆智能\",\"****系统智能设计平台\",\"二三维智能设计软件统一平台\",\"个人\",\"海狼OA系统\",\"海狼OA系统\",\"xx自来水股份有限公司\",\"节水信息管理系统\",\"当地节水系统\",\"图灵谷\",\"内部OA\",\"内部OA\",\"湖北建科工程\",\"内部OA\",\"内部OA\",\"Holly\",\"智慧政务\",\"政务系统\",\"雨巷\",\"OA审批系统\",\"公司内部OA办公系统\",\"暗影\",\"erp\",\"erp\",\"LYQ\",\"XX单位综合信息服务系统\",\"简易工作流，OA办公，数据共享等等\",\"若愚\",\"测试检测平台\",\"starrydesert\",\"基于SSM的职工管理系统\",\"毕业设计\",\"zyflzz\",\"基于机器学习的只能停车管理系统\",\"毕业设计\",\"南山客\",\"基于SpringBoot的财务管理系统\",\"本科毕业设计\"]},\"1526\":{\"h\":\"如何贡献\"},\"1527\":{\"h\":\"参与贡献\"},\"1528\":{\"h\":\"为开源项目点一个Star\",\"t\":[\"Star的多少关系到项目能否被更多人看到 同时Star也是作者前进的动力(作者每天都在盯着Star 涨了会开心 跌了会失落) 大家在寻找开源项目的时候, 大多数情况也是会先看Star比较多的项目 所以请给您觉得好的开源项目点一个小小的Star, 让好的项目能够被更多人看到\",\"github地址 | gitee地址 | gitCode地址\"]},\"1529\":{\"h\":\"为社区处理问题\",\"t\":[\"Issue是社区的交流地 大家会在这里提出自己的问题 或者是项目的功能异常\",\"提问的规范在Issue的模板里已经写好了 按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",\"屏幕截图\",\"为提出问题的小伙伴答疑 可以有效降的帮助别人\",\"而且可以降低社区人员的精力分散 使精力全部投入到项目设计研发中\",\"屏幕截图\"]},\"1530\":{\"h\":\"\",\"t\":[\"大家都知道 我们程序员都不擅长写作\",\"有时候作者把文档写完了也不知道用户是什么感觉 是否能看懂\",\"所以参与社区文档建设绝对是一件意义重大的事情\",\"大家可以在Issue提出观后感 觉得哪看不懂 觉得哪应该详细说明\",\"当然了 大家也可以对文档进行改进后提交PR修改申请\"]},\"1531\":{\"h\":\"贡献代码\",\"t\":[\"想参与贡献代码的小伙伴 重点来了: 作者会经常在Issue里发布需求认领 觉得自己能做的可以在Issue里跟作者讨论 如需求还不够清晰 或者做的过程中遇到了什么问题\",\"需求确定了以后就可以开始专注的写代码了 但在开始写代码之前 一定要先看一下如何正确的提交PR\"]},\"1532\":{\"h\":\"如何成为项目贡献者\",\"t\":[\"1.对框架有重大贡献者(由作者与团队成员判定) 2.完成社区发布的两项复杂任务 3.持续完成社区发布的简单任务若干(作者会关注到) 4.持续为社区优化文档或处理issue若干(作者会关注到)\"]},\"1533\":{\"h\":\"项目贡献者待遇\",\"t\":[\"1.捐献红包和群主不定时红包 2.每年还会发放IDEA正版授权,视情况而定\"]},\"1534\":{\"h\":\"提交pr\"},\"1535\":{\"h\":\"步骤一 Fork项目到自己仓库\",\"t\":[\"屏幕截图\"]},\"1536\":{\"h\":\"步骤二 基于dev分支 新建一个此PR功能点的专属分支\"},\"1537\":{\"h\":\"步骤三 使用Git工具 将自己仓库的项目拉去到本地做代码编写\",\"t\":[\"屏幕截图\"]},\"1538\":{\"h\":\"步骤四 使用Idea打开项目 切换到新建的功能分支\",\"t\":[\"屏幕截图\"]},\"1539\":{\"h\":\"步骤五 设置创建类的模板\",\"t\":[\"新创建的类使用这个模板生成注释，使用方式在类上面写上 /c，然后按回车会自动生成\"]},\"1540\":{\"h\":\"步骤六 将编写好的代码 提交到自己的远程仓库\",\"t\":[\"屏幕截图\",\"git提交规范\",\"[init] 初始化 [feat] 增加新功能 [fix] 修复问题/BUG [perf] 优化/性能提升 [refactor] 重构 [revert] 撤销修改 [style] 代码风格相关无影响运行结果的 [update] 其他修改 [upgrade] 升级版本\"]},\"1541\":{\"h\":\"步骤七 创建PR申请(此操作在自己仓库或者要PR的仓库都可以)\",\"t\":[\"屏幕截图\"]},\"1542\":{\"h\":\"步骤八 等待作者评审 按要求更改 直到没有问题后被作者合并\",\"t\":[\"屏幕截图\"]},\"1543\":{\"h\":\"介绍\"},\"1544\":{\"h\":\"1、项目介绍\",\"t\":[\"提示\",\"Dromara Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，数据入库，并行支持扩展\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架支持：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex、Jpa和Easy-Query，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle、PostgreSQL和SQL Server，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"希望一键三连，你的⭐️ Star ⭐️是我持续开发的动力，项目也活的更长\"]},\"1545\":{\"h\":\"2、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top 项目地址：https://gitee.com/min290/hh-vue.git\"]},\"1546\":{\"h\":\"3、应用场景\",\"t\":[\"Dromara Warm-Flow作为一个国产的工作流引擎，其设计简洁轻量但功能全面，适用于多种应用场景，尤其是针对中小型项目。以下是一些典型的应用场景：\",\"企业内部流程管理：用于管理企业的日常业务流程，如请假、报销、采购审批等。\",\"项目管理：在项目管理中，Dromara Warm-Flow可以用来跟踪项目任务的状态，管理项目流程，确保项目按计划进行。\",\"办公自动化：通过Warm-Flow，企业可以实现办公流程的自动化，提高工作效率，减少人为错误。\",\"客户服务流程：用于管理客户服务请求，如客户咨询、投诉处理、售后服务等。\",\"人力资源管理：在人力资源管理中，Warm-Flow可用于员工招聘、培训、绩效评估等流程的管理。\",\"财务和会计流程：管理财务审批流程，如发票审核、预算审批等。\",\"IT服务管理：用于IT服务请求的处理，如IT支持请求、系统变更管理等。\",\"业务流程优化：企业可以利用Dromara Warm-Flow来分析和优化现有业务流程，提高业务效率。\",\"合规性和风险管理：帮助企业在遵守法规和标准的同时，管理风险和合规流程。\",\"跨部门协作：Dromara Warm-Flow支持跨部门的流程协作，帮助不同部门之间更好地协调工作。\"]},\"1547\":{\"h\":\"4、支持数据库类型\",\"t\":[\"目前支持MySQL 、Oracle、PostgreSQL和SQL Server，其他数据库只需要转换表结构，使用Mybatis-Plus、Mybatis-Flex和Easy-Query即可兼容\",\" MySQL\",\" Oracle\",\" PostgreSQL\",\" SQL Server\",\" ......\"]},\"1548\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1549\":{\"h\":\"开源协议\",\"t\":[\"注意\",\"Dromara Warm-Flow采用APACHE LICENSE 2.0开源协议，项目代码、文档均开源免费可商用，遵循开源协议即可\",\"开发完成请务必登记使用项目列表，登记地址\",\"已申请软著，您如果需要源码二开，需要注意以下几点：\",\"请不要删除和修改根目录下的LICENSE文件。\",\"请不要删除和修改Warm-Flow源码头部的版权声明。\",\"本项目代码可免费商业使用，商业使用请保留源码和相关描述文件的项目出处，作者声明等。\",\"分发源码时候，请注明软件出处 https://warm-flow.dromara.org/\",\"不可二次分发开源参与同类竞品，如有想法可联系290631660@qq.com商议合作。\",\"若您的项目无法满足以上几点，需要更多功能代码，获取可找作者定制化开发，290631660@qq.com\"]},\"1550\":{\"h\":\"功能演示\"},\"1551\":{\"h\":\"演示地址\",\"t\":[\"注意\",\"admin/admin123\",\"演示地址：http://www.hhzai.top 项目地址：https://gitee.com/min290/hh-vue.git\"]},\"1552\":{\"h\":\"演示图\"},\"1553\":{\"h\":\"1、新增定义\",\"t\":[\"提示\",\"流程编码和流程版本：确定唯一 审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1554\":{\"h\":\"2、流程设计\"},\"1555\":{\"h\":\"2、1节点设置\",\"t\":[\"提示\",\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1556\":{\"h\":\"2、2跳转线设置\",\"t\":[\"提示\",\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1557\":{\"h\":\"3、开启流程实例\",\"t\":[\"提示\",\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1558\":{\"h\":\"4、提交流程\",\"t\":[\"提示\",\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1559\":{\"h\":\"5、办理流程\",\"t\":[\"提示\",\"如果是互斥网关则会判断是否满足条件\"]},\"1560\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1561\":{\"h\":\"开源集成案例\",\"t\":[\"作者\",\"项目名称\",\"描述\",\"晓华\",\"hh-vue\",\"官方演示项目，基于ruoyi-vue集成，springboot2+vue2\",\"疯狂的狮子Li\",\"RuoYi-Vue-Plus\",\"多租户后台管理系统 重写RuoYi-Vue所有功能 集成 Sa-Token、Mybatis-Plus、Flowable、SpringDoc、Hutool、OSS 定期同步\",\"玲娜贝er\",\"ruoyi-plus-vben5\",\"基于vben最新版本v5 & ant-design-vue 的 RuoYi-Vue-Plus 前端项目\",\"seven\",\"seaflow\",\"seaflow 是一款 开源仿钉钉工作流 平台， 前端使用 vue3+element plus ， 实现 流程设计和审批功能， 后端基于国产工作流Dromara warm-flow 实现流程控制， 大大缩短了学习成本\",\"晓华/Zhen\",\"ruoyi-vue3\",\"基于ruoyi-vue3集成前端\",\"梁小梁/Zhen\",\"Ruoyi-Cloud/RuoYi-Vue3\",\"基于Ruoyi-Cloud集成的跑批系统,spring-cloud(nacos)+vue3\",\"quick\",\"quick-boot\",\"基于 Spring Cloud 2022 、Spring Boot 3、React、AMIS 和 APIJSON 的低代码系统的设计和实现。该系统可以帮助企业快速开发和部署高质量的 Web 应用程序\"]},\"1562\":{\"h\":\"捐赠\",\"t\":[\"感谢所有捐赠者，你们的支持是我最大的动力。这些费用将用于服务器、域名和相关服务的费用，以及warm组织成员和贡献者的红包奖励。\"]},\"1563\":{\"h\":\"捐赠列表\",\"t\":[\"如有遗漏，请联系我。\",\"捐献者\",\"金额/元\",\"留言\",\"时间\",\"E*2\",\"100\",\"感谢您对开源项目的支持\",\"2025-01-09\",\"一拳打爆常大宝\",\"20\",\"感谢您对开源项目的支持\",\"2024-08-08\",\"李*佳\",\"30\",\"感谢您对开源项目的支持\",\"2024-08-02\",\"*佳\",\"30\",\"希望有交流机会\",\"2024-08-01\",\"*子\",\"30\",\"准备试用，致敬\",\"2024-07-16\",\"i*d\",\"1\",\"感谢您对开源项目的支持\",\"2024-07-11\",\"自由飞翔\",\"100\",\"感谢您对开源项目的支持\",\"2024-07-03\",\"文斌\",\"100\",\"Dromara warm-flow项目非常好，希望能发展壮大\",\"2024-06-25\",\"*入\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*梁\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*马\",\"100\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*热\",\"68\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*巴\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*敏\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*剑\",\"1\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"一骑\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"姜杰\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Cola\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Dotor-ww💪\",\"30\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*荒\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*飞鸿\",\"11\",\"感谢您对开源项目的支持\",\"2024-06-25\"]},\"1564\":{\"h\":\"核心接口api\"},\"1565\":{\"h\":\"DefService流程定义\"},\"1566\":{\"h\":\"导入流程输入流\",\"t\":[\"importIs(is)：流程定义的输入流\"]},\"1567\":{\"h\":\"导入流程json字符串\",\"t\":[\"importJson(defStr)：流程定义defJson的json字符串\"]},\"1568\":{\"h\":\"导入流程json对象\",\"t\":[\"importDef(defJson)：流程定义json对象\"]},\"1569\":{\"h\":\"新增流程\",\"t\":[\"saveAndInitNode(definition)：新增流程定义，并初始化流程节点和流程跳转数据\"]},\"1570\":{\"h\":\"只新增流程定义表数据\",\"t\":[\"checkAndSave(definition)：流程定义对象\"]},\"1571\":{\"h\":\"保存流程节点和跳转\",\"t\":[\"saveDef(defJson)：流程定义json对象\"]},\"1572\":{\"h\":\"导出流程定义json字符串\",\"t\":[\"exportJson(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)的json字符串\"]},\"1573\":{\"h\":\"获取流程定义全部数据对象\",\"t\":[\"getAllDataDefinition(id)： 获取流程定义全部数据(包含节点和跳转)\"]},\"1574\":{\"h\":\"查询流程设计所需的数据\",\"t\":[\"queryDesign(id)： 查询流程设计所需的数据，比如流程图渲染\"]},\"1575\":{\"h\":\"更新流程定义发布状态\",\"t\":[\"updatePublishStatus(defIds, publishStatus)：\",\"defIds: 流程定义id列表 [必传]\",\"publishStatus: 流程定义发布状态 [必传]\"]},\"1576\":{\"h\":\"删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"1577\":{\"h\":\"发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"1578\":{\"h\":\"取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"1579\":{\"h\":\"复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"1580\":{\"h\":\"激活流程\",\"t\":[\"active(id)： 激活流程\"]},\"1581\":{\"h\":\"挂起流程\",\"t\":[\"unActive(id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"1582\":{\"h\":\"ChartService流程图绘制接口\"},\"1583\":{\"h\":\"流程图(渲染状态)\",\"t\":[\"chartIns(instanceId)：根据流程实例ID,获取流程图的图片流(渲染状态)\",\"instanceId: 流程实例id [必传]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"1584\":{\"h\":\"流程图(不渲染状态)\",\"t\":[\"chartDef(definitionId)：根据流程定义ID,获取流程图的图片流(不渲染状态), 返回base64编码的图片流字符串\"]},\"1585\":{\"h\":\"流程图(渲染状态)-可扩展\",\"t\":[\"chartIns(instanceId)：根据流程实例ID,获取流程图的图片流(渲染状态)\",\"instanceId: 流程实例id [必传]\",\"consumer: 可获取流程图对象，可用于修改流程图样式或者新增内容 [按需传输]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"1586\":{\"h\":\"流程图(不渲染状态)-可扩展\",\"t\":[\"chartDef(definitionId)：根据流程实例ID,获取流程图的图片流(不渲染状态), 返回base64编码的图片流字符串\",\"instanceId: 流程实例id [必传]\",\"consumer: 可获取流程图对象，可用于修改流程图样式或者新增内容 [按需传输]\"]},\"1587\":{\"h\":\"流程图(渲染状态)-自行渲染\",\"t\":[\"chartInsObj(instanceId)：根据流程实例ID,获取流程图对象\",\"instanceId: 流程实例id [必传]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"1588\":{\"h\":\"流程图(不渲染状态)-自行渲染\",\"t\":[\"chartDefObj(definitionId)：根据流程定义ID,获取流程图对象\"]},\"1589\":{\"h\":\"InsService流程实例\"},\"1590\":{\"h\":\"开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"1591\":{\"h\":\"流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1592\":{\"h\":\"终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1593\":{\"h\":\"删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"1594\":{\"h\":\"激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"1595\":{\"h\":\"挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"1596\":{\"h\":\"查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"1597\":{\"h\":\"TaskService待办任务\"},\"1598\":{\"h\":\"流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1599\":{\"h\":\"终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1600\":{\"h\":\"转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1601\":{\"h\":\"委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1602\":{\"h\":\"加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1603\":{\"h\":\"减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"1604\":{\"h\":\"修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"1605\":{\"h\":\"NodeService流程节点\"},\"1606\":{\"h\":\"获取已发布流程节点\",\"t\":[\"getPublishByFlowCode(flowCode)：根据流程编码获取已发布流程节点集合\"]},\"1607\":{\"h\":\"获取前置节点\",\"t\":[\"previousNodeList(nodeId)：根据节点id获取下所有的前置节点集合\",\"nodeId: 节点id [必传]\"]},\"1608\":{\"h\":\"获取前置节点\",\"t\":[\"previousNodeList(definitionId, nowNodeCode)：根据流程定义id和当前节点code获取所有的前置节点集合\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\"]},\"1609\":{\"h\":\"获取后置节点\",\"t\":[\"suffixNodeList(nodeId)：根据节点id获取下所有的后置节点集合\",\"nodeId: 节点id [必传]\"]},\"1610\":{\"h\":\"获取后置节点\",\"t\":[\"suffixNodeList(definitionId, nowNodeCode)：根据流程定义id和当前节点code获取所有的后置节点集合\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\"]},\"1611\":{\"h\":\"获取后置置节点-含过滤\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"1612\":{\"h\":\"HisTaskService历史记录\"},\"1613\":{\"h\":\"根据任务id和协作类型查询\",\"t\":[\"listByTaskIdAndCooperateTypes(taskId, Integer... cooperateTypes)：根据任务id和协作类型查询\",\"taskId: taskId [必传]\",\"cooperateTypes: 协作类型集合 [按需传输]\"]},\"1614\":{\"h\":\"根据实例Id和节点编码查询\",\"t\":[\"getByInsAndNodeCodes(instanceId, nodeCodes)：根据实例Id和节点编码查询\",\"instanceId: 实例Id [必传]\",\"nodeCodes: 节点编码 [按需传输]\"]},\"1615\":{\"h\":\"根据流程实例Ids删除\",\"t\":[\"deleteByInsIds(instanceIds)：根据流程实例Ids删除\"]},\"1616\":{\"h\":\"公共api接口\"},\"1617\":{\"h\":\"根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"1618\":{\"h\":\"根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"1619\":{\"h\":\"分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"1620\":{\"h\":\"查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"1621\":{\"h\":\"查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"1622\":{\"h\":\"查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"1623\":{\"h\":\"获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"1624\":{\"h\":\"判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"1625\":{\"h\":\"新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"1626\":{\"h\":\"根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"1627\":{\"h\":\"根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"1628\":{\"h\":\"根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"1629\":{\"h\":\"根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"1630\":{\"h\":\"批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"1631\":{\"h\":\"批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"1632\":{\"h\":\"批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"1633\":{\"h\":\"id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"1634\":{\"h\":\"创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"1635\":{\"h\":\"更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"1636\":{\"h\":\"设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"1637\":{\"h\":\"设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"1638\":{\"h\":\"用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"1639\":{\"h\":\"流程协作(票签等)\",\"t\":[\"提示\",\"审批过程中可能存在，一人或者多人审批的情况，不同情况对应不同协作类型（会签、票签和或签）\"]},\"1640\":{\"h\":\"1、流程协作规则\",\"t\":[\"或签：一名办理人审批通过，审批节点才会通过 票签：满足设定的通过率，部分审批人审批通过，审批节点才会通过 会签：所有审批人审批通过，审批节点才会通过\"]},\"1641\":{\"h\":\"2、使用演示\"},\"1642\":{\"h\":\"2.1、或签\"},\"1643\":{\"h\":\"2.2、票签\"},\"1644\":{\"h\":\"2.3、会签\"},\"1645\":{\"h\":\"条件表达式\",\"t\":[\"提示\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"1646\":{\"h\":\"1、内置表达式类型\",\"t\":[\"1、默认: default@@${flag == 5 && flag > 4}\",\"2、SpEL: spel@@#{@user.eval(#flag)}\",\"3、大于: gt@@flag|4\",\"4、大于等于: ge@@flag|4\",\"5、等于: eq@@flag|4\",\"6、不等于： ne@@flag|4\",\"7、小于: lt@@flag|4\",\"8、小于等于: le@@flag|4\",\"9、包含: like@@flag|4\",\"10、不包含: notNike@@flag|4\",\"11、自定义表达式\"]},\"1647\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：xxx@@yyy|zzz，xxx为表达式类型，其中yyy为变量名，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）:spel@@#{@user.eval(#flag)}表达式，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1648\":{\"h\":\"配置文件\"},\"1649\":{\"h\":\"数据填充器\",\"t\":[\"提示\",\"如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"1650\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"1651\":{\"h\":\"2、注入bean\"},\"1652\":{\"h\":\"设计器集成\",\"t\":[\"提示\",\"为了方便业务系统快速引入设计器，不需要搬运并且适配等工作\",\"可以按照本文中介绍的，使用设计器，并快速接入业务系统\",\"设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"1653\":{\"h\":\"1. 引入依赖\"},\"1654\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/**\"]},\"1655\":{\"h\":\"3. 前端引入设计器\",\"t\":[\"提示\",\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1656\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1657\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1658\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1659\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1660\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"1661\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"1662\":{\"h\":\"办理人变更\",\"t\":[\"提示\",\"审批业务中经常会出现办理人中途变更的情况，比如增加办理人，任务转办给别人等。\"]},\"1663\":{\"h\":\"1、变更支持的类型\",\"t\":[\"转办：任务转给其他人办理\",\"委派：求助其他人审批，然后参照他的意见决定是否审批通过\",\"加签：办理中途，希望其他人一起参与办理\",\"减签：办理中途，希望某些人不参与办理\"]},\"1664\":{\"h\":\"2、接口描述\",\"t\":[\"接口描述地址\"]},\"1665\":{\"h\":\"3、代码示例\"},\"1666\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"求助其他人审批，然后参照他的意见决定是否审批通过\",\"4\",\"转办\",\"任务转给其他人办理\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的发起人，以便进行修改或重新处理\",\"7\",\"撤销\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"办理中途，希望其他人一起参与办理\",\"11\",\"减签\",\"办理中途，希望某些人不参与办理\",\"12\",\"会签\",\"所有审批人审批通过，审批节点才会通过\",\"13\",\"票签\",\"满足设定的通过率，部分审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"一名办理人审批通过，审批节点才会通过\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"1667\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1668\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1669\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1670\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1671\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1672\":{\"h\":\"6、流程图元数据流程状态规则：\",\"t\":[\"目标节点，待办\",\"开启流程: \",\"初始化流程定义json\",\"其他的：未办\",\"通过: \",\"途径节点和跳转线：已办，\",\"退回: \",\"途径节点和跳转线：未办，\",\"目标节点之后的所有结点和跳转线：未办\",\"目标节点是结束节点: \",\"目标节点和起始节点：已办\",\"所有待办：未办\",\"如果办理过程中存在并行网关，则需要判断是否需要生成新任务 \",\"获取目标节点最近的并行网关集合\",\"根据目标节点递归往上找最近的并行网关，或者直到不是网关为止\",\"查询每个并行网关的所有的前置路线，记录总数量和已办理数量，如果已办数量=总数量-1，说明可以生成新任务\",\"如果前置节点是非并行网关，总数量+1，已办数量按实际情况记录\",\"如果前置节点是并行网关，递归往上找，直至找到非并行网关，记录总数量和已办数量。\"]},\"1673\":{\"h\":\"快速开始\",\"t\":[\"提示\",\"在开始之前，我们假定您已经:\",\"熟悉 Java 环境配置及其开发\",\"熟悉 关系型 数据库，比如 MySQL\",\"熟悉 Spring Boot或者Solon 及相关框架\",\"熟悉 Java 构建工具，比如 Maven\"]},\"1674\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"1675\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"1676\":{\"h\":\"3、maven依赖\"},\"1677\":{\"h\":\"3.1、从首页获取最新版本\"},\"1678\":{\"h\":\"3.2、mybatis\"},\"1679\":{\"h\":\"3.3、mybatis-plus\"},\"1680\":{\"h\":\"3.4、jpa\",\"t\":[\"https://gitee.com/warm_4/warm-flow-jpa.git\"]},\"1681\":{\"h\":\"3.5、mybatis-flex\",\"t\":[\"https://gitee.com/rigangxia/warm-flow-mybatis-flex.git\"]},\"1682\":{\"h\":\"3.6、easy-query\",\"t\":[\"https://gitee.com/link2fun/warm-flow-easy-query.git\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1683\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1684\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1685\":{\"h\":\"6、初学者推荐学习路线\"},\"1686\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1687\":{\"h\":\"6.2、推荐学习视频\"},\"1688\":{\"h\":\"表结构\",\"t\":[\"表描述\",\"流程定义的相关的三张表\",\"1、集团军要对某个区域进行长期的军事演练（流程定义表）\",\"2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表）\",\"3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表）\",\"流程实例三张表\",\"4、今天要进行一次军事演练（流程实例表）\",\"5、首先，按照任务计划，解放军执行第一个任务（待办任务表）\",\"6、后续会根据不同情况，进行不同的军事演练任务（待办任务表）\",\"7、演练要记录过程 （历史任务表）\",\"8、任务的需要分配执行人 (流程用户表)\",\"9、最终军事演练完成，流程完成\"]},\"1689\":{\"h\":\"1.1 表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1690\":{\"h\":\"1.2 表字段明细\"},\"1691\":{\"h\":\"1.2.1\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1692\":{\"h\":\"1.2.2\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1693\":{\"h\":\"1.2.3\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1694\":{\"h\":\"1.2.4\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1695\":{\"h\":\"1.2.5\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1696\":{\"h\":\"1.2.6\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1697\":{\"h\":\"1.2.7\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1698\":{\"h\":\"流程变量\",\"t\":[\"提示\",\"流程变量，map类型，用于流程执行中的数据转递\",\"在执行流程时，可以设置流程变量\",\"在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1699\":{\"h\":\"联系我\"},\"1700\":{\"h\":\"1、沟通群和公众号\",\"t\":[\"沟通群\",\"公众号\",\"加入沟通群和公众号的好处：\",\"第一时间收到框架更新通知。\",\"第一时间收到框架 bug 通知。\",\"第一时间收到新增开源案例通知。\",\"第一时间收到最新技术文章通知。\"]},\"1701\":{\"h\":\"2、提交issue\",\"t\":[\"issue描述清楚问题，方便我们快速定位问题\",\"https://gitee.com/dromara/warm-flow/issues\"]},\"1702\":{\"h\":\"3、内部群：\",\"t\":[\"为感谢对 Warm-Flow 生态做出贡献的同学，我们特创建了内部群：【Warm-Flow 生态共享与合作】\",\"加入群聊条件，以下满足其一即可：\",\"写过5篇以上有关 Warm-Flow 的原创博客。\",\"有开源项目集成了 Warm-Flow。\",\"有为 Warm-Flow 录制过教程视频，发表在公共平台（总时长>30分钟，且播放量>2000）。\",\"其它一些您认为有对 Warm-Flow 生态做出贡献的行为，可以直接联系我们，经内部投票评审通过即可加入（不要害羞，大胆联系我们哦 😊 ）\",\"加入群聊的好处：\",\"更及时的获知 Warm-Flow 下一步更新计划。\",\"在 Warm-Flow 遇到的任何疑问都可以当面与作者沟通，可协助解决问题。\",\"可提出未来版本更新需求，将具有更高的优先级进行评审与开发。\",\"加群申请微信号：warm-houhou\",\"注：此为专属内部群聊，不满足上述条件的同学请勿过分申请打扰，谢谢合作。满足条件者可以在申请加入时备注上您的项目名称 （例如：xx开源项目作者集成了 Warm-Flow，申请加入群聊），如果字数太多无法写完，也可在开源交流群里@管理员协助交流。\"]},\"1703\":{\"h\":\"新闻\",\"t\":[\" {{ getTypeValue(item.type) }} \",\"{{ item.title }}\",\"{{ item.pushTime }}\"]},\"1704\":{\"h\":\"有偿服务\"},\"1705\":{\"h\":\"VIP群\",\"t\":[\"项目代码、文档，均开源免费可商用，遵循开源协议，不代表着项目收费\",\"VIP群由四名后端与一名前端工程师组成，提供问题答疑服务和技术分享等服务，欢迎加群交流\",\"支付后加微信号【warm-houhou】，邀请进入vip群\",\"问问题等于做习题 听作者解答问题等于习题讲解 一个人接触的问题有限 一群人接触的问题无限 早进群早接触更多的问题 承诺: 看见必回复 让你感受作者有多话痨\",\"加群扫码: 99元\"]},\"1706\":{\"h\":\"私人服务\",\"t\":[\"作者提供作者私人服务，关于Dromara Warm-Flow工作流私人培训，如流程引擎集成与使用，技术咨询等，包括但不限于\"]},\"1707\":{\"h\":\"特别赞助\",\"t\":[\"如需Dromara Warm-Flow官网挂广告，请加微信号【warm-houhou】联系我\"]},\"1708\":{\"h\":\"团队\",\"t\":[\"avatar\",\"name\",\"email\",\"role\",\"contributions\",\"{{ item.name }}\",\"{{ item.email }}\",\"{{ item.role }}\",\"{{ item.contributions }}\"]},\"1709\":{\"h\":\"常见问题\"},\"1710\":{\"h\":\"1、id精度丢失\",\"t\":[\"方案1：处理长度过长的Long类型\",\"只处理长度过长的Long类型，前端页面就不会丢失精度了 (感谢【Colin】提供解决方案)\",\"创建一个BigNumberSerializer（用来处理超过JS数据范围的Long类型）\",\"👇 代码详情 👇\",\"/** * 超出 JS 最大最小值 处理 */ @JacksonStdImpl public class BigNumberSerializer extends NumberSerializer { /** * 根据 JS Number.MAX_SAFE_INTEGER 与 Number.MIN_SAFE_INTEGER 得来 */ private static final long MAX_SAFE_INTEGER = 9007199254740991L; private static final long MIN_SAFE_INTEGER = -9007199254740991L; /** * 提供实例 */ public static final BigNumberSerializer INSTANCE = new BigNumberSerializer(Number.class); public BigNumberSerializer(Class<? extends Number> rawType) { super(rawType); } @Override public void serialize(Number value, JsonGenerator gen, SerializerProvider provider) throws IOException { // 超出范围 序列化位字符串 if (value.longValue() > MIN_SAFE_INTEGER && value.longValue() < MAX_SAFE_INTEGER) { super.serialize(value, gen, provider); } else { gen.writeString(value.toString()); } } }\",\"添加JacksonConfig配置全局序列化（针对所有属性），一下两种方式任选其一\",\"👇 代码详情 👇\",\"@Configuration public class JacksonConfig { // 方式一 @Bean public Jackson2ObjectMapperBuilderCustomizer customizer() { return builder -> { ... 其他配置.... JavaTimeModule javaTimeModule = new JavaTimeModule(); //Long,BigInteger 转为 String 防止 js 丢失精度 javaTimeModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); builder.modules(javaTimeModule); }; } // 方式二 @Bean public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() { final Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder(); final ObjectMapper objectMapper = builder.build(); ... 其他配置.... SimpleModule simpleModule = new SimpleModule(); // Long,BigInteger 转为 String 防止 js 丢失精度 simpleModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); objectMapper.registerModule(simpleModule); return new MappingJackson2HttpMessageConverter(objectMapper); } }\",\"方案2：序列化所有long类型\",\"如何处理Long类型精度丢失问题 👇点击👇\",\"方案3：通过yml配置\",\"通过设置id生成器类型，修改id生成方式\",\"# warm-flow工作流配置 warm-flow: # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19\",\"方案4：自定义id生成策略\",\"参照如下文章，继承填充器接口，修改id生成方式\",\"Dromara Warm-Flow工作流引擎数据库主键自增策略实现👇\"]},\"1711\":{\"h\":\"2、流程图片中文乱码\",\"t\":[\"linux环境：安装中文字体\",\"生成的流程图中文乱码或者报错InternalError; java.lang.reflect,InvocationTargetException\",\"由于服务器上缺少中文字体，通过检查fc-list :lang=zh是否包含中文字符集（以下是存在的示例）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ zhFonts]# fc-list :lang=zh /usr/share/fonts/zhFonts/SIMSUN.TTC: 新宋体,NSimSun:style=常规,Regular /usr/share/fonts/zhFonts/SIMSUN.TTC: 宋体,SimSun:style=常规,Regular\",\"zhFonts.zip将文件解压至/usr/share/fonts目录下，如果还不行，添加到jre的lib/fonts目录（感谢【我们好像在哪儿见过 】提供的方案）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ fonts]# ll 总用量 8 drwxr-xr-x 2 root root 4096 5月 17 00:20 dejavu drwxr-xr-x 2 root root 4096 5月 17 11:40 zhFonts\",\"重启服务\",\"docker环境：安装中文字体\",\"以ruoyi-vue-plus-4.x中dockerfile为例，添加中文字体即可 （感谢【格调@main】提供的方案）\"]},\"1712\":{\"h\":\"3、initFlow()未加载\",\"t\":[\"提示\",\"spring开启懒加载后，导致FlowAutoConfig.initFlow()未加载。（由社区【星 Q】提供）\",\"删除\\\"lazy-initialization: true\\\",可解决问题，以下是错误示例\",\"spring: main: allow-bean-definition-overriding: true lazy-initialization: true web-application-type: servlet\"]},\"1713\":{\"h\":\"4、监听器等对象获取不到\",\"t\":[\"提示\",\"热部署插件jrebel或者devtools导致问题，检查是否使用热部署插件，比如spring.devtools，可以把插件关了，或者加上排除配置spring-devtools.properties\",\"restart.include.flow=/org.dromara.warm.*.jar\"]},\"1714\":{\"h\":\"5、类型转换异常\",\"t\":[\"同上\"]},\"1715\":{\"h\":\"6、hh-vue切换mybaits-plus\",\"t\":[\"提示\",\"1、根pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"2、ruoyi-flow的pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"3、ruoyi-common增加依赖\",\" <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.5.1</version> </dependency>\",\"4、MyBatisConfig.java注释掉，新增MybatisPlusConfig\",\"👇 代码详情 👇\",\"package com.ruoyi.framework.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; /** * Mybatis Plus 配置 * * @author ruoyi */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 分页插件 interceptor.addInnerInterceptor(paginationInnerInterceptor()); // 乐观锁插件 interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor()); // 阻断插件 interceptor.addInnerInterceptor(blockAttackInnerInterceptor()); return interceptor; } /** * 分页插件，自动识别数据库类型 https://baomidou.com/guide/interceptor-pagination.html */ public PaginationInnerInterceptor paginationInnerInterceptor() { PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); // 设置数据库类型为mysql paginationInnerInterceptor.setDbType(DbType.MYSQL); // 设置最大单页限制数量，默认 500 条，-1 不受限制 paginationInnerInterceptor.setMaxLimit(-1L); return paginationInnerInterceptor; } /** * 乐观锁插件 https://baomidou.com/guide/interceptor-optimistic-locker.html */ public OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor() { return new OptimisticLockerInnerInterceptor(); } /** * 如果是对全表的删除或更新操作，就会终止该操作 https://baomidou.com/guide/interceptor-block-attack.html */ public BlockAttackInnerInterceptor blockAttackInnerInterceptor() { return new BlockAttackInnerInterceptor(); } }\",\"5、ruoyi-admin的application.yml中配置mybatis改为mybatis-plus\"]},\"1716\":{\"h\":\"7、导入依赖包失败\",\"t\":[\"可尝试切换maven版本 （感谢【一拳打爆常大宝】）\",\"如maven3.9.6切换为低版本3.8.2\"]},\"1717\":{\"h\":\"8、 StackOverflowError 错误\",\"t\":[\"提示\",\"查看跳转线退回的，是否设置为退回类型，后续有时间再做校验\"]},\"1718\":{\"h\":\"9、 后端接收流程xml部分丢失\",\"t\":[\"提示\",\"一般是xxs过滤导致，排查下接口就行或者对象就行\"]},\"1719\":{\"h\":\"更新日志\"},\"1720\":{\"h\":\"未来发布计划\"},\"1721\":{\"h\":\"vx.x.x\",\"t\":[\"事件\",\"流程图合法性检验\",\"把不能退回到开始节点去掉，会有什么影响\",\"子流程\",\"会签和票签通过率策略，支持扩展\",\"重启流程\",\"包容网关\",\"接入仿钉钉设计器\",\"取回 @xiarigang\",\"开启流程可以不默认执行到中间节点 @晓华\",\"动态表单支持 @vanlin\"]},\"1722\":{\"h\":\"开发中计划\"},\"1723\":{\"h\":\"v1.6.7 2025-02-24\",\"t\":[\"升级指南\",\"[feat] 流程图扩展增加接口，方便新增文字\",\"[feat] 设计器新增tabs扩展，比如按钮权限等\"]},\"1724\":{\"h\":\"更新日志\"},\"1725\":{\"h\":\"v1.6.6 2025-01-23\",\"t\":[\"升级指南\",\"[feat] 导入、导出和保存等新增json格式支持DefService.importIs/importJson/importDef/saveDef/exportJson\",\"[feat] 新增获取后置节点方法NodeService.suffixNodeList\",\"[feat] 新增网关直连和测试案例\",\"[feat] 流程图右上角新增完成状态颜色示例\",\"[feat] 新增流程图查询接口和扩展接口ChartService\",\"[feat] 新增历史表数据同步为新的流程图元数据\",\"[feat] 新增sqlserver全量脚本\",\"[update] 导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json的api\",\"[update] FlowFactory修改为FlowEngine\",\"[update] 历史表目标节点编码和目标节点名称字段长度改为200\",\"[update] 通过或者退回到并行网关，开启多个任务，改为只产生一条历史记录\",\"[update] 退回或者任务完成，其他需要被删除的任务不需要记录历史表，因为已经存在退回记录，不需要重复记录\",\"[update] 转办、委派、加签和减签，改为只产生一条历史记录\",\"[update] 批量保存改为默认1000条一批\",\"[update] 流程设计保存，增加遮罩层\",\"[refactor] 流程图绘制调整重构\",\"[refactor] 移除mybatis-flex,easy-query和jpa的扩展包，独立成项目，由专门人维护\",\"[refactor] 实体类和dao获取改为通过反射，解耦orm-core包\",\"[refactor] 重构获取前置节点方法NodeService.previousNodeList\",\"[fix] 修复退回时存在其他代办任务，未删除的问题\",\"[fix] 修复流程退回目标节点前存在并行网关，导致不生成代办任务的问题\",\"[fix] 修复条件表达式中如果有|或导致错误分隔的问题\",\"[fix] 修复绘制流程图，错误判断同一条录像的key\",\"[fix] 修复结束节点还执行创建监听器的问题\",\"[remove] 移除DefService获取流程图api，由ChartService中chartIns和chartDef代替\",\"[remove] 删除前端log打印\",\"[remove] 移除oracle和postgresql升级脚本，后续只提供mysql升级脚本，所有的全量脚本，其他升级脚本的自行转换\"]},\"1726\":{\"h\":\"v1.3.8 2025-01-07\",\"t\":[\"[fix] 修复最新设计器代码未复制到到jar包\"]},\"1727\":{\"h\":\"v1.3.7 2024-12-31\",\"t\":[\"升级指南\",\"[fix] 修复设计器驳回指定节点显示异常问题\",\"[fix] 流程实例查询SQL BUG\"]},\"1728\":{\"h\":\"v1.3.6 2024-12-23\",\"t\":[\"[fix] 修复设计器驳回指定节点显示异常问题\"]},\"1729\":{\"h\":\"v1.3.5 2024-12-20\",\"t\":[\"升级指南\",\"[feat] 新增获取所有前置节点接口\",\"[feat] 设计器新增设置驳回指定节点\",\"[feat] 条件表达式新增默认策略default|${flag == 5 && flag > 4}\",\"[feat] 新增mybatis-plus关闭逻辑删除案例\",\"[update] 退回不校验是否办理过\",\"[update] 复制流程版本号支持自动递增\",\"[update] 结点命名全部改成节点\",\"[refactor] 导入流程方法拆成两个方法，读取is流和导入实体类，insertFlow改为公共方法\",\"[refactor] 条件表达式原本太繁琐，进行精简, @@eq@@|flag@@eq@5 --> eq|flag|5\",\"[refactor] 任意跳转，改成退回选择目标节点，票签必填，修改字段名称\"]},\"1730\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"升级指南\",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器优化配置（类中配置增加类型接口，或者优化页面配置）\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[update] 修改项目的groupId\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"1731\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"升级指南\",\"[feat] 新增支持接入业务系统token，支持多token\",\"[update] 办理人选择tabs切换\",\"[update] 没有左侧树状选择数据时，左侧隐藏\",\"[fix] 统一修复分页bug\",\"[fix] 修复删除流程实例信息，未删除办理人信息 @xiarigang\",\"[fix] 修改【Bug】 会签节点委派 @vanlin\",\"[fix] 统一修复分页bug\"]},\"1732\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"升级指南\",\"[feat] 新增boot3+java17支持\",\"[feat] 流程设计器新增快捷键支持\",\"[feat] 新增流程状态枚举（终止、作废、撤销和取回）\",\"[feat] 新增转办、委派、加签和减签方法，老方法标识即将删除，接入监听器\",\"[update] 终止流程状态改为更合理的终止状态\",\"[update] 流程复制克隆改set/get赋值\",\"[refactor] 重构skip等方法通用校验\",\"[perf] 流程图清晰度调整\",\"[fix] 流程图查询异常处理\",\"[fix] 修复历史记录表，创建时间和更新时间一样的问题\",\"[remove] FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\"]},\"1733\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"[feat] 设计器独立 @zhen\",\"[feat] 使用jar引入方式引入设计器\",\"[feat] 新增办理人变量表达式流程案例\",\"[feat] 新增方法，获取流程变量的map类型\",\"[update] 节点线条保存关联名称\",\"[fix] 修复mybatis扩展包中，flowStatus变量书写错误的问题\",\"[fix] 更新时间有值时，取更新时间，不是创建时间\",\"[fix] 修复mybatis-plus扩展包，配置了其他id策略不生效的问题\"]},\"1734\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"升级指南\",\"[feat] json库支持snack3、jackson、fastjson和gson，并且支持扩展\",\"[feat] 增加办理人变量表达式，支持${xxx}替换和spel，并支持扩展\",\"[feat] ListenerVariable监听器变量新增FlowParams字段，方便开始监听器全局传递参数\",\"[feat] 终止新增对开始和完成监听器的支持\",\"[update] springboot项目的条件表达式默认支持spel\",\"[update] 历史记录改为单条保存，删除重复代码\",\"[update] 修改FlowUserDao的bean名称\",\"[update] 中间节点拆分为或签，会签，票签\",\"[fix] 修复历史记录创建时间相等，导致流程图渲染异常\",\"[fix]修复Mybatis逻辑删除变成真实删除的缺陷 @xiarigang\",\"[refactor] 重构id生成器，支持orm默认策略，删除数据填充默认实现类，改为匿名类\"]},\"1735\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"[update] 历史任务表流程状态支持外部传入\",\"[update] 修改办理人接口，当未设置办理人时，不做权限校验\",\"[update] ModifyHandler增加链式调用\",\"[fix] 修复流程监听器导出失败的问题\"]},\"1736\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"升级指南\",\"[feat] 增加获取下个节点集合api @xiarigang\",\"[feat] 流程监听器 @xiaoxiaoliu889\",\"[feat] id内存策略新增14、15位雪花算法支持\",\"[feat] 流程激活和挂起案例 @xiaoxiaoliu889\",\"[feat] 增加基于流程定义Id获取流程图 @xiaoxiaoliu889\",\"[update] 流程状态改成字符串类型 @xiarigang\",\"[update] 测试模块拆分独立仓库\",\"[update] modes-sb删除加载配置文件，改为有上层jar加载\",\"[update] flex solon版本yml弄错了，config调整\",\"[refactor] 流程版本号生成逻辑重构 @xiaoxiaoliu889\",\"[fix] 修复deleteByTaskIds 中的根据无法正确删除user数据\",\"[fix] 修复 jpa solon注解问题 @vanlin\",\"[fix] 修复 并行网关三个任务分支的时候，错误结束流程的问题\"]},\"1737\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"升级指南\",\"[feat] 激活和挂起 @xiaoxiaoliu889\",\"[feat] 不同节点也支持配置审批表单路径 @vanlin\",\"[feat] 支持接收外部流程状态，支持流程状态扩展 @vanlin\",\"[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式\",\"[feat] 新增分派监听器，支持代办任务中办理人等动态修改 @liangli\",\"[feat] 新增Easy-Query框架支持 @link2fun\",\"[feat] 新增Mybatis-Flex的solon扩展包 @xiarigang\",\"[feat] 新增Jpa的solon扩展包 @vanlin\",\"[feat] 历史表新增跳转类型，记录跳转类型 @vanlin\",\"[feat] 增加组件加载，yml控制开关 @疯狂的狮子Li\",\"[update] 之前强依赖流程状态的通过的，改为跳转类型，历史数据考虑如何处理 @vanlin\",\"[update] 之前所有保存流程状态地方，全部提供可接受外部传入 @vanlin\",\"[update] 流程开启，校验节点是否发布，提示语增加流程编码\",\"[update] 删除校验是否任意跳转\",\"[update] 修改扩展字段ext注释，删除FlowConfigUtil多余的代码\",\"[update] SqlSessionFactory改为构造函数引入\",\"[update] 替换异常类，UtilException高版本不兼容\",\"[update] from_custom改为form_custom，from_path改为form_path\",\"[remove] 移除节点前置执行权限处理器\",\"[remove] 删除cooperateAutoPass方法\",\"[update] 代办改为待办\",\"[refactor] 重构测试模块，完善mybatis-plus多租户和逻辑删除使用方式\",\"[refactor] 重构solon和插件模块\",\"[fix] 修复加签批量提交报错\",\"[fix] 修复TaskServiceImpl#handleDepute方法中删除受托人传参数错误\",\"[fix] 修复 JPA flowUserDao bug @vanlin\",\"[fix] 流程第三个节点为网关时无法渲染颜色\",\"[fix] 修复查看流程图模糊的问题 @erfeijiadao\",\"[fix] 修復开始节点直连网关，流程图渲染有问题\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 修复流程定义和流程实例相同，处于非结束节点，流程实例不能存在相同的业务id\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 删除不必要的··符号，修复postgresql与mysql关键词符号问题。\",\"[fix] 修复流程已完成，流程图结束节点显示为黑色\",\"[fix] 修复已办任务查询审批想起无效问题\",\"[fix] 设置开始节点 skip_type = PASS\",\"[fix] 为SpringUtil指定bean name,解决 LocalContainerEntityManagerFactoryBean 依赖问题\",\"[chore] 升级dom4j为安全版本2.1.3\"]},\"1738\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"[fix] 修复更新拼上了多余的条件\",\"[fix] 修复保存流程xml报错问题\"]},\"1739\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"升级指南\",\"[feat] 新增mybatis-flex扩展包 @xiarigang\",\"[feat] 新增抄送演示案例 @adru*\",\"[feat] 历史记录表新增ext扩展字段，方便保存历史过程数据 @adru*\",\"[update] 保存下一个节点办理人时，不校验是否有审批人\",\"[update] 调整扩展包配置，新增测试模块\",\"[update] 票签,会签，将待办任务的创建时间赋予历史任务开始时间 @liutao\",\"[update] 调整mybatis-plus多租户和软件删除处理\",\"[update] 修改任务历史表时间定义，任务审批通过，将待办任务的创建时间赋予历史任务开始时间 @liutao*\",\"[update] 修正pg的sql文件名，新增1.2.1增量sql @liutao\",\"[update] 会签票签，开始时间记录代表任务的创建时间\",\"[remove] 删除监听器自定义参数,修改扩展字段名称\",\"[fix] 监听器问题修复 @liangli\",\"[fix] solon插件包增加userMapper.xml加载\",\"[fix] 修复填充器不接收外部设置的时间\",\"[fix] 修复userMapper.xml中updateLogic的某个负值错误\"]},\"1740\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"升级指南\",\"待办表解偶用户，新增用户表（查询方式需要改动）\",\"会签，票签\",\"加减签\",\"转办完善\",\"jpa扩展\",\"oracle适配\",\"pg适配\"]},\"1741\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"升级指南\",\"orm支持mybatis-plus扩展\",\"多租户字段隔离提供全局配置，自动获取\",\"增加软删除可以配置化\",\"新增三个测试模块\",\"修复设置默认填充器时候，判空错误\"]},\"1742\":{\"h\":\"v1.1.7 2024-04-27\",\"t\":[\"启动流程时，支持第二个节点为网关节点的情况\",\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",\"修复终止流程bug\"]},\"1743\":{\"h\":\"v1.1.6 2024-04-23\",\"t\":[\"支持转办功能\",\"任务自动流转到创建人\",\"考虑流程终止功能\",\"修复流程流转异常\",\"实体类支持序列化\",\"修复java17以上@Resource包路径变更的问题\"]},\"1744\":{\"h\":\"v1.1.5 2024-04-17\",\"t\":[\"支持自定义填充\",\"新增配置文件，部分功能可配置\",\"重构代码，insService.skip标识即将删除，改用taskService.skip\",\"引入日志门面\",\"修复已经设置后续节点动态权限后，办理时未生效问题；\",\"枚举扩展getByKey方法 @Holly_Git\",\"调整实例类结构，方便链式写法\",\"修复并行网关后面没有中间节点\",\"修复开始任务记录待办，为保存流程状态\",\"新增链式查询排序提供id排序\",\"新增历史任务记录结束节点\",\"新增赋值流程记录创建更新时间\",\"优化表实体类链式赋值\",\"待办已办查询标记为即将删除, 已挪到业务系统中\"]},\"1745\":{\"h\":\"v1.1.4 2024-04-07\",\"t\":[\"修复监听器部分判空bug 感谢@Holly_Git\",\"新增创建任务监听器\",\"修改flow_node监听类型和监听路径字段长度\",\"新增监听器生命周期概念，完善文档\",\"重构流程开启流程和流程办理代码\",\"开始节点也能记录到历史任务记录中\"]},\"1746\":{\"h\":\"v1.1.3 2024-04-02\",\"t\":[\"新增权限监听器，办理中动态设置权限 感谢@Holly\"]},\"1747\":{\"h\":\"v1.1.2 2024-03-27\",\"t\":[\"流程定义新增复制按钮\",\"补齐sql脚本，完善文档\",\"跳转条件获取方式变更为流程变量 感谢@Holly\",\"监听器变量新增返回节点信息 感谢@Holly\",\"新增根据流程定义和当前节点code获取下一节点api接口. 感谢@Holly\",\"删除多余的字段和代码\"]},\"1748\":{\"h\":\"v1.1.1 2024-03-22\",\"t\":[\"[fix] 修复xml脚本中遗漏伪命的问题，完善sql\"]},\"1749\":{\"h\":\"v1.1.0 2024-03-21\",\"t\":[\"可以跳转指定节点\",\"增加全局变量\",\"增加监听器\",\"重构代码，解偶orm，方便扩展不同orm和数据，新增代码示例\",\"修复并行网关流程流程图显示错误问题\"]},\"1750\":{\"h\":\"v1.0.4 2024-03-06\",\"t\":[\"[update] 美化后台返回的流程图\"]},\"1751\":{\"h\":\"v1.0.3 2024-03-05\",\"t\":[\"[update] 重构代码，解偶orm操作，方便扩展其他orm框架\"]},\"1752\":{\"h\":\"v1.0.2 2023-12-31\",\"t\":[\"[fix] 修复solon版本业务系统可不用单独加载warm-flow的xml\"]},\"1753\":{\"h\":\"v1.0.0 2023-12-28\",\"t\":[\"完善流程设计器和流程图，新增vue3版本\",\"放弃js引擎，自研条件表达式\",\"新增支持条件表达式\",\"可退回到任意节点\",\"支持生成流程图\",\"流程设计器开发\",\"互斥网关，并行网关（会签、或签）功能开发\",\"抽离spring生态依赖，支持solon，并且保持事务与业务系统一致\",\"支持待办任务和已办任务，通过权限标识过滤数据\",\"新增多租户模式\",\"原生提供排序\",\"原生提供分页查询\",\"项目上传中央仓库\",\"工作流模块抽取为独立项目，提供集成方式\",\"已办任务和任务记录，审批页面中包含业务详情页面\",\"提供待办任务、提供角色、部门等权限配置\",\"提供流程配置界面\",\"流程配置文件改为表单填报方式\",\"用户角色抽取出来\",\"整理流程表，调整表名和字段名\"]},\"1754\":{\"h\":\"升级指南\",\"t\":[\"提示\",\"更新脚本在项目里面的sql文件下，对应数据库类型，对应版本号\",\"只提供mysql升级脚本和全量脚本，其他升级脚本的自行由mysql升级脚本转换\"]},\"1755\":{\"h\":\"v1.6.6\",\"t\":[\"执行升级脚本1.6.0版本warm-flow_1.6.0.sql\",\"导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json方式\",\"全局FlowFactory替换成FlowEngine\",\"mybatis-flex,easy-query和jpa的扩展包迁移到新的仓库，独立维护\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"条件表达式前端拼接需要把原本eq|flag|5格式 改成 eq@@flag|5,\",\"spel|#{@user.eval(#flag)}改成spel@@#{@user.eval(flag)}\",\"default|${flag == 5 && flag > 4}``改成``default@@${flag == 5 && flag > 4}\",\"最后流程图数据同步：通过DefService.hisToDefJson接口，把历史任务表记录转成新的流程图元数据，保存到实例表中的defJson，新版本流程图才能正常查看\",\"原skip.vue：|分隔回显\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"|\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true});\",\"现skip.vue：@@分隔回显\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"@@\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true});\",\"原/PropertySetting/index.vue：|分隔回显\",\"if (skipCondition) { let conditionSpl = skipCondition.split('|') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' condition = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' conditionValue = conditionSpl && conditionSpl.length > 2 ? conditionSpl[2] : '' } }\",\"现/PropertySetting/index.vue：@@分隔回显\",\"if (skipCondition) { let conditionSpl = skipCondition.split('@@') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' let conditionOneSpl = conditionSpl[1].split(\\\"|\\\") condition = conditionOneSpl && conditionOneSpl.length > 0 ? conditionOneSpl[0] : '' conditionValue = conditionOneSpl && conditionOneSpl.length > 1 ? conditionOneSpl[1] : '' } }\",\"原DefController.java：导入\",\"public R<Void> importDefinition(MultipartFile file) throws Exception { defService.importXml(file.getInputStream()); return R.ok(); }\",\"现DefController.java：导入\",\"public R<Void> importDefinition(MultipartFile file) throws Exception { defService.importIs(file.getInputStream()); return R.ok(); }\",\"原DefController.java：导出\",\"public void exportDefinition(@PathVariable(\\\"id\\\") Long id, HttpServletResponse response) throws Exception { Document document = defService.exportXml(id); // 设置生成xml的格式 OutputFormat of = OutputFormat.createPrettyPrint(); // 设置编码格式 of.setEncoding(\\\"UTF-8\\\"); of.setIndent(true); of.setIndent(\\\" \\\"); of.setNewlines(true); // 创建一个xml文档编辑器 XMLWriter writer = new XMLWriter(response.getOutputStream(), of); writer.setEscapeText(false); response.reset(); response.setCharacterEncoding(\\\"UTF-8\\\"); response.setContentType(\\\"application/x-msdownload\\\"); response.setHeader(\\\"Content-Disposition\\\", \\\"attachment;\\\"); writer.write(document); writer.close(); }\",\"现DefController.java：导出\",\"public ResponseEntity<byte[]> exportDefinition(@PathVariable(\\\"id\\\") Long id) { // 要导出的字符串 String content = defService.exportJson(id); // 设置响应头 HttpHeaders headers = new HttpHeaders(); headers.add(HttpHeaders.CONTENT_DISPOSITION, \\\"attachment; filename=exported_string.txt\\\"); // 返回响应 return ResponseEntity.ok() .headers(headers) .contentType(MediaType.TEXT_PLAIN) .body(content.getBytes(StandardCharsets.UTF_8)); }\"]},\"1756\":{\"h\":\"v1.3.7\",\"t\":[\"执行1.3.7版本升级脚本\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"流程设计时，办理人有多个，回显通过,分隔，改为@@\",\"流程设计时，办理人设置了多个，入库拼接通过,拼接改为@@\",\"原between.vue：,分隔回显\",\"/** 选择角色权限范围触发 */ function getPermissionFlag() { form.value.permissionFlag = form.value.permissionFlag ? form.value.permissionFlag.split(\\\",\\\") : [\\\"\\\"]; if (form.value.listenerType) { const listenerTypes = form.value.listenerType.split(\\\",\\\"); const listenerPaths = form.value.listenerPath.split(\\\"@@\\\"); form.value.listenerRows = listenerTypes.map((type, index) => ({ listenerType: type, listenerPath: listenerPaths[index] })); } }\",\"现between.vue：@@分隔回显\",\"/** 选择角色权限范围触发 */ function getPermissionFlag() { form.value.permissionFlag = form.value.permissionFlag ? form.value.permissionFlag.split(\\\"@@\\\") : [\\\"\\\"]; if (form.value.listenerType) { const listenerTypes = form.value.listenerType.split(\\\",\\\"); const listenerPaths = form.value.listenerPath.split(\\\"@@\\\"); form.value.listenerRows = listenerTypes.map((type, index) => ({ listenerType: type, listenerPath: listenerPaths[index] })); } }\",\"原/PropertySetting/index.vue：入库拼接,\",\"watch(() => form.value.permissionFlag, (n) => { // 监听节点属性变化并更新 props.lf.setProperties(objId.value, { permissionFlag: Array.isArray(n) ? n.filter(e => e).join(',') : n }) }, { deep: true });\",\"现/PropertySetting/index.vue：入库拼接@@\",\"watch(() => form.value.permissionFlag, (n) => { // 监听节点属性变化并更新 props.lf.setProperties(objId.value, { permissionFlag: Array.isArray(n) ? n.filter(e => e).join('@@') : n }) }, { deep: true });\"]},\"1757\":{\"h\":\"v1.3.5\",\"t\":[\"执行升级脚本1.3.5版本升级脚本warm-flow_x.x.x.sql\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"条件表达式前端拼接需要把原本@@eq@@|flag@@eq@5格式 改成 eq|flag|5,\",\"@@spel@@|#{@user.eval(#flag)}改成spel|#{@user.eval(flag)}\",\"新增默认表达default|${flag == 5 && flag > 4}\",\"原between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" style=\\\"width: 20%\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" style=\\\"width: 35%;margin-left: 1%\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> <el-option label=\\\"spel表达式\\\" value=\\\"spel\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" style=\\\"width: 42%;margin-left: 1%;margin-right: 1%;\\\"/> </el-form-item> </slot>\",\"现between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" :style=\\\"{ width: !spelFlag? '30%' : '0%' }\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" :style=\\\"{ width: spelFlag? '18%' : '25%', 'margin-left': '1%' }\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"默认\\\" value=\\\"default\\\"/> <el-option label=\\\"spel\\\" value=\\\"spel\\\"/> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" :style=\\\"{ width: spelFlag? '80%' : '43%', 'margin-left': '1%' }\\\"/> </el-form-item> </slot>\",\"原between.vue：跳转条件下拉框js\",\"watch(() => form, n => { n = n.value; let skipCondition = n.skipCondition; skipCondition = \\\"@@\\\" + n.conditionType + \\\"@@|\\\"; if (n.conditionType !== 'spel') { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"@@\\\" + n.conditionType + \\\"@@\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = obj === 'spel'; } if (props.modelValue?.conditionType === 'spel') spelFlag.value = true;\",\"现between.vue：跳转条件下拉框\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"|\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = (obj === 'spel' || obj === 'default'); } if (props.modelValue?.conditionType === 'spel' || props.modelValue?.conditionType === 'default') { spelFlag.value = true; }\",\"原/PropertySetting/index.vue：回显js\",\"let skipCondition = n.properties.skipCondition let conditionSpl = skipCondition ? skipCondition.split('@@|') : [] let conditionSplTwo = conditionSpl && conditionSpl.length > 0 ? conditionSpl[1]: [] let condition, conditionType, conditionValue = ''; if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] === '@@spel') { conditionType = 'spel' conditionValue = conditionSplTwo } else if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] !== '@@spel') { condition = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[0] : '' conditionType = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[1] : '' conditionValue = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[2] : '' }\",\"现/PropertySetting/index.vue：回显js\",\"let skipCondition = n.properties.skipCondition let condition, conditionType, conditionValue = '' if (skipCondition) { let conditionSpl = skipCondition.split('|') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' condition = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' conditionValue = conditionSpl && conditionSpl.length > 2 ? conditionSpl[2] : '' } }\"]},\"1758\":{\"h\":\"v1.3.4\",\"t\":[\"办理人变量表达式，删除策略前缀，通过$和#区分，需执行1.3.4.升级脚本warm-flow_x.x.x.sql\",\"依赖的groupId：org.dromara，改为org.dromara.warm\",\"如果扩展了条件表达式策略 \",\"接口或者抽象类前缀由ExpressionStrategy改为 ConditionStrategy\",\"全局搜索org.dromara.warm.flow.core.expression 替换为org.dromara.warm.flow.core.expression,然后检查是否正确\"]},\"1759\":{\"h\":\"v1.3.3\",\"t\":[\"独立设计器放行路径增加/warm-flow，如果想要共享后端权限(比如token)，可不增加，并且按照官网流程设计器引入进行设置\"]},\"1760\":{\"h\":\"v1.3.1\",\"t\":[\"依赖的groupId：io.github.minliuhua，改为org.dromara\",\"包名：com.warm， 改为org.dromara.warm\",\"节点详情进入改为双击\",\"终止操作的流程状态改为更合理的终止状态，如需还想按照原本的自动完成，请使用自定义流程状态\",\"FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\",\"转办、委派、加签和减签方法，老方法标识即将删除, 请尽快使用新的接口\",\"终止免校验权限改为设置ignore字段\",\"设计器引入优化 \",\"设计器后端放行地址/warm-flow/**删除，不再需要\",\"前端加载设计器代理配置,vue.config.js或者nginx中的代理，/warm-flow-ui/删除，不再需要\",\"iframe中访问设计器接口由/warm-flow-ui/${definitionId}?disabled=${disabled}，改为VUE_APP_BASE_API +/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\",\"VUE_APP_BASE_API是前端访问前缀比如prod-api\"]},\"1761\":{\"h\":\"v1.3.0\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"1762\":{\"h\":\"v1.2.8\",\"t\":[\"本次升级，内置json库snack3方式，改为spi方式加载，业务项目中存在哪种json就会使用哪种的实现， 支持顺序按顺序加载一种：snack3、jackson、fastjson、gson，并且目前只实现了这四种，可扩展\",\"如在未集成snack3库的环境下，还需要使用snack3库，需要单独使用（原组件使用snack3库）\",\" <dependency> <groupId>org.noear</groupId> <artifactId>snack3</artifactId> <version>3.2.88</version> </dependency>\"]},\"1763\":{\"h\":\"v1.2.6\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"流程状态字段flow_status改为string类型，业务系统需要对应修改\"]},\"1764\":{\"h\":\"v1.2.4\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"流程定义表from_custom改为form_custom，from_path改为form_path，涉及到这两个字段的前后段都要修改\",\"反显审批流程表单，改为通过task表新增的form_custom和form_path字段\",\"只针对mybatis-plus扩展包，其他的扩展包可忽略，多租户和逻辑删除，改为通过mybatis-plus的自带的方式实现( 可参考官网文章逻辑删除和多租户)，并且流程表的逻辑删除字段都更新为0\",\"原本的我发起[warmFlowInitiator], 组件内部不在维护替换，由分派监听器实现替换\"]},\"1765\":{\"h\":\"v1.2.1\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"1766\":{\"h\":\"v1.2.0\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"工具包路径调整\"]},\"1767\":{\"h\":\"v1.1.9\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"1768\":{\"h\":\"流程图管理\"},\"1769\":{\"h\":\"1、追加文字\"},\"1770\":{\"h\":\"1.1、保存需要追加的文字\",\"t\":[\"以下是在全局分派监听器中追加文字示例，也可以在流程或者节点监听器。\",\"/** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); String defJsonStr = listenerVariable.getInstance().getDefJson(); if (StringUtils.isNotBlank(defJsonStr)) { DefJson defJson = FlowEngine.jsonConvert.strToBean(defJsonStr, DefJson.class); for (NodeJson nodeJson : defJson.getNodeList()) { if (nodeJson.getNodeCode().equals(listenerVariable.getNode().getNodeCode())) { Long userId = Long.valueOf(listenerVariable.getFlowParams().getHandler()); SysUser sysUser = userService.selectUserById(userId); if (sysUser != null && StringUtils.isNotEmpty(sysUser.getNickName())) { nodeJson.getExtMap().put(\\\"办理人\\\", sysUser.getNickName()); } nodeJson.getExtMap().put(\\\"办理时间\\\", LocalDateTime.now().format(DateTimeFormatter.ofPattern(\\\"yy-MM-dd\\\"))); } } listenerVariable.getInstance().setDefJson(FlowEngine.jsonConvert.objToStr(defJson)); } log.info(\\\"全局分派监听器执行结束......\\\"); }\"]},\"1771\":{\"h\":\"1.2、追加文字\",\"t\":[\" /** * 查询流程图 * * @param instanceId * @return */ @GetMapping(\\\"/flowChart/{instanceId}\\\") public R<String> flowChart(@PathVariable(\\\"instanceId\\\") Long instanceId) { return R.ok(chartService.chartIns(instanceId, (flowChartChain) -> { List<FlowChart> flowChartList = flowChartChain.getFlowChartList(); flowChartList.forEach(flowChart -> { if (flowChart instanceof BetweenChart) { BetweenChart betweenChart = (BetweenChart) flowChart; Map<String, Object> extMap = betweenChart.getNodeJson().getExtMap(); // 给节点顶部增加文字说明 // betweenChart.topText(\\\"办理时间: 2025-02-08 12:12:12\\\", Color.red); if (MapUtil.isNotEmpty(extMap)) { for(Map.Entry<String, Object> entry : extMap.entrySet()){ // 给节点中追加文字 betweenChart.addText(entry.getKey() + \\\":\\\", Color.red); betweenChart.addText((String) entry.getValue(), Color.red); } } } }); })); }\"]},\"1772\":{\"h\":\"1.3、效果图\"},\"1773\":{\"h\":\"2、自定义流程图节点颜色\"},\"1774\":{\"h\":\"2.1、配置文件\",\"t\":[\"# warm-flow工作流配置 warm-flow: ... ##流程状态对应的三元色 chart-status-color: ## 未办理 - 157,255,0 ## 待办理 - 0,0,0 ## 已办理 - 255,200,0\"]},\"1775\":{\"h\":\"2.2、效果图\"},\"1776\":{\"h\":\"监听器\",\"t\":[\"提示\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。\",\"支持类包名配置和表达式配置。\"]},\"1777\":{\"h\":\"1、监听器小类\",\"t\":[\"start：开始监听器，任务开始办理时执行，数据初始化，办理人权限设置等\",\"assignment： 分派办理人监听器，动态修改代办任务信息，但不限于\",\"finish：完成监听器，当前任务完成后执行，可对业务表更新，消息通知等\",\"create：创建监听器，任务创建时执行，比如数据初始化\"]},\"1778\":{\"h\":\"2、监听器大类\",\"t\":[\"节点监听器：在流程节点中配置，作用范围当前节点，只会执行小类中任意一个\",\"流程监听器：在流程定义中配置，作用范围当前流程定义，只会执行小类中任意一个\",\"全局监听器：实现全局监听器四个接口，作用范围当前所有流程，包含可执行所有小类\",\"执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"1779\":{\"h\":\"3、监听器生命周期图\"},\"1780\":{\"h\":\"4、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应\",\"listener_type：监听器类型，如start,assignment,finish,create等\",\"listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等\",\"监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"1781\":{\"h\":\"5、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"1782\":{\"h\":\"5、节点和流程监听器\"},\"1783\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"1784\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"1785\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowEngine.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowEngine.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"1786\":{\"h\":\"5.4、可实现的效果\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"1787\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"1788\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"1789\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"1790\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"1791\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"1792\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"1793\":{\"h\":\"逻辑删除\"},\"1794\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"提示\",\"Mybatis-plus只支持自身的逻辑删除方式, 默认开启。 如若关闭, 需高版本比如3.5.3或者以上\",\"默认逻辑未删除值：0，逻辑已删除值：1\",\"如需修改默认值，请参考如下配置文件中进行修改\"]},\"1795\":{\"h\":\"1.1、配置默认逻辑删除值\"},\"1796\":{\"h\":\"1.2、关闭逻辑删除方案\",\"t\":[\"/** * 关闭逻辑删除，需高版本比如3.5.3或者以上 * * @author warm */ @Component public class PlusPostInitTableInfoHandler implements PostInitTableInfoHandler { List<String> tableNames = Arrays.asList(\\\"flow_definition\\\", \\\"flow_node\\\", \\\"flow_skip\\\", \\\"flow_instance\\\", \\\"flow_task\\\" , \\\"flow_his_task\\\", \\\"flow_user\\\"); @Override public void postTableInfo(TableInfo tableInfo, Configuration configuration) { String tableName = tableInfo.getTableName(); if (tableNames.contains(tableName)) { Class<?> clazz = tableInfo.getClass(); Field[] fields = clazz.getDeclaredFields(); try { for (Field field : fields) { if (\\\"withLogicDelete\\\".equals(field.getName())) { field.setAccessible(true); // 关闭逻辑删除 field.set(tableInfo, false); } } } catch (IllegalAccessException e) { throw new FlowException(\\\"反射设置对象值异常\\\"); } } } }\"]},\"1797\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"1798\":{\"h\":\"节点扩展属性\",\"t\":[\"提示\",\"当业务系统需要给节点添加扩展属性时，可以按照这个进行扩展。\"]},\"1799\":{\"h\":\"1、实现节点扩展属性数据模型接口\",\"t\":[\"演示项目hh-vue中实现类NodeExtServiceImpl\",\"public interface NodeExtService { /** * 获取节点扩展属性 * @return 结果 */ List<NodeExt> getNodeExt(); }\"]},\"1800\":{\"h\":\"2、扩展属性数据模型规则\"},\"1801\":{\"h\":\"3、设计器渲染效果\"},\"1802\":{\"h\":\"4、扩展属性入库\",\"t\":[\"点击保存后，保存到节点表的ext字段，格式如下：\",\" [ { \\\"code\\\": \\\"base1\\\", -- 编码 \\\"value\\\": \\\"1\\\" -- 值，如果复选框，多个值，用逗号拼接 }, { \\\"code\\\": \\\"btn_auth1\\\", -- 编码 \\\"value\\\": \\\"1,2\\\" -- 值，如果复选框，多个值，用逗号拼接 } ]\"]},\"1803\":{\"h\":\"5、扩展属性使用\",\"t\":[\"业务系统自行查询，按照自己的需求，自行实现\"]},\"1804\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"提示\",\"组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"1805\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"1806\":{\"h\":\"办理人权限处理器\",\"t\":[\"提示\",\"审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员\",\"工作流api中很多需要获取当前办理人id，进行保存或者校验\",\"以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"1807\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link FlowParams#getPermissionFlag} 中获取 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"1808\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"1809\":{\"h\":\"多租户\"},\"1810\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"提示\",\"Mybatis-plus只支持自身的多租户方式\"]},\"1811\":{\"h\":\"2、通用多租户\"},\"1812\":{\"h\":\"办理人变量表达式\",\"t\":[\"提示\",\"业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"1813\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowEngine.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowEngine.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"1814\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"1815\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"1816\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"3、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1817\":{\"h\":\"5、可实现的效果\",\"t\":[\"如下图中示例可以很容易实现\"]},\"1818\":{\"h\":\"5、默认办理人变量策略\"},\"1819\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1820\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1821\":{\"h\":\"7、spel办理人变量策略\"},\"1822\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1823\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1824\":{\"h\":\"8、办理人选择项接口\",\"t\":[\"通过此接口可以给办理人选择，增加默认选项比如发起人、部门领导审批之类的（待开发）\"]},\"1825\":{\"h\":\"条件表达式扩展\",\"t\":[\"提示\",\"当内置的条件表达式不满足业务需求时，可进行扩展\"]},\"1826\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1827\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1828\":{\"h\":\"3、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"1829\":{\"h\":\"3.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"1830\":{\"h\":\"3.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"1831\":{\"h\":\"3.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"1832\":{\"h\":\"自定义流程状态\",\"t\":[\"提示\",\"flowStatus：流程实例表状态，当前流程状态\",\"hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"1833\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"1834\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"1835\":{\"h\":\"3、其他请查阅核心api\"},\"1836\":{\"h\":\"设计器二开\",\"t\":[\"提示\",\"当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"1837\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"1838\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\",\"业务系统配置设计器的地址\"]},\"1839\":{\"h\":\"3 部署\"},\"1840\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"1841\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"1842\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"1843\":{\"h\":\"条件表达式扩展\"},\"1844\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1845\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1846\":{\"h\":\"表单管理\",\"t\":[\"待补充\"]},\"1847\":{\"h\":\"json库扩展\",\"t\":[\"提示\",\"目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"1848\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"1849\":{\"h\":\"监听器表达式扩展\",\"t\":[\"提示\",\"当内置的监听器表达式不满足业务需求时，可进行扩展\"]},\"1850\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1851\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1852\":{\"h\":\"3. 监听器表达式\"},\"1853\":{\"h\":\"3.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1854\":{\"h\":\"3.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"1855\":{\"h\":\"办理人变量表达式扩展\",\"t\":[\"提示\",\"当内置的办理人变量不满足业务需求时，可进行扩展\"]},\"1856\":{\"h\":\"1、表达式公共接口\",\"t\":[\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀\",\"2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取\",\"3、eval(): 执行表达式\",\"4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 当选择截取，并且希望拼接上某些字符串，在进行截取 * * @return 类型 */ default String interceptStr() { return \\\"\\\"; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1857\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1858\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"1859\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1860\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1861\":{\"h\":\"公司使用列表\",\"t\":[\"公司/个人\",\"项目名称\",\"项目介绍\",\"LOGO\\\\代码地址\",\"抚顺银行\",\"外围管理平台\",\"行内人员使用\",\"北京瑞科科技\",\"研发项目管理系统\",\"内部项目审核系统\",\"哈尔滨金睿科技有限公司\",\"供热收费、客服系统\",\"供热收费、客服系统\",\"中交武汉智行国际\",\"能力开放平台\",\"内部系统，流程审批\",\"新理益智慧网络科技（重庆）有限公司\",\"极点OA智慧网络办公系统\",\"企业综合办公管理系统\",\"安徽数智建造研究院有限公司\",\"进销存运营平台\",\"中铁四局集团全资子公司，集成工作流引擎\",\"杭州三之一智联科技有限公司\",\"质量管理系统\",\"基于工业互联网的数字化安全与质量管理平台，集风险、质量和安全为一体，以CTQ（关键质量特性）为中心，端到端全生命周期数字化安全与质量管理。\",\"郑州如阳科技有限公司\",\"智慧燃气平台\",\"智慧燃气平台\",\"山东融佑信息科技有限公司\",\"融运力TMS\",\"融运力TMS是基于移动互联网的面向货主侧需求的订单履约类的TMS系统，兼有传统TMS的竞标、派车、跟踪、签收等功能，同时具备企业ERP级的协同功能\",\"陕西物联达智能科技有限公司\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"H5VE团队\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"武汉数演科技有限公司\",\"开源工作流\",\"仿钉钉界面的开源工作流平台\",\"半月无霜\",\"banmoon-test\",\"半月无霜个人项目\",\"https://www.banmoon.top\",\"餐云汇团队\",\"餐云汇一站式闭环整体解决方案\",\"餐云汇一站式闭环整体解决方案\",\"某某公司\",\"合规管控系统\",\"对各类事项进行检查，上报不合规的地方来审批整改\",\"晨帆智能\",\"****系统智能设计平台\",\"二三维智能设计软件统一平台\",\"个人\",\"海狼OA系统\",\"海狼OA系统\",\"xx自来水股份有限公司\",\"节水信息管理系统\",\"当地节水系统\",\"图灵谷\",\"内部OA\",\"内部OA\",\"湖北建科工程\",\"内部OA\",\"内部OA\",\"Holly\",\"智慧政务\",\"政务系统\",\"雨巷\",\"OA审批系统\",\"公司内部OA办公系统\",\"暗影\",\"erp\",\"erp\",\"LYQ\",\"XX单位综合信息服务系统\",\"简易工作流，OA办公，数据共享等等\",\"若愚\",\"测试检测平台\",\"starrydesert\",\"基于SSM的职工管理系统\",\"毕业设计\",\"zyflzz\",\"基于机器学习的只能停车管理系统\",\"毕业设计\",\"南山客\",\"基于SpringBoot的财务管理系统\",\"本科毕业设计\"]},\"1862\":{\"h\":\"如何贡献\"},\"1863\":{\"h\":\"参与贡献\"},\"1864\":{\"h\":\"为开源项目点一个Star\",\"t\":[\"Star的多少关系到项目能否被更多人看到 同时Star也是作者前进的动力(作者每天都在盯着Star 涨了会开心 跌了会失落) 大家在寻找开源项目的时候, 大多数情况也是会先看Star比较多的项目 所以请给您觉得好的开源项目点一个小小的Star, 让好的项目能够被更多人看到\",\"github地址 | gitee地址 | gitCode地址\"]},\"1865\":{\"h\":\"为社区处理问题\",\"t\":[\"Issue是社区的交流地 大家会在这里提出自己的问题 或者是项目的功能异常\",\"提问的规范在Issue的模板里已经写好了 按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",\"屏幕截图\",\"为提出问题的小伙伴答疑 可以有效降的帮助别人\",\"而且可以降低社区人员的精力分散 使精力全部投入到项目设计研发中\",\"屏幕截图\"]},\"1866\":{\"h\":\"\",\"t\":[\"大家都知道 我们程序员都不擅长写作\",\"有时候作者把文档写完了也不知道用户是什么感觉 是否能看懂\",\"所以参与社区文档建设绝对是一件意义重大的事情\",\"大家可以在Issue提出观后感 觉得哪看不懂 觉得哪应该详细说明\",\"当然了 大家也可以对文档进行改进后提交PR修改申请\"]},\"1867\":{\"h\":\"贡献代码\",\"t\":[\"想参与贡献代码的小伙伴 重点来了: 作者会经常在Issue里发布需求认领 觉得自己能做的可以在Issue里跟作者讨论 如需求还不够清晰 或者做的过程中遇到了什么问题\",\"需求确定了以后就可以开始专注的写代码了 但在开始写代码之前 一定要先看一下如何正确的提交PR\"]},\"1868\":{\"h\":\"如何成为项目贡献者\",\"t\":[\"1.对框架有重大贡献者(由作者与团队成员判定) 2.完成社区发布的两项复杂任务 3.持续完成社区发布的简单任务若干(作者会关注到) 4.持续为社区优化文档或处理issue若干(作者会关注到)\"]},\"1869\":{\"h\":\"项目贡献者待遇\",\"t\":[\"1.捐献红包和群主不定时红包 2.每年还会发放IDEA正版授权,视情况而定\"]},\"1870\":{\"h\":\"提交pr\"},\"1871\":{\"h\":\"步骤一 Fork项目到自己仓库\",\"t\":[\"屏幕截图\"]},\"1872\":{\"h\":\"步骤二 基于dev分支 新建一个此PR功能点的专属分支\"},\"1873\":{\"h\":\"步骤三 使用Git工具 将自己仓库的项目拉去到本地做代码编写\",\"t\":[\"屏幕截图\"]},\"1874\":{\"h\":\"步骤四 使用Idea打开项目 切换到新建的功能分支\",\"t\":[\"屏幕截图\"]},\"1875\":{\"h\":\"步骤五 设置创建类的模板\",\"t\":[\"新创建的类使用这个模板生成注释，使用方式在类上面写上 /c，然后按回车会自动生成\"]},\"1876\":{\"h\":\"步骤六 将编写好的代码 提交到自己的远程仓库\",\"t\":[\"屏幕截图\",\"git提交规范\",\"[init] 初始化 [feat] 增加新功能 [fix] 修复问题/BUG [perf] 优化/性能提升 [refactor] 重构 [revert] 撤销修改 [style] 代码风格相关无影响运行结果的 [update] 其他修改 [upgrade] 升级版本\"]},\"1877\":{\"h\":\"步骤七 创建PR申请(此操作在自己仓库或者要PR的仓库都可以)\",\"t\":[\"屏幕截图\"]},\"1878\":{\"h\":\"步骤八 等待作者评审 按要求更改 直到没有问题后被作者合并\",\"t\":[\"屏幕截图\"]},\"1879\":{\"h\":\"介绍\"},\"1880\":{\"h\":\"1、项目介绍\",\"t\":[\"提示\",\"Dromara Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，数据入库，并支持追加文字和自定义流程图节点颜色等扩展\",\"流程设计器：可通过jar包形式快速集成到项目，支持节点属性扩展，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架支持：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex、Jpa和Easy-Query，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle、PostgreSQL和SQL Server，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"希望一键三连，你的⭐️ Star ⭐️是我持续开发的动力，项目也活的更长\"]},\"1881\":{\"h\":\"2、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top 项目地址：https://gitee.com/min290/hh-vue.git\"]},\"1882\":{\"h\":\"3、与Activiti、Flowable对比\",\"t\":[\"工作流\",\"Activiti\",\"Flowable\",\"Warm-Flow\",\"项目背景\",\"Apache 基金会。\",\"由 Activiti 原团队创建，功能更优化。\",\"国产工作流引擎（Dromara 社区）\",\"社区活跃度\",\"社区规模大，但近年活跃度下降。\",\"社区活跃，迭代快\",\"文档和Ruoyi-Vue实战案例较完善，社区活跃，更新快。\",\"数据库表结构\",\"约 25 张表，分类简单。\",\"约 40 张表（部分版本达 79 张），分类更细。\",\"仅 7 张表，结构极简，维护成本低。\",\"功能与扩展性\",\"基础 BPMN 支持，插件机制有限。\",\"支持动态流程修改、REST API、多实例任务优化。\",\"审批功能全面，基于json定义，支持办理人变量表达式、监听器、变量表达式表达式、动态权限。\",\"流程设计器\",\"需独立部署或集成第三方工具。\",\"需额外配置或扩展。\",\"通过 Jar 包快速集成，支持节点属性扩展，适配 SpringBoot 和 Solon。\",\"数据驱动\",\"内部是通过mybatis进行增删改成，对其他orm不支持。\",\"同左。\",\"支持多 ORM 框架。\",\"多租户与软删除\",\"需自行实现或依赖外部框架。\",\"原生支持多租户和软删除。\",\"原生支持多租户和软删除，也可复用 ORM 框架实现。\",\"数据库支持\",\"主流数据库（MySQL、Oracle 等）。\",\"同左。\",\"支持 MySQL、Oracle、PostgreSQL、SQL Server，和国产数据库。\",\"条件表达式\",\"基础条件支持。\",\"支持 SpEL 表达式。\",\"内置 SpEL 和自定义表达式，支持动态权限和参数传递。\",\"办理人表达式\",\"基于 UEL实现，支持简单变量和固定角色分配。\",\"支持UEL、SpEL 表达式，可通过动态变量、角色、部门等灵活分配任务。\",\"默认表达式和支持 SpEL ，支持自定义规则。\",\"生成的流程图片\",\"生成静态 BPMN 流程图，颜色和样式固定。\",\"支持标准流程图生成，但动态修改颜色或添加注释需结合前端代码\",\"原生支持动态追加文字、设置节点状态颜色（如进行中/已完成）\",\"适用场景\",\"简单流程或旧系统兼容。\",\"复杂流程、高扩展性需求。\",\"国产化、轻量级项目，快速审批场景，灵活扩展和低代码集成。\"]},\"1883\":{\"h\":\"4、应用场景\",\"t\":[\"Dromara Warm-Flow作为一个国产的工作流引擎，其设计简洁轻量但功能全面，适用于多种应用场景，尤其是针对中小型项目。以下是一些典型的应用场景：\",\"企业内部流程管理：用于管理企业的日常业务流程，如请假、报销、采购审批等。\",\"项目管理：在项目管理中，Dromara Warm-Flow可以用来跟踪项目任务的状态，管理项目流程，确保项目按计划进行。\",\"客户服务流程：用于管理客户服务请求，如客户咨询、投诉处理、售后服务等。\",\"人力资源管理：在人力资源管理中，Warm-Flow可用于员工招聘、培训、绩效评估等流程的管理。\",\"财务和会计流程：管理财务审批流程，如发票审核、预算审批等。\",\"IT服务管理：用于IT服务请求的处理，如IT支持请求、系统变更管理等。\",\"合规性和风险管理：帮助企业在遵守法规和标准的同时，管理风险和合规流程。\"]},\"1884\":{\"h\":\"5、支持数据库类型\",\"t\":[\"目前支持MySQL 、Oracle、PostgreSQL和SQL Server，其他数据库只需要转换表结构，使用Mybatis-Plus、Mybatis-Flex和Easy-Query即可兼容\",\" MySQL\",\" Oracle\",\" PostgreSQL\",\" SQL Server\",\" ......\"]},\"1885\":{\"h\":\"6、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1886\":{\"h\":\"开源协议\",\"t\":[\"注意\",\"Dromara Warm-Flow采用APACHE LICENSE 2.0开源协议，项目代码、文档均开源免费可商用，遵循开源协议即可\",\"开发完成请务必登记使用项目列表，登记地址\",\"已申请软著，您如果需要源码二开，需要注意以下几点：\",\"请不要删除和修改根目录下的LICENSE文件。\",\"请不要删除和修改Warm-Flow源码头部的版权声明。\",\"本项目代码可免费商业使用，商业使用请保留源码和相关描述文件的项目出处，作者声明等。\",\"分发源码时候，请注明软件出处 https://warm-flow.dromara.org/\",\"不可二次分发开源参与同类竞品，如有想法可联系290631660@qq.com商议合作。\",\"若您的项目无法满足以上几点，需要更多功能代码，获取可找作者定制化开发，290631660@qq.com\"]},\"1887\":{\"h\":\"功能演示\"},\"1888\":{\"h\":\"演示地址\",\"t\":[\"注意\",\"admin/admin123\",\"演示地址：http://www.hhzai.top 项目地址：https://gitee.com/min290/hh-vue.git\"]},\"1889\":{\"h\":\"演示图\"},\"1890\":{\"h\":\"1、新增定义\",\"t\":[\"提示\",\"流程编码和流程版本：确定唯一 审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1891\":{\"h\":\"2、流程设计\"},\"1892\":{\"h\":\"2、1节点设置\",\"t\":[\"提示\",\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1893\":{\"h\":\"2、2跳转线设置\",\"t\":[\"提示\",\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1894\":{\"h\":\"3、开启流程实例\",\"t\":[\"提示\",\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1895\":{\"h\":\"4、提交流程\",\"t\":[\"提示\",\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1896\":{\"h\":\"5、办理流程\",\"t\":[\"提示\",\"如果是互斥网关则会判断是否满足条件\"]},\"1897\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1898\":{\"h\":\"开源集成案例\",\"t\":[\"作者\",\"项目名称\",\"描述\",\"晓华\",\"hh-vue\",\"官方演示项目，基于ruoyi-vue集成，springboot2+vue2\",\"疯狂的狮子Li\",\"RuoYi-Vue-Plus\",\"多租户后台管理系统 重写RuoYi-Vue所有功能 集成 Sa-Token、Mybatis-Plus、Flowable、SpringDoc、Hutool、OSS 定期同步\",\"玲娜贝er\",\"ruoyi-plus-vben5\",\"基于vben最新版本v5 & ant-design-vue 的 RuoYi-Vue-Plus 前端项目\",\"seven\",\"seaflow\",\"seaflow 是一款 开源仿钉钉工作流 平台， 前端使用 vue3+element plus ， 实现 流程设计和审批功能， 后端基于国产工作流Dromara warm-flow 实现流程控制， 大大缩短了学习成本\",\"晓华/Zhen\",\"ruoyi-vue3\",\"基于ruoyi-vue3集成前端\",\"梁小梁/Zhen\",\"Ruoyi-Cloud/RuoYi-Vue3\",\"基于Ruoyi-Cloud集成的跑批系统,spring-cloud(nacos)+vue3\",\"quick\",\"quick-boot\",\"基于 Spring Cloud 2022 、Spring Boot 3、React、AMIS 和 APIJSON 的低代码系统的设计和实现。该系统可以帮助企业快速开发和部署高质量的 Web 应用程序\"]},\"1899\":{\"h\":\"捐赠\",\"t\":[\"感谢所有捐赠者，你们的支持是我最大的动力。这些费用将用于服务器、域名和相关服务的费用，以及warm组织成员和贡献者的红包奖励。\"]},\"1900\":{\"h\":\"捐赠列表\",\"t\":[\"如有遗漏，请联系我。\",\"捐献者\",\"金额/元\",\"留言\",\"时间\",\"E*2\",\"100\",\"感谢您对开源项目的支持\",\"2025-01-09\",\"一拳打爆常大宝\",\"20\",\"感谢您对开源项目的支持\",\"2024-08-08\",\"李*佳\",\"30\",\"感谢您对开源项目的支持\",\"2024-08-02\",\"*佳\",\"30\",\"希望有交流机会\",\"2024-08-01\",\"*子\",\"30\",\"准备试用，致敬\",\"2024-07-16\",\"i*d\",\"1\",\"感谢您对开源项目的支持\",\"2024-07-11\",\"自由飞翔\",\"100\",\"感谢您对开源项目的支持\",\"2024-07-03\",\"文斌\",\"100\",\"Dromara warm-flow项目非常好，希望能发展壮大\",\"2024-06-25\",\"*入\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*梁\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*马\",\"100\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*热\",\"68\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*巴\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*敏\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*剑\",\"1\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"一骑\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"姜杰\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Cola\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Dotor-ww💪\",\"30\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*荒\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*飞鸿\",\"11\",\"感谢您对开源项目的支持\",\"2024-06-25\"]},\"1901\":{\"h\":\"联系我\"},\"1902\":{\"h\":\"1、沟通群和公众号\",\"t\":[\"沟通群\",\"公众号\",\"加入沟通群和公众号的好处：\",\"第一时间收到框架更新通知。\",\"第一时间收到框架 bug 通知。\",\"第一时间收到新增开源案例通知。\",\"第一时间收到最新技术文章通知。\"]},\"1903\":{\"h\":\"2、提交issue\",\"t\":[\"issue描述清楚问题，方便我们快速定位问题\",\"https://gitee.com/dromara/warm-flow/issues\"]},\"1904\":{\"h\":\"3、内部群：\",\"t\":[\"为感谢对 Warm-Flow 生态做出贡献的同学，我们特创建了内部群：【Warm-Flow 生态共享与合作】\",\"加入群聊条件，以下满足其一即可：\",\"写过5篇以上有关 Warm-Flow 的原创博客。\",\"有开源项目集成了 Warm-Flow。\",\"有为 Warm-Flow 录制过教程视频，发表在公共平台（总时长>30分钟，且播放量>2000）。\",\"其它一些您认为有对 Warm-Flow 生态做出贡献的行为，可以直接联系我们，经内部投票评审通过即可加入（不要害羞，大胆联系我们哦 😊 ）\",\"加入群聊的好处：\",\"更及时的获知 Warm-Flow 下一步更新计划。\",\"在 Warm-Flow 遇到的任何疑问都可以当面与作者沟通，可协助解决问题。\",\"可提出未来版本更新需求，将具有更高的优先级进行评审与开发。\",\"加群申请微信号：warm-houhou\",\"注：此为专属内部群聊，不满足上述条件的同学请勿过分申请打扰，谢谢合作。满足条件者可以在申请加入时备注上您的项目名称 （例如：xx开源项目作者集成了 Warm-Flow，申请加入群聊），如果字数太多无法写完，也可在开源交流群里@管理员协助交流。\"]},\"1905\":{\"h\":\"新闻\",\"t\":[\" {{ getTypeValue(item.type) }} \",\"{{ item.title }}\",\"{{ item.pushTime }}\"]},\"1906\":{\"h\":\"有偿服务\"},\"1907\":{\"h\":\"VIP群\",\"t\":[\"项目代码、文档，均开源免费可商用，遵循开源协议，不代表着项目收费\",\"VIP群由四名后端与一名前端工程师组成，提供问题答疑服务和技术分享等服务，欢迎加群交流\",\"支付后加微信号【warm-houhou】，邀请进入vip群\",\"问问题等于做习题 听作者解答问题等于习题讲解 一个人接触的问题有限 一群人接触的问题无限 早进群早接触更多的问题 承诺: 看见必回复 让你感受作者有多话痨\",\"加群扫码: 99元\"]},\"1908\":{\"h\":\"私人服务\",\"t\":[\"作者提供作者私人服务，关于Dromara Warm-Flow工作流私人培训、项目集成开发服务，欢迎加微信号【warm-houhou】\"]},\"1909\":{\"h\":\"特别赞助\",\"t\":[\"如需Dromara Warm-Flow官网挂广告，请加微信号【warm-houhou】联系我\"]},\"1910\":{\"h\":\"团队\",\"t\":[\"avatar\",\"name\",\"email\",\"role\",\"contributions\",\"{{ item.name }}\",\"{{ item.email }}\",\"{{ item.role }}\",\"{{ item.contributions }}\"]},\"1911\":{\"h\":\"常见问题\"},\"1912\":{\"h\":\"1、id精度丢失\",\"t\":[\"方案1：处理长度过长的Long类型\",\"只处理长度过长的Long类型，前端页面就不会丢失精度了 (感谢【Colin】提供解决方案)\",\"创建一个BigNumberSerializer（用来处理超过JS数据范围的Long类型）\",\"👇 代码详情 👇\",\"/** * 超出 JS 最大最小值 处理 */ @JacksonStdImpl public class BigNumberSerializer extends NumberSerializer { /** * 根据 JS Number.MAX_SAFE_INTEGER 与 Number.MIN_SAFE_INTEGER 得来 */ private static final long MAX_SAFE_INTEGER = 9007199254740991L; private static final long MIN_SAFE_INTEGER = -9007199254740991L; /** * 提供实例 */ public static final BigNumberSerializer INSTANCE = new BigNumberSerializer(Number.class); public BigNumberSerializer(Class<? extends Number> rawType) { super(rawType); } @Override public void serialize(Number value, JsonGenerator gen, SerializerProvider provider) throws IOException { // 超出范围 序列化位字符串 if (value.longValue() > MIN_SAFE_INTEGER && value.longValue() < MAX_SAFE_INTEGER) { super.serialize(value, gen, provider); } else { gen.writeString(value.toString()); } } }\",\"添加JacksonConfig配置全局序列化（针对所有属性），一下两种方式任选其一\",\"👇 代码详情 👇\",\"@Configuration public class JacksonConfig { // 方式一 @Bean public Jackson2ObjectMapperBuilderCustomizer customizer() { return builder -> { ... 其他配置.... JavaTimeModule javaTimeModule = new JavaTimeModule(); //Long,BigInteger 转为 String 防止 js 丢失精度 javaTimeModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); builder.modules(javaTimeModule); }; } // 方式二 @Bean public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() { final Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder(); final ObjectMapper objectMapper = builder.build(); ... 其他配置.... SimpleModule simpleModule = new SimpleModule(); // Long,BigInteger 转为 String 防止 js 丢失精度 simpleModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); objectMapper.registerModule(simpleModule); return new MappingJackson2HttpMessageConverter(objectMapper); } }\",\"方案2：序列化所有long类型\",\"如何处理Long类型精度丢失问题 👇点击👇\",\"方案3：通过yml配置\",\"通过设置id生成器类型，修改id生成方式\",\"# warm-flow工作流配置 warm-flow: # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19\",\"方案4：自定义id生成策略\",\"参照如下文章，继承填充器接口，修改id生成方式\",\"Dromara Warm-Flow工作流引擎数据库主键自增策略实现👇\"]},\"1913\":{\"h\":\"2、流程图片中文乱码\",\"t\":[\"linux环境：安装中文字体\",\"生成的流程图中文乱码或者报错InternalError; java.lang.reflect,InvocationTargetException\",\"由于服务器上缺少中文字体，通过检查fc-list :lang=zh是否包含中文字符集（以下是存在的示例）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ zhFonts]# fc-list :lang=zh /usr/share/fonts/zhFonts/SIMSUN.TTC: 新宋体,NSimSun:style=常规,Regular /usr/share/fonts/zhFonts/SIMSUN.TTC: 宋体,SimSun:style=常规,Regular\",\"zhFonts.zip将文件解压至/usr/share/fonts目录下，如果还不行，添加到jre的lib/fonts目录（感谢【我们好像在哪儿见过 】提供的方案）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ fonts]# ll 总用量 8 drwxr-xr-x 2 root root 4096 5月 17 00:20 dejavu drwxr-xr-x 2 root root 4096 5月 17 11:40 zhFonts\",\"重启服务\",\"docker环境：安装中文字体\",\"以ruoyi-vue-plus-4.x中dockerfile为例，添加中文字体即可 （感谢【格调@main】提供的方案）\"]},\"1914\":{\"h\":\"3、initFlow()未加载\",\"t\":[\"提示\",\"spring开启懒加载后，导致FlowAutoConfig.initFlow()未加载。（由社区【星 Q】提供）\",\"删除\\\"lazy-initialization: true\\\",可解决问题，以下是错误示例\",\"spring: main: allow-bean-definition-overriding: true lazy-initialization: true web-application-type: servlet\"]},\"1915\":{\"h\":\"4、监听器等对象获取不到\",\"t\":[\"提示\",\"热部署插件jrebel或者devtools导致问题，检查是否使用热部署插件，比如spring.devtools，可以把插件关了，或者加上排除配置spring-devtools.properties\",\"restart.include.flow=/org.dromara.warm.*.jar\"]},\"1916\":{\"h\":\"5、类型转换异常\",\"t\":[\"同上\"]},\"1917\":{\"h\":\"6、hh-vue切换mybaits-plus\",\"t\":[\"提示\",\"1、根pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"2、ruoyi-flow的pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"3、ruoyi-common增加依赖\",\" <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.5.1</version> </dependency>\",\"4、MyBatisConfig.java注释掉，新增MybatisPlusConfig\",\"👇 代码详情 👇\",\"package com.ruoyi.framework.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; /** * Mybatis Plus 配置 * * @author ruoyi */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 分页插件 interceptor.addInnerInterceptor(paginationInnerInterceptor()); // 乐观锁插件 interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor()); // 阻断插件 interceptor.addInnerInterceptor(blockAttackInnerInterceptor()); return interceptor; } /** * 分页插件，自动识别数据库类型 https://baomidou.com/guide/interceptor-pagination.html */ public PaginationInnerInterceptor paginationInnerInterceptor() { PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); // 设置数据库类型为mysql paginationInnerInterceptor.setDbType(DbType.MYSQL); // 设置最大单页限制数量，默认 500 条，-1 不受限制 paginationInnerInterceptor.setMaxLimit(-1L); return paginationInnerInterceptor; } /** * 乐观锁插件 https://baomidou.com/guide/interceptor-optimistic-locker.html */ public OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor() { return new OptimisticLockerInnerInterceptor(); } /** * 如果是对全表的删除或更新操作，就会终止该操作 https://baomidou.com/guide/interceptor-block-attack.html */ public BlockAttackInnerInterceptor blockAttackInnerInterceptor() { return new BlockAttackInnerInterceptor(); } }\",\"5、ruoyi-admin的application.yml中配置mybatis改为mybatis-plus\"]},\"1918\":{\"h\":\"7、导入依赖包失败\",\"t\":[\"可尝试切换maven版本 （感谢【一拳打爆常大宝】）\",\"如maven3.9.6切换为低版本3.8.2\"]},\"1919\":{\"h\":\"8、 StackOverflowError 错误\",\"t\":[\"提示\",\"查看跳转线退回的，是否设置为退回类型，后续有时间再做校验\"]},\"1920\":{\"h\":\"9、 后端接收流程xml部分丢失\",\"t\":[\"提示\",\"一般是xxs过滤导致，排查下接口就行或者对象就行\"]},\"1921\":{\"h\":\"更新日志\"},\"1922\":{\"h\":\"未来发布计划\"},\"1923\":{\"h\":\"vx.x.x\",\"t\":[\"事件\",\"流程图合法性检验\",\"把不能退回到开始节点去掉，会有什么影响\",\"子流程\",\"会签和票签通过率策略，支持扩展\",\"重启流程\",\"包容网关\",\"取回 @xiarigang\",\"开启流程可以不默认执行到中间节点 @晓华\"]},\"1924\":{\"h\":\"开发中计划\"},\"1925\":{\"h\":\"v1.6.8 2025-03-20\",\"t\":[\"取回 @xiarigang\",\"撤销 @xiarigang\",\"包容网关 @晓华\"]},\"1926\":{\"h\":\"更新日志\"},\"1927\":{\"h\":\"v1.6.7 2025-03-03\",\"t\":[\"升级指南\",\"[feat] 设计器支持节点扩展属性设置\",\"[feat] 流程图扩展，新增接口，方便追加文字\",\"[feat] 流程状态支持颜色支持自定义\",\"[update] 节点表版本号字段标识下个版本删除\",\"[update] Jackson反序列化时忽略未知字段\",\"[update] 删除部分代码，调整注释\",\"[update] 修改当票签和会签节点时，注意事项描述\",\"[fix] 规范solon,api注解 防止某些情况获取不到方法参数名\",\"[fix] 删除流程实例的时候，办理用户不存在，导致删除失败\",\"[fix] #IBP397：修复当设计流程，开始节点出现再负坐标时，文字名称未显示\",\"[fix] #IBP3LK：修复开启流程，流程图第一个节点不是待办颜色\",\"[fix] 网关节点编辑文字报错处理\",\"[remove] 移除流程定义xml导入导出方式\",\"[remove] 移除多余的skip_Any_Node字段\",\"[style] 常量改成大写和下划线\"]},\"1928\":{\"h\":\"v1.6.6 2025-01-23\",\"t\":[\"升级指南\",\"[feat] 导入、导出和保存等新增json格式支持DefService.importIs/importJson/importDef/saveDef/exportJson\",\"[feat] 新增获取后置节点方法NodeService.suffixNodeList\",\"[feat] 新增网关直连和测试案例\",\"[feat] 流程图右上角新增完成状态颜色示例\",\"[feat] 新增流程图查询接口和扩展接口ChartService\",\"[feat] 新增历史表数据同步为新的流程图元数据\",\"[feat] 新增sqlserver全量脚本\",\"[update] 导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json的api\",\"[update] FlowFactory修改为FlowEngine\",\"[update] 历史表目标节点编码和目标节点名称字段长度改为200\",\"[update] 通过或者退回到并行网关，开启多个任务，改为只产生一条历史记录\",\"[update] 退回或者任务完成，其他需要被删除的任务不需要记录历史表，因为已经存在退回记录，不需要重复记录\",\"[update] 转办、委派、加签和减签，改为只产生一条历史记录\",\"[update] 批量保存改为默认1000条一批\",\"[update] 流程设计保存，增加遮罩层\",\"[refactor] 流程图绘制调整重构\",\"[refactor] 移除mybatis-flex,easy-query和jpa的扩展包，独立成项目，由专门人维护\",\"[refactor] 实体类和dao获取改为通过反射，解耦orm-core包\",\"[refactor] 重构获取前置节点方法NodeService.previousNodeList\",\"[fix] 修复退回时存在其他代办任务，未删除的问题\",\"[fix] 修复流程退回目标节点前存在并行网关，导致不生成代办任务的问题\",\"[fix] 修复条件表达式中如果有|或导致错误分隔的问题\",\"[fix] 修复绘制流程图，错误判断同一条录像的key\",\"[fix] 修复结束节点还执行创建监听器的问题\",\"[remove] 移除DefService获取流程图api，由ChartService中chartIns和chartDef代替\",\"[remove] 删除前端log打印\",\"[remove] 移除oracle和postgresql升级脚本，后续只提供mysql升级脚本，所有的全量脚本，其他升级脚本的自行转换\"]},\"1929\":{\"h\":\"v1.3.8 2025-01-07\",\"t\":[\"[fix] 修复最新设计器代码未复制到到jar包\"]},\"1930\":{\"h\":\"v1.3.7 2024-12-31\",\"t\":[\"升级指南\",\"[fix] 修复设计器驳回指定节点显示异常问题\",\"[fix] 流程实例查询SQL BUG\"]},\"1931\":{\"h\":\"v1.3.6 2024-12-23\",\"t\":[\"[fix] 修复设计器驳回指定节点显示异常问题\"]},\"1932\":{\"h\":\"v1.3.5 2024-12-20\",\"t\":[\"升级指南\",\"[feat] 新增获取所有前置节点接口\",\"[feat] 设计器新增设置驳回指定节点\",\"[feat] 条件表达式新增默认策略default|${flag == 5 && flag > 4}\",\"[feat] 新增mybatis-plus关闭逻辑删除案例\",\"[update] 退回不校验是否办理过\",\"[update] 复制流程版本号支持自动递增\",\"[update] 结点命名全部改成节点\",\"[refactor] 导入流程方法拆成两个方法，读取is流和导入实体类，insertFlow改为公共方法\",\"[refactor] 条件表达式原本太繁琐，进行精简, @@eq@@|flag@@eq@5 --> eq|flag|5\",\"[refactor] 任意跳转，改成退回选择目标节点，票签必填，修改字段名称\"]},\"1933\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"升级指南\",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器优化配置（类中配置增加类型接口，或者优化页面配置）\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[update] 修改项目的groupId\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"1934\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"升级指南\",\"[feat] 新增支持接入业务系统token，支持多token\",\"[update] 办理人选择tabs切换\",\"[update] 没有左侧树状选择数据时，左侧隐藏\",\"[fix] 统一修复分页bug\",\"[fix] 修复删除流程实例信息，未删除办理人信息 @xiarigang\",\"[fix] 修改【Bug】 会签节点委派 @vanlin\",\"[fix] 统一修复分页bug\"]},\"1935\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"升级指南\",\"[feat] 新增boot3+java17支持\",\"[feat] 流程设计器新增快捷键支持\",\"[feat] 新增流程状态枚举（终止、作废、撤销和取回）\",\"[feat] 新增转办、委派、加签和减签方法，老方法标识即将删除，接入监听器\",\"[update] 终止流程状态改为更合理的终止状态\",\"[update] 流程复制克隆改set/get赋值\",\"[refactor] 重构skip等方法通用校验\",\"[perf] 流程图清晰度调整\",\"[fix] 流程图查询异常处理\",\"[fix] 修复历史记录表，创建时间和更新时间一样的问题\",\"[remove] FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\"]},\"1936\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"[feat] 设计器独立 @zhen\",\"[feat] 使用jar引入方式引入设计器\",\"[feat] 新增办理人变量表达式流程案例\",\"[feat] 新增方法，获取流程变量的map类型\",\"[update] 节点线条保存关联名称\",\"[fix] 修复mybatis扩展包中，flowStatus变量书写错误的问题\",\"[fix] 更新时间有值时，取更新时间，不是创建时间\",\"[fix] 修复mybatis-plus扩展包，配置了其他id策略不生效的问题\"]},\"1937\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"升级指南\",\"[feat] json库支持snack3、jackson、fastjson和gson，并且支持扩展\",\"[feat] 增加办理人变量表达式，支持${xxx}替换和spel，并支持扩展\",\"[feat] ListenerVariable监听器变量新增FlowParams字段，方便开始监听器全局传递参数\",\"[feat] 终止新增对开始和完成监听器的支持\",\"[update] springboot项目的条件表达式默认支持spel\",\"[update] 历史记录改为单条保存，删除重复代码\",\"[update] 修改FlowUserDao的bean名称\",\"[update] 中间节点拆分为或签，会签，票签\",\"[fix] 修复历史记录创建时间相等，导致流程图渲染异常\",\"[fix]修复Mybatis逻辑删除变成真实删除的缺陷 @xiarigang\",\"[refactor] 重构id生成器，支持orm默认策略，删除数据填充默认实现类，改为匿名类\"]},\"1938\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"[update] 历史任务表流程状态支持外部传入\",\"[update] 修改办理人接口，当未设置办理人时，不做权限校验\",\"[update] ModifyHandler增加链式调用\",\"[fix] 修复流程监听器导出失败的问题\"]},\"1939\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"升级指南\",\"[feat] 增加获取下个节点集合api @xiarigang\",\"[feat] 流程监听器 @xiaoxiaoliu889\",\"[feat] id内存策略新增14、15位雪花算法支持\",\"[feat] 流程激活和挂起案例 @xiaoxiaoliu889\",\"[feat] 增加基于流程定义Id获取流程图 @xiaoxiaoliu889\",\"[update] 流程状态改成字符串类型 @xiarigang\",\"[update] 测试模块拆分独立仓库\",\"[update] modes-sb删除加载配置文件，改为有上层jar加载\",\"[update] flex solon版本yml弄错了，config调整\",\"[refactor] 流程版本号生成逻辑重构 @xiaoxiaoliu889\",\"[fix] 修复deleteByTaskIds 中的根据无法正确删除user数据\",\"[fix] 修复 jpa solon注解问题 @vanlin\",\"[fix] 修复 并行网关三个任务分支的时候，错误结束流程的问题\"]},\"1940\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"升级指南\",\"[feat] 激活和挂起 @xiaoxiaoliu889\",\"[feat] 不同节点也支持配置审批表单路径 @vanlin\",\"[feat] 支持接收外部流程状态，支持流程状态扩展 @vanlin\",\"[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式\",\"[feat] 新增分派监听器，支持代办任务中办理人等动态修改 @liangli\",\"[feat] 新增Easy-Query框架支持 @link2fun\",\"[feat] 新增Mybatis-Flex的solon扩展包 @xiarigang\",\"[feat] 新增Jpa的solon扩展包 @vanlin\",\"[feat] 历史表新增跳转类型，记录跳转类型 @vanlin\",\"[feat] 增加组件加载，yml控制开关 @疯狂的狮子Li\",\"[update] 之前强依赖流程状态的通过的，改为跳转类型，历史数据考虑如何处理 @vanlin\",\"[update] 之前所有保存流程状态地方，全部提供可接受外部传入 @vanlin\",\"[update] 流程开启，校验节点是否发布，提示语增加流程编码\",\"[update] 删除校验是否任意跳转\",\"[update] 修改扩展字段ext注释，删除FlowConfigUtil多余的代码\",\"[update] SqlSessionFactory改为构造函数引入\",\"[update] 替换异常类，UtilException高版本不兼容\",\"[update] from_custom改为form_custom，from_path改为form_path\",\"[remove] 移除节点前置执行权限处理器\",\"[remove] 删除cooperateAutoPass方法\",\"[update] 代办改为待办\",\"[refactor] 重构测试模块，完善mybatis-plus多租户和逻辑删除使用方式\",\"[refactor] 重构solon和插件模块\",\"[fix] 修复加签批量提交报错\",\"[fix] 修复TaskServiceImpl#handleDepute方法中删除受托人传参数错误\",\"[fix] 修复 JPA flowUserDao bug @vanlin\",\"[fix] 流程第三个节点为网关时无法渲染颜色\",\"[fix] 修复查看流程图模糊的问题 @erfeijiadao\",\"[fix] 修復开始节点直连网关，流程图渲染有问题\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 修复流程定义和流程实例相同，处于非结束节点，流程实例不能存在相同的业务id\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 删除不必要的··符号，修复postgresql与mysql关键词符号问题。\",\"[fix] 修复流程已完成，流程图结束节点显示为黑色\",\"[fix] 修复已办任务查询审批想起无效问题\",\"[fix] 设置开始节点 skip_type = PASS\",\"[fix] 为SpringUtil指定bean name,解决 LocalContainerEntityManagerFactoryBean 依赖问题\",\"[chore] 升级dom4j为安全版本2.1.3\"]},\"1941\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"[fix] 修复更新拼上了多余的条件\",\"[fix] 修复保存流程xml报错问题\"]},\"1942\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"升级指南\",\"[feat] 新增mybatis-flex扩展包 @xiarigang\",\"[feat] 新增抄送演示案例 @adru*\",\"[feat] 历史记录表新增ext扩展字段，方便保存历史过程数据 @adru*\",\"[update] 保存下一个节点办理人时，不校验是否有审批人\",\"[update] 调整扩展包配置，新增测试模块\",\"[update] 票签,会签，将待办任务的创建时间赋予历史任务开始时间 @liutao\",\"[update] 调整mybatis-plus多租户和软件删除处理\",\"[update] 修改任务历史表时间定义，任务审批通过，将待办任务的创建时间赋予历史任务开始时间 @liutao*\",\"[update] 修正pg的sql文件名，新增1.2.1增量sql @liutao\",\"[update] 会签票签，开始时间记录代表任务的创建时间\",\"[remove] 删除监听器自定义参数,修改扩展字段名称\",\"[fix] 监听器问题修复 @liangli\",\"[fix] solon插件包增加userMapper.xml加载\",\"[fix] 修复填充器不接收外部设置的时间\",\"[fix] 修复userMapper.xml中updateLogic的某个负值错误\"]},\"1943\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"升级指南\",\"待办表解偶用户，新增用户表（查询方式需要改动）\",\"会签，票签\",\"加减签\",\"转办完善\",\"jpa扩展\",\"oracle适配\",\"pg适配\"]},\"1944\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"升级指南\",\"orm支持mybatis-plus扩展\",\"多租户字段隔离提供全局配置，自动获取\",\"增加软删除可以配置化\",\"新增三个测试模块\",\"修复设置默认填充器时候，判空错误\"]},\"1945\":{\"h\":\"v1.1.7 2024-04-27\",\"t\":[\"启动流程时，支持第二个节点为网关节点的情况\",\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",\"修复终止流程bug\"]},\"1946\":{\"h\":\"v1.1.6 2024-04-23\",\"t\":[\"支持转办功能\",\"任务自动流转到创建人\",\"考虑流程终止功能\",\"修复流程流转异常\",\"实体类支持序列化\",\"修复java17以上@Resource包路径变更的问题\"]},\"1947\":{\"h\":\"v1.1.5 2024-04-17\",\"t\":[\"支持自定义填充\",\"新增配置文件，部分功能可配置\",\"重构代码，insService.skip标识即将删除，改用taskService.skip\",\"引入日志门面\",\"修复已经设置后续节点动态权限后，办理时未生效问题；\",\"枚举扩展getByKey方法 @Holly_Git\",\"调整实例类结构，方便链式写法\",\"修复并行网关后面没有中间节点\",\"修复开始任务记录待办，为保存流程状态\",\"新增链式查询排序提供id排序\",\"新增历史任务记录结束节点\",\"新增赋值流程记录创建更新时间\",\"优化表实体类链式赋值\",\"待办已办查询标记为即将删除, 已挪到业务系统中\"]},\"1948\":{\"h\":\"v1.1.4 2024-04-07\",\"t\":[\"修复监听器部分判空bug 感谢@Holly_Git\",\"新增创建任务监听器\",\"修改flow_node监听类型和监听路径字段长度\",\"新增监听器生命周期概念，完善文档\",\"重构流程开启流程和流程办理代码\",\"开始节点也能记录到历史任务记录中\"]},\"1949\":{\"h\":\"v1.1.3 2024-04-02\",\"t\":[\"新增权限监听器，办理中动态设置权限 感谢@Holly\"]},\"1950\":{\"h\":\"v1.1.2 2024-03-27\",\"t\":[\"流程定义新增复制按钮\",\"补齐sql脚本，完善文档\",\"跳转条件获取方式变更为流程变量 感谢@Holly\",\"监听器变量新增返回节点信息 感谢@Holly\",\"新增根据流程定义和当前节点code获取下一节点api接口. 感谢@Holly\",\"删除多余的字段和代码\"]},\"1951\":{\"h\":\"v1.1.1 2024-03-22\",\"t\":[\"[fix] 修复xml脚本中遗漏伪命的问题，完善sql\"]},\"1952\":{\"h\":\"v1.1.0 2024-03-21\",\"t\":[\"可以跳转指定节点\",\"增加全局变量\",\"增加监听器\",\"重构代码，解偶orm，方便扩展不同orm和数据，新增代码示例\",\"修复并行网关流程流程图显示错误问题\"]},\"1953\":{\"h\":\"v1.0.4 2024-03-06\",\"t\":[\"[update] 美化后台返回的流程图\"]},\"1954\":{\"h\":\"v1.0.3 2024-03-05\",\"t\":[\"[update] 重构代码，解偶orm操作，方便扩展其他orm框架\"]},\"1955\":{\"h\":\"v1.0.2 2023-12-31\",\"t\":[\"[fix] 修复solon版本业务系统可不用单独加载warm-flow的xml\"]},\"1956\":{\"h\":\"v1.0.0 2023-12-28\",\"t\":[\"完善流程设计器和流程图，新增vue3版本\",\"放弃js引擎，自研条件表达式\",\"新增支持条件表达式\",\"可退回到任意节点\",\"支持生成流程图\",\"流程设计器开发\",\"互斥网关，并行网关（会签、或签）功能开发\",\"抽离spring生态依赖，支持solon，并且保持事务与业务系统一致\",\"支持待办任务和已办任务，通过权限标识过滤数据\",\"新增多租户模式\",\"原生提供排序\",\"原生提供分页查询\",\"项目上传中央仓库\",\"工作流模块抽取为独立项目，提供集成方式\",\"已办任务和任务记录，审批页面中包含业务详情页面\",\"提供待办任务、提供角色、部门等权限配置\",\"提供流程配置界面\",\"流程配置文件改为表单填报方式\",\"用户角色抽取出来\",\"整理流程表，调整表名和字段名\"]},\"1957\":{\"h\":\"升级指南\",\"t\":[\"注意\",\"更新脚本在项目里面的sql文件下，对应数据库类型，对应版本号\",\"只提供mysql升级脚本和全量脚本，其他升级脚本的自行由mysql升级脚本转换\",\"如果二开设计器，请自行手动同步\"]},\"1958\":{\"h\":\"v1.6.7\",\"t\":[\"执行升级脚本1.6.7版本warm-flow_1.6.7.sql\",\"如果二开设计器，请自行手动同步，参考工作流引擎源码中warm-flow-ui文件夹的提交记录，提交时间范围：2025/1/21 11:46 ~ 2025/2/24 14:59\"]},\"1959\":{\"h\":\"v1.6.6\",\"t\":[\"执行升级脚本1.6.0版本warm-flow_1.6.0.sql\",\"导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json方式\",\"全局FlowFactory替换成FlowEngine\",\"mybatis-flex,easy-query和jpa的扩展包迁移到新的仓库，独立维护\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"条件表达式前端拼接需要把原本eq|flag|5格式 改成 eq@@flag|5,\",\"spel|#{@user.eval(#flag)}改成spel@@#{@user.eval(flag)}\",\"default|${flag == 5 && flag > 4}``改成``default@@${flag == 5 && flag > 4}\",\"最后流程图数据同步：通过DefService.hisToDefJson接口，把历史任务表记录转成新的流程图元数据，保存到实例表中的defJson，新版本流程图才能正常查看\",\"原skip.vue：|分隔回显\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"|\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true});\",\"现skip.vue：@@分隔回显\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"@@\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true});\",\"原/PropertySetting/index.vue：|分隔回显\",\"if (skipCondition) { let conditionSpl = skipCondition.split('|') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' condition = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' conditionValue = conditionSpl && conditionSpl.length > 2 ? conditionSpl[2] : '' } }\",\"现/PropertySetting/index.vue：@@分隔回显\",\"if (skipCondition) { let conditionSpl = skipCondition.split('@@') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' let conditionOneSpl = conditionSpl[1].split(\\\"|\\\") condition = conditionOneSpl && conditionOneSpl.length > 0 ? conditionOneSpl[0] : '' conditionValue = conditionOneSpl && conditionOneSpl.length > 1 ? conditionOneSpl[1] : '' } }\",\"原DefController.java：导入\",\"public R<Void> importDefinition(MultipartFile file) throws Exception { defService.importXml(file.getInputStream()); return R.ok(); }\",\"现DefController.java：导入\",\"public R<Void> importDefinition(MultipartFile file) throws Exception { defService.importIs(file.getInputStream()); return R.ok(); }\",\"原DefController.java：导出\",\"public void exportDefinition(@PathVariable(\\\"id\\\") Long id, HttpServletResponse response) throws Exception { Document document = defService.exportXml(id); // 设置生成xml的格式 OutputFormat of = OutputFormat.createPrettyPrint(); // 设置编码格式 of.setEncoding(\\\"UTF-8\\\"); of.setIndent(true); of.setIndent(\\\" \\\"); of.setNewlines(true); // 创建一个xml文档编辑器 XMLWriter writer = new XMLWriter(response.getOutputStream(), of); writer.setEscapeText(false); response.reset(); response.setCharacterEncoding(\\\"UTF-8\\\"); response.setContentType(\\\"application/x-msdownload\\\"); response.setHeader(\\\"Content-Disposition\\\", \\\"attachment;\\\"); writer.write(document); writer.close(); }\",\"现DefController.java：导出\",\"public ResponseEntity<byte[]> exportDefinition(@PathVariable(\\\"id\\\") Long id) { // 要导出的字符串 String content = defService.exportJson(id); // 设置响应头 HttpHeaders headers = new HttpHeaders(); headers.add(HttpHeaders.CONTENT_DISPOSITION, \\\"attachment; filename=exported_string.txt\\\"); // 返回响应 return ResponseEntity.ok() .headers(headers) .contentType(MediaType.TEXT_PLAIN) .body(content.getBytes(StandardCharsets.UTF_8)); }\"]},\"1960\":{\"h\":\"v1.3.7\",\"t\":[\"执行1.3.7版本升级脚本\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"流程设计时，办理人有多个，回显通过,分隔，改为@@\",\"流程设计时，办理人设置了多个，入库拼接通过,拼接改为@@\",\"原between.vue：,分隔回显\",\"/** 选择角色权限范围触发 */ function getPermissionFlag() { form.value.permissionFlag = form.value.permissionFlag ? form.value.permissionFlag.split(\\\",\\\") : [\\\"\\\"]; if (form.value.listenerType) { const listenerTypes = form.value.listenerType.split(\\\",\\\"); const listenerPaths = form.value.listenerPath.split(\\\"@@\\\"); form.value.listenerRows = listenerTypes.map((type, index) => ({ listenerType: type, listenerPath: listenerPaths[index] })); } }\",\"现between.vue：@@分隔回显\",\"/** 选择角色权限范围触发 */ function getPermissionFlag() { form.value.permissionFlag = form.value.permissionFlag ? form.value.permissionFlag.split(\\\"@@\\\") : [\\\"\\\"]; if (form.value.listenerType) { const listenerTypes = form.value.listenerType.split(\\\",\\\"); const listenerPaths = form.value.listenerPath.split(\\\"@@\\\"); form.value.listenerRows = listenerTypes.map((type, index) => ({ listenerType: type, listenerPath: listenerPaths[index] })); } }\",\"原/PropertySetting/index.vue：入库拼接,\",\"watch(() => form.value.permissionFlag, (n) => { // 监听节点属性变化并更新 props.lf.setProperties(objId.value, { permissionFlag: Array.isArray(n) ? n.filter(e => e).join(',') : n }) }, { deep: true });\",\"现/PropertySetting/index.vue：入库拼接@@\",\"watch(() => form.value.permissionFlag, (n) => { // 监听节点属性变化并更新 props.lf.setProperties(objId.value, { permissionFlag: Array.isArray(n) ? n.filter(e => e).join('@@') : n }) }, { deep: true });\"]},\"1961\":{\"h\":\"v1.3.5\",\"t\":[\"执行升级脚本1.3.5版本升级脚本warm-flow_x.x.x.sql\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"条件表达式前端拼接需要把原本@@eq@@|flag@@eq@5格式 改成 eq|flag|5,\",\"@@spel@@|#{@user.eval(#flag)}改成spel|#{@user.eval(flag)}\",\"新增默认表达default|${flag == 5 && flag > 4}\",\"原between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" style=\\\"width: 20%\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" style=\\\"width: 35%;margin-left: 1%\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> <el-option label=\\\"spel表达式\\\" value=\\\"spel\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" style=\\\"width: 42%;margin-left: 1%;margin-right: 1%;\\\"/> </el-form-item> </slot>\",\"现between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" :style=\\\"{ width: !spelFlag? '30%' : '0%' }\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" :style=\\\"{ width: spelFlag? '18%' : '25%', 'margin-left': '1%' }\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"默认\\\" value=\\\"default\\\"/> <el-option label=\\\"spel\\\" value=\\\"spel\\\"/> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" :style=\\\"{ width: spelFlag? '80%' : '43%', 'margin-left': '1%' }\\\"/> </el-form-item> </slot>\",\"原between.vue：跳转条件下拉框js\",\"watch(() => form, n => { n = n.value; let skipCondition = n.skipCondition; skipCondition = \\\"@@\\\" + n.conditionType + \\\"@@|\\\"; if (n.conditionType !== 'spel') { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"@@\\\" + n.conditionType + \\\"@@\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = obj === 'spel'; } if (props.modelValue?.conditionType === 'spel') spelFlag.value = true;\",\"现between.vue：跳转条件下拉框\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"|\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = (obj === 'spel' || obj === 'default'); } if (props.modelValue?.conditionType === 'spel' || props.modelValue?.conditionType === 'default') { spelFlag.value = true; }\",\"原/PropertySetting/index.vue：回显js\",\"let skipCondition = n.properties.skipCondition let conditionSpl = skipCondition ? skipCondition.split('@@|') : [] let conditionSplTwo = conditionSpl && conditionSpl.length > 0 ? conditionSpl[1]: [] let condition, conditionType, conditionValue = ''; if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] === '@@spel') { conditionType = 'spel' conditionValue = conditionSplTwo } else if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] !== '@@spel') { condition = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[0] : '' conditionType = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[1] : '' conditionValue = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[2] : '' }\",\"现/PropertySetting/index.vue：回显js\",\"let skipCondition = n.properties.skipCondition let condition, conditionType, conditionValue = '' if (skipCondition) { let conditionSpl = skipCondition.split('|') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' condition = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' conditionValue = conditionSpl && conditionSpl.length > 2 ? conditionSpl[2] : '' } }\"]},\"1962\":{\"h\":\"v1.3.4\",\"t\":[\"办理人变量表达式，删除策略前缀，通过$和#区分，需执行1.3.4.升级脚本warm-flow_x.x.x.sql\",\"依赖的groupId：org.dromara，改为org.dromara.warm\",\"如果扩展了条件表达式策略 \",\"接口或者抽象类前缀由ExpressionStrategy改为 ConditionStrategy\",\"全局搜索org.dromara.warm.flow.core.expression 替换为org.dromara.warm.flow.core.expression,然后检查是否正确\"]},\"1963\":{\"h\":\"v1.3.3\",\"t\":[\"独立设计器放行路径增加/warm-flow，如果想要共享后端权限(比如token)，可不增加，并且按照官网流程设计器引入进行设置\"]},\"1964\":{\"h\":\"v1.3.1\",\"t\":[\"依赖的groupId：io.github.minliuhua，改为org.dromara\",\"包名：com.warm， 改为org.dromara.warm\",\"节点详情进入改为双击\",\"终止操作的流程状态改为更合理的终止状态，如需还想按照原本的自动完成，请使用自定义流程状态\",\"FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\",\"转办、委派、加签和减签方法，老方法标识即将删除, 请尽快使用新的接口\",\"终止免校验权限改为设置ignore字段\",\"设计器引入优化 \",\"设计器后端放行地址/warm-flow/**删除，不再需要\",\"前端加载设计器代理配置,vue.config.js或者nginx中的代理，/warm-flow-ui/删除，不再需要\",\"iframe中访问设计器接口由/warm-flow-ui/${definitionId}?disabled=${disabled}，改为VUE_APP_BASE_API +/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\",\"VUE_APP_BASE_API是前端访问前缀比如prod-api\"]},\"1965\":{\"h\":\"v1.3.0\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"1966\":{\"h\":\"v1.2.8\",\"t\":[\"本次升级，内置json库snack3方式，改为spi方式加载，业务项目中存在哪种json就会使用哪种的实现， 支持顺序按顺序加载一种：snack3、jackson、fastjson、gson，并且目前只实现了这四种，可扩展\",\"如在未集成snack3库的环境下，还需要使用snack3库，需要单独使用（原组件使用snack3库）\",\" <dependency> <groupId>org.noear</groupId> <artifactId>snack3</artifactId> <version>3.2.88</version> </dependency>\"]},\"1967\":{\"h\":\"v1.2.6\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"流程状态字段flow_status改为string类型，业务系统需要对应修改\"]},\"1968\":{\"h\":\"v1.2.4\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"流程定义表from_custom改为form_custom，from_path改为form_path，涉及到这两个字段的前后段都要修改\",\"反显审批流程表单，改为通过task表新增的form_custom和form_path字段\",\"只针对mybatis-plus扩展包，其他的扩展包可忽略，多租户和逻辑删除，改为通过mybatis-plus的自带的方式实现( 可参考官网文章逻辑删除和多租户)，并且流程表的逻辑删除字段都更新为0\",\"原本的我发起[warmFlowInitiator], 组件内部不在维护替换，由分派监听器实现替换\"]},\"1969\":{\"h\":\"v1.2.1\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"1970\":{\"h\":\"v1.2.0\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\",\"工具包路径调整\"]},\"1971\":{\"h\":\"v1.1.9\",\"t\":[\"执行.升级脚本warm-flow_x.x.x.sql\"]},\"1972\":{\"h\":\"核心接口api\"},\"1973\":{\"h\":\"DefService流程定义\"},\"1974\":{\"h\":\"导入流程输入流\",\"t\":[\"importIs(is)：流程定义的输入流\"]},\"1975\":{\"h\":\"导入流程json字符串\",\"t\":[\"importJson(defStr)：流程定义defJson的json字符串\"]},\"1976\":{\"h\":\"导入流程json对象\",\"t\":[\"importDef(defJson)：流程定义json对象\"]},\"1977\":{\"h\":\"新增流程\",\"t\":[\"saveAndInitNode(definition)：新增流程定义，并初始化流程节点和流程跳转数据\"]},\"1978\":{\"h\":\"只新增流程定义表数据\",\"t\":[\"checkAndSave(definition)：流程定义对象\"]},\"1979\":{\"h\":\"保存流程节点和跳转\",\"t\":[\"saveDef(defJson)：流程定义json对象\"]},\"1980\":{\"h\":\"导出流程定义json字符串\",\"t\":[\"exportJson(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)的json字符串\"]},\"1981\":{\"h\":\"获取流程定义全部数据对象\",\"t\":[\"getAllDataDefinition(id)： 获取流程定义全部数据(包含节点和跳转)\"]},\"1982\":{\"h\":\"查询流程设计所需的数据\",\"t\":[\"queryDesign(id)： 查询流程设计所需的数据，比如流程图渲染\"]},\"1983\":{\"h\":\"更新流程定义发布状态\",\"t\":[\"updatePublishStatus(defIds, publishStatus)：\",\"defIds: 流程定义id列表 [必传]\",\"publishStatus: 流程定义发布状态 [必传]\"]},\"1984\":{\"h\":\"删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"1985\":{\"h\":\"发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"1986\":{\"h\":\"取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"1987\":{\"h\":\"复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"1988\":{\"h\":\"激活流程\",\"t\":[\"active(id)： 激活流程\"]},\"1989\":{\"h\":\"挂起流程\",\"t\":[\"unActive(id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"1990\":{\"h\":\"ChartService流程图绘制接口\"},\"1991\":{\"h\":\"流程图(渲染状态)\",\"t\":[\"chartIns(instanceId)：根据流程实例ID,获取流程图的图片流(渲染状态)\",\"instanceId: 流程实例id [必传]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"1992\":{\"h\":\"流程图(不渲染状态)\",\"t\":[\"chartDef(definitionId)：根据流程定义ID,获取流程图的图片流(不渲染状态), 返回base64编码的图片流字符串\"]},\"1993\":{\"h\":\"流程图(渲染状态)-可扩展\",\"t\":[\"chartIns(instanceId)：根据流程实例ID,获取流程图的图片流(渲染状态)\",\"instanceId: 流程实例id [必传]\",\"consumer: 可获取流程图对象，可用于修改流程图样式或者新增内容 [按需传输]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"1994\":{\"h\":\"流程图(不渲染状态)-可扩展\",\"t\":[\"chartDef(definitionId)：根据流程实例ID,获取流程图的图片流(不渲染状态), 返回base64编码的图片流字符串\",\"instanceId: 流程实例id [必传]\",\"consumer: 可获取流程图对象，可用于修改流程图样式或者新增内容 [按需传输]\"]},\"1995\":{\"h\":\"流程图(渲染状态)-自行渲染\",\"t\":[\"chartInsObj(instanceId)：根据流程实例ID,获取流程图对象\",\"instanceId: 流程实例id [必传]\",\"返回值：base64编码的图片流字符串，流程实例开启后，流程图元数据存储在实例表中的def_json字段中\"]},\"1996\":{\"h\":\"流程图(不渲染状态)-自行渲染\",\"t\":[\"chartDefObj(definitionId)：根据流程定义ID,获取流程图对象\"]},\"1997\":{\"h\":\"InsService流程实例\"},\"1998\":{\"h\":\"开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"1999\":{\"h\":\"流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 办理是忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"2000\":{\"h\":\"终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"2001\":{\"h\":\"删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"2002\":{\"h\":\"激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"2003\":{\"h\":\"挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"2004\":{\"h\":\"查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"2005\":{\"h\":\"TaskService待办任务\"},\"2006\":{\"h\":\"流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"2007\":{\"h\":\"终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"2008\":{\"h\":\"转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"2009\":{\"h\":\"委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"2010\":{\"h\":\"加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"2011\":{\"h\":\"减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 忽略权限校验（比如管理员不校验），默认不忽略 [按需传输]\"]},\"2012\":{\"h\":\"修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"2013\":{\"h\":\"NodeService流程节点\"},\"2014\":{\"h\":\"获取已发布流程节点\",\"t\":[\"getPublishByFlowCode(flowCode)：根据流程编码获取已发布流程节点集合\"]},\"2015\":{\"h\":\"获取前置节点\",\"t\":[\"previousNodeList(nodeId)：根据节点id获取下所有的前置节点集合\",\"nodeId: 节点id [必传]\"]},\"2016\":{\"h\":\"获取前置节点\",\"t\":[\"previousNodeList(definitionId, nowNodeCode)：根据流程定义id和当前节点code获取所有的前置节点集合\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\"]},\"2017\":{\"h\":\"获取后置节点\",\"t\":[\"suffixNodeList(nodeId)：根据节点id获取下所有的后置节点集合\",\"nodeId: 节点id [必传]\"]},\"2018\":{\"h\":\"获取后置节点\",\"t\":[\"suffixNodeList(definitionId, nowNodeCode)：根据流程定义id和当前节点code获取所有的后置节点集合\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\"]},\"2019\":{\"h\":\"获取后置置节点-含过滤\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"2020\":{\"h\":\"HisTaskService历史记录\"},\"2021\":{\"h\":\"根据任务id和协作类型查询\",\"t\":[\"listByTaskIdAndCooperateTypes(taskId, Integer... cooperateTypes)：根据任务id和协作类型查询\",\"taskId: taskId [必传]\",\"cooperateTypes: 协作类型集合 [按需传输]\"]},\"2022\":{\"h\":\"根据实例Id和节点编码查询\",\"t\":[\"getByInsAndNodeCodes(instanceId, nodeCodes)：根据实例Id和节点编码查询\",\"instanceId: 实例Id [必传]\",\"nodeCodes: 节点编码 [按需传输]\"]},\"2023\":{\"h\":\"根据流程实例Ids删除\",\"t\":[\"deleteByInsIds(instanceIds)：根据流程实例Ids删除\"]},\"2024\":{\"h\":\"公共api接口\"},\"2025\":{\"h\":\"根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"2026\":{\"h\":\"根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"2027\":{\"h\":\"分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"2028\":{\"h\":\"查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"2029\":{\"h\":\"查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"2030\":{\"h\":\"查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"2031\":{\"h\":\"获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"2032\":{\"h\":\"判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"2033\":{\"h\":\"新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"2034\":{\"h\":\"根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"2035\":{\"h\":\"根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"2036\":{\"h\":\"根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"2037\":{\"h\":\"根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"2038\":{\"h\":\"批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"2039\":{\"h\":\"批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"2040\":{\"h\":\"批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"2041\":{\"h\":\"id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"2042\":{\"h\":\"创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"2043\":{\"h\":\"更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"2044\":{\"h\":\"设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"2045\":{\"h\":\"设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"2046\":{\"h\":\"用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"2047\":{\"h\":\"流程协作(票签等)\",\"t\":[\"提示\",\"审批过程中可能存在，一人或者多人审批的情况，不同情况对应不同协作类型（会签、票签和或签）\"]},\"2048\":{\"h\":\"1、流程协作规则\",\"t\":[\"或签：一名办理人审批通过，审批节点才会通过 票签：满足设定的通过率，部分审批人审批通过，审批节点才会通过 会签：所有审批人审批通过，审批节点才会通过\"]},\"2049\":{\"h\":\"2、使用演示\"},\"2050\":{\"h\":\"2.1、或签\"},\"2051\":{\"h\":\"2.2、票签\"},\"2052\":{\"h\":\"2.3、会签\"},\"2053\":{\"h\":\"条件表达式\",\"t\":[\"提示\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"2054\":{\"h\":\"1、内置表达式类型\",\"t\":[\"1、默认: default@@${flag == 5 && flag > 4}\",\"2、SpEL: spel@@#{@user.eval(#flag)}\",\"3、大于: gt@@flag|4\",\"4、大于等于: ge@@flag|4\",\"5、等于: eq@@flag|4\",\"6、不等于： ne@@flag|4\",\"7、小于: lt@@flag|4\",\"8、小于等于: le@@flag|4\",\"9、包含: like@@flag|4\",\"10、不包含: notNike@@flag|4\",\"11、自定义表达式\"]},\"2055\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：xxx@@yyy|zzz，xxx为表达式类型，其中yyy为变量名，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）:spel@@#{@user.eval(#flag)}表达式，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"2056\":{\"h\":\"配置文件\"},\"2057\":{\"h\":\"数据填充器\",\"t\":[\"提示\",\"如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"2058\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"2059\":{\"h\":\"2、注入bean\"},\"2060\":{\"h\":\"设计器集成\",\"t\":[\"提示\",\"为了方便业务系统快速引入设计器，不需要搬运并且适配等工作\",\"可以按照本文中介绍的，使用设计器，并快速接入业务系统\",\"设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"2061\":{\"h\":\"1. 引入依赖\"},\"2062\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/**\"]},\"2063\":{\"h\":\"3. 前端引入设计器\",\"t\":[\"提示\",\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\"]},\"2064\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2065\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2066\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2067\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2068\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"2069\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"2070\":{\"h\":\"办理人变更\",\"t\":[\"提示\",\"审批业务中经常会出现办理人中途变更的情况，比如增加办理人，任务转办给别人等。\"]},\"2071\":{\"h\":\"1、变更支持的类型\",\"t\":[\"转办：任务转给其他人办理\",\"委派：求助其他人审批，然后参照他的意见决定是否审批通过\",\"加签：办理中途，希望其他人一起参与办理\",\"减签：办理中途，希望某些人不参与办理\"]},\"2072\":{\"h\":\"2、接口描述\",\"t\":[\"接口描述地址\"]},\"2073\":{\"h\":\"3、代码示例\"},\"2074\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"求助其他人审批，然后参照他的意见决定是否审批通过\",\"4\",\"转办\",\"任务转给其他人办理\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的发起人，以便进行修改或重新处理\",\"7\",\"撤销\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"办理中途，希望其他人一起参与办理\",\"11\",\"减签\",\"办理中途，希望某些人不参与办理\",\"12\",\"会签\",\"所有审批人审批通过，审批节点才会通过\",\"13\",\"票签\",\"满足设定的通过率，部分审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"一名办理人审批通过，审批节点才会通过\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"2075\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"2076\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"2077\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"2078\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"2079\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"2080\":{\"h\":\"6、流程图元数据流程状态规则：\",\"t\":[\"目标节点，待办\",\"开启流程: \",\"初始化流程定义json\",\"其他的：未办\",\"通过: \",\"途径节点和跳转线：已办，\",\"退回: \",\"途径节点和跳转线：未办，\",\"目标节点之后的所有结点和跳转线：未办\",\"目标节点是结束节点: \",\"目标节点和起始节点：已办\",\"所有待办：未办\",\"如果办理过程中存在并行网关，则需要判断是否需要生成新任务 \",\"获取目标节点最近的并行网关集合\",\"根据目标节点递归往上找最近的并行网关，或者直到不是网关为止\",\"查询每个并行网关的所有的前置路线，记录总数量和已办理数量，如果已办数量=总数量-1，说明可以生成新任务\",\"如果前置节点是非并行网关，总数量+1，已办数量按实际情况记录\",\"如果前置节点是并行网关，递归往上找，直至找到非并行网关，记录总数量和已办数量。\"]},\"2081\":{\"h\":\"快速开始\",\"t\":[\"提示\",\"在开始之前，我们假定您已经:\",\"熟悉 Java 环境配置及其开发\",\"熟悉 关系型 数据库，比如 MySQL\",\"熟悉 Spring Boot或者Solon 及相关框架\",\"熟悉 Java 构建工具，比如 Maven\"]},\"2082\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"2083\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"2084\":{\"h\":\"3、maven依赖\"},\"2085\":{\"h\":\"3.1、从首页获取最新版本\"},\"2086\":{\"h\":\"3.2、mybatis\"},\"2087\":{\"h\":\"3.3、mybatis-plus\"},\"2088\":{\"h\":\"3.4、jpa\",\"t\":[\"https://gitee.com/warm_4/warm-flow-jpa.git\"]},\"2089\":{\"h\":\"3.5、mybatis-flex\",\"t\":[\"https://gitee.com/rigangxia/warm-flow-mybatis-flex.git\"]},\"2090\":{\"h\":\"3.6、easy-query\",\"t\":[\"https://gitee.com/link2fun/warm-flow-easy-query.git\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"2091\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"2092\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"2093\":{\"h\":\"6、初学者推荐学习路线\"},\"2094\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"2095\":{\"h\":\"6.2、推荐学习视频\"},\"2096\":{\"h\":\"表结构\",\"t\":[\"表描述\",\"流程定义的相关的三张表\",\"1、集团军要对某个区域进行长期的军事演练（流程定义表）\",\"2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表）\",\"3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表）\",\"流程实例三张表\",\"4、今天要进行一次军事演练（流程实例表）\",\"5、首先，按照任务计划，解放军执行第一个任务（待办任务表）\",\"6、后续会根据不同情况，进行不同的军事演练任务（待办任务表）\",\"7、演练要记录过程 （历史任务表）\",\"8、任务的需要分配执行人 (流程用户表)\",\"9、最终军事演练完成，流程完成\"]},\"2097\":{\"h\":\"1.1 表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"2098\":{\"h\":\"1.2 表字段明细\"},\"2099\":{\"h\":\"1.2.1\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"2100\":{\"h\":\"1.2.2\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"2101\":{\"h\":\"1.2.3\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"2102\":{\"h\":\"1.2.4\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"2103\":{\"h\":\"1.2.5\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"2104\":{\"h\":\"1.2.6\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"2105\":{\"h\":\"1.2.7\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"2106\":{\"h\":\"流程变量\",\"t\":[\"提示\",\"流程变量，map类型，用于流程执行中的数据转递\",\"在执行流程时，可以设置流程变量\",\"在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"2107\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志\"]},\"2108\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"2109\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"2110\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"2111\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2112\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2113\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2114\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2115\":{\"h\":\"5、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2116\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2117\":{\"h\":\"7、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2118\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.0，不需要在为引入设计器而烦恼了，按照以下前四点，可以快速接入业务系统，下面介绍如何使用设计器\"]},\"2119\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.0</version> </dependency>\"]},\"2120\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"[!IMPORTANT] 1、这两个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"2121\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"[!IMPORTANT] 1、设计器页面入口地址为：/warm-flow-ui/${definitionId}?disabled=${disabled} 2、总体思路就是把前端接口(比如80)代理成后端接口(8080)，去访问该地址，其他不变 3、或者直接通过后端接口访问该地址，可能需要处理跨域问题 4、以下是nginx代理示例：\",\"server { listen 80; server_name localhost; location /warm-flow-ui/ { proxy_pass http://localhost:8080/warm-flow-ui/; } }\"]},\"2122\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"[!IMPORTANT] 给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2123\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2124\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2125\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2126\":{\"h\":\"5、项目介绍\",\"t\":[\"[!IMPORTANT] Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2127\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2128\":{\"h\":\"7、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2129\":{\"h\":\"Warm-Flow发布1.3.4, 支持solon和便捷性提升\"},\"2130\":{\"h\":\"1、老群被干没了，新群：\",\"t\":[\"本次的版本大大提升了工作流的使用便捷性，如下：\",\"设计器引入，新增支持solon 新增监听器spel表达式，并且支持扩展 增加全局监听器，针对整个系统，通过接口接入方式 流程变量表达式支持替换集合\"]},\"2131\":{\"h\":\"2、详细更新内容：\",\"t\":[\"更新日志 \",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器配置页面ui调整\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"2132\":{\"h\":\"3、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2133\":{\"h\":\"4、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2134\":{\"h\":\"7、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2135\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志\"]},\"2136\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"2137\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"2138\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"2139\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2140\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2141\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2142\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2143\":{\"h\":\"5、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2144\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2145\":{\"h\":\"7、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2146\":{\"h\":\"\"},\"2147\":{\"h\":\"Dromara WarmFlow工作流动态指定办理人\"},\"2148\":{\"h\":\"背景：\",\"t\":[\"审批任务的办理人，通常是在流程设计器中预先设定好办理人，那如果想要在办理过程中指定办理人呢？ 那不得不提一下本次的主角，来自Dromara组织的WarmFlow工作流，通过他的办理人变量表达式就能很好解决此问题。\"]},\"2149\":{\"h\":\"解决思路\",\"t\":[\"1、流程设计时，需要动态指定办理人的节点，配置办理人变量表达式${handler1}\",\"2、当上一个任务办理时，在流程变量中传入${handler1}的值\",\"3、办理完成会生成本节点任务，即可替换完成\",\"后端代码设置变量\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2150\":{\"h\":\"高级玩法\",\"t\":[\"支持动态指定一群人\",\"支持spel表达式\",\"支持表达式扩展\",\"把如上代码\\\"100\\\"改成Arrays.asList(4, \\\"5\\\", 100L)，就可以动态指定一群人\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2151\":{\"h\":\"总结\",\"t\":[\"是不是通过WarmFlow工作流可以很简单的管理你的审批业务呢，还不快快加入v\",\"另外Dromara组织还有大量好用的项目，欢迎评鉴\"]},\"2152\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志 最新版本集成方式请看官方文档\"]},\"2153\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"2154\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"2155\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"2156\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2157\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2158\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2159\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2160\":{\"h\":\"5、项目介绍\"},\"2161\":{\"h\":\"🧨Warm-Flow新春版1.6.6：网关直连和流程图重构, 新增Ruoyi-Vue-Plus优秀开源集成案例\",\"t\":[\"本期主要解决了网关直连和流程图重构，可以自此之后可支持各种复杂的网关混合、多网关直连使用。\",\"新增Ruoyi-Vue-Plus优秀开源集成案例\"]},\"2162\":{\"h\":\"更新日志\",\"t\":[\"升级指南\",\"[feat] 导入、导出和保存等新增json格式支持DefService.importIs/importJson/importDef/saveDef/exportJson\",\"[feat] 新增获取后置节点方法NodeService.suffixNodeList\",\"[feat] 新增网关直连和测试案例\",\"[feat] 流程图右上角新增完成状态颜色示例\",\"[feat] 新增流程图查询接口和扩展接口ChartService\",\"[feat] 新增历史表数据同步为新的流程图元数据\",\"[feat] 新增sqlserver全量脚本\",\"[update] 导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json的api\",\"[update] FlowFactory修改为FlowEngine\",\"[update] 历史表目标节点编码和目标节点名称字段长度改为200\",\"[update] 通过或者退回到并行网关，开启多个任务，改为只产生一条历史记录\",\"[update] 退回或者任务完成，其他需要被删除的任务不需要记录历史表，因为已经存在退回记录，不需要重复记录\",\"[update] 转办、委派、加签和减签，改为只产生一条历史记录\",\"[update] 批量保存改为默认1000条一批\",\"[update] 流程设计保存，增加遮罩层\",\"[refactor] 流程图绘制调整重构\",\"[refactor] 移除mybatis-flex,easy-query和jpa的扩展包，独立成项目，由专门人维护\",\"[refactor] 实体类和dao获取改为通过反射，解耦orm-core包\",\"[refactor] 重构获取前置节点方法NodeService.previousNodeList\",\"[fix] 修复退回时存在其他代办任务，未删除的问题\",\"[fix] 修复流程退回目标节点前存在并行网关，导致不生成代办任务的问题\",\"[fix] 修复条件表达式中如果有|或导致错误分隔的问题\",\"[fix] 修复绘制流程图，错误判断同一条录像的key\",\"[fix] 修复结束节点还执行创建监听器的问题\",\"[remove] 移除DefService获取流程图api，由ChartService中chartIns和chartDef代替\",\"[remove] 删除前端log打印\",\"[remove] 移除oracle和postgresql升级脚本，后续只提供mysql升级脚本，所有的全量脚本，其他升级脚本的自行转换\"]},\"2163\":{\"h\":\"项目介绍\",\"t\":[\"Dromara Warm-Flow国产工作流引擎，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"支持常见审批功能、监听器与流程变量、条件表达式、办理人变量表达式\",\"自带流程图、流程设计器\",\"生态丰富可扩展\",\"文档全面\"]},\"2164\":{\"h\":\"演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2165\":{\"h\":\"官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2166\":{\"h\":\"演示图\"},\"2167\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"2168\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"2169\":{\"h\":\"2、以下为简短案例\"},\"2170\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"2171\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"2172\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"2173\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"2174\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"2175\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2176\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2177\":{\"h\":\"6、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2178\":{\"h\":\"三头六臂显神通：Warm-Flow引擎实现多维度灵活配置\"},\"2179\":{\"h\":\"主要更新内容\",\"t\":[\"设计器支持节点扩展属性设置\",\"流程图扩展，新增接口，方便追加文字\",\"流程状态支持颜色支持自定义\"]},\"2180\":{\"h\":\"详细更新日志\",\"t\":[\"升级指南\",\"[feat] 设计器支持节点扩展属性设置\",\"[feat] 流程图扩展，新增接口，方便追加文字\",\"[feat] 流程状态支持颜色支持自定义\",\"[update] 节点表版本号字段标识下个版本删除\",\"[update] Jackson反序列化时忽略未知字段\",\"[update] 删除部分代码，调整注释\",\"[update] 修改当票签和会签节点时，注意事项描述\",\"[fix] 规范solon,api注解 防止某些情况获取不到方法参数名\",\"[fix] 删除流程实例的时候，办理用户不存在，导致删除失败\",\"[fix] #IBP397：修复当设计流程，开始节点出现再负坐标时，文字名称未显示\",\"[fix] #IBP3LK：修复开启流程，流程图第一个节点不是待办颜色\",\"[fix] 网关节点编辑文字报错处理\",\"[remove] 移除流程定义xml导入导出方式\",\"[remove] 移除多余的skip_Any_Node字段\",\"[style] 常量改成大写和下划线\"]},\"2181\":{\"h\":\"项目介绍\",\"t\":[\"Dromara Warm-Flow国产工作流引擎，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"支持常见审批功能、监听器与流程变量、条件表达式、办理人变量表达式\",\"自带流程图、流程设计器、节点扩展属性\",\"生态丰富可扩展\",\"文档全面\"]},\"2182\":{\"h\":\"演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2183\":{\"h\":\"官网\",\"t\":[\"https://warm-flow.dromara.org\"]},\"2184\":{\"h\":\"本次更新效果图\"},\"2185\":{\"h\":\"\"},\"2186\":{\"h\":\"作者介绍\",\"t\":[\"名称：warm\",\"dromara 开源组织成员，dromara/warm-flow作者\",\"研发工程师、技术经理，工作经验8年。此工作流已经持续开发有一年有余。\",\"Gitee|Github\",\"微信：warm-houhou；qq群：778470567\",\"大家好，我是warm，是warm-flow工作流引擎的作者，来自于美丽的江西南昌，从事开发8年有余。此工作流持续开发一年了，那还得从工作流的痛点来说，\"]},\"2187\":{\"h\":\"历史背景\",\"t\":[\"flowable和activities确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗\",\"学习曲线： 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。\",\"复杂性： 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。\",\"定制化需求： 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。\",\"版本更新： 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。\",\"阅读难度： 全英文注释，对于英文不好的人来说，确实有门槛。\",\"那何不开发属于国人的工作流呢，为此耗时一年时间自研warm-flow工作流。\"]},\"2188\":{\"h\":\"warm-flow能给你带来什么\",\"t\":[\"[!IMPORTANT] Warm-Flow国产工作流引擎🎉，其特点简洁轻量但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持五种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"条件表达式：内置常见的条件表达式，并且支持自定义扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"支持角色、部门和用户等权限配置\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"接入warm-flow后妈妈再也不用担心我加班了\"]},\"2189\":{\"h\":\"项目功能模块\"},\"2190\":{\"h\":\"流程流转管理\",\"t\":[\"​ 流程流转就像是warm-flow的驾驶人。让办理流程像喝水一样简单的事情。\",\"// 部署流程 public void deployFlow() throws Exception { defService.importXml(new FileInputStream(\\\"/xxx/leaveFlow-serial.xml\\\")); } // 发布流程 public void publish() { defService.publish(1219285650587652096L); } // 开启流程 public void startFlow() { insService.start(\\\"2\\\", getUser()); } // 跳转流程 public void skipFlow() { Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); } //任意跳转 public void skipAnyNode() { Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); } // 终止流程 public void termination() { taskService.termination(1232001396254052352L, getUser()); }\"]},\"2191\":{\"h\":\"流程图管理\",\"t\":[\"​ 流程图管理就像warm-flow的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow自研了流程图绘制，通过设计器获取坐标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的demo项目中设计好导出xml，业务系统再次导入即可）。\",\"屏幕截图\"]},\"2192\":{\"h\":\"监听器管理\",\"t\":[\"监听器可以说是工作流引擎的上限，灵活度和可扩展性的核心人物\",\"监听器类型 \",\"create：创建监听器，任务创建时执行\",\"start：开始监听器，任务开始办理时执行\",\"assignment： 分派办理人监听器，分派后执行\",\"finish：结束监听器，当前任务完成后执行\",\"监听器生命周期\",\"屏幕截图\"]},\"2193\":{\"h\":\"配置管理\",\"t\":[\"​ 配置文件可以让工作流使用更加方便，如虎添翼。\",\"配置文件目前支持banner图和填充器配置，后续还会增加多租户和软删除等。\",\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 填充器 （可通过配置文件注入，也可用@Bean/@Component方式） data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式） tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\",\"填充器也可通过代码方式注入\",\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"2194\":{\"h\":\"扩展支持\"},\"2195\":{\"h\":\"orm和数据库扩展\",\"t\":[\"​ 作为新时代的程序员不能固步自封，只支持mybatis和msyql。所以目前已经解偶数据库操作，按照mybatis方式扩展其他的orm或者数据库类型即可\",\"屏幕截图\"]},\"2196\":{\"h\":\"条件表达式扩展\",\"t\":[\"​ 工作流引擎想要灵活跳转，就得有相应表达式，满足不同的条件，执行不同的任务，目前支持，并且支持规则扩展\",\">, >=, <, <=, =, !=, like, not like\"]},\"2197\":{\"h\":\"gitee变成maven私库\"},\"2198\":{\"h\":\"1、背景\",\"t\":[\"当由于各种原因，比如网络、想控制谁有权限访问类库或者公司没有服务器作为私库等，可以采用此法建立私库。\",\"​\"]},\"2199\":{\"h\":\"2、Gitee建新的仓库\",\"t\":[\"我的仓库地址：https://gitee.com/min290/warm-flow-repo.git\"]},\"2200\":{\"h\":\"2.1、首先要建立仓库\",\"t\":[\"img\",\"​\"]},\"2201\":{\"h\":\"\",\"t\":[\"img\",\"​\"]},\"2202\":{\"h\":\"3、下载此项目\",\"t\":[\"比如我的下载到：D:/IdeaProjects/min/warm-flow-repo\",\"​\"]},\"2203\":{\"h\":\"4、上传私库的到本地\",\"t\":[\"上传命令：mvn clean deploy -P gitee\",\"配置介绍：\",\"distributionManagement：此配置上传到本地的路径\",\"maven-source-plugin：打包附带源码 maven-javadoc-plugin：打包附带api文档\",\"<profile> <id>gitee</id> <build> <plugins> <!-- Source --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> <version>2.2.1</version> <executions> <execution> <id>attach-sources</id> <goals> <goal>jar-no-fork</goal> </goals> </execution> </executions> </plugin> <!-- Javadoc --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> <version>2.10.4</version> <configuration> <!-- 忽略生成文档中的错误 --> <additionalparam>-Xdoclint:none</additionalparam> <aggregate>true</aggregate> <charset>UTF-8</charset><!-- utf-8读取文件 --> <encoding>UTF-8</encoding><!-- utf-8进行编码代码 --> <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 --> </configuration> <executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> </plugins> </build> <distributionManagement> <snapshotRepository> <id>gitee-snapshots</id> <url>file:D:/IdeaProjects/min/warm-flow-repo/snapshots</url> </snapshotRepository> <repository> <id>gitee-releases</id> <name>releases</name> <url>file:D:/IdeaProjects/min/warm-flow-repo/releases</url> </repository> </distributionManagement> </profile> </profiles>\",\"​\"]},\"2204\":{\"h\":\"5、下载依赖\",\"t\":[\"在pom.xml的project目录下新增如下配置\",\"​\",\"<repositories> <repository> <id>Gitee-Warm-Flow</id> <url>https://gitee.com/min290/maven-repository/raw/main/releases</url> </repository> </repositories>\",\"需要注意：如果没有此配置没有生效，还是走maven中setting的镜像仓库，需要查看，mirrorOf是否位“*”，此代码拦截所有仓库，需要增加排除“!Gitee-Warm-Flow”\",\"img\",\"​\",\"改为如下，重新加载依赖，如还为生效，可能缓存原因，重启idea。\",\"img\"]},\"2205\":{\"h\":\"\"},\"2206\":{\"h\":\"Dromara WarmFlow工作流动态指定办理人\"},\"2207\":{\"h\":\"背景：\",\"t\":[\"审批任务的办理人，通常是在流程设计器中预先设定好办理人，那如果想要在办理过程中指定办理人呢？ 那不得不提一下本次的主角，来自Dromara组织的WarmFlow工作流，通过他的办理人变量表达式就能很好解决此问题。\"]},\"2208\":{\"h\":\"解决思路\",\"t\":[\"1、流程设计时，需要动态指定办理人的节点，配置办理人变量表达式${handler1}\",\"2、当上一个任务办理时，在流程变量中传入${handler1}的值\",\"3、办理完成会生成本节点任务，即可替换完成\",\"后端代码设置变量\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2209\":{\"h\":\"高级玩法\",\"t\":[\"支持动态指定一群人\",\"支持spel表达式\",\"支持表达式扩展\",\"把如上代码\\\"100\\\"改成Arrays.asList(4, \\\"5\\\", 100L)，就可以动态指定一群人\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2210\":{\"h\":\"总结\",\"t\":[\"是不是通过WarmFlow工作流可以很简单的管理你的审批业务呢，还不快快加入v\",\"另外Dromara组织还有大量好用的项目，欢迎评鉴\"]},\"2211\":{\"h\":\"gitee变成maven私库\"},\"2212\":{\"h\":\"1、背景\",\"t\":[\"当由于各种原因，比如网络、想控制谁有权限访问类库或者公司没有服务器作为私库等，可以采用此法建立私库。\",\"​\"]},\"2213\":{\"h\":\"2、Gitee建新的仓库\",\"t\":[\"我的仓库地址：https://gitee.com/min290/warm-flow-repo.git\"]},\"2214\":{\"h\":\"2.1、首先要建立仓库\",\"t\":[\"img\",\"​\"]},\"2215\":{\"h\":\"\",\"t\":[\"img\",\"​\"]},\"2216\":{\"h\":\"3、下载此项目\",\"t\":[\"比如我的下载到：D:/IdeaProjects/min/warm-flow-repo\",\"​\"]},\"2217\":{\"h\":\"4、上传私库的到本地\",\"t\":[\"上传命令：mvn clean deploy -P gitee\",\"配置介绍：\",\"distributionManagement：此配置上传到本地的路径\",\"maven-source-plugin：打包附带源码 maven-javadoc-plugin：打包附带api文档\",\"<profile> <id>gitee</id> <build> <plugins> <!-- Source --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> <version>2.2.1</version> <executions> <execution> <id>attach-sources</id> <goals> <goal>jar-no-fork</goal> </goals> </execution> </executions> </plugin> <!-- Javadoc --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> <version>2.10.4</version> <configuration> <!-- 忽略生成文档中的错误 --> <additionalparam>-Xdoclint:none</additionalparam> <aggregate>true</aggregate> <charset>UTF-8</charset><!-- utf-8读取文件 --> <encoding>UTF-8</encoding><!-- utf-8进行编码代码 --> <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 --> </configuration> <executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> </plugins> </build> <distributionManagement> <snapshotRepository> <id>gitee-snapshots</id> <url>file:D:/IdeaProjects/min/warm-flow-repo/snapshots</url> </snapshotRepository> <repository> <id>gitee-releases</id> <name>releases</name> <url>file:D:/IdeaProjects/min/warm-flow-repo/releases</url> </repository> </distributionManagement> </profile> </profiles>\",\"​\"]},\"2218\":{\"h\":\"5、下载依赖\",\"t\":[\"在pom.xml的project目录下新增如下配置\",\"​\",\"<repositories> <repository> <id>Gitee-Warm-Flow</id> <url>https://gitee.com/min290/maven-repository/raw/main/releases</url> </repository> </repositories>\",\"需要注意：如果没有此配置没有生效，还是走maven中setting的镜像仓库，需要查看，mirrorOf是否位“*”，此代码拦截所有仓库，需要增加排除“!Gitee-Warm-Flow”\",\"img\",\"​\",\"改为如下，重新加载依赖，如还为生效，可能缓存原因，重启idea。\",\"img\"]},\"2219\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志 最新版本集成方式请看官方文档\"]},\"2220\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"2221\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"2222\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"2223\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2224\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2225\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2226\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2227\":{\"h\":\"5、项目介绍\"},\"2228\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"2229\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"2230\":{\"h\":\"2、以下为简短案例\"},\"2231\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"2232\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"2233\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"2234\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"2235\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"2236\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2237\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2238\":{\"h\":\"6、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2239\":{\"h\":\"升级指南\"},\"2240\":{\"h\":\"v1.3.5 2024-12-20\",\"t\":[\"执行升级脚本1.3.5版本升级脚本\",\"如果设计器是自己维护的，需要相应调整，可以参考如下 \",\"条件表达式前端拼接需要把原本@@eq@@|flag@@eq@5格式 改成 eq|flag|5,\",\"@@spel@@|#{@user.eval(#flag)}改成spel|#{@user.eval(flag)}\",\"新增默认表达default|${flag == 5 && flag > 4}\",\"原between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" style=\\\"width: 20%\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" style=\\\"width: 35%;margin-left: 1%\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> <el-option label=\\\"spel表达式\\\" value=\\\"spel\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" style=\\\"width: 42%;margin-left: 1%;margin-right: 1%;\\\"/> </el-form-item> </slot>\",\"现between.vue：跳转条件下拉框\",\"<slot name=\\\"form-item-task-skipCondition\\\" v-if=\\\"skipConditionShow\\\" :model=\\\"form\\\" field=\\\"skipCondition\\\"> <el-form-item label=\\\"跳转条件\\\"> <el-input v-model=\\\"form.condition\\\" v-if=\\\"!spelFlag\\\" placeholder=\\\"条件名\\\" :style=\\\"{ width: !spelFlag? '30%' : '0%' }\\\"/> <el-select v-model=\\\"form.conditionType\\\" placeholder=\\\"请选择条件方式\\\" :style=\\\"{ width: spelFlag? '18%' : '25%', 'margin-left': '1%' }\\\" @change=\\\"changeOper\\\"> <el-option label=\\\"默认\\\" value=\\\"default\\\"/> <el-option label=\\\"spel\\\" value=\\\"spel\\\"/> <el-option label=\\\"大于\\\" value=\\\"gt\\\"/> <el-option label=\\\"大于等于\\\" value=\\\"ge\\\"/> <el-option label=\\\"等于\\\" value=\\\"eq\\\"/> <el-option label=\\\"不等于\\\" value=\\\"ne\\\"/> <el-option label=\\\"小于\\\" value=\\\"lt\\\"/> <el-option label=\\\"小于等于\\\" value=\\\"le\\\"/> <el-option label=\\\"包含\\\" value=\\\"like\\\"/> <el-option label=\\\"不包含\\\" value=\\\"notNike\\\"/> </el-select> <el-input v-model=\\\"form.conditionValue\\\" placeholder=\\\"条件值\\\" :style=\\\"{ width: spelFlag? '80%' : '43%', 'margin-left': '1%' }\\\"/> </el-form-item> </slot>\",\"原between.vue：跳转条件下拉框js\",\"watch(() => form, n => { n = n.value; let skipCondition = n.skipCondition; skipCondition = \\\"@@\\\" + n.conditionType + \\\"@@|\\\"; if (n.conditionType !== 'spel') { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"@@\\\" + n.conditionType + \\\"@@\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = obj === 'spel'; } if (props.modelValue?.conditionType === 'spel') spelFlag.value = true;\",\"现between.vue：跳转条件下拉框\",\"watch(() => form, n => { n = n.value; let skipCondition = ''; skipCondition = n.conditionType + \\\"|\\\"; if (!/^spel/.test(n.conditionType) && !/^default/.test(n.conditionType)) { skipCondition = skipCondition + (n.condition ? n.condition : '') + \\\"|\\\"; } n.skipCondition = skipCondition + (n.conditionValue ? n.conditionValue : '') if (n) { emit('change', n) } }, {deep: true}); function changeOper(obj) { spelFlag.value = (obj === 'spel' || obj === 'default'); } if (props.modelValue?.conditionType === 'spel' || props.modelValue?.conditionType === 'default') { spelFlag.value = true; }\",\"原/PropertySetting/index.html：回显js\",\"let skipCondition = n.properties.skipCondition let conditionSpl = skipCondition ? skipCondition.split('@@|') : [] let conditionSplTwo = conditionSpl && conditionSpl.length > 0 ? conditionSpl[1]: [] let condition, conditionType, conditionValue = ''; if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] === '@@spel') { conditionType = 'spel' conditionValue = conditionSplTwo } else if (conditionSpl && conditionSpl.length > 0 && conditionSpl[0] !== '@@spel') { condition = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[0] : '' conditionType = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[1] : '' conditionValue = conditionSplTwo && conditionSplTwo.length > 0 ? conditionSplTwo.split(\\\"@@\\\")[2] : '' }\",\"现/PropertySetting/index.html：回显js\",\"let skipCondition = n.properties.skipCondition let condition, conditionType, conditionValue = '' if (skipCondition) { let conditionSpl = skipCondition.split('|') if (skipCondition && (/^spel/.test(skipCondition) || /^default/.test(skipCondition))) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' conditionValue = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' } else if (skipCondition) { conditionType = conditionSpl && conditionSpl.length > 0 ? conditionSpl[0] : '' condition = conditionSpl && conditionSpl.length > 1 ? conditionSpl[1] : '' conditionValue = conditionSpl && conditionSpl.length > 2 ? conditionSpl[2] : '' } }\"]},\"2241\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"办理人变量表达式，删除策略前缀，通过$和#区分，需执行1.3.4增量脚本sql\",\"依赖的groupId：org.dromara，改为org.dromara.warm\",\"如果扩展了条件表达式策略 \",\"接口或者抽象类前缀由ExpressionStrategy改为 ConditionStrategy\",\"全局搜索org.dromara.warm.flow.core.expression 替换为org.dromara.warm.flow.core.expression,然后检查是否正确\"]},\"2242\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"独立设计器放行路径增加/warm-flow，如果想要共享后端权限(比如token)，可不增加，并且按照官网流程设计器引入进行设置\"]},\"2243\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"依赖的groupId：io.github.minliuhua，改为org.dromara\",\"包名：com.warm， 改为org.dromara.warm\",\"节点详情进入改为双击\",\"终止操作的流程状态改为更合理的终止状态，如需还想按照原本的自动完成，请使用自定义流程状态\",\"FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\",\"转办、委派、加签和减签方法，老方法标识即将删除, 请尽快使用新的接口\",\"终止免校验权限改为设置ignore字段\",\"设计器引入优化 \",\"设计器后端放行地址/warm-flow/**删除，不再需要\",\"前端加载设计器代理配置,vue.config.js或者nginx中的代理，/warm-flow-ui/删除，不再需要\",\"iframe中访问设计器接口由/warm-flow-ui/${definitionId}?disabled=${disabled}，改为VUE_APP_BASE_API +/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\",\"VUE_APP_BASE_API是前端访问前缀比如prod-api\"]},\"2244\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"执行升级脚本【warm-flow_1.3.0.sql】\"]},\"2245\":{\"h\":\"v1.2.10 2024-09-26\",\"t\":[\"无\"]},\"2246\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"本次升级，内置json库snack3方式，改为spi方式加载，业务项目中存在哪种json就会使用哪种的实现， 支持顺序按顺序加载一种：snack3、jackson、fastjson、gson，并且目前只实现了这四种，可扩展\",\"如在未集成snack3库的环境下，还需要使用snack3库，需要单独使用（原组件使用snack3库）\",\" <dependency> <groupId>org.noear</groupId> <artifactId>snack3</artifactId> <version>3.2.88</version> </dependency>\"]},\"2247\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"无\"]},\"2248\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"执行升级脚本【warm-flow_1.2.6.sql】\",\"流程状态字段flow_status改为string类型，业务系统需要对应修改\"]},\"2249\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"执行升级脚本【warm-flow_1.2.4.sql】\",\"流程定义表from_custom改为form_custom，from_path改为form_path，涉及到这两个字段的前后段都要修改\",\"反显审批流程表单，改为通过task表新增的form_custom和form_path字段\",\"只针对mybatis-plus扩展包，其他的扩展包可忽略，多租户和逻辑删除，改为通过mybatis-plus的自带的方式实现( 可参考官网文章逻辑删除和多租户)，并且流程表的逻辑删除字段都更新为0\",\"原本的我发起[warmFlowInitiator], 组件内部不在维护替换，由分派监听器实现替换\"]},\"2250\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"无\"]},\"2251\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"执行升级脚本【warm-flow_1.2.1.sql】\"]},\"2252\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"执行升级脚本【warm-flow_1.2.0.sql】\",\"工具包路径调整\"]},\"2253\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"执行升级脚本【warm-flow_1.1.90.sql】\"]},\"2254\":{\"h\":\"\"},\"2255\":{\"h\":\"作者介绍\",\"t\":[\"名称：warm\",\"dromara 开源组织成员，dromara/warm-flow作者\",\"研发工程师、技术经理，工作经验8年。此工作流已经持续开发有一年有余。\",\"Gitee|Github\",\"微信：warm-houhou；qq群：778470567\",\"大家好，我是warm，是warm-flow工作流引擎的作者，来自于美丽的江西南昌，从事开发8年有余。此工作流持续开发一年了，那还得从工作流的痛点来说，\"]},\"2256\":{\"h\":\"历史背景\",\"t\":[\"flowable和activities确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗\",\"学习曲线： 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。\",\"复杂性： 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。\",\"定制化需求： 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。\",\"版本更新： 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。\",\"阅读难度： 全英文注释，对于英文不好的人来说，确实有门槛。\",\"那何不开发属于国人的工作流呢，为此耗时一年时间自研warm-flow工作流。\"]},\"2257\":{\"h\":\"warm-flow能给你带来什么\",\"t\":[\"[!IMPORTANT] Warm-Flow国产工作流引擎🎉，其特点简洁轻量但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持五种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"条件表达式：内置常见的条件表达式，并且支持自定义扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"支持角色、部门和用户等权限配置\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"接入warm-flow后妈妈再也不用担心我加班了\"]},\"2258\":{\"h\":\"项目功能模块\"},\"2259\":{\"h\":\"流程流转管理\",\"t\":[\"​ 流程流转就像是warm-flow的驾驶人。让办理流程像喝水一样简单的事情。\",\"// 部署流程 public void deployFlow() throws Exception { defService.importXml(new FileInputStream(\\\"/xxx/leaveFlow-serial.xml\\\")); } // 发布流程 public void publish() { defService.publish(1219285650587652096L); } // 开启流程 public void startFlow() { insService.start(\\\"2\\\", getUser()); } // 跳转流程 public void skipFlow() { Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); } //任意跳转 public void skipAnyNode() { Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); } // 终止流程 public void termination() { taskService.termination(1232001396254052352L, getUser()); }\"]},\"2260\":{\"h\":\"流程图管理\",\"t\":[\"​ 流程图管理就像warm-flow的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow自研了流程图绘制，通过设计器获取坐标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的demo项目中设计好导出xml，业务系统再次导入即可）。\",\"屏幕截图\"]},\"2261\":{\"h\":\"监听器管理\",\"t\":[\"监听器可以说是工作流引擎的上限，灵活度和可扩展性的核心人物\",\"监听器类型 \",\"create：创建监听器，任务创建时执行\",\"start：开始监听器，任务开始办理时执行\",\"assignment： 分派办理人监听器，分派后执行\",\"finish：结束监听器，当前任务完成后执行\",\"监听器生命周期\",\"屏幕截图\"]},\"2262\":{\"h\":\"配置管理\",\"t\":[\"​ 配置文件可以让工作流使用更加方便，如虎添翼。\",\"配置文件目前支持banner图和填充器配置，后续还会增加多租户和软删除等。\",\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 填充器 （可通过配置文件注入，也可用@Bean/@Component方式） data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式） tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\",\"填充器也可通过代码方式注入\",\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"2263\":{\"h\":\"扩展支持\"},\"2264\":{\"h\":\"orm和数据库扩展\",\"t\":[\"​ 作为新时代的程序员不能固步自封，只支持mybatis和msyql。所以目前已经解偶数据库操作，按照mybatis方式扩展其他的orm或者数据库类型即可\",\"屏幕截图\"]},\"2265\":{\"h\":\"条件表达式扩展\",\"t\":[\"​ 工作流引擎想要灵活跳转，就得有相应表达式，满足不同的条件，执行不同的任务，目前支持，并且支持规则扩展\",\">, >=, <, <=, =, !=, like, not like\"]},\"2266\":{\"h\":\"\"},\"2267\":{\"h\":\"Dromara WarmFlow工作流动态指定办理人\"},\"2268\":{\"h\":\"背景：\",\"t\":[\"审批任务的办理人，通常是在流程设计器中预先设定好办理人，那如果想要在办理过程中指定办理人呢？ 那不得不提一下本次的主角，来自Dromara组织的WarmFlow工作流，通过他的办理人变量表达式就能很好解决此问题。\"]},\"2269\":{\"h\":\"解决思路\",\"t\":[\"1、流程设计时，需要动态指定办理人的节点，配置办理人变量表达式${handler1}\",\"2、当上一个任务办理时，在流程变量中传入${handler1}的值\",\"3、办理完成会生成本节点任务，即可替换完成\",\"后端代码设置变量\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2270\":{\"h\":\"高级玩法\",\"t\":[\"支持动态指定一群人\",\"支持spel表达式\",\"支持表达式扩展\",\"把如上代码\\\"100\\\"改成Arrays.asList(4, \\\"5\\\", 100L)，就可以动态指定一群人\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2271\":{\"h\":\"总结\",\"t\":[\"是不是通过WarmFlow工作流可以很简单的管理你的审批业务呢，还不快快加入v\",\"另外Dromara组织还有大量好用的项目，欢迎评鉴\"]},\"2272\":{\"h\":\"\"},\"2273\":{\"h\":\"作者介绍\",\"t\":[\"名称：warm\",\"dromara 开源组织成员，dromara/warm-flow作者\",\"研发工程师、技术经理，工作经验8年。此工作流已经持续开发有一年有余。\",\"Gitee|Github\",\"微信：warm-houhou；qq群：778470567\",\"大家好，我是warm，是warm-flow工作流引擎的作者，来自于美丽的江西南昌，从事开发8年有余。此工作流持续开发一年了，那还得从工作流的痛点来说，\"]},\"2274\":{\"h\":\"历史背景\",\"t\":[\"flowable和activities确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗\",\"学习曲线： 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。\",\"复杂性： 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。\",\"定制化需求： 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。\",\"版本更新： 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。\",\"阅读难度： 全英文注释，对于英文不好的人来说，确实有门槛。\",\"那何不开发属于国人的工作流呢，为此耗时一年时间自研warm-flow工作流。\"]},\"2275\":{\"h\":\"warm-flow能给你带来什么\",\"t\":[\"[!IMPORTANT] Warm-Flow国产工作流引擎🎉，其特点简洁轻量但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持五种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"条件表达式：内置常见的条件表达式，并且支持自定义扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"支持角色、部门和用户等权限配置\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"接入warm-flow后妈妈再也不用担心我加班了\"]},\"2276\":{\"h\":\"项目功能模块\"},\"2277\":{\"h\":\"流程流转管理\",\"t\":[\"​ 流程流转就像是warm-flow的驾驶人。让办理流程像喝水一样简单的事情。\",\"// 部署流程 public void deployFlow() throws Exception { defService.importXml(new FileInputStream(\\\"/xxx/leaveFlow-serial.xml\\\")); } // 发布流程 public void publish() { defService.publish(1219285650587652096L); } // 开启流程 public void startFlow() { insService.start(\\\"2\\\", getUser()); } // 跳转流程 public void skipFlow() { Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); } //任意跳转 public void skipAnyNode() { Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); } // 终止流程 public void termination() { taskService.termination(1232001396254052352L, getUser()); }\"]},\"2278\":{\"h\":\"流程图管理\",\"t\":[\"​ 流程图管理就像warm-flow的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow自研了流程图绘制，通过设计器获取坐标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的demo项目中设计好导出xml，业务系统再次导入即可）。\",\"屏幕截图\"]},\"2279\":{\"h\":\"监听器管理\",\"t\":[\"监听器可以说是工作流引擎的上限，灵活度和可扩展性的核心人物\",\"监听器类型 \",\"create：创建监听器，任务创建时执行\",\"start：开始监听器，任务开始办理时执行\",\"assignment： 分派办理人监听器，分派后执行\",\"finish：结束监听器，当前任务完成后执行\",\"监听器生命周期\",\"屏幕截图\"]},\"2280\":{\"h\":\"配置管理\",\"t\":[\"​ 配置文件可以让工作流使用更加方便，如虎添翼。\",\"配置文件目前支持banner图和填充器配置，后续还会增加多租户和软删除等。\",\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 填充器 （可通过配置文件注入，也可用@Bean/@Component方式） data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式） tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\",\"填充器也可通过代码方式注入\",\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"2281\":{\"h\":\"扩展支持\"},\"2282\":{\"h\":\"orm和数据库扩展\",\"t\":[\"​ 作为新时代的程序员不能固步自封，只支持mybatis和msyql。所以目前已经解偶数据库操作，按照mybatis方式扩展其他的orm或者数据库类型即可\",\"屏幕截图\"]},\"2283\":{\"h\":\"条件表达式扩展\",\"t\":[\"​ 工作流引擎想要灵活跳转，就得有相应表达式，满足不同的条件，执行不同的任务，目前支持，并且支持规则扩展\",\">, >=, <, <=, =, !=, like, not like\"]},\"2284\":{\"h\":\"gitee变成maven私库\"},\"2285\":{\"h\":\"1、背景\",\"t\":[\"当由于各种原因，比如网络、想控制谁有权限访问类库或者公司没有服务器作为私库等，可以采用此法建立私库。\",\"​\"]},\"2286\":{\"h\":\"2、Gitee建新的仓库\",\"t\":[\"我的仓库地址：https://gitee.com/min290/warm-flow-repo.git\"]},\"2287\":{\"h\":\"2.1、首先要建立仓库\",\"t\":[\"img\",\"​\"]},\"2288\":{\"h\":\"\",\"t\":[\"img\",\"​\"]},\"2289\":{\"h\":\"3、下载此项目\",\"t\":[\"比如我的下载到：D:/IdeaProjects/min/warm-flow-repo\",\"​\"]},\"2290\":{\"h\":\"4、上传私库的到本地\",\"t\":[\"上传命令：mvn clean deploy -P gitee\",\"配置介绍：\",\"distributionManagement：此配置上传到本地的路径\",\"maven-source-plugin：打包附带源码 maven-javadoc-plugin：打包附带api文档\",\"<profile> <id>gitee</id> <build> <plugins> <!-- Source --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> <version>2.2.1</version> <executions> <execution> <id>attach-sources</id> <goals> <goal>jar-no-fork</goal> </goals> </execution> </executions> </plugin> <!-- Javadoc --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> <version>2.10.4</version> <configuration> <!-- 忽略生成文档中的错误 --> <additionalparam>-Xdoclint:none</additionalparam> <aggregate>true</aggregate> <charset>UTF-8</charset><!-- utf-8读取文件 --> <encoding>UTF-8</encoding><!-- utf-8进行编码代码 --> <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 --> </configuration> <executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> </plugins> </build> <distributionManagement> <snapshotRepository> <id>gitee-snapshots</id> <url>file:D:/IdeaProjects/min/warm-flow-repo/snapshots</url> </snapshotRepository> <repository> <id>gitee-releases</id> <name>releases</name> <url>file:D:/IdeaProjects/min/warm-flow-repo/releases</url> </repository> </distributionManagement> </profile> </profiles>\",\"​\"]},\"2291\":{\"h\":\"5、下载依赖\",\"t\":[\"在pom.xml的project目录下新增如下配置\",\"​\",\"<repositories> <repository> <id>Gitee-Warm-Flow</id> <url>https://gitee.com/min290/maven-repository/raw/main/releases</url> </repository> </repositories>\",\"需要注意：如果没有此配置没有生效，还是走maven中setting的镜像仓库，需要查看，mirrorOf是否位“*”，此代码拦截所有仓库，需要增加排除“!Gitee-Warm-Flow”\",\"img\",\"​\",\"改为如下，重新加载依赖，如还为生效，可能缓存原因，重启idea。\",\"img\"]},\"2292\":{\"h\":\"\"},\"2293\":{\"h\":\"Dromara WarmFlow工作流动态指定办理人\"},\"2294\":{\"h\":\"背景：\",\"t\":[\"审批任务的办理人，通常是在流程设计器中预先设定好办理人，那如果想要在办理过程中指定办理人呢？ 那不得不提一下本次的主角，来自Dromara组织的WarmFlow工作流，通过他的办理人变量表达式就能很好解决此问题。\"]},\"2295\":{\"h\":\"解决思路\",\"t\":[\"1、流程设计时，需要动态指定办理人的节点，配置办理人变量表达式${handler1}\",\"2、当上一个任务办理时，在流程变量中传入${handler1}的值\",\"3、办理完成会生成本节点任务，即可替换完成\",\"后端代码设置变量\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2296\":{\"h\":\"高级玩法\",\"t\":[\"支持动态指定一群人\",\"支持spel表达式\",\"支持表达式扩展\",\"把如上代码\\\"100\\\"改成Arrays.asList(4, \\\"5\\\", 100L)，就可以动态指定一群人\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"2297\":{\"h\":\"总结\",\"t\":[\"是不是通过WarmFlow工作流可以很简单的管理你的审批业务呢，还不快快加入v\",\"另外Dromara组织还有大量好用的项目，欢迎评鉴\"]},\"2298\":{\"h\":\"\"},\"2299\":{\"h\":\"作者介绍\",\"t\":[\"名称：warm\",\"dromara 开源组织成员，dromara/warm-flow作者\",\"研发工程师、技术经理，工作经验8年。此工作流已经持续开发有一年有余。\",\"Gitee|Github\",\"微信：warm-houhou；qq群：778470567\",\"大家好，我是warm，是warm-flow工作流引擎的作者，来自于美丽的江西南昌，从事开发8年有余。此工作流持续开发一年了，那还得从工作流的痛点来说，\"]},\"2300\":{\"h\":\"历史背景\",\"t\":[\"flowable和activities确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗\",\"学习曲线： 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。\",\"复杂性： 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。\",\"定制化需求： 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。\",\"版本更新： 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。\",\"阅读难度： 全英文注释，对于英文不好的人来说，确实有门槛。\",\"那何不开发属于国人的工作流呢，为此耗时一年时间自研warm-flow工作流。\"]},\"2301\":{\"h\":\"warm-flow能给你带来什么\",\"t\":[\"[!IMPORTANT] Warm-Flow国产工作流引擎🎉，其特点简洁轻量但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持五种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"条件表达式：内置常见的条件表达式，并且支持自定义扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"支持角色、部门和用户等权限配置\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"接入warm-flow后妈妈再也不用担心我加班了\"]},\"2302\":{\"h\":\"项目功能模块\"},\"2303\":{\"h\":\"流程流转管理\",\"t\":[\"​ 流程流转就像是warm-flow的驾驶人。让办理流程像喝水一样简单的事情。\",\"// 部署流程 public void deployFlow() throws Exception { defService.importXml(new FileInputStream(\\\"/xxx/leaveFlow-serial.xml\\\")); } // 发布流程 public void publish() { defService.publish(1219285650587652096L); } // 开启流程 public void startFlow() { insService.start(\\\"2\\\", getUser()); } // 跳转流程 public void skipFlow() { Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); } //任意跳转 public void skipAnyNode() { Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); } // 终止流程 public void termination() { taskService.termination(1232001396254052352L, getUser()); }\"]},\"2304\":{\"h\":\"流程图管理\",\"t\":[\"​ 流程图管理就像warm-flow的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow自研了流程图绘制，通过设计器获取坐标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的demo项目中设计好导出xml，业务系统再次导入即可）。\",\"屏幕截图\"]},\"2305\":{\"h\":\"监听器管理\",\"t\":[\"监听器可以说是工作流引擎的上限，灵活度和可扩展性的核心人物\",\"监听器类型 \",\"create：创建监听器，任务创建时执行\",\"start：开始监听器，任务开始办理时执行\",\"assignment： 分派办理人监听器，分派后执行\",\"finish：结束监听器，当前任务完成后执行\",\"监听器生命周期\",\"屏幕截图\"]},\"2306\":{\"h\":\"配置管理\",\"t\":[\"​ 配置文件可以让工作流使用更加方便，如虎添翼。\",\"配置文件目前支持banner图和填充器配置，后续还会增加多租户和软删除等。\",\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 填充器 （可通过配置文件注入，也可用@Bean/@Component方式） data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式） tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\",\"填充器也可通过代码方式注入\",\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"2307\":{\"h\":\"扩展支持\"},\"2308\":{\"h\":\"orm和数据库扩展\",\"t\":[\"​ 作为新时代的程序员不能固步自封，只支持mybatis和msyql。所以目前已经解偶数据库操作，按照mybatis方式扩展其他的orm或者数据库类型即可\",\"屏幕截图\"]},\"2309\":{\"h\":\"条件表达式扩展\",\"t\":[\"​ 工作流引擎想要灵活跳转，就得有相应表达式，满足不同的条件，执行不同的任务，目前支持，并且支持规则扩展\",\">, >=, <, <=, =, !=, like, not like\"]},\"2310\":{\"h\":\"gitee变成maven私库\"},\"2311\":{\"h\":\"1、背景\",\"t\":[\"当由于各种原因，比如网络、想控制谁有权限访问类库或者公司没有服务器作为私库等，可以采用此法建立私库。\",\"​\"]},\"2312\":{\"h\":\"2、Gitee建新的仓库\",\"t\":[\"我的仓库地址：https://gitee.com/min290/warm-flow-repo.git\"]},\"2313\":{\"h\":\"2.1、首先要建立仓库\",\"t\":[\"img\",\"​\"]},\"2314\":{\"h\":\"\",\"t\":[\"img\",\"​\"]},\"2315\":{\"h\":\"3、下载此项目\",\"t\":[\"比如我的下载到：D:/IdeaProjects/min/warm-flow-repo\",\"​\"]},\"2316\":{\"h\":\"4、上传私库的到本地\",\"t\":[\"上传命令：mvn clean deploy -P gitee\",\"配置介绍：\",\"distributionManagement：此配置上传到本地的路径\",\"maven-source-plugin：打包附带源码 maven-javadoc-plugin：打包附带api文档\",\"<profile> <id>gitee</id> <build> <plugins> <!-- Source --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> <version>2.2.1</version> <executions> <execution> <id>attach-sources</id> <goals> <goal>jar-no-fork</goal> </goals> </execution> </executions> </plugin> <!-- Javadoc --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> <version>2.10.4</version> <configuration> <!-- 忽略生成文档中的错误 --> <additionalparam>-Xdoclint:none</additionalparam> <aggregate>true</aggregate> <charset>UTF-8</charset><!-- utf-8读取文件 --> <encoding>UTF-8</encoding><!-- utf-8进行编码代码 --> <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 --> </configuration> <executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> </plugins> </build> <distributionManagement> <snapshotRepository> <id>gitee-snapshots</id> <url>file:D:/IdeaProjects/min/warm-flow-repo/snapshots</url> </snapshotRepository> <repository> <id>gitee-releases</id> <name>releases</name> <url>file:D:/IdeaProjects/min/warm-flow-repo/releases</url> </repository> </distributionManagement> </profile> </profiles>\",\"​\"]},\"2317\":{\"h\":\"5、下载依赖\",\"t\":[\"在pom.xml的project目录下新增如下配置\",\"​\",\"<repositories> <repository> <id>Gitee-Warm-Flow</id> <url>https://gitee.com/min290/maven-repository/raw/main/releases</url> </repository> </repositories>\",\"需要注意：如果没有此配置没有生效，还是走maven中setting的镜像仓库，需要查看，mirrorOf是否位“*”，此代码拦截所有仓库，需要增加排除“!Gitee-Warm-Flow”\",\"img\",\"​\",\"改为如下，重新加载依赖，如还为生效，可能缓存原因，重启idea。\",\"img\"]},\"2318\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志 最新版本集成方式请看官方文档\"]},\"2319\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"2320\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"2321\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"2322\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2323\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2324\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2325\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2326\":{\"h\":\"5、项目介绍\"},\"2327\":{\"h\":\"🧨Warm-Flow新春版1.6.6：网关直连和流程图重构, 新增Ruoyi-Vue-Plus优秀开源集成案例\",\"t\":[\"本期主要解决了网关直连和流程图重构，可以自此之后可支持各种复杂的网关混合、多网关直连使用。\",\"新增Ruoyi-Vue-Plus优秀开源集成案例\"]},\"2328\":{\"h\":\"更新日志\",\"t\":[\"升级指南\",\"[feat] 导入、导出和保存等新增json格式支持DefService.importIs/importJson/importDef/saveDef/exportJson\",\"[feat] 新增获取后置节点方法NodeService.suffixNodeList\",\"[feat] 新增网关直连和测试案例\",\"[feat] 流程图右上角新增完成状态颜色示例\",\"[feat] 新增流程图查询接口和扩展接口ChartService\",\"[feat] 新增历史表数据同步为新的流程图元数据\",\"[feat] 新增sqlserver全量脚本\",\"[update] 导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json的api\",\"[update] FlowFactory修改为FlowEngine\",\"[update] 历史表目标节点编码和目标节点名称字段长度改为200\",\"[update] 通过或者退回到并行网关，开启多个任务，改为只产生一条历史记录\",\"[update] 退回或者任务完成，其他需要被删除的任务不需要记录历史表，因为已经存在退回记录，不需要重复记录\",\"[update] 转办、委派、加签和减签，改为只产生一条历史记录\",\"[update] 批量保存改为默认1000条一批\",\"[update] 流程设计保存，增加遮罩层\",\"[refactor] 流程图绘制调整重构\",\"[refactor] 移除mybatis-flex,easy-query和jpa的扩展包，独立成项目，由专门人维护\",\"[refactor] 实体类和dao获取改为通过反射，解耦orm-core包\",\"[refactor] 重构获取前置节点方法NodeService.previousNodeList\",\"[fix] 修复退回时存在其他代办任务，未删除的问题\",\"[fix] 修复流程退回目标节点前存在并行网关，导致不生成代办任务的问题\",\"[fix] 修复条件表达式中如果有|或导致错误分隔的问题\",\"[fix] 修复绘制流程图，错误判断同一条录像的key\",\"[fix] 修复结束节点还执行创建监听器的问题\",\"[remove] 移除DefService获取流程图api，由ChartService中chartIns和chartDef代替\",\"[remove] 删除前端log打印\",\"[remove] 移除oracle和postgresql升级脚本，后续只提供mysql升级脚本，所有的全量脚本，其他升级脚本的自行转换\"]},\"2329\":{\"h\":\"项目介绍\",\"t\":[\"Dromara Warm-Flow国产工作流引擎，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"支持常见审批功能、监听器与流程变量、条件表达式、办理人变量表达式\",\"自带流程图、流程设计器\",\"生态丰富可扩展\",\"文档全面\"]},\"2330\":{\"h\":\"演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2331\":{\"h\":\"官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2332\":{\"h\":\"演示图\"},\"2333\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"2334\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"2335\":{\"h\":\"2、以下为简短案例\"},\"2336\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"2337\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"2338\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"2339\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"2340\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"2341\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2342\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2343\":{\"h\":\"6、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2344\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志 最新版本集成方式请看官方文档\"]},\"2345\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"2346\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"2347\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"2348\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"2349\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"2350\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"2351\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"2352\":{\"h\":\"5、项目介绍\"},\"2353\":{\"h\":\"🧨Warm-Flow新春版1.6.6：网关直连和流程图重构, 新增Ruoyi-Vue-Plus优秀开源集成案例\",\"t\":[\"本期主要解决了网关直连和流程图重构，可以自此之后可支持各种复杂的网关混合、多网关直连使用。\",\"新增Ruoyi-Vue-Plus优秀开源集成案例\"]},\"2354\":{\"h\":\"更新日志\",\"t\":[\"升级指南\",\"[feat] 导入、导出和保存等新增json格式支持DefService.importIs/importJson/importDef/saveDef/exportJson\",\"[feat] 新增获取后置节点方法NodeService.suffixNodeList\",\"[feat] 新增网关直连和测试案例\",\"[feat] 流程图右上角新增完成状态颜色示例\",\"[feat] 新增流程图查询接口和扩展接口ChartService\",\"[feat] 新增历史表数据同步为新的流程图元数据\",\"[feat] 新增sqlserver全量脚本\",\"[update] 导入、导出和保存xml格式标识为即将删除，请参照hh-vue切换json的api\",\"[update] FlowFactory修改为FlowEngine\",\"[update] 历史表目标节点编码和目标节点名称字段长度改为200\",\"[update] 通过或者退回到并行网关，开启多个任务，改为只产生一条历史记录\",\"[update] 退回或者任务完成，其他需要被删除的任务不需要记录历史表，因为已经存在退回记录，不需要重复记录\",\"[update] 转办、委派、加签和减签，改为只产生一条历史记录\",\"[update] 批量保存改为默认1000条一批\",\"[update] 流程设计保存，增加遮罩层\",\"[refactor] 流程图绘制调整重构\",\"[refactor] 移除mybatis-flex,easy-query和jpa的扩展包，独立成项目，由专门人维护\",\"[refactor] 实体类和dao获取改为通过反射，解耦orm-core包\",\"[refactor] 重构获取前置节点方法NodeService.previousNodeList\",\"[fix] 修复退回时存在其他代办任务，未删除的问题\",\"[fix] 修复流程退回目标节点前存在并行网关，导致不生成代办任务的问题\",\"[fix] 修复条件表达式中如果有|或导致错误分隔的问题\",\"[fix] 修复绘制流程图，错误判断同一条录像的key\",\"[fix] 修复结束节点还执行创建监听器的问题\",\"[remove] 移除DefService获取流程图api，由ChartService中chartIns和chartDef代替\",\"[remove] 删除前端log打印\",\"[remove] 移除oracle和postgresql升级脚本，后续只提供mysql升级脚本，所有的全量脚本，其他升级脚本的自行转换\"]},\"2355\":{\"h\":\"项目介绍\",\"t\":[\"Dromara Warm-Flow国产工作流引擎，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"支持常见审批功能、监听器与流程变量、条件表达式、办理人变量表达式\",\"自带流程图、流程设计器\",\"生态丰富可扩展\",\"文档全面\"]},\"2356\":{\"h\":\"演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2357\":{\"h\":\"官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2358\":{\"h\":\"演示图\"},\"2359\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"2360\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"2361\":{\"h\":\"2、以下为简短案例\"},\"2362\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"2363\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"2364\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"2365\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"2366\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"2367\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"2368\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2369\":{\"h\":\"6、官网\",\"t\":[\"https://warm-flow.dromara.org/\"]},\"2370\":{\"h\":\"三头六臂显神通：Warm-Flow引擎实现多维度灵活配置\"},\"2371\":{\"h\":\"主要更新内容\",\"t\":[\"设计器支持节点扩展属性设置\",\"流程图扩展，新增接口，方便追加文字\",\"流程状态支持颜色支持自定义\"]},\"2372\":{\"h\":\"详细更新日志\",\"t\":[\"升级指南\",\"[feat] 设计器支持节点扩展属性设置\",\"[feat] 流程图扩展，新增接口，方便追加文字\",\"[feat] 流程状态支持颜色支持自定义\",\"[update] 节点表版本号字段标识下个版本删除\",\"[update] Jackson反序列化时忽略未知字段\",\"[update] 删除部分代码，调整注释\",\"[update] 修改当票签和会签节点时，注意事项描述\",\"[fix] 规范solon,api注解 防止某些情况获取不到方法参数名\",\"[fix] 删除流程实例的时候，办理用户不存在，导致删除失败\",\"[fix] #IBP397：修复当设计流程，开始节点出现再负坐标时，文字名称未显示\",\"[fix] #IBP3LK：修复开启流程，流程图第一个节点不是待办颜色\",\"[fix] 网关节点编辑文字报错处理\",\"[remove] 移除流程定义xml导入导出方式\",\"[remove] 移除多余的skip_Any_Node字段\",\"[style] 常量改成大写和下划线\"]},\"2373\":{\"h\":\"项目介绍\",\"t\":[\"Dromara Warm-Flow国产工作流引擎，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过jar引入设计器的工作流。\",\"支持常见审批功能、监听器与流程变量、条件表达式、办理人变量表达式\",\"自带流程图、流程设计器、节点扩展属性\",\"生态丰富可扩展\",\"文档全面\"]},\"2374\":{\"h\":\"演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"2375\":{\"h\":\"官网\",\"t\":[\"https://warm-flow.dromara.org\"]},\"2376\":{\"h\":\"本次更新效果图\"},\"2377\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"2378\":{\"h\":\"Advanced\"},\"2379\":{\"h\":\"Master\"},\"2380\":{\"h\":\"Enhance\"},\"2381\":{\"h\":\"Introduction\"},\"2382\":{\"h\":\"Primary\"},\"2383\":{\"h\":\"Other\"},\"2384\":{\"h\":\"Guide\"},\"2385\":{\"h\":\"V1.3.1\"},\"2386\":{\"h\":\"Guide\"},\"2387\":{\"h\":\"V1.3.0\"},\"2388\":{\"h\":\"Guide\"},\"2389\":{\"h\":\"V1.3.4\"},\"2390\":{\"h\":\"Enhance\"},\"2391\":{\"h\":\"V1.3.5\"},\"2392\":{\"h\":\"Other\"},\"2393\":{\"h\":\"Introduction\"},\"2394\":{\"h\":\"Advanced\"},\"2395\":{\"h\":\"Primary\"},\"2396\":{\"h\":\"Guide\"},\"2397\":{\"h\":\"V1.3.3\"},\"2398\":{\"h\":\"Enhance\"},\"2399\":{\"h\":\"V1.6.6\"},\"2400\":{\"h\":\"Advanced\"},\"2401\":{\"h\":\"Introduction\"},\"2402\":{\"h\":\"Primary\"},\"2403\":{\"h\":\"Other\"},\"2404\":{\"h\":\"Advanced\"},\"2405\":{\"h\":\"V1.6.7\"},\"2406\":{\"h\":\"Enhance\"},\"2407\":{\"h\":\"Introduction\"},\"2408\":{\"h\":\"Other\"},\"2409\":{\"h\":\"Primary\"},\"2410\":{\"h\":\"Update\"},\"2411\":{\"h\":\"Update\"},\"2412\":{\"h\":\"Update\"},\"2413\":{\"h\":\"Update\"},\"2414\":{\"h\":\"Experience\"},\"2415\":{\"h\":\"News\"},\"2416\":{\"h\":\"Upgrade\"},\"2417\":{\"h\":\"News\"},\"2418\":{\"h\":\"Experience\"},\"2419\":{\"h\":\"News\"},\"2420\":{\"h\":\"News\"},\"2421\":{\"h\":\"Upgrade Guide\"},\"2422\":{\"h\":\"Notice\"},\"2423\":{\"h\":\"Experience\"},\"2424\":{\"h\":\"News\"},\"2425\":{\"h\":\"News\"},\"2426\":{\"h\":\"Experience\"},\"2427\":{\"h\":\"News\"},\"2428\":{\"h\":\"News\"},\"2429\":{\"h\":\"Upgrade\"},\"2430\":{\"h\":\"Upgrade\"}},\"dirtCount\":0,\"index\":[[\"想控制谁有权限访问类库或者公司没有服务器作为私库等\",{\"1\":{\"2198\":1,\"2212\":1,\"2285\":1,\"2311\":1}}],[\"想参与贡献代码的小伙伴\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"​\",{\"1\":{\"2190\":1,\"2191\":1,\"2193\":1,\"2195\":1,\"2196\":1,\"2198\":1,\"2200\":1,\"2201\":1,\"2202\":1,\"2203\":1,\"2204\":2,\"2212\":1,\"2214\":1,\"2215\":1,\"2216\":1,\"2217\":1,\"2218\":2,\"2259\":1,\"2260\":1,\"2262\":1,\"2264\":1,\"2265\":1,\"2277\":1,\"2278\":1,\"2280\":1,\"2282\":1,\"2283\":1,\"2285\":1,\"2287\":1,\"2288\":1,\"2289\":1,\"2290\":1,\"2291\":2,\"2303\":1,\"2304\":1,\"2306\":1,\"2308\":1,\"2309\":1,\"2311\":1,\"2313\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":2}}],[\"阅读难度\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"随着时间的推移\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"定制化需求\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"定期同步\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"理解其概念\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"理论11也可以\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"学习可能需要一定的时间和精力\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"学习曲线\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"能早点下班吗\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"能力开放平台\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"从事开发8年有余\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"从首页获取最新版本\",{\"0\":{\"251\":1,\"1677\":1,\"2085\":1}}],[\"来自于美丽的江西南昌\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"来自dromara组织的warmflow工作流\",{\"1\":{\"2148\":1,\"2207\":1,\"2268\":1,\"2294\":1}}],[\"我的仓库地址\",{\"1\":{\"2199\":1,\"2213\":1,\"2286\":1,\"2312\":1}}],[\"我是warm\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"我们好像在哪儿见过\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"我们在warm\",{\"1\":{\"283\":1}}],[\"我们特创建了内部群\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"我们假定您已经\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"我们程序员都不擅长写作\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"技术经理\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"技术咨询等\",{\"1\":{\"978\":1,\"1706\":1}}],[\"研发工程师\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"研发项目管理系统\",{\"1\":{\"94\":1,\"1861\":1}}],[\"三头六臂显神通\",{\"0\":{\"2178\":1,\"2370\":1}}],[\"具体引入方式\",{\"1\":{\"2174\":1,\"2235\":1,\"2340\":1,\"2366\":1}}],[\"仓库地址\",{\"0\":{\"2168\":1,\"2229\":1,\"2334\":1,\"2360\":1}}],[\"🧨warm\",{\"0\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"欢迎评鉴\",{\"1\":{\"2151\":1,\"2210\":1,\"2271\":1,\"2297\":1}}],[\"欢迎加微信号\",{\"1\":{\"1908\":1}}],[\"欢迎加群交流\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"另外dromara组织还有大量好用的项目\",{\"1\":{\"2151\":1,\"2210\":1,\"2271\":1,\"2297\":1}}],[\"另外一直被吐槽的流程图不够清晰\",{\"1\":{\"2107\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"高级玩法\",{\"0\":{\"2150\":1,\"2209\":1,\"2270\":1,\"2296\":1}}],[\"高扩展性需求\",{\"1\":{\"115\":1,\"1882\":1}}],[\"那流程图片生成是必不可少的\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"那何不开发属于国人的工作流呢\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"那还得从工作流的痛点来说\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"那不得不提一下本次的主角\",{\"1\":{\"2148\":1,\"2207\":1,\"2268\":1,\"2294\":1}}],[\"那如果想要在办理过程中指定办理人呢\",{\"1\":{\"2148\":1,\"2207\":1,\"2268\":1,\"2294\":1}}],[\"背景\",{\"0\":{\"2148\":1,\"2198\":1,\"2207\":1,\"2212\":1,\"2268\":1,\"2285\":1,\"2294\":1,\"2311\":1}}],[\"老群被干没了\",{\"0\":{\"2130\":1}}],[\"老方法标识即将删除\",{\"1\":{\"309\":1,\"338\":1,\"1000\":1,\"1732\":1,\"1760\":1,\"1935\":1,\"1964\":1,\"2243\":1}}],[\"详细更新日志\",{\"0\":{\"2180\":1,\"2372\":1}}],[\"详细更新内容\",{\"0\":{\"2131\":1}}],[\"详细更新说明\",{\"1\":{\"2107\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"详细案例测试代码warm\",{\"1\":{\"257\":1,\"495\":1,\"903\":1,\"1232\":1,\"1409\":1,\"1683\":1,\"2091\":1}}],[\"终于迎来了这个激动人心的版本1\",{\"1\":{\"2107\":1,\"2118\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"终止免校验权限改为设置ignore字段\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"终止操作的流程状态改为更合理的终止状态\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"终止新增对开始和完成监听器的支持\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"终止当前流程\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"终止流程状态改为更合理的终止状态\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"终止流程\",{\"0\":{\"162\":1,\"169\":1,\"364\":1,\"370\":1,\"549\":1,\"555\":1,\"736\":1,\"743\":1,\"1134\":1,\"1141\":1,\"1270\":1,\"1276\":1,\"1592\":1,\"1599\":1,\"2000\":1,\"2007\":1},\"1\":{\"162\":1,\"169\":1,\"364\":1,\"370\":1,\"549\":1,\"555\":1,\"736\":1,\"743\":1,\"1134\":1,\"1141\":1,\"1270\":1,\"1276\":1,\"1592\":1,\"1599\":1,\"2000\":1,\"2007\":1,\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"终止\",{\"1\":{\"113\":1,\"240\":1,\"309\":1,\"482\":1,\"668\":1,\"887\":1,\"1000\":1,\"1042\":1,\"1217\":1,\"1396\":1,\"1544\":1,\"1666\":1,\"1732\":1,\"1880\":1,\"1935\":1,\"2074\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"帮助不同部门之间更好地协调工作\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"帮助企业在遵守法规和标准的同时\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"跨部门协作\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"办公自动化\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"办理任务动态设置权限\",{\"1\":{\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"1357\":1,\"1361\":1}}],[\"办理中动态设置权限\",{\"1\":{\"323\":1,\"1015\":1,\"1746\":1,\"1949\":1}}],[\"办理中途\",{\"1\":{\"237\":2,\"240\":2,\"241\":2,\"476\":2,\"662\":2,\"881\":2,\"888\":2,\"1214\":2,\"1217\":2,\"1218\":2,\"1390\":2,\"1663\":2,\"1666\":2,\"1667\":2,\"2071\":2,\"2074\":2,\"2075\":2}}],[\"办理用户不存在\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"办理是忽略权限校验\",{\"1\":{\"161\":1,\"1999\":1}}],[\"办理流程\",{\"0\":{\"129\":1,\"473\":1,\"659\":1,\"878\":1,\"1059\":1,\"1387\":1,\"1559\":1,\"1896\":1}}],[\"办理完成会生成本节点任务\",{\"1\":{\"49\":1,\"935\":1,\"1105\":1,\"1516\":1,\"1816\":1,\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"办理时未生效问题\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"办理时会校验的该权限集合\",{\"1\":{\"40\":1,\"868\":1,\"1091\":1,\"1507\":1,\"1807\":1}}],[\"办理时会校验的该权限是否是可审批人员\",{\"1\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1}}],[\"办理时间\",{\"1\":{\"3\":1,\"4\":1,\"1770\":1,\"1771\":1}}],[\"办理人设置了多个\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"办理人有多个\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"办理人选择tabs切换\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"办理人选择项接口\",{\"0\":{\"57\":1,\"1112\":1,\"1524\":1,\"1824\":1}}],[\"办理人变量和监听器表达式不满足业务需求时\",{\"1\":{\"824\":1,\"942\":1,\"963\":1,\"969\":1}}],[\"办理人变量设置\",{\"0\":{\"522\":1,\"707\":1,\"1436\":1}}],[\"办理人变量表达式实现类\",{\"0\":{\"93\":1,\"829\":1,\"974\":1,\"1481\":1,\"1860\":1}}],[\"办理人变量表达式策略实现类集合\",{\"1\":{\"92\":1,\"828\":1,\"973\":1,\"1480\":1,\"1859\":1}}],[\"办理人变量表达式策略\",{\"1\":{\"92\":1,\"531\":1,\"716\":1,\"828\":1,\"973\":1,\"1445\":1,\"1480\":1,\"1859\":1}}],[\"办理人变量表达式接口\",{\"0\":{\"92\":1,\"828\":1,\"973\":1,\"1480\":1,\"1859\":1}}],[\"办理人变量表达式扩展\",{\"0\":{\"88\":1,\"969\":1,\"1476\":1,\"1855\":1}}],[\"办理人变量表达式测试\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"办理人变量表达式\",{\"0\":{\"45\":1,\"91\":1,\"827\":1,\"931\":1,\"972\":1,\"1101\":1,\"1479\":1,\"1512\":1,\"1812\":1,\"1858\":1},\"1\":{\"113\":1,\"307\":1,\"336\":1,\"998\":1,\"1042\":1,\"1544\":1,\"1730\":1,\"1758\":1,\"1880\":1,\"1933\":1,\"1962\":1,\"2115\":1,\"2126\":1,\"2131\":1,\"2132\":1,\"2143\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2236\":1,\"2241\":1,\"2329\":1,\"2341\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"办理人变更\",{\"0\":{\"236\":1,\"1213\":1,\"1662\":1,\"2070\":1}}],[\"办理人唯一标识\",{\"1\":{\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"174\":1,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"375\":1,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"560\":1,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"748\":1,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1146\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1281\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1604\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2012\":1}}],[\"办理人表达式\",{\"1\":{\"115\":1,\"1882\":1}}],[\"办理人权限选择弹框页面\",{\"0\":{\"231\":1,\"430\":1,\"616\":1,\"808\":1,\"1208\":1,\"1336\":1,\"1657\":1,\"2065\":1,\"2112\":1,\"2123\":1,\"2140\":1,\"2157\":1,\"2224\":1,\"2323\":1,\"2349\":1}}],[\"办理人权限标识\",{\"1\":{\"41\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"869\":1,\"1092\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1508\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1808\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1}}],[\"办理人权限处理器\",{\"0\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1},\"1\":{\"40\":1,\"41\":1,\"868\":1,\"869\":1,\"1091\":1,\"1092\":1,\"1507\":1,\"1508\":1,\"1807\":1,\"1808\":1}}],[\"办理人权限设置等\",{\"1\":{\"10\":1,\"1483\":1,\"1777\":1}}],[\"办理人\",{\"1\":{\"3\":1,\"56\":1,\"530\":1,\"715\":1,\"941\":1,\"1111\":1,\"1444\":1,\"1523\":1,\"1770\":1,\"1823\":1}}],[\"特别赞助\",{\"0\":{\"979\":1,\"1048\":1,\"1707\":1,\"1909\":1}}],[\"特点\",{\"0\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"截取\",{\"1\":{\"825\":1,\"943\":1,\"964\":1,\"970\":1}}],[\"去访问该地址\",{\"1\":{\"609\":1,\"2121\":1}}],[\"标识不同策略的前缀\",{\"1\":{\"523\":1,\"708\":1,\"1437\":1}}],[\"指定流程表才开启\",{\"1\":{\"515\":1,\"700\":1,\"924\":1,\"1095\":1,\"1429\":1}}],[\"指定租户字段\",{\"1\":{\"515\":1,\"700\":1,\"924\":1,\"1095\":1,\"1429\":1}}],[\"指定节点\",{\"1\":{\"240\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"达梦\",{\"1\":{\"492\":1,\"678\":1,\"1046\":1,\"1406\":1}}],[\"达到一定通过率\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"属于退回中的一种\",{\"1\":{\"482\":1,\"668\":1}}],[\"允许返回到上一个节点进行修改\",{\"1\":{\"482\":1,\"668\":1}}],[\"操作自动计算\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"操作即完成当前任务\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"持久化保存数据\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"持续为社区优化文档或处理issue若干\",{\"1\":{\"101\":1,\"1030\":1,\"1532\":1,\"1868\":1}}],[\"持续完成社区发布的简单任务若干\",{\"1\":{\"101\":1,\"1030\":1,\"1532\":1,\"1868\":1}}],[\"信息\",{\"1\":{\"459\":1,\"645\":1,\"861\":1,\"1084\":1,\"1373\":1}}],[\"传递后台通过\",{\"1\":{\"453\":1,\"639\":1,\"1367\":1}}],[\"传入流程定义id\",{\"1\":{\"350\":1,\"351\":1,\"535\":1,\"536\":1,\"722\":1,\"723\":1,\"1118\":1,\"1119\":1,\"1256\":1,\"1257\":1}}],[\"传入流程任务id\",{\"1\":{\"168\":1,\"169\":1,\"174\":1,\"369\":1,\"370\":1,\"375\":1,\"554\":1,\"555\":1,\"742\":1,\"743\":1,\"748\":1,\"1140\":1,\"1141\":1,\"1146\":1,\"1275\":1,\"1276\":1,\"1281\":1,\"1598\":1,\"1599\":1,\"1604\":1,\"2006\":1,\"2007\":1,\"2012\":1}}],[\"传入流程实例id\",{\"1\":{\"161\":1,\"162\":1,\"363\":1,\"364\":1,\"548\":1,\"549\":1,\"735\":1,\"736\":1,\"1133\":1,\"1134\":1,\"1269\":1,\"1270\":1,\"1591\":1,\"1592\":1,\"1999\":1,\"2000\":1}}],[\"传入业务id\",{\"1\":{\"160\":1,\"362\":1,\"547\":1,\"734\":1,\"1132\":1,\"1268\":1,\"1590\":1,\"1998\":1}}],[\"传入变量\",{\"1\":{\"49\":1,\"524\":1,\"709\":1,\"935\":1,\"1105\":1,\"1438\":1,\"1516\":1,\"1816\":1}}],[\"字典数据\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"字段填充\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"字段\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"`http\",{\"1\":{\"611\":1,\"612\":1}}],[\"`\",{\"1\":{\"425\":2,\"426\":2,\"611\":2,\"612\":2,\"803\":2,\"804\":2,\"1203\":2,\"1204\":2,\"1331\":2,\"1332\":2}}],[\"``改成``default\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"除上面外的所有请求全部需要鉴权认证\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"静态资源\",{\"1\":{\"421\":1,\"422\":1,\"606\":1,\"607\":1,\"799\":1,\"800\":1,\"1199\":1,\"1200\":1,\"1327\":1,\"1328\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"事务隔离级别\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"事件\",{\"1\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"填充器也可通过代码方式注入\",{\"1\":{\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"填充器\",{\"0\":{\"412\":1,\"597\":1,\"1318\":1},\"1\":{\"403\":1,\"406\":1,\"416\":1,\"588\":1,\"591\":1,\"601\":1,\"779\":1,\"782\":1,\"792\":1,\"1183\":1,\"1186\":1,\"1192\":1,\"1309\":1,\"1312\":1,\"1322\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"校验后新增\",{\"1\":{\"348\":1,\"719\":1,\"720\":1,\"1115\":1,\"1116\":1,\"1254\":1}}],[\"校验节点是否发布\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"核心api\",{\"0\":{\"346\":1,\"532\":1,\"717\":1,\"1113\":1,\"1252\":1}}],[\"核心接口api\",{\"0\":{\"134\":1,\"1564\":1,\"1972\":1}}],[\"工作经验8年\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"工作流引擎想要灵活跳转\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"工作流中的某个节点上\",{\"1\":{\"482\":1,\"668\":1}}],[\"工作流模块抽取为独立项目\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"工作流\",{\"1\":{\"115\":1,\"1882\":1}}],[\"工作流api中很多需要获取当前办理人id\",{\"1\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1}}],[\"工具包路径调整\",{\"1\":{\"344\":1,\"1766\":1,\"1970\":1,\"2252\":1}}],[\"组件独立\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"组件内部不在维护替换\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"组件本身提供常见并且基础的api\",{\"1\":{\"37\":1,\"863\":1,\"1086\":1,\"1504\":1,\"1804\":1}}],[\"反显审批流程表单\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"反射设置对象值异常\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"涉及到这两个字段的前后段都要修改\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"依赖的groupid\",{\"1\":{\"336\":1,\"338\":1,\"1758\":1,\"1760\":1,\"1962\":1,\"1964\":1,\"2241\":1,\"2243\":1}}],[\"依赖问题\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"选择角色权限范围触发\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"拼接改为\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"回显js\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"回显通过\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"回退驳回率\",{\"1\":{\"481\":2,\"667\":2,\"886\":2,\"893\":2,\"1395\":2}}],[\"回退\",{\"1\":{\"240\":1,\"481\":5,\"482\":1,\"667\":5,\"668\":1,\"886\":5,\"887\":1,\"893\":5,\"1217\":1,\"1395\":5,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"现between\",{\"1\":{\"334\":1,\"335\":2,\"1756\":1,\"1757\":2,\"1960\":1,\"1961\":2,\"2240\":2}}],[\"现defcontroller\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"现\",{\"1\":{\"333\":1,\"334\":1,\"335\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"2240\":1}}],[\"现skip\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"^default\",{\"1\":{\"333\":4,\"335\":2,\"1755\":4,\"1757\":2,\"1959\":4,\"1961\":2,\"2240\":2}}],[\"^spel\",{\"1\":{\"333\":4,\"335\":2,\"1755\":4,\"1757\":2,\"1959\":4,\"1961\":2,\"2240\":2}}],[\"~\",{\"1\":{\"332\":1,\"1958\":1}}],[\"整理流程表\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"整个系统只有一个\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"抽离spring生态依赖\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"抽离公共方法\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"放行配置\",{\"0\":{\"421\":1,\"422\":1,\"423\":1,\"606\":1,\"607\":1,\"608\":1,\"799\":1,\"800\":1,\"801\":1,\"1199\":1,\"1200\":1,\"1201\":1,\"1327\":1,\"1328\":1,\"1329\":1}}],[\"放行白名单配置\",{\"1\":{\"228\":2}}],[\"放弃js引擎\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"美化后台返回的流程图\",{\"1\":{\"327\":1,\"1019\":1,\"1750\":1,\"1953\":1}}],[\"补齐sql脚本\",{\"1\":{\"324\":1,\"1016\":1,\"1747\":1,\"1950\":1}}],[\"枚举扩展getbykey方法\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"引入可能会显得过于复杂\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"引入\",{\"0\":{\"425\":1,\"426\":1,\"427\":1,\"611\":1,\"612\":1,\"613\":1,\"803\":1,\"804\":1,\"805\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1331\":1,\"1332\":1,\"1333\":1}}],[\"引入日志门面\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"引入依赖\",{\"0\":{\"223\":1,\"419\":1,\"604\":1,\"795\":1,\"1195\":1,\"1325\":1,\"1653\":1,\"2061\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2220\":1,\"2319\":1,\"2345\":1}}],[\"考虑流程终止功能\",{\"1\":{\"320\":1,\"1012\":1,\"1743\":1,\"1946\":1}}],[\"启动流程时\",{\"1\":{\"319\":1,\"1011\":1,\"1742\":1,\"1945\":1}}],[\"判空错误\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"判断要执行哪个分支\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"判断大于等4\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"判断是否存在\",{\"0\":{\"194\":1,\"386\":1,\"571\":1,\"759\":1,\"1157\":1,\"1292\":1,\"1624\":1,\"2032\":1},\"1\":{\"194\":1,\"386\":1,\"571\":1,\"759\":1,\"1157\":1,\"1292\":1,\"1624\":1,\"2032\":1}}],[\"符号\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"处于非结束节点\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"处理完后进入下一节点\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"处理完后回到当前处理人手中\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"处理完成之后将处理结果抄送给其他人\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"处理\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"处理长度过长的long类型\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"处理器路径\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"处理器类型\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"完善流程设计器和流程图\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"完善sql\",{\"1\":{\"325\":1,\"1017\":1,\"1748\":1,\"1951\":1}}],[\"完善文档\",{\"1\":{\"322\":1,\"324\":1,\"1014\":1,\"1016\":1,\"1745\":1,\"1747\":1,\"1948\":1,\"1950\":1}}],[\"完善mybatis\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"完成时间\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"完成后进入下一节点\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"完成社区发布的两项复杂任务\",{\"1\":{\"101\":1,\"1030\":1,\"1532\":1,\"1868\":1}}],[\"完成和创建时期执行\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"完成监听器结束\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"完成监听器实现类例子\",{\"0\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"完成监听器\",{\"1\":{\"10\":1,\"16\":1,\"24\":1,\"272\":1,\"443\":1,\"447\":1,\"521\":1,\"629\":1,\"633\":1,\"706\":1,\"843\":1,\"848\":1,\"856\":1,\"930\":1,\"1066\":1,\"1071\":1,\"1079\":1,\"1251\":1,\"1357\":1,\"1361\":1,\"1435\":1,\"1483\":1,\"1489\":1,\"1497\":1,\"1698\":1,\"1777\":1,\"1783\":1,\"1791\":1,\"2106\":1}}],[\"代理到后端需要vue\",{\"1\":{\"611\":1}}],[\"代理配置\",{\"0\":{\"610\":1}}],[\"代理成后端接口\",{\"1\":{\"609\":1,\"2121\":1}}],[\"代办改为待办\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"代码详情\",{\"1\":{\"286\":2,\"291\":1,\"982\":2,\"987\":1,\"1710\":2,\"1715\":1,\"1912\":2,\"1917\":1}}],[\"代码示例\",{\"0\":{\"239\":1,\"257\":1,\"495\":1,\"680\":1,\"903\":1,\"1216\":1,\"1232\":1,\"1409\":1,\"1665\":1,\"1683\":1,\"2073\":1,\"2091\":1}}],[\"代码量少\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"代码风格相关无影响运行结果的\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"代码地址\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"全英文注释\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"全部提供可接受外部传入\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"全局配置\",{\"1\":{\"459\":1,\"645\":1,\"861\":1,\"1084\":1,\"1373\":1}}],[\"全局租户处理器\",{\"1\":{\"403\":1,\"404\":2,\"406\":1,\"407\":1,\"518\":1,\"519\":1,\"520\":1,\"588\":1,\"589\":2,\"591\":1,\"592\":1,\"703\":1,\"704\":1,\"705\":1,\"779\":1,\"780\":2,\"782\":1,\"783\":1,\"927\":1,\"928\":1,\"929\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1183\":1,\"1184\":2,\"1186\":1,\"1187\":1,\"1309\":1,\"1310\":2,\"1312\":1,\"1313\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"全局搜索org\",{\"1\":{\"336\":1,\"1758\":1,\"1962\":1,\"2241\":1}}],[\"全局flowfactory替换成flowengine\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"全局创建监听器执行结束\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"全局创建监听器开始执行\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"全局完成监听器执行结束\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"全局完成监听器开始执行\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"全局开始监听器执行结束\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"全局开始监听器开始执行\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"全局监听器\",{\"0\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1},\"1\":{\"11\":2,\"24\":2,\"842\":2,\"856\":2,\"1065\":2,\"1079\":2,\"1484\":2,\"1497\":2,\"1778\":2,\"1791\":2}}],[\"全局分派监听器执行结束\",{\"1\":{\"3\":1,\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1770\":1,\"1791\":1}}],[\"全局分派监听器开始执行\",{\"1\":{\"3\":1,\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1770\":1,\"1791\":1}}],[\"之前所有保存流程状态地方\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"之前强依赖流程状态的通过的\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"测试代码warm\",{\"1\":{\"680\":1}}],[\"测试模块拆分独立仓库\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"测试检测平台\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"替换为org\",{\"1\":{\"336\":1,\"1758\":1,\"1962\":1,\"2241\":1}}],[\"替换异常类\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"替换和spel\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"替换集合\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"接入warm\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"接入仿钉钉设计器\",{\"1\":{\"995\":1,\"1721\":1}}],[\"接入监听器\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"接口\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"接口使用方式不一致\",{\"1\":{\"461\":1,\"647\":1,\"1375\":1}}],[\"接口或者抽象类前缀由expressionstrategy改为\",{\"1\":{\"336\":1,\"1758\":1,\"1962\":1,\"2241\":1}}],[\"接口描述地址\",{\"1\":{\"238\":1,\"1215\":1,\"1664\":1,\"2072\":1}}],[\"接口描述\",{\"0\":{\"238\":1,\"1215\":1,\"1664\":1,\"2072\":1}}],[\"统一修复分页bug\",{\"1\":{\"308\":2,\"999\":2,\"1731\":2,\"1934\":2}}],[\"左侧隐藏\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"左侧树父级id\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"左侧树名称\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"左侧树id\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"没有左侧树状选择数据时\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"区分\",{\"1\":{\"307\":1,\"336\":1,\"998\":1,\"1730\":1,\"1758\":1,\"1933\":1,\"1962\":1,\"2131\":1,\"2241\":1}}],[\"局部监听器改名为节点监听器\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"类的属性一一对应\",{\"1\":{\"459\":1,\"645\":1,\"861\":1,\"1084\":1,\"1373\":1}}],[\"类中配置增加类型接口\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1}}],[\"类似satoken方式\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"类型的\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"类型转换异常\",{\"0\":{\"290\":1,\"986\":1,\"1714\":1,\"1916\":1}}],[\"类型\",{\"1\":{\"59\":2,\"77\":2,\"83\":2,\"89\":2,\"825\":2,\"943\":2,\"964\":2,\"970\":2,\"1447\":2,\"1465\":2,\"1471\":2,\"1477\":2,\"1826\":2,\"1844\":2,\"1850\":2,\"1856\":2}}],[\"针对整个系统\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2130\":1,\"2131\":1}}],[\"针对所有属性\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"读取is流和导入实体类\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"解析\",{\"1\":{\"825\":1,\"943\":1,\"964\":1,\"970\":1}}],[\"解偶orm操作\",{\"1\":{\"328\":1,\"1020\":1,\"1751\":1,\"1954\":1}}],[\"解偶orm\",{\"1\":{\"326\":1,\"1018\":1,\"1749\":1,\"1952\":1}}],[\"解决思路\",{\"0\":{\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"解决\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"解耦orm\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"解放军执行第一个任务\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"因为已经存在退回记录\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"移除节点前置执行权限处理器\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"移除权限监听器\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"移除oracle和postgresql升级脚本\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"移除defservice获取流程图api\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"移除mybatis\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"移除多余的skip\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"移除流程定义xml导入导出方式\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"规范solon\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"调整表名和字段名\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"调整实例类结构\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"调整mybatis\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"调整扩展包配置\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"调整注释\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"调整条件\",{\"1\":{\"126\":1,\"470\":1,\"656\":1,\"875\":1,\"1056\":1,\"1384\":1,\"1556\":1,\"1893\":1}}],[\"升级到新版本可能需要投入一定的时间和资源\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"升级脚本warm\",{\"1\":{\"336\":1,\"339\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"1758\":1,\"1761\":1,\"1763\":1,\"1764\":1,\"1765\":1,\"1766\":1,\"1767\":1,\"1962\":1,\"1965\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1}}],[\"升级dom4j为安全版本2\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"升级指南\",{\"0\":{\"331\":1,\"1754\":1,\"1957\":1,\"2239\":1},\"1\":{\"301\":1,\"302\":1,\"304\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"311\":1,\"313\":1,\"314\":1,\"316\":1,\"317\":1,\"318\":1,\"1723\":1,\"1725\":1,\"1727\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1734\":1,\"1736\":1,\"1737\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1927\":1,\"1928\":1,\"1930\":1,\"1932\":1,\"1933\":1,\"1934\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1940\":1,\"1942\":1,\"1943\":1,\"1944\":1,\"2162\":1,\"2180\":1,\"2328\":1,\"2354\":1,\"2372\":1}}],[\"升级版本\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"缺少判空\",{\"1\":{\"299\":1}}],[\"丢失原有的\",{\"1\":{\"299\":1}}],[\"丢失精度\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"会发布新的版本\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"会有什么影响\",{\"1\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"会签就是指在流程管理中发起人可以同时对多个人发起会签\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"会签所有待办权限只支持个人类型\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"会签中任意一待办人进行\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"会签票签\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"会签节点委派\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"会签和票签通过率策略\",{\"1\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"会签\",{\"0\":{\"214\":1,\"1177\":1,\"1644\":1,\"2052\":1},\"1\":{\"113\":1,\"125\":1,\"209\":1,\"210\":1,\"240\":1,\"241\":1,\"311\":1,\"316\":1,\"317\":1,\"330\":1,\"469\":1,\"476\":1,\"481\":1,\"482\":1,\"655\":1,\"662\":1,\"667\":1,\"668\":1,\"874\":1,\"881\":1,\"886\":1,\"887\":1,\"888\":1,\"893\":1,\"1003\":1,\"1008\":1,\"1009\":1,\"1022\":1,\"1042\":1,\"1055\":1,\"1172\":1,\"1173\":1,\"1217\":1,\"1218\":1,\"1383\":1,\"1390\":1,\"1395\":1,\"1396\":1,\"1544\":1,\"1555\":1,\"1639\":1,\"1640\":1,\"1666\":1,\"1667\":1,\"1734\":1,\"1739\":1,\"1740\":1,\"1753\":1,\"1880\":1,\"1892\":1,\"1937\":1,\"1942\":1,\"1943\":1,\"1956\":1,\"2047\":1,\"2048\":1,\"2074\":1,\"2075\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"错误结束流程的问题\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"错误判断同一条录像的key\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"错误\",{\"0\":{\"293\":1,\"989\":1,\"1717\":1,\"1919\":1}}],[\"条件值\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"条件名\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"条件表达式前端拼接需要把原本\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"条件表达式前端拼接需要把原本eq|flag|5格式\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"条件表达式原本太繁琐\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"条件表达式新增默认策略default|$\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"条件表达式等于\",{\"1\":{\"64\":1,\"836\":1,\"948\":1,\"1452\":1,\"1831\":1}}],[\"条件表达式实现类\",{\"0\":{\"64\":1,\"836\":1,\"948\":1,\"1452\":1,\"1831\":1}}],[\"条件表达式抽象类\",{\"0\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1},\"1\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1}}],[\"条件表达式策略实现类map\",{\"1\":{\"62\":1,\"834\":1,\"946\":1,\"1450\":1,\"1829\":1}}],[\"条件表达式接口\",{\"0\":{\"62\":1,\"834\":1,\"946\":1,\"1450\":1,\"1829\":1},\"1\":{\"62\":1,\"834\":1,\"946\":1,\"1450\":1,\"1829\":1}}],[\"条件表达式\",{\"0\":{\"61\":1,\"215\":1,\"434\":1,\"620\":1,\"774\":1,\"820\":1,\"833\":1,\"945\":1,\"1178\":1,\"1348\":1,\"1449\":1,\"1645\":1,\"1828\":1,\"2053\":1},\"1\":{\"113\":1,\"115\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"1882\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2329\":1,\"2341\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"条件表达式扩展\",{\"0\":{\"58\":1,\"76\":1,\"942\":1,\"1446\":1,\"1464\":1,\"1825\":1,\"1843\":1,\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"条\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"阻断插件\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"乐观锁插件\",{\"1\":{\"291\":2,\"987\":2,\"1715\":2,\"1917\":2}}],[\"根pom\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"根据\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"根据目标节点递归往上找最近的并行网关\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"根据跳转条件\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"根据上面的白名单进行放行部分代码\",{\"1\":{\"228\":1}}],[\"根据entity删除\",{\"0\":{\"198\":1,\"390\":1,\"575\":1,\"763\":1,\"1161\":1,\"1296\":1,\"1628\":1,\"2036\":1},\"1\":{\"198\":1,\"390\":1,\"575\":1,\"763\":1,\"1161\":1,\"1296\":1,\"1628\":1,\"2036\":1}}],[\"根据ids批量删除\",{\"0\":{\"199\":1,\"391\":1,\"576\":1,\"764\":1,\"1162\":1,\"1297\":1,\"1629\":1,\"2037\":1},\"1\":{\"199\":1,\"391\":1,\"576\":1,\"764\":1,\"1162\":1,\"1297\":1,\"1629\":1,\"2037\":1}}],[\"根据ids主键集合查询\",{\"0\":{\"188\":1,\"380\":1,\"565\":1,\"753\":1,\"1151\":1,\"1286\":1,\"1618\":1,\"2026\":1},\"1\":{\"188\":1,\"380\":1,\"565\":1,\"753\":1,\"1151\":1,\"1286\":1,\"1618\":1,\"2026\":1}}],[\"根据id删除\",{\"0\":{\"197\":1,\"389\":1,\"574\":1,\"762\":1,\"1160\":1,\"1295\":1,\"1627\":1,\"2035\":1},\"1\":{\"197\":1,\"389\":1,\"574\":1,\"762\":1,\"1160\":1,\"1295\":1,\"1627\":1,\"2035\":1}}],[\"根据id修改\",{\"0\":{\"196\":1,\"388\":1,\"573\":1,\"761\":1,\"1159\":1,\"1294\":1,\"1626\":1,\"2034\":1},\"1\":{\"196\":1,\"388\":1,\"573\":1,\"761\":1,\"1159\":1,\"1294\":1,\"1626\":1,\"2034\":1}}],[\"根据id查询\",{\"0\":{\"187\":1,\"379\":1,\"564\":1,\"752\":1,\"1150\":1,\"1285\":1,\"1617\":1,\"2025\":1},\"1\":{\"187\":1,\"379\":1,\"564\":1,\"752\":1,\"1150\":1,\"1285\":1,\"1617\":1,\"2025\":1}}],[\"根据实例id和节点编码查询\",{\"0\":{\"184\":1,\"1614\":1,\"2022\":1},\"1\":{\"184\":1,\"1614\":1,\"2022\":1}}],[\"根据实例ids\",{\"1\":{\"163\":1,\"365\":1,\"550\":1,\"737\":1,\"1135\":1,\"1271\":1,\"1593\":1,\"2001\":1}}],[\"根据任务id和协作类型查询\",{\"0\":{\"183\":1,\"1613\":1,\"2021\":1},\"1\":{\"183\":1,\"1613\":1,\"2021\":1}}],[\"根据节点id获取下所有的后置节点集合\",{\"1\":{\"179\":1,\"1609\":1,\"2017\":1}}],[\"根据节点id获取下所有的前置节点集合\",{\"1\":{\"177\":1,\"1148\":1,\"1607\":1,\"2015\":1}}],[\"根据流程定义和当前节点code获取下一节点\",{\"1\":{\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1,\"1611\":1,\"2019\":1}}],[\"根据流程定义id和当前节点code获取所有的后置节点集合\",{\"1\":{\"180\":1,\"1610\":1,\"2018\":1}}],[\"根据流程定义id和当前节点code获取所有的前置节点集合\",{\"1\":{\"178\":1,\"1148\":1,\"1608\":1,\"2016\":1}}],[\"根据流程定义id集合\",{\"0\":{\"740\":1,\"1138\":1},\"1\":{\"166\":1,\"740\":1,\"1138\":1,\"1596\":1,\"2004\":1}}],[\"根据流程定义id\",{\"1\":{\"154\":1,\"158\":1,\"1584\":1,\"1588\":1,\"1992\":1,\"1996\":1}}],[\"根据流程编码获取已发布流程节点集合\",{\"1\":{\"176\":1,\"1606\":1,\"2014\":1}}],[\"根据流程实例ids删除\",{\"0\":{\"185\":1,\"1615\":1,\"2023\":1},\"1\":{\"185\":1,\"1615\":1,\"2023\":1}}],[\"根据流程实例id\",{\"1\":{\"153\":1,\"155\":1,\"156\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1994\":1,\"1995\":1}}],[\"检查是否使用热部署插件\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"星\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"未完成过任务\",{\"1\":{\"314\":2,\"1006\":2,\"1737\":2,\"1940\":2}}],[\"未删除办理人信息\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"未删除的问题\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"未来发布计划\",{\"0\":{\"296\":1,\"992\":1,\"1720\":1,\"1922\":1}}],[\"未加载\",{\"0\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1},\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"未办\",{\"1\":{\"246\":4,\"1672\":4,\"2080\":4}}],[\"未办理\",{\"1\":{\"7\":1,\"1774\":1}}],[\"格调\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"格式如下\",{\"1\":{\"35\":1,\"1802\":1}}],[\"添加中文字体即可\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"添加到jre的lib\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"添加jacksonconfig配置全局序列化\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"宋体\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"继承填充器接口\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"key\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"防止某些情况获取不到方法参数名\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"防止\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"得来\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"超出范围\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"超出\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"方法赋值\",{\"1\":{\"309\":1,\"338\":1,\"1000\":1,\"1732\":1,\"1760\":1,\"1935\":1,\"1964\":1,\"2243\":1}}],[\"方法\",{\"1\":{\"309\":1,\"338\":1,\"1000\":1,\"1732\":1,\"1760\":1,\"1935\":1,\"1964\":1,\"2243\":1}}],[\"方案4\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"方案3\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"方案2\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"方案1\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"方式二\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"方式一\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"方便新增文字\",{\"1\":{\"1723\":1}}],[\"方便区分表达式类型\",{\"1\":{\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1350\":1}}],[\"方便链式写法\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"方便保存历史过程数据\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"方便开始监听器全局传递参数\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"方便追加文字\",{\"1\":{\"301\":1,\"1927\":1,\"2179\":1,\"2180\":1,\"2371\":1,\"2372\":1}}],[\"方便微服务接入\",{\"1\":{\"299\":1}}],[\"方便我们快速定位问题\",{\"1\":{\"277\":1,\"1701\":1,\"1903\":1}}],[\"方便扩展其他orm框架\",{\"1\":{\"328\":1,\"1020\":1,\"1751\":1,\"1954\":1}}],[\"方便扩展不同orm和数据\",{\"1\":{\"326\":1,\"1018\":1,\"1749\":1,\"1952\":1}}],[\"方便扩展\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"常规增删改查可以通过注入方式\",{\"1\":{\"461\":1,\"647\":1,\"1375\":1}}],[\"常规匹配规则\",{\"1\":{\"217\":1,\"776\":1,\"1180\":1,\"1647\":1,\"2055\":1}}],[\"常量改成大写和下划线\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"常见问题\",{\"0\":{\"285\":1,\"981\":1,\"1709\":1,\"1911\":1}}],[\"团队\",{\"0\":{\"284\":1,\"980\":1,\"1708\":1,\"1910\":1}}],[\"链接url格式\",{\"1\":{\"283\":1}}],[\"准备材料\",{\"1\":{\"283\":1}}],[\"准备试用\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"电子邮箱\",{\"1\":{\"283\":1}}],[\"推广开发费用\",{\"1\":{\"283\":1}}],[\"推荐学习视频\",{\"0\":{\"261\":1,\"502\":1,\"687\":1,\"911\":1,\"1240\":1,\"1416\":1,\"1687\":1,\"2095\":1}}],[\"推荐集成案例hh\",{\"0\":{\"260\":1,\"501\":1,\"686\":1,\"910\":1,\"1239\":1,\"1415\":1,\"1686\":1,\"2094\":1}}],[\"云服务器\",{\"1\":{\"283\":1}}],[\"赞助商广告\",{\"0\":{\"283\":1}}],[\"微信\",{\"1\":{\"282\":1,\"283\":1,\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"微服务集成原来和单体类似\",{\"1\":{\"227\":1}}],[\"微服务集成\",{\"0\":{\"227\":1}}],[\"私人服务\",{\"0\":{\"282\":1,\"978\":1,\"1706\":1,\"1908\":1}}],[\"申请加入群聊\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"例如\",{\"1\":{\"279\":1,\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1,\"1702\":1,\"1904\":1}}],[\"满足不同的条件\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"满足条件者可以在申请加入时备注上您的项目名称\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"满足设定的通过率\",{\"1\":{\"210\":1,\"240\":1,\"1173\":1,\"1217\":1,\"1640\":1,\"1666\":1,\"2048\":1,\"2074\":1}}],[\"遇到的任何疑问都可以当面与作者沟通\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"遇新网关重置\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"👇点击👇\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"👇\",{\"1\":{\"286\":4,\"291\":2,\"982\":4,\"987\":2,\"1710\":4,\"1715\":2,\"1912\":4,\"1917\":2}}],[\"😊\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"👍友情链接\",{\"1\":{\"0\":1}}],[\"经内部投票评审通过即可加入\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"经常会出现设计流程时\",{\"1\":{\"45\":1,\"931\":1,\"1101\":1,\"1512\":1,\"1812\":1}}],[\"且播放量>2000\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"总结\",{\"0\":{\"2151\":1,\"2210\":1,\"2271\":1,\"2297\":1}}],[\"总体思路就是把前端接口\",{\"1\":{\"609\":1,\"2121\":1}}],[\"总用量\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"总时长>30分钟\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"总数量+1\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"录制过教程视频\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"写过5篇以上有关\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"生态丰富可扩展\",{\"1\":{\"2163\":1,\"2181\":1,\"2329\":1,\"2355\":1,\"2373\":1}}],[\"生态做出贡献的行为\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"生态做出贡献的同学\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"生态共享与合作\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"生成的流程图中文乱码或者报错internalerror\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"生成的流程图片\",{\"1\":{\"115\":1,\"1882\":1}}],[\"生成静态\",{\"1\":{\"115\":1,\"1882\":1}}],[\"让办理流程像喝水一样简单的事情\",{\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"让你感受作者有多话痨\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"让好的项目能够被更多人看到\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"看见必回复\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"承诺\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"早进群早接触更多的问题\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"听作者解答问题等于习题讲解\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"问问题等于做习题\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"邀请进入vip群\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"支付后加微信号\",{\"1\":{\"977\":1,\"1705\":1,\"1907\":1}}],[\"支付后加微信号warm\",{\"1\":{\"278\":1}}],[\"支持角色\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"支持五种监听器\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"支持常见审批功能\",{\"1\":{\"2163\":1,\"2181\":1,\"2329\":1,\"2355\":1,\"2373\":1}}],[\"支持表达式扩展\",{\"1\":{\"2150\":1,\"2209\":1,\"2270\":1,\"2296\":1}}],[\"支持四种监听器\",{\"1\":{\"2115\":1,\"2126\":1,\"2143\":1,\"2175\":1,\"2236\":1,\"2341\":1,\"2367\":1}}],[\"支持四种监听器和不同颗粒的的作用范围\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2132\":1}}],[\"支持顺序按顺序加载一种\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"支持待办任务和已办任务\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"支持生成流程图\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"支持自定义填充\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"支持自定义规则\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持转办功能\",{\"1\":{\"320\":1,\"1012\":1,\"1743\":1,\"1946\":1}}],[\"支持第二个节点为网关节点的情况\",{\"1\":{\"319\":1,\"1011\":1,\"1742\":1,\"1945\":1}}],[\"支持代办任务中办理人等动态修改\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"支持流程状态扩展\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"支持接收外部流程状态\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"支持orm默认策略\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"支持orm框架类型\",{\"0\":{\"118\":1,\"493\":1,\"679\":1,\"1047\":1,\"1407\":1,\"1548\":1,\"1885\":1},\"1\":{\"2167\":1,\"2228\":1,\"2333\":1,\"2359\":1}}],[\"支持$\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"支持设置排序字段\",{\"1\":{\"189\":1,\"191\":1,\"381\":1,\"383\":1,\"566\":1,\"568\":1,\"754\":1,\"756\":1,\"1152\":1,\"1154\":1,\"1287\":1,\"1289\":1,\"1619\":1,\"1621\":1,\"2027\":1,\"2029\":1}}],[\"支持数据库类型\",{\"0\":{\"117\":1,\"492\":1,\"678\":1,\"1046\":1,\"1406\":1,\"1547\":1,\"1884\":1}}],[\"支持标准流程图生成\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持uel\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持简单变量和固定角色分配\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持动态指定一群人\",{\"1\":{\"2150\":1,\"2209\":1,\"2270\":1,\"2296\":1}}],[\"支持动态权限和参数传递\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持动态流程修改\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持多token\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"支持多\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持办理人变量表达式\",{\"1\":{\"115\":1,\"1882\":1}}],[\"支持\",{\"1\":{\"115\":3,\"1882\":3}}],[\"支持solon和便捷性提升\",{\"0\":{\"2129\":1}}],[\"支持solon和springboot\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2132\":1}}],[\"支持solon\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"支持spel表达式\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2132\":1,\"2150\":1,\"2209\":1,\"2270\":1,\"2296\":1}}],[\"支持节点属性扩展\",{\"1\":{\"113\":1,\"115\":1,\"1880\":1,\"1882\":1}}],[\"支持通过\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"支持一对一替换\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"支持扩展\",{\"1\":{\"13\":1,\"46\":1,\"297\":1,\"844\":1,\"932\":1,\"993\":1,\"1067\":1,\"1102\":1,\"1486\":1,\"1513\":1,\"1721\":1,\"1780\":1,\"1813\":1,\"1923\":1}}],[\"支持配置类包名和表达式\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"支持类包名配置和表达式配置\",{\"1\":{\"9\":1,\"841\":1,\"1064\":1,\"1482\":1,\"1776\":1}}],[\"遵循开源协议\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"遵循开源协议即可\",{\"1\":{\"119\":1,\"1549\":1,\"1886\":1}}],[\"均开源免费可商用\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"加载设计器\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"加载handler取消懒加载\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"加减签\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"加群联系作者详谈\",{\"1\":{\"1048\":1}}],[\"加群申请微信号\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"加群扫码\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"加入群聊的好处\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"加入群聊条件\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"加入沟通群和公众号的好处\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"加签和减签方法\",{\"1\":{\"309\":1,\"338\":1,\"1000\":1,\"1732\":1,\"1760\":1,\"1935\":1,\"1964\":1,\"2243\":1}}],[\"加签和减签\",{\"1\":{\"302\":1,\"307\":1,\"998\":1,\"1725\":1,\"1730\":1,\"1928\":1,\"1933\":1,\"2131\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"加签对象\",{\"1\":{\"172\":1,\"373\":1,\"746\":1,\"1144\":1,\"1279\":1,\"1602\":1,\"2010\":1}}],[\"加签\",{\"0\":{\"172\":1,\"373\":1,\"558\":1,\"746\":1,\"1144\":1,\"1279\":1,\"1602\":1,\"2010\":1},\"1\":{\"172\":1,\"174\":1,\"237\":1,\"240\":1,\"241\":1,\"373\":1,\"375\":1,\"476\":1,\"482\":1,\"556\":1,\"557\":1,\"558\":2,\"559\":1,\"560\":1,\"662\":1,\"668\":1,\"746\":1,\"748\":1,\"881\":1,\"887\":1,\"888\":1,\"1144\":1,\"1146\":1,\"1214\":1,\"1216\":2,\"1217\":1,\"1218\":1,\"1279\":1,\"1281\":1,\"1390\":1,\"1396\":1,\"1602\":1,\"1604\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"2010\":1,\"2012\":1,\"2071\":1,\"2074\":1,\"2075\":1}}],[\"沟通群\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"沟通群和公众号\",{\"0\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"联系我\",{\"0\":{\"275\":1,\"1699\":1,\"1901\":1},\"1\":{\"979\":1,\"1707\":1,\"1909\":1}}],[\"人大金仓\",{\"1\":{\"492\":1,\"678\":1,\"1046\":1,\"1406\":1}}],[\"人员类型\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"人力资源管理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"版本更新\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"版本\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"坐标\",{\"1\":{\"268\":1,\"269\":1,\"509\":1,\"510\":1,\"694\":1,\"695\":1,\"918\":1,\"919\":1,\"1247\":1,\"1248\":1,\"1423\":1,\"1424\":1,\"1694\":1,\"1695\":1,\"2102\":1,\"2103\":1}}],[\"租户id\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"存业务表对象json字符串\",{\"1\":{\"265\":1,\"266\":1,\"506\":1,\"507\":1,\"691\":1,\"692\":1,\"915\":1,\"916\":1,\"1244\":1,\"1245\":1,\"1420\":1,\"1421\":1,\"1691\":1,\"1692\":1,\"2099\":1,\"2100\":1}}],[\"√\",{\"1\":{\"265\":7,\"266\":8,\"267\":8,\"268\":6,\"269\":5,\"270\":6,\"271\":4,\"506\":7,\"507\":8,\"508\":8,\"509\":6,\"510\":5,\"511\":6,\"512\":4,\"691\":7,\"692\":8,\"693\":8,\"694\":6,\"695\":5,\"696\":6,\"697\":4,\"915\":7,\"916\":8,\"917\":8,\"918\":6,\"919\":5,\"920\":6,\"921\":4,\"1244\":7,\"1245\":8,\"1246\":8,\"1247\":6,\"1248\":5,\"1249\":6,\"1250\":4,\"1420\":7,\"1421\":8,\"1422\":8,\"1423\":6,\"1424\":5,\"1425\":6,\"1426\":4,\"1691\":7,\"1692\":8,\"1693\":8,\"1694\":6,\"1695\":5,\"1696\":6,\"1697\":4,\"2099\":7,\"2100\":8,\"2101\":8,\"2102\":6,\"2103\":5,\"2104\":6,\"2105\":4}}],[\"非诚勿扰\",{\"1\":{\"282\":1,\"283\":1}}],[\"非空\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"非必填\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"备注说明\",{\"1\":{\"263\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"504\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"689\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"913\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1418\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1689\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2097\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"名称\",{\"1\":{\"263\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"504\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"689\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"913\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1418\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1689\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2097\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"演练要记录过程\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"演示\",{\"1\":{\"1061\":3}}],[\"演示图\",{\"0\":{\"122\":1,\"466\":1,\"652\":1,\"871\":1,\"1052\":1,\"1380\":1,\"1552\":1,\"1889\":1,\"2166\":1,\"2332\":1,\"2358\":1}}],[\"演示地址\",{\"0\":{\"114\":1,\"121\":1,\"1043\":1,\"1051\":1,\"1545\":1,\"1551\":1,\"1881\":1,\"1888\":1,\"2116\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2176\":1,\"2182\":1,\"2237\":1,\"2330\":1,\"2342\":1,\"2356\":1,\"2368\":1,\"2374\":1},\"1\":{\"114\":1,\"121\":1,\"1043\":1,\"1051\":1,\"1545\":1,\"1551\":1,\"1881\":1,\"1888\":1,\"2116\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2176\":1,\"2182\":1,\"2237\":1,\"2330\":1,\"2342\":1,\"2356\":1,\"2368\":1,\"2374\":1}}],[\"演示项目hh\",{\"1\":{\"32\":1,\"1799\":1}}],[\"今天要进行一次军事演练\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"军事演练\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"谢谢合作\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"谢谢\",{\"1\":{\"261\":1}}],[\"点赞+关注+评论666\",{\"1\":{\"261\":1}}],[\"点击待办时候获取这个路径\",{\"1\":{\"123\":1,\"467\":1,\"653\":1,\"872\":1,\"1053\":1,\"1381\":1,\"1553\":1,\"1890\":1}}],[\"点击保存后\",{\"1\":{\"35\":1,\"1802\":1}}],[\"初学者推荐学习路线\",{\"0\":{\"259\":1,\"500\":1,\"685\":1,\"909\":1,\"1238\":1,\"1414\":1,\"1685\":1,\"2093\":1}}],[\"初始化后续所有办理人\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"初始化流程定义json\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"初始化\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"官网\",{\"0\":{\"2117\":1,\"2128\":1,\"2134\":1,\"2145\":1,\"2165\":1,\"2177\":1,\"2183\":1,\"2238\":1,\"2331\":1,\"2343\":1,\"2357\":1,\"2369\":1,\"2375\":1}}],[\"官网流程定义案例xml\",{\"0\":{\"249\":1,\"485\":1,\"671\":1,\"896\":1,\"1225\":1,\"1399\":1,\"1675\":1,\"2083\":1},\"1\":{\"249\":1,\"485\":1,\"671\":1,\"896\":1,\"1225\":1,\"1399\":1,\"1675\":1,\"2083\":1}}],[\"官方演示项目\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"官方提供基于ruoyi\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"找到对应数据库的更新版本\",{\"1\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"找到对应数据库的全量脚本warm\",{\"1\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"先创建数据库\",{\"1\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"先排除原依赖的前端代码\",{\"0\":{\"73\":1,\"817\":1,\"957\":1,\"1345\":1,\"1461\":1,\"1840\":1}}],[\"首先要建立仓库\",{\"0\":{\"2200\":1,\"2214\":1,\"2287\":1,\"2313\":1}}],[\"首先传入设计器需要的流程定义definitionid和是否可编辑disabled参数\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"首先\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"首次导入\",{\"1\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"首页特别赞助描述文字\",{\"1\":{\"283\":1}}],[\"首页特别赞助logo图\",{\"1\":{\"283\":1}}],[\"首页\",{\"0\":{\"0\":1}}],[\"及相关框架\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"环境配置及其开发\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"熟悉\",{\"1\":{\"247\":4,\"483\":4,\"669\":4,\"894\":4,\"1223\":4,\"1397\":4,\"1673\":4,\"2081\":4}}],[\"快速开始\",{\"0\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"快速审批场景\",{\"1\":{\"115\":1,\"1882\":1}}],[\"直至找到非并行网关\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"直到没有问题后被作者合并\",{\"0\":{\"111\":1,\"1040\":1,\"1542\":1,\"1878\":1}}],[\"递归往上找\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"记录跳转类型\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"记录总数量和已办数量\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"记录总数量和已办理数量\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"记录待办任务需要显示的待办信息页面\",{\"1\":{\"123\":1,\"467\":1,\"653\":1,\"872\":1,\"1053\":1,\"1381\":1,\"1553\":1,\"1890\":1}}],[\"途径节点和跳转线\",{\"1\":{\"246\":2,\"1672\":2,\"2080\":2}}],[\"目前不支持关闭\",{\"1\":{\"457\":1,\"643\":1,\"859\":1,\"1371\":1}}],[\"目前支持\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"目前支持mysql\",{\"1\":{\"113\":1,\"117\":1,\"1042\":1,\"1544\":1,\"1547\":1,\"1880\":1,\"1884\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"目前支持mybatis\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"目前支持snack3\",{\"1\":{\"80\":1,\"440\":1,\"626\":1,\"839\":1,\"961\":1,\"1354\":1,\"1468\":1,\"1847\":1}}],[\"目标节点编码\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"目标节点和起始节点\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"目标节点是结束节点\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"目标节点之后的所有结点和跳转线\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"目标节点\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"状态完成\",{\"1\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"状态都为失效\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"串行网关需要根据传入跳转条件去判断执行哪个任务路线\",{\"1\":{\"244\":1,\"479\":1,\"665\":1,\"884\":1,\"891\":1,\"1221\":1,\"1393\":1,\"1670\":1,\"2078\":1}}],[\"串行网关规则\",{\"0\":{\"244\":1,\"479\":1,\"665\":1,\"884\":1,\"891\":1,\"1221\":1,\"1393\":1,\"1670\":1,\"2078\":1}}],[\"最新版本集成方式请看官方文档\",{\"1\":{\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"最终返回图片给前端展示\",{\"1\":{\"438\":1,\"624\":1,\"837\":1,\"1352\":1}}],[\"最终为\",{\"1\":{\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1350\":1}}],[\"最终军事演练完成\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"最后流程图数据同步\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"最后的zzz为变量值\",{\"1\":{\"217\":1,\"776\":1,\"1180\":1,\"1647\":1,\"2055\":1}}],[\"最大最小值\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"最主要限制\",{\"1\":{\"244\":1,\"245\":1,\"479\":1,\"480\":1,\"665\":1,\"666\":1,\"884\":1,\"885\":1,\"891\":1,\"892\":1,\"1221\":1,\"1222\":1,\"1393\":1,\"1394\":1,\"1670\":1,\"1671\":1,\"2078\":1,\"2079\":1}}],[\"历史背景\",{\"0\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"历史数据考虑如何处理\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"历史表新增跳转类型\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"历史表目标节点编码和目标节点名称字段长度改为200\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"历史记录表新增ext扩展字段\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"历史记录改为单条保存\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"历史记录状态为审批通过\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"历史记录状态无效\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"历史任务记录表\",{\"1\":{\"263\":1,\"504\":1,\"689\":1,\"913\":1,\"1242\":1,\"1418\":1,\"1689\":1,\"2097\":1}}],[\"历史任务表流程状态支持外部传入\",{\"1\":{\"312\":1,\"1004\":1,\"1735\":1,\"1938\":1}}],[\"历史任务表\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"历史任务表状态\",{\"1\":{\"65\":1,\"408\":1,\"593\":1,\"784\":1,\"949\":1,\"1314\":1,\"1453\":1,\"1832\":1}}],[\"还是走maven中setting的镜像仓库\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"还不快快加入v\",{\"1\":{\"2151\":1,\"2210\":1,\"2271\":1,\"2297\":1}}],[\"还不确定具体办理人是谁\",{\"1\":{\"45\":1,\"931\":1,\"1101\":1,\"1512\":1,\"1812\":1}}],[\"还需要使用snack3库\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"还存在待办任务\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"失效时使用此配置\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"失效\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"必须放到第一位\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"必须先流转到网关节点\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"必传\",{\"1\":{\"145\":2,\"153\":1,\"155\":1,\"156\":1,\"157\":1,\"160\":1,\"161\":1,\"168\":1,\"170\":2,\"171\":2,\"172\":2,\"173\":2,\"177\":1,\"178\":2,\"179\":1,\"180\":2,\"181\":3,\"183\":1,\"184\":1,\"350\":2,\"362\":1,\"363\":1,\"369\":1,\"371\":3,\"372\":3,\"373\":3,\"374\":3,\"377\":3,\"535\":2,\"547\":1,\"548\":1,\"554\":1,\"556\":4,\"557\":4,\"558\":4,\"559\":4,\"562\":3,\"722\":2,\"734\":1,\"735\":1,\"742\":1,\"744\":2,\"745\":2,\"746\":2,\"747\":2,\"750\":3,\"1118\":2,\"1132\":1,\"1133\":1,\"1140\":1,\"1142\":2,\"1143\":2,\"1144\":2,\"1145\":2,\"1148\":6,\"1256\":2,\"1268\":1,\"1269\":1,\"1275\":1,\"1277\":3,\"1278\":3,\"1279\":3,\"1280\":3,\"1283\":3,\"1575\":2,\"1583\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1590\":1,\"1591\":1,\"1598\":1,\"1600\":2,\"1601\":2,\"1602\":2,\"1603\":2,\"1607\":1,\"1608\":2,\"1609\":1,\"1610\":2,\"1611\":3,\"1613\":1,\"1614\":1,\"1983\":2,\"1991\":1,\"1993\":1,\"1994\":1,\"1995\":1,\"1998\":1,\"1999\":1,\"2006\":1,\"2008\":2,\"2009\":2,\"2010\":2,\"2011\":2,\"2015\":1,\"2016\":2,\"2017\":1,\"2018\":2,\"2019\":3,\"2021\":1,\"2022\":1}}],[\"谨慎使用\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"流转后流程实例\",{\"1\":{\"499\":3,\"684\":3,\"907\":3,\"1236\":3,\"1413\":3,\"2173\":2,\"2234\":2,\"2339\":2,\"2365\":2}}],[\"流转类型\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"流转是传入\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"流程表\",{\"1\":{\"515\":1,\"700\":1,\"924\":1,\"1095\":1,\"1429\":1}}],[\"流程流转就像是warm\",{\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"流程流转管理\",{\"0\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"流程流转\",{\"0\":{\"499\":1,\"684\":1,\"907\":1,\"1236\":1,\"1413\":1,\"2173\":1,\"2234\":1,\"2339\":1,\"2365\":1}}],[\"流程流转到代表任务\",{\"1\":{\"128\":1,\"472\":1,\"658\":1,\"877\":1,\"1058\":1,\"1386\":1,\"1558\":1,\"1895\":1}}],[\"流程术语\",{\"0\":{\"482\":1,\"668\":1,\"1396\":1}}],[\"流程规则\",{\"0\":{\"475\":1,\"661\":1,\"880\":1,\"1389\":1}}],[\"流程配置文件改为表单填报方式\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"流程第三个节点为网关时无法渲染颜色\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"流程开启\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"流程开始监听器结束\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"流程开始监听器\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"流程激活和挂起案例\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"流程激活状态\",{\"1\":{\"265\":1,\"267\":1,\"506\":1,\"508\":1,\"691\":1,\"693\":1,\"915\":1,\"917\":1,\"1244\":1,\"1246\":1,\"1420\":1,\"1422\":1,\"1691\":1,\"1693\":1,\"2099\":1,\"2101\":1}}],[\"流程复制克隆改set\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"流程复制后\",{\"1\":{\"299\":1}}],[\"流程签署比例值\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"流程版本号生成逻辑重构\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"流程版本号默认改完自动递增\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"流程版本\",{\"1\":{\"265\":1,\"506\":1,\"691\":1,\"915\":1,\"1244\":1,\"1420\":1,\"1691\":1,\"2099\":1}}],[\"流程名称\",{\"1\":{\"265\":1,\"506\":1,\"691\":1,\"915\":1,\"1244\":1,\"1420\":1,\"1691\":1,\"2099\":1}}],[\"流程用户表\",{\"1\":{\"262\":1,\"263\":1,\"503\":1,\"504\":1,\"688\":1,\"689\":1,\"912\":1,\"913\":1,\"1241\":1,\"1242\":1,\"1417\":1,\"1418\":1,\"1688\":1,\"1689\":1,\"2096\":1,\"2097\":1}}],[\"流程结束的状态\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"流程完成\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"流程完成后\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"流程完成监听器结束\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"流程完成监听器\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"流程服务\",{\"1\":{\"228\":1}}],[\"流程协作规则\",{\"0\":{\"210\":1,\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1173\":1,\"1395\":1,\"1640\":1,\"2048\":1}}],[\"流程协作\",{\"0\":{\"209\":1,\"1172\":1,\"1639\":1,\"2047\":1}}],[\"流程状态字段flow\",{\"1\":{\"341\":1,\"1763\":1,\"1967\":1,\"2248\":1}}],[\"流程状态改成字符串类型\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"流程状态支持颜色支持自定义\",{\"1\":{\"301\":1,\"1927\":1,\"2179\":1,\"2180\":1,\"2371\":1,\"2372\":1}}],[\"流程状态\",{\"0\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1},\"1\":{\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"266\":1,\"267\":1,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"507\":1,\"508\":1,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"692\":1,\"693\":1,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"916\":1,\"917\":1,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1245\":1,\"1246\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1421\":1,\"1422\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1692\":1,\"1693\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2100\":1,\"2101\":1}}],[\"流程状态对应的三元色\",{\"1\":{\"7\":1,\"1774\":1}}],[\"流程编码\",{\"1\":{\"160\":1,\"265\":1,\"362\":1,\"506\":1,\"547\":1,\"691\":1,\"734\":1,\"915\":1,\"1132\":1,\"1244\":1,\"1268\":1,\"1420\":1,\"1590\":1,\"1691\":1,\"1998\":1,\"2099\":1}}],[\"流程编码和流程版本\",{\"1\":{\"123\":1,\"467\":1,\"653\":1,\"872\":1,\"1053\":1,\"1381\":1,\"1553\":1,\"1890\":1}}],[\"流程实例不能存在相同的业务id\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"流程实例查询sql\",{\"1\":{\"304\":1,\"1727\":1,\"1930\":1}}],[\"流程实例表\",{\"1\":{\"262\":1,\"263\":1,\"503\":1,\"504\":1,\"688\":1,\"689\":1,\"912\":1,\"913\":1,\"1241\":1,\"1242\":1,\"1417\":1,\"1418\":1,\"1688\":1,\"1689\":1,\"2096\":1,\"2097\":1}}],[\"流程实例表状态\",{\"1\":{\"65\":1,\"408\":1,\"593\":1,\"784\":1,\"949\":1,\"1314\":1,\"1453\":1,\"1832\":1}}],[\"流程实例三张表\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"流程实例就算完成\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"流程实例挂起后\",{\"1\":{\"165\":1,\"367\":1,\"552\":1,\"739\":1,\"1137\":1,\"1273\":1,\"1595\":1,\"2003\":1}}],[\"流程实例开启后\",{\"1\":{\"153\":1,\"155\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1995\":1}}],[\"流程实例id\",{\"1\":{\"153\":1,\"155\":1,\"156\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1994\":1,\"1995\":1}}],[\"流程节点名称\",{\"1\":{\"267\":1,\"268\":1,\"508\":1,\"509\":1,\"693\":1,\"694\":1,\"917\":1,\"918\":1,\"1246\":1,\"1247\":1,\"1422\":1,\"1423\":1,\"1693\":1,\"1694\":1,\"2101\":1,\"2102\":1}}],[\"流程节点编码\",{\"1\":{\"267\":1,\"268\":1,\"508\":1,\"509\":1,\"693\":1,\"694\":1,\"917\":1,\"918\":1,\"1246\":1,\"1247\":1,\"1422\":1,\"1423\":1,\"1693\":1,\"1694\":1,\"2101\":1,\"2102\":1}}],[\"流程节点表\",{\"1\":{\"262\":1,\"263\":1,\"503\":1,\"504\":1,\"688\":1,\"689\":1,\"912\":1,\"913\":1,\"1241\":1,\"1242\":1,\"1417\":1,\"1418\":1,\"1688\":1,\"1689\":1,\"2096\":1,\"2097\":1}}],[\"流程节点和流程跳转数据\",{\"0\":{\"349\":1,\"721\":1,\"1117\":1,\"1255\":1},\"1\":{\"142\":1,\"352\":1,\"353\":1,\"724\":1,\"725\":1,\"1120\":1,\"1121\":1,\"1258\":1,\"1259\":1,\"1572\":1,\"1980\":1}}],[\"流程节点配置\",{\"0\":{\"22\":1,\"453\":1,\"639\":1,\"854\":1,\"1077\":1,\"1367\":1,\"1495\":1,\"1789\":1}}],[\"流程定义数据保存支持json格式\",{\"1\":{\"995\":1}}],[\"流程定义xml字符串\",{\"1\":{\"350\":2,\"351\":2,\"535\":2,\"536\":2,\"722\":2,\"723\":2,\"1118\":2,\"1119\":2,\"1256\":2,\"1257\":2}}],[\"流程定义新增复制按钮\",{\"1\":{\"324\":1,\"1016\":1,\"1747\":1,\"1950\":1}}],[\"流程定义表from\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"流程定义表\",{\"1\":{\"262\":1,\"263\":1,\"503\":1,\"504\":1,\"688\":1,\"689\":1,\"912\":1,\"913\":1,\"1241\":1,\"1242\":1,\"1417\":1,\"1418\":1,\"1688\":1,\"1689\":1,\"2096\":1,\"2097\":1}}],[\"流程定义的相关的三张表\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"流程定义的输入流\",{\"1\":{\"136\":1,\"1566\":1,\"1974\":1}}],[\"流程定义时通过逗号隔开多个权限\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"流程定义id\",{\"1\":{\"178\":1,\"180\":1,\"181\":1,\"268\":1,\"269\":1,\"350\":1,\"351\":1,\"377\":1,\"509\":1,\"510\":1,\"535\":1,\"536\":1,\"562\":1,\"694\":1,\"695\":1,\"722\":1,\"723\":1,\"750\":1,\"918\":1,\"919\":1,\"1118\":1,\"1119\":1,\"1148\":2,\"1247\":1,\"1248\":1,\"1256\":1,\"1257\":1,\"1283\":1,\"1423\":1,\"1424\":1,\"1608\":1,\"1610\":1,\"1611\":1,\"1694\":1,\"1695\":1,\"2016\":1,\"2018\":1,\"2019\":1,\"2102\":1,\"2103\":1}}],[\"流程定义id列表\",{\"1\":{\"145\":1,\"1575\":1,\"1983\":1}}],[\"流程定义挂起后\",{\"1\":{\"151\":1,\"360\":1,\"545\":1,\"732\":1,\"1128\":1,\"1266\":1,\"1581\":1,\"1989\":1}}],[\"流程定义发布状态\",{\"1\":{\"145\":1,\"1575\":1,\"1983\":1}}],[\"流程定义\",{\"1\":{\"142\":1,\"352\":1,\"353\":1,\"724\":1,\"725\":1,\"1120\":1,\"1121\":1,\"1258\":1,\"1259\":1,\"1572\":1,\"1980\":1}}],[\"流程定义对象\",{\"1\":{\"140\":1,\"1570\":1,\"1978\":1}}],[\"流程定义json对象\",{\"1\":{\"138\":1,\"141\":1,\"1568\":1,\"1571\":1,\"1976\":1,\"1979\":1}}],[\"流程定义defjson的json字符串\",{\"1\":{\"137\":1,\"1567\":1,\"1975\":1}}],[\"流程定义配置\",{\"0\":{\"23\":1,\"454\":1,\"640\":1,\"855\":1,\"1078\":1,\"1368\":1,\"1496\":1,\"1790\":1}}],[\"流程引擎自身维护多租户和软删除实现\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"流程引擎自带流程图\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"流程设计保存\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"流程设计和审批功能\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"流程设计\",{\"0\":{\"124\":1,\"468\":1,\"654\":1,\"873\":1,\"1054\":1,\"1382\":1,\"1554\":1,\"1891\":1}}],[\"流程设计器开发\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"流程设计器新增快捷键支持\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"流程设计器\",{\"1\":{\"113\":1,\"115\":1,\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1042\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1544\":1,\"1659\":1,\"1660\":1,\"1880\":1,\"1882\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2115\":1,\"2125\":1,\"2126\":1,\"2132\":1,\"2142\":1,\"2143\":1,\"2159\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2226\":1,\"2236\":1,\"2325\":1,\"2329\":1,\"2341\":1,\"2351\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"流程设计时\",{\"1\":{\"49\":1,\"334\":2,\"935\":1,\"1105\":1,\"1516\":1,\"1756\":2,\"1816\":1,\"1960\":2,\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"流程设计时未设置办理人或者ignore为true可不传\",{\"1\":{\"41\":1,\"161\":1,\"168\":1,\"735\":1,\"742\":1,\"869\":1,\"1092\":1,\"1133\":1,\"1140\":1,\"1269\":1,\"1275\":1,\"1508\":1,\"1591\":1,\"1598\":1,\"1808\":1,\"1999\":1,\"2006\":1}}],[\"流程图根据前端返回的节点坐标\",{\"1\":{\"438\":1,\"624\":1,\"837\":1,\"1352\":1}}],[\"流程图结束节点显示为黑色\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"流程图渲染有问题\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"流程图查询异常处理\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"流程图清晰度调整\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"流程图绘制调整重构\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"流程图右上角新增完成状态颜色示例\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"流程图第一个节点不是待办颜色\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"流程图扩展增加接口\",{\"1\":{\"1723\":1}}],[\"流程图扩展\",{\"1\":{\"301\":1,\"1927\":1,\"2179\":1,\"2180\":1,\"2371\":1,\"2372\":1}}],[\"流程图退回状态设置\",{\"1\":{\"299\":1}}],[\"流程图合法性检验\",{\"1\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"流程图片中文乱码\",{\"0\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"流程图元数据流程状态规则\",{\"0\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"流程图元数据存储在实例表中的def\",{\"1\":{\"153\":1,\"155\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1995\":1}}],[\"流程图\",{\"0\":{\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"438\":1,\"624\":1,\"837\":1,\"1352\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1588\":1,\"1991\":1,\"1992\":1,\"1993\":1,\"1994\":1,\"1995\":1,\"1996\":1},\"1\":{\"113\":1,\"115\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"1882\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"流程图管理就像warm\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"流程图管理\",{\"0\":{\"1\":1,\"1768\":1,\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"流程审批\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"流程跳转表\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"流程跳转\",{\"0\":{\"67\":1,\"161\":1,\"168\":1,\"363\":1,\"369\":1,\"410\":1,\"548\":1,\"554\":1,\"595\":1,\"735\":1,\"742\":1,\"786\":1,\"951\":1,\"1133\":1,\"1140\":1,\"1269\":1,\"1275\":1,\"1316\":1,\"1455\":1,\"1591\":1,\"1598\":1,\"1834\":1,\"1999\":1,\"2006\":1},\"1\":{\"161\":1,\"168\":1,\"363\":1,\"369\":1,\"548\":1,\"554\":1,\"735\":1,\"742\":1,\"1133\":1,\"1140\":1,\"1269\":1,\"1275\":1,\"1591\":1,\"1598\":1,\"1999\":1,\"2006\":1}}],[\"流程变量表达式支持替换集合\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2130\":1,\"2131\":1}}],[\"流程变量是全局都能获取\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"流程变量值\",{\"1\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1}}],[\"流程变量\",{\"0\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1},\"1\":{\"53\":1,\"56\":1,\"59\":1,\"63\":2,\"77\":1,\"83\":1,\"89\":1,\"160\":1,\"161\":1,\"168\":1,\"181\":1,\"217\":1,\"272\":2,\"362\":1,\"363\":1,\"369\":1,\"377\":1,\"436\":1,\"521\":2,\"527\":1,\"530\":1,\"531\":1,\"547\":1,\"548\":1,\"554\":1,\"562\":1,\"622\":1,\"706\":2,\"712\":1,\"715\":1,\"716\":1,\"734\":1,\"735\":1,\"742\":1,\"750\":1,\"776\":1,\"822\":1,\"825\":1,\"835\":2,\"930\":2,\"938\":1,\"941\":1,\"943\":1,\"947\":2,\"964\":1,\"970\":1,\"1108\":1,\"1111\":1,\"1132\":1,\"1133\":1,\"1140\":1,\"1148\":1,\"1180\":1,\"1251\":2,\"1268\":1,\"1269\":1,\"1275\":1,\"1283\":1,\"1350\":1,\"1435\":2,\"1441\":1,\"1444\":1,\"1445\":1,\"1447\":1,\"1451\":2,\"1465\":1,\"1471\":1,\"1477\":1,\"1520\":1,\"1523\":1,\"1590\":1,\"1591\":1,\"1598\":1,\"1611\":1,\"1647\":1,\"1698\":2,\"1820\":1,\"1823\":1,\"1826\":1,\"1830\":2,\"1844\":1,\"1850\":1,\"1856\":1,\"1998\":1,\"1999\":1,\"2006\":1,\"2019\":1,\"2055\":1,\"2106\":2,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"流程监听器和某个流程定义有关\",{\"1\":{\"444\":1,\"630\":1,\"1358\":1}}],[\"流程监听器和节点监听器\",{\"0\":{\"444\":1,\"630\":1,\"1358\":1}}],[\"流程监听器\",{\"0\":{\"23\":1,\"454\":1,\"640\":1,\"855\":1,\"1078\":1,\"1368\":1,\"1496\":1,\"1790\":1},\"1\":{\"11\":2,\"313\":1,\"444\":1,\"630\":1,\"842\":2,\"1005\":1,\"1065\":2,\"1358\":1,\"1484\":2,\"1736\":1,\"1778\":2,\"1939\":1}}],[\"互斥网关\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"互斥网关按照跳转条件流转\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"互斥和并行网关\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"才算通过\",{\"1\":{\"241\":2,\"476\":2,\"662\":2,\"881\":2,\"888\":2,\"1218\":2,\"1390\":2,\"1667\":2,\"2075\":2}}],[\"无其他协作方式\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"无\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1,\"2245\":1,\"2247\":1,\"2250\":1}}],[\"离上次最近的并行网关节点编码\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"驳回到指定节点配置信息\",{\"1\":{\"299\":1}}],[\"驳回指向节点后还存在其他正在执行的待办任务\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"驳回\",{\"1\":{\"241\":1,\"243\":1,\"476\":1,\"478\":1,\"662\":1,\"664\":1,\"881\":1,\"883\":1,\"888\":1,\"890\":1,\"1218\":1,\"1220\":1,\"1390\":1,\"1392\":1,\"1667\":1,\"1669\":1,\"2075\":1,\"2077\":1}}],[\"驳回流程\",{\"0\":{\"130\":1,\"474\":1,\"660\":1,\"879\":1,\"1060\":1,\"1388\":1,\"1560\":1,\"1897\":1}}],[\"暂存\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"抄送\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"撤销和取回\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"撤销\",{\"1\":{\"240\":1,\"299\":1,\"482\":1,\"668\":1,\"1666\":1,\"1925\":1,\"2074\":1}}],[\"撤销修改\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"取更新时间\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"取回\",{\"1\":{\"240\":1,\"297\":1,\"299\":1,\"482\":1,\"668\":1,\"887\":1,\"995\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"1721\":1,\"1923\":1,\"1925\":1,\"2074\":1}}],[\"取消发布流程定义\",{\"1\":{\"148\":1,\"356\":1,\"541\":1,\"728\":1,\"1124\":1,\"1262\":1,\"1578\":1,\"1986\":1}}],[\"取消发布\",{\"0\":{\"148\":1,\"356\":1,\"541\":1,\"728\":1,\"1124\":1,\"1262\":1,\"1578\":1,\"1986\":1}}],[\"发表在公共平台\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"发起人可催办提醒当前节点处理人\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"发布流程\",{\"0\":{\"497\":1,\"682\":1,\"905\":1,\"1234\":1,\"1411\":1,\"2171\":1,\"2232\":1,\"2337\":1,\"2363\":1},\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"发布流程定义\",{\"1\":{\"147\":1,\"355\":1,\"540\":1,\"727\":1,\"1123\":1,\"1261\":1,\"1577\":1,\"1985\":1}}],[\"发布\",{\"0\":{\"147\":1,\"355\":1,\"540\":1,\"727\":1,\"1123\":1,\"1261\":1,\"1577\":1,\"1985\":1}}],[\"催办\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"要与\",{\"1\":{\"459\":2,\"645\":2,\"861\":2,\"1084\":2,\"1373\":2}}],[\"要导出的字符串\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"要求重新处理\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"要和后端yml中配置一致\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"术语解释\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"术语\",{\"0\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1},\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"术语规则\",{\"0\":{\"240\":1,\"887\":1,\"1217\":1,\"1666\":1,\"2074\":1}}],[\"号\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"序列化所有long类型\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"序列化位字符串\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"序\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"求助其他人审批\",{\"1\":{\"237\":1,\"240\":1,\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1214\":1,\"1217\":1,\"1218\":1,\"1390\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"2071\":1,\"2074\":1,\"2075\":1}}],[\"变更支持的类型\",{\"0\":{\"237\":1,\"1214\":1,\"1663\":1,\"2071\":1}}],[\"变量替换类型\",{\"1\":{\"531\":1,\"716\":1,\"1445\":1}}],[\"变量替换时机\",{\"0\":{\"49\":1,\"524\":1,\"709\":1,\"935\":1,\"1105\":1,\"1438\":1,\"1516\":1,\"1816\":1}}],[\"变量表达式表达式\",{\"1\":{\"115\":1,\"1882\":1}}],[\"每次请求会把token\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"每年还会发放idea正版授权\",{\"1\":{\"102\":1,\"1031\":1,\"1533\":1,\"1869\":1}}],[\"yaml配置方式\",{\"0\":{\"403\":1,\"406\":1,\"416\":1,\"518\":1,\"588\":1,\"591\":1,\"601\":1,\"703\":1,\"779\":1,\"782\":1,\"792\":1,\"927\":1,\"1098\":1,\"1183\":1,\"1186\":1,\"1192\":1,\"1309\":1,\"1312\":1,\"1322\":1,\"1432\":1}}],[\"yml控制开关\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"yml中配置mybatis改为mybatis\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"yml中配置warm\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"y是\",{\"1\":{\"265\":1,\"266\":1,\"268\":2,\"270\":1,\"506\":1,\"507\":1,\"509\":2,\"511\":1,\"691\":1,\"692\":1,\"694\":2,\"696\":1,\"915\":1,\"916\":1,\"918\":2,\"920\":1,\"1244\":1,\"1245\":1,\"1247\":2,\"1249\":1,\"1420\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1691\":1,\"1692\":1,\"1694\":2,\"1696\":1,\"2099\":1,\"2100\":1,\"2102\":2,\"2104\":1}}],[\"yyy\",{\"1\":{\"309\":2,\"338\":2,\"1000\":2,\"1732\":2,\"1760\":2,\"1935\":2,\"1964\":2,\"2243\":2}}],[\"yyyy\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"yyy|zzz\",{\"1\":{\"217\":1,\"1647\":1,\"2055\":1}}],[\"yy\",{\"1\":{\"3\":1,\"1770\":1}}],[\"追加\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"追加文字\",{\"0\":{\"2\":1,\"4\":1,\"1769\":1,\"1771\":1}}],[\"共享后端权限\",{\"0\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"构建工具\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"构建树状结构\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"构建信创\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"权限监听器\",{\"1\":{\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"1357\":1,\"1361\":1}}],[\"权限人\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"权限类型\",{\"1\":{\"241\":1,\"268\":1,\"476\":1,\"509\":1,\"662\":1,\"694\":1,\"881\":1,\"888\":1,\"918\":1,\"1218\":1,\"1247\":1,\"1390\":1,\"1423\":1,\"1667\":1,\"1694\":1,\"2075\":1,\"2102\":1}}],[\"权限标识\",{\"1\":{\"241\":2,\"268\":2,\"476\":2,\"509\":2,\"662\":2,\"694\":2,\"881\":2,\"888\":2,\"918\":2,\"1218\":2,\"1247\":2,\"1390\":2,\"1423\":2,\"1667\":2,\"1694\":2,\"2075\":2,\"2102\":2}}],[\"权限名称\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"权限编码\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"转为\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"转历史任务\",{\"1\":{\"242\":1,\"245\":1,\"477\":1,\"480\":1,\"663\":1,\"666\":1,\"882\":1,\"885\":1,\"889\":1,\"892\":1,\"1219\":1,\"1222\":1,\"1391\":1,\"1394\":1,\"1668\":1,\"1671\":1,\"2076\":1,\"2079\":1}}],[\"转成组件内部左侧树列表能够显示的数据\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"转成组件内部能够显示的数据\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"转办完善\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"转办忽略权限校验\",{\"1\":{\"174\":1,\"375\":1,\"560\":1,\"748\":1,\"1146\":1,\"1281\":1,\"1604\":1,\"2012\":1}}],[\"转办对象\",{\"1\":{\"170\":1,\"371\":1,\"744\":1,\"1142\":1,\"1277\":1,\"1600\":1,\"2008\":1}}],[\"转办后\",{\"1\":{\"170\":1,\"371\":1,\"556\":1,\"557\":1,\"744\":1,\"1142\":1,\"1277\":1,\"1600\":1,\"2008\":1}}],[\"转办\",{\"0\":{\"170\":1,\"371\":1,\"556\":1,\"744\":1,\"1142\":1,\"1277\":1,\"1600\":1,\"2008\":1},\"1\":{\"113\":1,\"170\":1,\"174\":1,\"237\":1,\"240\":1,\"241\":1,\"302\":1,\"307\":1,\"338\":1,\"371\":1,\"375\":1,\"476\":1,\"482\":1,\"556\":2,\"557\":1,\"558\":1,\"559\":1,\"560\":1,\"662\":1,\"668\":1,\"744\":1,\"748\":1,\"881\":1,\"887\":1,\"888\":1,\"998\":1,\"1042\":1,\"1142\":1,\"1146\":1,\"1214\":1,\"1216\":2,\"1217\":1,\"1218\":1,\"1277\":1,\"1281\":1,\"1390\":1,\"1396\":1,\"1544\":1,\"1600\":1,\"1604\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"1725\":1,\"1730\":1,\"1760\":1,\"1880\":1,\"1928\":1,\"1933\":1,\"1964\":1,\"2008\":1,\"2012\":1,\"2071\":1,\"2074\":1,\"2075\":1,\"2115\":1,\"2126\":1,\"2131\":1,\"2132\":1,\"2143\":1,\"2162\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2243\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2328\":1,\"2341\":1,\"2354\":1,\"2367\":1}}],[\"给作者一些支持\",{\"1\":{\"261\":1}}],[\"给任务节点设置哪些权限的人可以办理\",{\"1\":{\"230\":1,\"429\":1,\"615\":1,\"807\":1,\"1207\":1,\"1335\":1,\"1656\":1,\"2064\":1,\"2111\":1,\"2122\":1,\"2139\":1,\"2156\":1,\"2223\":1,\"2322\":1,\"2348\":1}}],[\"给节点中追加文字\",{\"1\":{\"4\":1,\"1771\":1}}],[\"给节点顶部增加文字说明\",{\"1\":{\"4\":1,\"1771\":1}}],[\"示例\",{\"1\":{\"229\":1}}],[\"跳转流程\",{\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"跳转到指定节点\",{\"1\":{\"499\":1,\"684\":1,\"907\":1,\"1236\":1,\"1413\":1,\"2173\":1,\"2234\":1,\"2339\":1,\"2365\":1}}],[\"跳转名称\",{\"1\":{\"269\":1,\"510\":1,\"695\":1,\"919\":1,\"1248\":1,\"1424\":1,\"1695\":1,\"2103\":1}}],[\"跳转节点\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"跳转条件下拉框js\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"跳转条件下拉框\",{\"1\":{\"335\":3,\"1757\":3,\"1961\":3,\"2240\":3}}],[\"跳转条件获取方式变更为流程变量\",{\"1\":{\"324\":1,\"1016\":1,\"1747\":1,\"1950\":1}}],[\"跳转条件\",{\"1\":{\"241\":1,\"269\":1,\"335\":2,\"476\":1,\"510\":1,\"662\":1,\"695\":1,\"881\":1,\"888\":1,\"919\":1,\"1218\":1,\"1248\":1,\"1390\":1,\"1424\":1,\"1667\":1,\"1695\":1,\"1757\":2,\"1961\":2,\"2075\":1,\"2103\":1,\"2240\":2}}],[\"跳转类型\",{\"1\":{\"126\":1,\"161\":1,\"168\":1,\"181\":1,\"241\":1,\"269\":1,\"363\":1,\"369\":1,\"377\":1,\"470\":1,\"476\":1,\"510\":1,\"548\":1,\"554\":1,\"562\":1,\"656\":1,\"662\":1,\"695\":1,\"735\":1,\"742\":1,\"750\":1,\"875\":1,\"881\":1,\"888\":1,\"919\":1,\"1056\":1,\"1133\":1,\"1140\":1,\"1148\":1,\"1218\":1,\"1248\":1,\"1269\":1,\"1275\":1,\"1283\":1,\"1384\":1,\"1390\":1,\"1424\":1,\"1556\":1,\"1591\":1,\"1598\":1,\"1611\":1,\"1667\":1,\"1695\":1,\"1893\":1,\"1999\":1,\"2006\":1,\"2019\":1,\"2075\":1,\"2103\":1}}],[\"跳过不需要验证的路径\",{\"1\":{\"228\":1}}],[\"地址\",{\"1\":{\"228\":1}}],[\"排查下接口就行或者对象就行\",{\"1\":{\"294\":1,\"990\":1,\"1718\":1,\"1920\":1}}],[\"排除过滤的\",{\"1\":{\"228\":1}}],[\"排序字段\",{\"1\":{\"206\":1,\"207\":1,\"208\":1,\"398\":1,\"399\":1,\"400\":1,\"583\":1,\"584\":1,\"585\":1,\"771\":1,\"772\":1,\"773\":1,\"1169\":1,\"1170\":1,\"1171\":1,\"1304\":1,\"1305\":1,\"1306\":1,\"1636\":1,\"1637\":1,\"1638\":1,\"2044\":1,\"2045\":1,\"2046\":1}}],[\"网关直连和流程图重构\",{\"0\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"网关节点编辑文字报错处理\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"网关节点不可直连\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"网关节点可不需要跳转类型\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"网关鉴权\",{\"1\":{\"228\":1}}],[\"网关不校验此处的白名单\",{\"1\":{\"228\":1}}],[\"安装中文字体\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"安全配置\",{\"1\":{\"228\":1}}],[\"安徽数智建造研究院有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"与\",{\"1\":{\"286\":1,\"406\":1,\"481\":1,\"591\":1,\"667\":1,\"782\":1,\"886\":1,\"893\":1,\"982\":1,\"1186\":1,\"1312\":1,\"1395\":1,\"1710\":1,\"1912\":1}}],[\"与单体不同\",{\"1\":{\"228\":1}}],[\"与activiti\",{\"0\":{\"115\":1,\"1882\":1}}],[\"都是后端放行部分路径\",{\"1\":{\"227\":1}}],[\"否则无法访问\",{\"1\":{\"225\":1,\"420\":1,\"605\":1,\"798\":1,\"1198\":1,\"1326\":1,\"1654\":1,\"2062\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"否则无法访问业务系统\",{\"1\":{\"71\":1,\"815\":1,\"955\":1,\"1343\":1,\"1459\":1,\"1838\":1}}],[\"单体项目\",{\"0\":{\"224\":1}}],[\"把如上代码\",{\"1\":{\"2150\":1,\"2209\":1,\"2270\":1,\"2296\":1}}],[\"把历史任务表记录转成新的流程图元数据\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"把不能退回到开始节点去掉\",{\"1\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"把它转历史记录\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"把设计器打包的jar包中\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"把打包后的文件dist复制到nginx的html目录下\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"把打包后的文件dist复制到业务系统src\",{\"1\":{\"74\":1,\"818\":1,\"958\":1,\"1346\":1,\"1462\":1,\"1841\":1}}],[\"小于等于\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"小于\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"抉择是执行哪个分支\",{\"1\":{\"215\":1,\"774\":1,\"1178\":1,\"1645\":1,\"2053\":1}}],[\"或签待办权限支持个人\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"或签\",{\"0\":{\"212\":1,\"1175\":1,\"1642\":1,\"2050\":1},\"1\":{\"210\":1,\"240\":1,\"330\":1,\"481\":1,\"482\":1,\"667\":1,\"668\":1,\"886\":1,\"887\":1,\"893\":1,\"1022\":1,\"1173\":1,\"1217\":2,\"1395\":1,\"1396\":1,\"1640\":1,\"1666\":1,\"1753\":1,\"1956\":1,\"2048\":1,\"2074\":1}}],[\"或者直接通过后端接口访问该地址\",{\"1\":{\"609\":1,\"2121\":1}}],[\"或者直到不是网关为止\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"或者工具类获取service\",{\"1\":{\"461\":1,\"647\":1,\"1375\":1}}],[\"或者前端直接访问后端接口\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"或者优化页面配置\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1}}],[\"或者加上排除配置spring\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"或者\",{\"1\":{\"241\":1,\"242\":1,\"476\":1,\"477\":1,\"662\":1,\"663\":1,\"881\":1,\"882\":1,\"888\":1,\"889\":1,\"1218\":1,\"1219\":1,\"1390\":1,\"1391\":1,\"1667\":1,\"1668\":1,\"2075\":1,\"2076\":1}}],[\"或者做的过程中遇到了什么问题\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"或者是项目的功能异常\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"或者src\",{\"1\":{\"74\":1,\"818\":1,\"958\":1,\"1346\":1,\"1462\":1,\"1841\":1}}],[\"或者其他\",{\"1\":{\"18\":1}}],[\"或者节点监听器\",{\"1\":{\"17\":1,\"19\":1,\"448\":1,\"449\":1,\"634\":1,\"635\":1,\"849\":1,\"850\":1,\"1072\":1,\"1073\":1,\"1362\":1,\"1363\":1,\"1490\":1,\"1491\":1,\"1784\":1,\"1785\":1}}],[\"批量保存改为默认1000条一批\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"批量更新\",{\"0\":{\"202\":1,\"394\":1,\"579\":1,\"767\":1,\"1165\":1,\"1300\":1,\"1632\":1,\"2040\":1},\"1\":{\"202\":1,\"394\":1,\"579\":1,\"767\":1,\"1165\":1,\"1300\":1,\"1632\":1,\"2040\":1}}],[\"批量新增\",{\"0\":{\"200\":1,\"201\":1,\"392\":1,\"393\":1,\"577\":1,\"578\":1,\"765\":1,\"766\":1,\"1163\":1,\"1164\":1,\"1298\":1,\"1299\":1,\"1630\":1,\"1631\":1,\"2038\":1,\"2039\":1},\"1\":{\"200\":1,\"201\":1,\"392\":1,\"393\":1,\"577\":1,\"578\":1,\"765\":1,\"766\":1,\"1163\":1,\"1164\":1,\"1298\":1,\"1299\":1,\"1630\":1,\"1631\":1,\"2038\":1,\"2039\":1}}],[\"插入大小\",{\"1\":{\"201\":1,\"393\":1,\"578\":1,\"766\":1,\"1164\":1,\"1299\":1,\"1631\":1,\"2039\":1}}],[\"插件机制有限\",{\"1\":{\"115\":1,\"1882\":1}}],[\"主要更新内容\",{\"0\":{\"2179\":1,\"2371\":1}}],[\"主键id\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"主键集合\",{\"1\":{\"188\":1,\"380\":1,\"565\":1,\"753\":1,\"1151\":1,\"1286\":1,\"1618\":1,\"2026\":1}}],[\"主键\",{\"1\":{\"187\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"379\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"564\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"752\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1150\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1285\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1617\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2025\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"主流数据库\",{\"1\":{\"115\":1,\"1882\":1}}],[\"公众号\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"公共api接口\",{\"0\":{\"186\":1,\"378\":1,\"563\":1,\"751\":1,\"1149\":1,\"1284\":1,\"1616\":1,\"2024\":1}}],[\"公司内部oa办公系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"公司使用列表\",{\"0\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"含过滤\",{\"0\":{\"181\":1,\"1611\":1,\"2019\":1}}],[\"修正pg的sql文件名\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"修復开始节点直连网关\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复等\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"修复solon版本业务系统可不用单独加载warm\",{\"1\":{\"329\":1,\"1021\":1,\"1752\":1,\"1955\":1}}],[\"修复并行网关流程流程图显示错误问题\",{\"1\":{\"326\":1,\"1018\":1,\"1749\":1,\"1952\":1}}],[\"修复并行网关后面没有中间节点\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"修复xml脚本中遗漏伪命的问题\",{\"1\":{\"325\":1,\"1017\":1,\"1748\":1,\"1951\":1}}],[\"修复监听器部分判空bug\",{\"1\":{\"322\":1,\"1014\":1,\"1745\":1,\"1948\":1}}],[\"修复开始任务记录待办\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"修复开启流程\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"修复已经设置后续节点动态权限后\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"修复已办任务查询审批想起无效问题\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复java17以上\",{\"1\":{\"320\":1,\"1012\":1,\"1743\":1,\"1946\":1}}],[\"修复终止流程bug\",{\"1\":{\"319\":1,\"1011\":1,\"1742\":1,\"1945\":1}}],[\"修复设置默认填充器时候\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"修复设计器驳回指定节点显示异常问题\",{\"1\":{\"304\":1,\"305\":1,\"1727\":1,\"1728\":1,\"1930\":1,\"1931\":1}}],[\"修复usermapper\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"修复填充器不接收外部设置的时间\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"修复保存流程xml报错问题\",{\"1\":{\"315\":1,\"1007\":1,\"1738\":1,\"1941\":1}}],[\"修复更新拼上了多余的条件\",{\"1\":{\"315\":1,\"1007\":1,\"1738\":1,\"1941\":1}}],[\"修复postgresql与mysql关键词符号问题\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复不能退回\",{\"1\":{\"314\":2,\"1006\":2,\"1737\":2,\"1940\":2}}],[\"修复查看流程图模糊的问题\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复taskserviceimpl\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复加签批量提交报错\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复\",{\"1\":{\"313\":2,\"314\":1,\"1005\":2,\"1006\":1,\"1736\":2,\"1737\":1,\"1939\":2,\"1940\":1}}],[\"修复deletebytaskids\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"修复流程流转异常\",{\"1\":{\"320\":1,\"1012\":1,\"1743\":1,\"1946\":1}}],[\"修复流程已完成\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复流程定义和流程实例相同\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修复流程监听器导出失败的问题\",{\"1\":{\"312\":1,\"1004\":1,\"1735\":1,\"1938\":1}}],[\"修复流程退回目标节点前存在并行网关\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"修复历史记录创建时间相等\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"修复历史记录表\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"修复mybatis逻辑删除变成真实删除的缺陷\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"修复mybatis\",{\"1\":{\"310\":1,\"1002\":1,\"1733\":1,\"1936\":1}}],[\"修复mybatis扩展包中\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"修复删除流程实例信息\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"修复最新设计器代码未复制到到jar包\",{\"1\":{\"303\":1,\"1726\":1,\"1929\":1}}],[\"修复结束节点还执行创建监听器的问题\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"修复绘制流程图\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"修复条件表达式中如果有|或导致错误分隔的问题\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"修复退回时存在其他代办任务\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"修复当设计流程\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"修复问题\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"修改的任务id\",{\"1\":{\"556\":1,\"557\":1,\"558\":1,\"559\":1}}],[\"修改flow\",{\"1\":{\"322\":1,\"1014\":1,\"1745\":1,\"1948\":1}}],[\"修改flowuserdao的bean名称\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"修改扩展字段名称\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"修改扩展字段ext注释\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"修改任务历史表时间定义\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"修改\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"修改项目的groupid\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1}}],[\"修改流程变量传递方式\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"修改字段名称\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"修改当票签和会签节点时\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"修改id生成方式\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"修改办理人接口\",{\"1\":{\"312\":1,\"1004\":1,\"1735\":1,\"1938\":1}}],[\"修改办理人\",{\"0\":{\"174\":1,\"375\":1,\"560\":1,\"748\":1,\"1146\":1,\"1281\":1,\"1604\":1,\"2012\":1},\"1\":{\"174\":1,\"375\":1,\"560\":1,\"748\":1,\"1146\":1,\"1281\":1,\"1604\":1,\"2012\":1}}],[\"减少人为错误\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"减少办理人\",{\"1\":{\"173\":2,\"174\":1,\"374\":2,\"375\":1,\"559\":1,\"560\":1,\"747\":2,\"748\":1,\"1145\":2,\"1146\":1,\"1280\":2,\"1281\":1,\"1603\":2,\"1604\":1,\"2011\":2,\"2012\":1}}],[\"减少繁琐代码搬运和适配\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2236\":1,\"2341\":1,\"2367\":1}}],[\"减签\",{\"0\":{\"173\":1,\"374\":1,\"559\":1,\"747\":1,\"1145\":1,\"1280\":1,\"1603\":1,\"2011\":1},\"1\":{\"173\":1,\"174\":1,\"237\":1,\"240\":1,\"241\":1,\"374\":1,\"375\":1,\"476\":1,\"482\":1,\"559\":1,\"560\":1,\"662\":1,\"668\":1,\"747\":1,\"748\":1,\"881\":1,\"887\":1,\"888\":1,\"1145\":1,\"1146\":1,\"1214\":1,\"1216\":2,\"1217\":1,\"1218\":1,\"1280\":1,\"1281\":1,\"1390\":1,\"1396\":1,\"1603\":1,\"1604\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"2011\":1,\"2012\":1,\"2071\":1,\"2074\":1,\"2075\":1}}],[\"委托\",{\"1\":{\"174\":2,\"375\":2,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"560\":2,\"748\":2,\"1146\":2,\"1281\":2,\"1604\":2,\"2012\":2}}],[\"委托对象\",{\"1\":{\"171\":1,\"372\":1,\"745\":1,\"1143\":1,\"1278\":1,\"1601\":1,\"2009\":1}}],[\"委派后\",{\"1\":{\"171\":1,\"372\":1,\"745\":1,\"1143\":1,\"1278\":1,\"1601\":1,\"2009\":1}}],[\"委派\",{\"0\":{\"171\":1,\"372\":1,\"557\":1,\"745\":1,\"1143\":1,\"1278\":1,\"1601\":1,\"2009\":1},\"1\":{\"171\":1,\"237\":1,\"240\":1,\"241\":1,\"302\":1,\"307\":1,\"309\":1,\"338\":1,\"372\":1,\"476\":1,\"482\":1,\"557\":1,\"662\":1,\"668\":1,\"745\":1,\"881\":1,\"887\":1,\"888\":1,\"998\":1,\"1000\":1,\"1143\":1,\"1214\":1,\"1216\":2,\"1217\":1,\"1218\":1,\"1278\":1,\"1390\":1,\"1396\":1,\"1601\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"1725\":1,\"1730\":1,\"1732\":1,\"1760\":1,\"1928\":1,\"1933\":1,\"1935\":1,\"1964\":1,\"2009\":1,\"2071\":1,\"2074\":1,\"2075\":1,\"2131\":1,\"2162\":1,\"2243\":1,\"2328\":1,\"2354\":1}}],[\"委派和加减签\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"该流程所有节点任务都会执行\",{\"1\":{\"842\":1,\"1065\":1}}],[\"该流程实例无法继续流转\",{\"1\":{\"165\":1,\"367\":1,\"552\":1,\"739\":1,\"1137\":1,\"1273\":1,\"1595\":1,\"2003\":1}}],[\"该系统可以帮助企业快速开发和部署高质量的\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"挂起实例\",{\"0\":{\"165\":1,\"367\":1,\"552\":1,\"739\":1,\"1137\":1,\"1273\":1,\"1595\":1,\"2003\":1},\"1\":{\"165\":1,\"367\":1,\"552\":1,\"739\":1,\"1137\":1,\"1273\":1,\"1595\":1,\"2003\":1}}],[\"挂起流程\",{\"0\":{\"151\":1,\"360\":1,\"545\":1,\"732\":1,\"1128\":1,\"1266\":1,\"1581\":1,\"1989\":1},\"1\":{\"151\":1,\"360\":1,\"545\":1,\"732\":1,\"1128\":1,\"1266\":1,\"1581\":1,\"1989\":1}}],[\"激活和挂起\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"激活实例\",{\"0\":{\"164\":1,\"366\":1,\"551\":1,\"738\":1,\"1136\":1,\"1272\":1,\"1594\":1,\"2002\":1},\"1\":{\"164\":1,\"366\":1,\"551\":1,\"738\":1,\"1136\":1,\"1272\":1,\"1594\":1,\"2002\":1}}],[\"激活流程\",{\"0\":{\"150\":1,\"359\":1,\"544\":1,\"731\":1,\"1127\":1,\"1265\":1,\"1580\":1,\"1988\":1},\"1\":{\"150\":1,\"359\":1,\"544\":1,\"731\":1,\"1127\":1,\"1265\":1,\"1580\":1,\"1988\":1}}],[\"忽略生成文档中的错误\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"忽略权限校验\",{\"1\":{\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1}}],[\"忽略\",{\"1\":{\"161\":1,\"174\":1,\"375\":1,\"560\":1,\"748\":1,\"1146\":1,\"1281\":1,\"1604\":1,\"1999\":1,\"2012\":1}}],[\"预留给业务系统使用\",{\"1\":{\"160\":1,\"267\":1,\"362\":1,\"508\":1,\"547\":1,\"693\":1,\"734\":1,\"917\":1,\"1132\":1,\"1246\":1,\"1268\":1,\"1422\":1,\"1590\":1,\"1693\":1,\"1998\":1,\"2101\":1}}],[\"预算审批等\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"建议传\",{\"1\":{\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1}}],[\"返回流程定义对象\",{\"1\":{\"534\":1}}],[\"返回租户id的表达式\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"返回响应\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"返回base64编码的图片流字符串\",{\"1\":{\"154\":1,\"156\":1,\"1584\":1,\"1586\":1,\"1992\":1,\"1994\":1}}],[\"返回值\",{\"1\":{\"153\":1,\"155\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1995\":1}}],[\"返回当前用户权限集合\",{\"1\":{\"40\":1,\"868\":1,\"1091\":1,\"1507\":1,\"1807\":1}}],[\"渲染状态\",{\"0\":{\"153\":1,\"155\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1995\":1},\"1\":{\"153\":1,\"155\":1,\"1583\":1,\"1585\":1,\"1991\":1,\"1993\":1}}],[\"相关的流程实例都无法继续流转\",{\"1\":{\"151\":1,\"360\":1,\"545\":1,\"732\":1,\"1128\":1,\"1266\":1,\"1581\":1,\"1989\":1}}],[\"删除多余的字段和代码\",{\"1\":{\"324\":1,\"1016\":1,\"1747\":1,\"1950\":1}}],[\"删除监听器自定义参数\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"删除不必要的\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"删除cooperateautopass方法\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"删除flowconfigutil多余的代码\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"删除校验是否任意跳转\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"删除数据填充默认实现类\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"删除重复代码\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"删除策略前缀\",{\"1\":{\"307\":1,\"336\":1,\"998\":1,\"1730\":1,\"1758\":1,\"1933\":1,\"1962\":1,\"2131\":1,\"2241\":1}}],[\"删除前端log打印\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"删除部分代码\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"删除标志\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"删除流程\",{\"1\":{\"163\":1,\"365\":1,\"550\":1,\"737\":1,\"1135\":1,\"1271\":1,\"1593\":1,\"2001\":1}}],[\"删除流程实例的时候\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"删除流程实例\",{\"0\":{\"163\":1,\"365\":1,\"550\":1,\"737\":1,\"1135\":1,\"1271\":1,\"1593\":1,\"2001\":1}}],[\"删除流程定义相关数据\",{\"1\":{\"146\":1,\"354\":1,\"539\":1,\"726\":1,\"1122\":1,\"1260\":1,\"1576\":1,\"1984\":1}}],[\"删除\",{\"0\":{\"146\":1,\"354\":1,\"539\":1,\"726\":1,\"1122\":1,\"1260\":1,\"1576\":1,\"1984\":1},\"1\":{\"288\":1,\"338\":2,\"984\":1,\"1712\":1,\"1760\":2,\"1914\":1,\"1964\":2,\"2243\":2}}],[\"导出\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"导出和保存xml格式标识为即将删除\",{\"1\":{\"302\":1,\"333\":1,\"1725\":1,\"1755\":1,\"1928\":1,\"1959\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"导出和保存等新增json格式支持defservice\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"导出流程定义xml的document对象\",{\"1\":{\"537\":1}}],[\"导出流程定义\",{\"0\":{\"352\":1,\"537\":1,\"724\":1,\"1120\":1,\"1130\":1,\"1258\":1},\"1\":{\"142\":1,\"352\":1,\"724\":1,\"1120\":1,\"1130\":1,\"1258\":1,\"1572\":1,\"1980\":1}}],[\"导出流程定义json字符串\",{\"0\":{\"142\":1,\"1572\":1,\"1980\":1}}],[\"导致流程图渲染异常\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"导致不生成代办任务的问题\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"导致删除失败\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"导致flowautoconfig\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"导入\",{\"1\":{\"302\":2,\"333\":3,\"1725\":2,\"1755\":3,\"1928\":2,\"1959\":3,\"2162\":2,\"2328\":2,\"2354\":2}}],[\"导入依赖包失败\",{\"0\":{\"292\":1,\"988\":1,\"1716\":1,\"1918\":1}}],[\"导入sql\",{\"0\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"导入流程定义\",{\"0\":{\"534\":1,\"721\":1,\"1117\":1,\"1255\":1}}],[\"导入流程定义xml的输入流is\",{\"1\":{\"534\":1}}],[\"导入流程定义xml的输入流\",{\"1\":{\"349\":1,\"721\":1,\"1117\":1,\"1255\":1}}],[\"导入流程方法拆成两个方法\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"导入流程json对象\",{\"0\":{\"138\":1,\"1568\":1,\"1976\":1}}],[\"导入流程json字符串\",{\"0\":{\"137\":1,\"1567\":1,\"1975\":1}}],[\"导入流程输入流\",{\"0\":{\"136\":1,\"1566\":1,\"1974\":1}}],[\"飞鸿\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"荒\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"姜杰\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"剑\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"敏\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"巴\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"热部署插件jrebel或者devtools导致问题\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"热\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"马\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"梁\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"梁小梁\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"入库前要拼接前缀\",{\"1\":{\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1350\":1}}],[\"入库拼接\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"入库拼接通过\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"入\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"文字名称未显示\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"文斌\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"文档全面\",{\"1\":{\"2163\":1,\"2181\":1,\"2329\":1,\"2355\":1,\"2373\":1}}],[\"文档页banner图片\",{\"1\":{\"283\":1}}],[\"文档\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"文档地址\",{\"1\":{\"258\":1,\"494\":1,\"908\":1,\"1237\":1,\"1408\":1,\"1684\":1,\"2092\":1,\"2174\":1,\"2235\":1,\"2340\":1,\"2366\":1}}],[\"文档均开源免费可商用\",{\"1\":{\"119\":1,\"1549\":1,\"1886\":1}}],[\"文档和ruoyi\",{\"1\":{\"115\":1,\"1882\":1}}],[\"致敬\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"子流程\",{\"1\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"子\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"希望某些人不参与办理\",{\"1\":{\"237\":1,\"240\":1,\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1214\":1,\"1217\":1,\"1218\":1,\"1390\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"2071\":1,\"2074\":1,\"2075\":1}}],[\"希望其他人一起参与办理\",{\"1\":{\"237\":1,\"240\":1,\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1214\":1,\"1217\":1,\"1218\":1,\"1390\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"2071\":1,\"2074\":1,\"2075\":1}}],[\"希望能发展壮大\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"希望有交流机会\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"希望一键三连\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1}}],[\"佳\",{\"1\":{\"133\":2,\"1063\":2,\"1563\":2,\"1900\":2}}],[\"李\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"感谢\",{\"1\":{\"286\":1,\"287\":2,\"292\":1,\"322\":1,\"323\":1,\"324\":3,\"982\":1,\"983\":2,\"988\":1,\"1014\":1,\"1015\":1,\"1016\":3,\"1710\":1,\"1711\":2,\"1716\":1,\"1745\":1,\"1746\":1,\"1747\":3,\"1912\":1,\"1913\":2,\"1918\":1,\"1948\":1,\"1949\":1,\"1950\":3}}],[\"感谢您对开源项目的支持\",{\"1\":{\"133\":18,\"1063\":17,\"1563\":18,\"1900\":18}}],[\"感谢所有捐赠者\",{\"1\":{\"132\":1,\"1062\":1,\"1562\":1,\"1899\":1}}],[\"时间\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"留言\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"元\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"金额\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"域名和相关服务的费用\",{\"1\":{\"132\":1,\"1062\":1,\"1562\":1,\"1899\":1}}],[\"这可能需要深入理解其内部工作原理和源代码\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"这两个路径需要放行\",{\"1\":{\"605\":1,\"2120\":1}}],[\"这里返回系统中的当前办理人的租户id\",{\"1\":{\"520\":1,\"705\":1,\"929\":1,\"1100\":1,\"1434\":1}}],[\"这里就不用更新了\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"这对作者很重要\",{\"1\":{\"261\":1}}],[\"这是ruoyi\",{\"1\":{\"228\":1}}],[\"这个路径需要放行\",{\"1\":{\"225\":1,\"420\":1,\"798\":1,\"1198\":1,\"1326\":1,\"1654\":1,\"2062\":1,\"2109\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"这些费用将用于服务器\",{\"1\":{\"132\":1,\"1062\":1,\"1562\":1,\"1899\":1}}],[\"你可以请作者喝杯咖啡表示鼓励\",{\"0\":{\"1049\":1}}],[\"你们的支持是我最大的动力\",{\"1\":{\"132\":1,\"1062\":1,\"1562\":1,\"1899\":1}}],[\"你的⭐️\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1}}],[\"捐献者\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"捐献红包和群主不定时红包\",{\"1\":{\"102\":1,\"1031\":1,\"1533\":1,\"1869\":1}}],[\"捐赠地址\",{\"1\":{\"1049\":1}}],[\"捐赠列表\",{\"0\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"捐赠\",{\"0\":{\"132\":1,\"1062\":1,\"1562\":1,\"1899\":1}}],[\"应用程序\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"应用场景\",{\"0\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"zzz\",{\"1\":{\"776\":1}}],[\"zip将文件解压至\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"zhfonts\",{\"1\":{\"287\":5,\"983\":5,\"1711\":5,\"1913\":5}}],[\"zhen\",{\"1\":{\"131\":2,\"310\":1,\"995\":1,\"1001\":1,\"1061\":2,\"1561\":2,\"1733\":1,\"1898\":2,\"1936\":1}}],[\"zyflzz\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"平台\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"的值\",{\"1\":{\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"的名字对上\",{\"1\":{\"459\":1,\"645\":1,\"861\":1,\"1084\":1,\"1373\":1}}],[\"的hibernate\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"的字符串\",{\"1\":{\"353\":1,\"725\":1,\"1121\":1,\"1259\":1}}],[\"的原创博客\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"的json字符串\",{\"1\":{\"142\":1,\"1572\":1,\"1980\":1}}],[\"的低代码系统的设计和实现\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"的\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"的企业\",{\"1\":{\"0\":1}}],[\"玲娜贝er\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"疯狂的狮子li\",{\"1\":{\"131\":1,\"314\":1,\"1006\":1,\"1561\":1,\"1737\":1,\"1898\":1,\"1940\":1}}],[\"晓华\",{\"1\":{\"131\":2,\"297\":1,\"299\":2,\"995\":4,\"1061\":2,\"1561\":2,\"1721\":1,\"1898\":2,\"1923\":1,\"1925\":1}}],[\"描述\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"协作人\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"协作类型\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"协作类型集合\",{\"1\":{\"183\":1,\"1613\":1,\"2021\":1}}],[\"协作方式\",{\"1\":{\"125\":1,\"174\":1,\"266\":1,\"375\":1,\"469\":1,\"507\":1,\"560\":1,\"655\":1,\"692\":1,\"748\":1,\"874\":1,\"916\":1,\"1055\":1,\"1146\":1,\"1245\":1,\"1281\":1,\"1383\":1,\"1421\":1,\"1555\":1,\"1604\":1,\"1692\":1,\"1892\":1,\"2012\":1,\"2100\":1}}],[\"协同办公系统\",{\"1\":{\"94\":2}}],[\"确实有门槛\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"确保演练按计划推进\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"确保项目按计划进行\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"确定唯一\",{\"1\":{\"123\":1,\"467\":1,\"653\":1,\"872\":1,\"1053\":1,\"1381\":1,\"1553\":1,\"1890\":1}}],[\"若您的项目无法满足以上几点\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"若愚\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"q\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"quick\",{\"1\":{\"131\":2,\"1061\":2,\"1561\":2,\"1898\":2}}],[\"query框架支持\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"query和jpa的扩展包迁移到新的仓库\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"query和jpa的扩展包\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"querydesign\",{\"1\":{\"144\":1,\"1574\":1,\"1982\":1}}],[\"query即可兼容\",{\"1\":{\"117\":1,\"1547\":1,\"1884\":1}}],[\"query\",{\"0\":{\"256\":1,\"491\":1,\"677\":1,\"902\":1,\"1231\":1,\"1405\":1,\"1682\":1,\"2090\":1},\"1\":{\"113\":1,\"118\":1,\"191\":2,\"233\":2,\"234\":14,\"256\":1,\"383\":2,\"432\":2,\"433\":14,\"491\":2,\"493\":1,\"568\":2,\"618\":2,\"619\":14,\"677\":2,\"679\":1,\"756\":2,\"810\":2,\"811\":14,\"902\":2,\"1047\":1,\"1154\":2,\"1210\":2,\"1211\":14,\"1231\":2,\"1289\":2,\"1338\":2,\"1339\":14,\"1405\":2,\"1407\":1,\"1544\":1,\"1548\":1,\"1621\":2,\"1659\":2,\"1660\":14,\"1682\":1,\"1880\":1,\"1885\":1,\"2029\":2,\"2067\":2,\"2068\":14,\"2090\":1,\"2114\":2,\"2125\":2,\"2142\":2,\"2159\":2,\"2167\":1,\"2226\":2,\"2228\":1,\"2325\":2,\"2333\":1,\"2351\":2,\"2359\":1}}],[\"qq群\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"qq\",{\"1\":{\"119\":2,\"283\":1,\"1044\":2,\"1549\":2,\"1886\":2}}],[\"不可保存\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"不可二次分发开源参与同类竞品\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"不再需要\",{\"1\":{\"338\":2,\"1760\":2,\"1964\":2,\"2243\":2}}],[\"不校验是否有审批人\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"不校验白名单\",{\"1\":{\"228\":1}}],[\"不做权限校验\",{\"1\":{\"312\":1,\"1004\":1,\"1735\":1,\"1938\":1}}],[\"不是创建时间\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"不接收外部设置\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"不需要在为引入设计器而烦恼了\",{\"1\":{\"2107\":1,\"2118\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"不需要代理\",{\"1\":{\"614\":1}}],[\"不需要重复记录\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"不需要搬运并且适配等工作\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"不受限制\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"不填默认为orm扩展自带生成器或者warm\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"不满足上述条件的同学请勿过分申请打扰\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"不要害羞\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"不代表着项目收费\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"不迷路\",{\"1\":{\"248\":1,\"895\":1,\"1224\":1,\"1674\":1,\"2082\":1}}],[\"不过要多加一个网关路由flow\",{\"1\":{\"229\":1}}],[\"不符合业务要求\",{\"1\":{\"219\":1,\"412\":1,\"597\":1,\"788\":1,\"1188\":1,\"1318\":1,\"1649\":1,\"2057\":1}}],[\"不包含\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"不等于\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"不传不校验权限\",{\"1\":{\"162\":1,\"169\":1,\"364\":1,\"370\":1,\"549\":1,\"555\":1,\"736\":1,\"743\":1,\"1134\":1,\"1141\":1,\"1270\":1,\"1276\":1,\"1592\":1,\"1599\":1,\"2000\":1,\"2007\":1}}],[\"不忽略\",{\"1\":{\"161\":1,\"174\":1,\"375\":1,\"560\":1,\"748\":1,\"1146\":1,\"1281\":1,\"1604\":1,\"1999\":1,\"2012\":1}}],[\"不渲染状态\",{\"0\":{\"154\":1,\"156\":1,\"158\":1,\"1584\":1,\"1586\":1,\"1588\":1,\"1992\":1,\"1994\":1,\"1996\":1},\"1\":{\"154\":1,\"156\":1,\"1584\":1,\"1586\":1,\"1992\":1,\"1994\":1}}],[\"不同节点也支持配置审批表单路径\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"不同情况对应不同协作类型\",{\"1\":{\"209\":1,\"1172\":1,\"1639\":1,\"2047\":1}}],[\"不同的操作\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"不同实体类\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"商业使用请保留源码和相关描述文件的项目出处\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"您如果需要源码开发方式\",{\"1\":{\"1044\":1}}],[\"您如果需要源码二开\",{\"1\":{\"119\":1,\"1549\":1,\"1886\":1}}],[\"您可以\",{\"1\":{\"0\":4}}],[\"登记地址\",{\"1\":{\"119\":1,\"1549\":1,\"1886\":1}}],[\"系统变更管理等\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"系统智能设计平台\",{\"1\":{\"94\":1,\"1525\":1,\"1861\":1}}],[\"管理员协助交流\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"管理风险和合规流程\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"管理财务审批流程\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"管理项目流程\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"财务和会计流程\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"绩效评估等流程的管理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"培训\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"售后服务等\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"投诉处理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"客户服务流程\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"客服系统\",{\"1\":{\"94\":2,\"1525\":2,\"1861\":2}}],[\"采购审批等\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"报销\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"企业可以利用dromara\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"企业可以实现办公流程的自动化\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"企业内部流程管理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"企业综合办公管理系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"尤其是针对中小型项目\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"轻量级项目\",{\"1\":{\"115\":1,\"1882\":1}}],[\"国产化\",{\"1\":{\"115\":1,\"1882\":1}}],[\"国产工作流引擎\",{\"1\":{\"115\":1,\"1882\":1}}],[\"复杂性\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"复杂查询语句通过\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"复杂表单\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"复杂流程\",{\"1\":{\"115\":1,\"1882\":1}}],[\"复制流程版本号支持自动递增\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"复制流程定义\",{\"1\":{\"149\":1,\"357\":1,\"542\":1,\"729\":1,\"1125\":1,\"1263\":1,\"1579\":1,\"1987\":1}}],[\"复制流程\",{\"0\":{\"149\":1,\"357\":1,\"542\":1,\"729\":1,\"1125\":1,\"1263\":1,\"1579\":1,\"1987\":1}}],[\"复用部分代码\",{\"1\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1}}],[\"适用于多种应用场景\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"适用场景\",{\"1\":{\"115\":1,\"1882\":1}}],[\"适配国产数据库\",{\"1\":{\"993\":1}}],[\"适配\",{\"1\":{\"115\":1,\"1882\":1}}],[\"已开启的流程实例id\",{\"1\":{\"498\":1,\"683\":1,\"906\":1,\"1235\":1,\"1412\":1,\"2172\":1,\"2233\":1,\"2338\":1,\"2364\":1}}],[\"已部署流程的id\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"已回退人数\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"已审批人数\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"已挪到业务系统中\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"已经开启过审批任务的不可取消发布和删除\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"已办任务和任务记录\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"已办数量按实际情况记录\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"已办\",{\"1\":{\"246\":2,\"1672\":2,\"2080\":2}}],[\"已办理\",{\"1\":{\"7\":1,\"1774\":1}}],[\"已申请软著\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"已完成\",{\"1\":{\"115\":1,\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"1882\":1,\"2077\":1}}],[\"颜色和样式固定\",{\"1\":{\"115\":1,\"1882\":1}}],[\"等于\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"等\",{\"1\":{\"115\":1,\"1882\":1}}],[\"等待作者评审\",{\"0\":{\"111\":1,\"1040\":1,\"1542\":1,\"1878\":1}}],[\"原本的我发起\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"原组件使用snack3库\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"原between\",{\"1\":{\"334\":1,\"335\":2,\"1756\":1,\"1757\":2,\"1960\":1,\"1961\":2,\"2240\":2}}],[\"原defcontroller\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"原\",{\"1\":{\"333\":1,\"334\":1,\"335\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"2240\":1}}],[\"原skip\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"原生提供分页查询\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"原生提供排序\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"原生支持动态追加文字\",{\"1\":{\"115\":1,\"1882\":1}}],[\"原生支持多租户和软删除\",{\"1\":{\"115\":2,\"1882\":2}}],[\"原全局监听器改名为流程监听器\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"原团队创建\",{\"1\":{\"115\":1,\"1882\":1}}],[\"框架实现\",{\"1\":{\"115\":1,\"1882\":1}}],[\"框架\",{\"1\":{\"115\":1,\"1882\":1}}],[\"同上\",{\"1\":{\"290\":1,\"986\":1,\"1714\":1,\"1916\":1}}],[\"同左\",{\"1\":{\"115\":2,\"1882\":2}}],[\"同时构建左侧部门树状结构\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"同时star也是作者前进的动力\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"同时具备企业erp级的协同功能\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"同时支持spring和solon\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"同时支持多对一的替换\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"同时支持功能强大的spel表达\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"和配置可能需要一些耐心和实践\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"和postgresql\",{\"1\":{\"1042\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"和部分人一起审批\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"和其他人一起审批通过\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"和自定义表达式\",{\"1\":{\"115\":1,\"1882\":1}}],[\"和国产数据库\",{\"1\":{\"115\":1,\"1882\":1}}],[\"和\",{\"1\":{\"115\":1,\"131\":1,\"1061\":1,\"1561\":1,\"1882\":1,\"1898\":1}}],[\"和spel格式的表达式\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2236\":1,\"2341\":1,\"2367\":1}}],[\"维护成本低\",{\"1\":{\"115\":1,\"1882\":1}}],[\"结束监听器\",{\"1\":{\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"结束节点名称\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"结束节点不需要\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"结束节点\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"结点命名全部改成节点\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"结构极简\",{\"1\":{\"115\":1,\"1882\":1}}],[\"结果\",{\"1\":{\"32\":1,\"217\":1,\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"436\":1,\"618\":1,\"619\":1,\"622\":1,\"776\":1,\"810\":1,\"811\":1,\"822\":1,\"1180\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1350\":1,\"1647\":1,\"1659\":1,\"1660\":1,\"1799\":1,\"2055\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"仅\",{\"1\":{\"115\":1,\"1882\":1}}],[\"张\",{\"1\":{\"115\":1,\"1882\":1}}],[\"张表\",{\"1\":{\"115\":3,\"1882\":3}}],[\"约\",{\"1\":{\"115\":2,\"1882\":2}}],[\"迭代快\",{\"1\":{\"115\":1,\"1882\":1}}],[\"社区同学录制\",{\"1\":{\"502\":1,\"687\":1,\"911\":1,\"1416\":1}}],[\"社区活跃\",{\"1\":{\"115\":2,\"1882\":2}}],[\"社区活跃度\",{\"1\":{\"115\":1,\"1882\":1}}],[\"社区规模大\",{\"1\":{\"115\":1,\"1882\":1}}],[\"社区\",{\"1\":{\"115\":1,\"1882\":1}}],[\"功能开发\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"功能演示\",{\"0\":{\"120\":1,\"465\":1,\"651\":1,\"870\":1,\"1050\":1,\"1379\":1,\"1550\":1,\"1887\":1}}],[\"功能与扩展性\",{\"1\":{\"115\":1,\"1882\":1}}],[\"功能更优化\",{\"1\":{\"115\":1,\"1882\":1}}],[\"功能增强\",{\"1\":{\"9\":1,\"442\":1,\"628\":1,\"841\":1,\"1064\":1,\"1356\":1,\"1482\":1,\"1776\":1}}],[\"由于各数据库sql语句存在差异\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"由于服务器上缺少中文字体\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"由分派监听器实现替换\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"由chartservice中chartins和chartdef代替\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"由专门人维护\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"由社区\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"由流程设计中的对应权限人去办理\",{\"1\":{\"128\":1,\"472\":1,\"658\":1,\"877\":1,\"1058\":1,\"1386\":1,\"1558\":1,\"1895\":1}}],[\"由\",{\"1\":{\"115\":1,\"1882\":1}}],[\"由作者与团队成员判定\",{\"1\":{\"101\":1,\"1030\":1,\"1532\":1,\"1868\":1}}],[\"基础条件支持\",{\"1\":{\"115\":1,\"1882\":1}}],[\"基础\",{\"1\":{\"115\":1,\"1882\":1}}],[\"基金会\",{\"1\":{\"115\":1,\"1882\":1}}],[\"基于vben最新版本v5\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"基于ruoyi\",{\"1\":{\"131\":3,\"1061\":3,\"1561\":3,\"1898\":3}}],[\"基于\",{\"1\":{\"115\":1,\"131\":1,\"1061\":1,\"1561\":1,\"1882\":1,\"1898\":1}}],[\"基于json定义\",{\"1\":{\"115\":1,\"1882\":1}}],[\"基于dev分支\",{\"0\":{\"105\":1,\"1034\":1,\"1536\":1,\"1872\":1}}],[\"基于springboot的财务管理系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"基于ssm的职工管理系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"基于机器学习的只能停车管理系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"基于工业互联网的数字化安全与质量管理平台\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"⭐️是我持续开发的动力\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1}}],[\"很实用\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"兼容java8和java17\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"兼有传统tms的竞标\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"动态表单支持\",{\"1\":{\"995\":1,\"1721\":1}}],[\"动态加载这个页面\",{\"1\":{\"123\":1,\"467\":1,\"653\":1,\"872\":1,\"1053\":1,\"1381\":1,\"1553\":1,\"1890\":1}}],[\"动态权限\",{\"1\":{\"113\":1,\"115\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"1882\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"动态修改代办任务信息\",{\"1\":{\"3\":1,\"10\":1,\"16\":1,\"24\":1,\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"843\":1,\"848\":1,\"856\":1,\"1066\":1,\"1071\":1,\"1079\":1,\"1357\":1,\"1361\":1,\"1483\":1,\"1489\":1,\"1497\":1,\"1770\":1,\"1777\":1,\"1783\":1,\"1791\":1}}],[\"参考工作流引擎源码中warm\",{\"1\":{\"332\":1,\"1958\":1}}],[\"参照如下文章\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"参数传递\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"参与贡献\",{\"0\":{\"96\":1,\"1025\":1,\"1527\":1,\"1863\":1}}],[\"灵活度和可扩展性的核心人物\",{\"1\":{\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"灵活扩展和低代码集成\",{\"1\":{\"115\":1,\"1882\":1}}],[\"灵活扩展性强\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2236\":1,\"2329\":1,\"2341\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"灵活可扩展\",{\"1\":{\"113\":2,\"1042\":2,\"1544\":2,\"1880\":2,\"2115\":2,\"2126\":2,\"2132\":2,\"2143\":2,\"2175\":2,\"2188\":1,\"2236\":2,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":2,\"2367\":2}}],[\"票签签\",{\"0\":{\"1176\":1}}],[\"票签所有待办权限只支持个人\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"票签通过率\",{\"1\":{\"481\":2,\"667\":2,\"886\":2,\"893\":2,\"1395\":2}}],[\"票签必填\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"票签等\",{\"0\":{\"209\":1,\"1172\":1,\"1639\":1,\"2047\":1}}],[\"票签和或签\",{\"1\":{\"125\":1,\"209\":1,\"469\":1,\"655\":1,\"874\":1,\"1055\":1,\"1172\":1,\"1383\":1,\"1555\":1,\"1639\":1,\"1892\":1,\"2047\":1}}],[\"票签\",{\"0\":{\"213\":1,\"1643\":1,\"2051\":1},\"1\":{\"113\":1,\"210\":1,\"240\":1,\"241\":1,\"311\":1,\"316\":1,\"317\":1,\"476\":1,\"481\":1,\"662\":1,\"667\":1,\"881\":1,\"886\":1,\"888\":1,\"893\":1,\"1003\":1,\"1008\":1,\"1009\":1,\"1042\":1,\"1173\":1,\"1218\":1,\"1390\":1,\"1395\":1,\"1544\":1,\"1640\":1,\"1666\":1,\"1667\":1,\"1734\":1,\"1739\":1,\"1740\":1,\"1880\":1,\"1937\":1,\"1942\":1,\"1943\":1,\"2048\":1,\"2074\":1,\"2075\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"任意跳转\",{\"1\":{\"113\":1,\"240\":2,\"306\":1,\"887\":2,\"997\":1,\"1042\":1,\"1217\":2,\"1396\":2,\"1544\":1,\"1666\":2,\"1729\":1,\"1880\":1,\"1932\":1,\"2074\":2,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2190\":1,\"2236\":1,\"2257\":1,\"2259\":1,\"2275\":1,\"2277\":1,\"2301\":1,\"2303\":1,\"2341\":1,\"2367\":1}}],[\"任务总人数\",{\"1\":{\"481\":2,\"667\":2,\"886\":2,\"893\":2,\"1395\":2}}],[\"任务自动流转到创建人\",{\"1\":{\"320\":1,\"1012\":1,\"1743\":1,\"1946\":1}}],[\"任务审批通过\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"任务表id\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"任务变量\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"任务变量就当前任务触发的监听器时可以获取\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"任务的需要分配执行人\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"任务的需要有先后顺序\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"任务转给其他人办理\",{\"1\":{\"237\":1,\"240\":1,\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1214\":1,\"1217\":1,\"1218\":1,\"1390\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"2071\":1,\"2074\":1,\"2075\":1}}],[\"任务转办给别人等\",{\"1\":{\"236\":1,\"1213\":1,\"1662\":1,\"2070\":1}}],[\"任务开始\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"任务开始办理时执行\",{\"1\":{\"10\":1,\"16\":1,\"24\":1,\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"843\":1,\"848\":1,\"856\":1,\"1066\":1,\"1071\":1,\"1079\":1,\"1357\":1,\"1361\":1,\"1483\":1,\"1489\":1,\"1497\":1,\"1777\":1,\"1783\":1,\"1791\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"任务创建时执行\",{\"1\":{\"10\":1,\"16\":1,\"24\":1,\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"843\":1,\"848\":1,\"856\":1,\"1066\":1,\"1071\":1,\"1079\":1,\"1357\":1,\"1361\":1,\"1483\":1,\"1489\":1,\"1497\":1,\"1777\":1,\"1783\":1,\"1791\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"退回不校验是否办理过\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"退回不能选择通过类型\",{\"1\":{\"126\":1,\"470\":1,\"656\":1,\"875\":1,\"1056\":1,\"1384\":1,\"1556\":1,\"1893\":1}}],[\"退回或者任务完成\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"退回\",{\"1\":{\"113\":1,\"246\":1,\"1042\":1,\"1544\":1,\"1672\":1,\"1880\":1,\"2080\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"审批任务的办理人\",{\"1\":{\"2148\":1,\"2207\":1,\"2268\":1,\"2294\":1}}],[\"审批页面中包含业务详情页面\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"审批者\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"审批表单是否自定义\",{\"1\":{\"265\":1,\"266\":1,\"268\":1,\"270\":1,\"506\":1,\"507\":1,\"509\":1,\"511\":1,\"691\":1,\"692\":1,\"694\":1,\"696\":1,\"915\":1,\"916\":1,\"918\":1,\"920\":1,\"1244\":1,\"1245\":1,\"1247\":1,\"1249\":1,\"1420\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1691\":1,\"1692\":1,\"1694\":1,\"1696\":1,\"2099\":1,\"2100\":1,\"2102\":1,\"2104\":1}}],[\"审批表单路径\",{\"1\":{\"123\":1,\"265\":1,\"266\":1,\"268\":1,\"270\":1,\"467\":1,\"506\":1,\"507\":1,\"509\":1,\"511\":1,\"653\":1,\"691\":1,\"692\":1,\"694\":1,\"696\":1,\"872\":1,\"915\":1,\"916\":1,\"918\":1,\"920\":1,\"1053\":1,\"1244\":1,\"1245\":1,\"1247\":1,\"1249\":1,\"1381\":1,\"1420\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1553\":1,\"1691\":1,\"1692\":1,\"1694\":1,\"1696\":1,\"1890\":1,\"2099\":1,\"2100\":1,\"2102\":1,\"2104\":1}}],[\"审批中\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"审批通过率\",{\"1\":{\"481\":2,\"667\":2,\"886\":2,\"893\":2,\"1395\":2}}],[\"审批通过\",{\"1\":{\"241\":1,\"243\":1,\"266\":1,\"267\":1,\"476\":1,\"478\":1,\"507\":1,\"508\":1,\"662\":1,\"664\":1,\"692\":1,\"693\":1,\"881\":1,\"883\":1,\"888\":1,\"890\":1,\"916\":1,\"917\":1,\"1218\":1,\"1220\":1,\"1245\":1,\"1246\":1,\"1390\":1,\"1392\":1,\"1421\":1,\"1422\":1,\"1667\":1,\"1669\":1,\"1692\":1,\"1693\":1,\"2075\":1,\"2077\":1,\"2100\":1,\"2101\":1}}],[\"审批\",{\"1\":{\"240\":1,\"481\":5,\"482\":1,\"667\":5,\"668\":1,\"886\":5,\"887\":1,\"893\":5,\"1217\":1,\"1395\":5,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"审批业务中经常会出现办理人中途变更的情况\",{\"1\":{\"236\":1,\"1213\":1,\"1662\":1,\"2070\":1}}],[\"审批节点才会通过\",{\"1\":{\"210\":3,\"240\":3,\"482\":1,\"668\":1,\"887\":1,\"1173\":3,\"1217\":3,\"1396\":1,\"1640\":3,\"1666\":3,\"2048\":3,\"2074\":3}}],[\"审批过程中可能存在\",{\"1\":{\"209\":1,\"1172\":1,\"1639\":1,\"2047\":1}}],[\"审批意见\",{\"1\":{\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"266\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"507\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"560\":1,\"692\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"916\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1245\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1421\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1692\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2100\":1}}],[\"审批功能全面\",{\"1\":{\"115\":1,\"1882\":1}}],[\"审批功能\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"审批前获取当前办理人\",{\"1\":{\"40\":1,\"868\":1,\"1091\":1,\"1507\":1,\"1807\":1}}],[\"审批前通常需要获取当前办理人所拥有的权限\",{\"1\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1}}],[\"简单流程或旧系统兼容\",{\"1\":{\"115\":1,\"1882\":1}}],[\"简洁易用\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"简易工作流\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"五脏俱全\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2329\":1,\"2341\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"其中可能包含功能改进\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"其中yyy为变量\",{\"1\":{\"776\":1}}],[\"其中yyy为变量名\",{\"1\":{\"217\":1,\"1180\":1,\"1647\":1,\"2055\":1}}],[\"其它一些您认为有对\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"其设计简洁轻量但功能全面\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"其特点简洁轻量但又不简单\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"其特点简洁轻量\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2236\":1,\"2329\":1,\"2341\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"其他不变\",{\"1\":{\"609\":1,\"2121\":1}}],[\"其他升级脚本的自行由mysql升级脚本转换\",{\"1\":{\"331\":1,\"1754\":1,\"1957\":1}}],[\"其他升级脚本的自行转换\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"其他需要被删除的任务不需要记录历史表\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"其他配置\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"其他的扩展包可忽略\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"其他的\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"其他校验\",{\"1\":{\"228\":1}}],[\"其他数据库只需要转换表结构\",{\"1\":{\"117\":1,\"1547\":1,\"1884\":1}}],[\"其他修改\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"其他请查阅核心api\",{\"0\":{\"68\":1,\"411\":1,\"596\":1,\"787\":1,\"952\":1,\"1317\":1,\"1456\":1,\"1835\":1}}],[\"介绍\",{\"0\":{\"112\":1,\"1041\":1,\"1543\":1,\"1879\":1}}],[\"此代码拦截所有仓库\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"此配置上传到本地的路径\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"此工作流持续开发一年了\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"此工作流已经持续开发有一年有余\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"此时根据\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"此时办理人变量表达式就派上用场了\",{\"1\":{\"45\":1,\"931\":1,\"1101\":1,\"1512\":1,\"1812\":1}}],[\"此处填写数据源名称\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"此处属于固定配置\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"此为专属内部群聊\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"此操作在自己仓库或者要pr的仓库都可以\",{\"0\":{\"110\":1,\"1039\":1,\"1541\":1,\"1877\":1}}],[\"性能提升\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"优先执行节点监听器\",{\"1\":{\"444\":1,\"630\":1,\"1358\":1}}],[\"优先级最高\",{\"1\":{\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1,\"1611\":1,\"2019\":1}}],[\"优化表实体类链式赋值\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"优化\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"优秀开源集成案例\",{\"1\":{\"0\":1}}],[\"增加监听器\",{\"1\":{\"326\":1,\"1018\":1,\"1749\":1,\"1952\":1}}],[\"增加全局变量\",{\"1\":{\"326\":1,\"1018\":1,\"1749\":1,\"1952\":1}}],[\"增加全局监听器\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2130\":1,\"2131\":1}}],[\"增加软删除可以配置化\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"增加组件加载\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"增加基于流程定义id获取流程图\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"增加获取下个节点集合api\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"增加参数合法性校验\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"增加遮罩层\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"增加办理人变量表达式\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"增加办理人\",{\"1\":{\"172\":1,\"174\":1,\"373\":1,\"375\":1,\"556\":1,\"557\":1,\"558\":2,\"559\":1,\"560\":1,\"746\":1,\"748\":1,\"1144\":1,\"1146\":1,\"1279\":1,\"1281\":1,\"1602\":1,\"1604\":1,\"2010\":1,\"2012\":1}}],[\"增加新功能\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"增加默认选项比如发起人\",{\"1\":{\"57\":1,\"1112\":1,\"1524\":1,\"1824\":1}}],[\"切换到新建的功能分支\",{\"0\":{\"107\":1,\"1036\":1,\"1538\":1,\"1874\":1}}],[\"步骤八\",{\"0\":{\"111\":1,\"1040\":1,\"1542\":1,\"1878\":1}}],[\"步骤七\",{\"0\":{\"110\":1,\"1039\":1,\"1541\":1,\"1877\":1}}],[\"步骤六\",{\"0\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"步骤五\",{\"0\":{\"108\":1,\"1037\":1,\"1539\":1,\"1875\":1}}],[\"步骤四\",{\"0\":{\"107\":1,\"1036\":1,\"1538\":1,\"1874\":1}}],[\"步骤三\",{\"0\":{\"106\":1,\"1035\":1,\"1537\":1,\"1873\":1}}],[\"步骤二\",{\"0\":{\"105\":1,\"1034\":1,\"1536\":1,\"1872\":1}}],[\"步骤一\",{\"0\":{\"104\":1,\"1033\":1,\"1535\":1,\"1871\":1}}],[\"视情况而定\",{\"1\":{\"102\":1,\"1031\":1,\"1533\":1,\"1869\":1}}],[\"对于英文不好的人来说\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"对于简单的工作流程来说\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"对于初学者来说\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"对于时效要求高的流程\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"对象\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"对应版本号\",{\"1\":{\"331\":1,\"991\":1,\"1754\":1,\"1957\":1}}],[\"对应数据库类型\",{\"1\":{\"331\":1,\"991\":1,\"1754\":1,\"1957\":1}}],[\"对应flow\",{\"1\":{\"266\":3,\"267\":1,\"270\":2,\"507\":3,\"508\":1,\"511\":2,\"692\":3,\"693\":1,\"696\":2,\"916\":3,\"917\":1,\"920\":2,\"1245\":3,\"1246\":1,\"1249\":2,\"1421\":3,\"1422\":1,\"1425\":2,\"1692\":3,\"1693\":1,\"1696\":2,\"2100\":3,\"2101\":1,\"2104\":2}}],[\"对当前流程节点进行审核操作\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"对其他orm不支持\",{\"1\":{\"115\":1,\"1882\":1}}],[\"对框架有重大贡献者\",{\"1\":{\"101\":1,\"1030\":1,\"1532\":1,\"1868\":1}}],[\"对各类事项进行检查\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"一个自带流程设计器的工作流引擎\",{\"0\":{\"2107\":1,\"2118\":1,\"2135\":1,\"2152\":1,\"2167\":1,\"2219\":1,\"2228\":1,\"2318\":1,\"2333\":1,\"2344\":1,\"2359\":1}}],[\"一个人接触的问题有限\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"一个人或许能走的更快\",{\"1\":{\"0\":1}}],[\"一名负责人通过即可通过审批节点\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"一名办理人审批通过\",{\"1\":{\"210\":1,\"240\":1,\"1173\":1,\"1217\":1,\"1640\":1,\"1666\":1,\"2048\":1,\"2074\":1}}],[\"一般会有工具类获取\",{\"1\":{\"520\":1,\"705\":1,\"929\":1,\"1100\":1,\"1434\":1}}],[\"一般是xxs过滤导致\",{\"1\":{\"294\":1,\"990\":1,\"1718\":1,\"1920\":1}}],[\"一般以消息通知方式提醒处理人\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"一下两种方式任选其一\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"一段不超过30字的简单介绍\",{\"1\":{\"283\":1}}],[\"一群人接触的问题无限\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"一键三连\",{\"1\":{\"261\":1}}],[\"一票否决\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"一次性填写不完\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"一人或者多人审批的情况\",{\"1\":{\"209\":1,\"1172\":1,\"1639\":1,\"2047\":1}}],[\"一骑\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"一拳打爆常大宝\",{\"1\":{\"133\":1,\"292\":1,\"988\":1,\"1063\":1,\"1563\":1,\"1716\":1,\"1900\":1,\"1918\":1}}],[\"一定要先看一下如何正确的提交pr\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"需执行1\",{\"1\":{\"336\":1,\"1758\":1,\"1962\":1,\"2241\":1}}],[\"需要增加排除\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"需要增加他人参与审批\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"需要查看\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"需要注意\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"需要注意以下几点\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"需要动态指定办理人的节点\",{\"1\":{\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"需要减少他人参与审批\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"需要单独使用\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"需要相应调整\",{\"1\":{\"333\":1,\"334\":1,\"335\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"2240\":1}}],[\"需要制定任务计划\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"需要保存草稿功能\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"需要在gateway里面放行\",{\"1\":{\"228\":1}}],[\"需要插入的集合数据\",{\"1\":{\"201\":1,\"393\":1,\"578\":1,\"766\":1,\"1164\":1,\"1299\":1,\"1631\":1,\"2039\":1}}],[\"需要更多功能代码\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"需自行实现或依赖外部框架\",{\"1\":{\"115\":1,\"1882\":1}}],[\"需额外配置或扩展\",{\"1\":{\"115\":1,\"1882\":1}}],[\"需独立部署或集成第三方工具\",{\"1\":{\"115\":1,\"1882\":1}}],[\"需求确定了以后就可以开始专注的写代码了\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"需高版本比如3\",{\"1\":{\"27\":1,\"29\":1,\"1082\":1,\"1500\":1,\"1502\":1,\"1794\":1,\"1796\":1}}],[\"觉得自己能做的可以在issue里跟作者讨论\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"觉得哪应该详细说明\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"觉得哪看不懂\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"重新加载依赖\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"重新定义监听器名称\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"重启idea\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"重启流程\",{\"1\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"重启服务\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"重走流程\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"重写ruoyi\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"重构流程开启流程和流程办理代码\",{\"1\":{\"322\":1,\"1014\":1,\"1745\":1,\"1948\":1}}],[\"重构代码\",{\"1\":{\"321\":1,\"326\":1,\"328\":1,\"1013\":1,\"1018\":1,\"1020\":1,\"1744\":1,\"1749\":1,\"1751\":1,\"1947\":1,\"1952\":1,\"1954\":1}}],[\"重构solon和插件模块\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"重构skip等方法通用校验\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"重构测试模块\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"重构id生成器\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"重构条件表达式和办理人变量表达式\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"重构test项目\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"重构获取前置节点方法nodeservice\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"重构\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"重点来了\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"重庆\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"贡献代码\",{\"0\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"有多租户需要\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1}}],[\"有多个演练环节\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"有偿服务\",{\"0\":{\"281\":1,\"976\":1,\"1704\":1,\"1906\":1}}],[\"有为\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"有开源项目集成了\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"有想扩展其他orm框架和数据库的可加qq群联系群主\",{\"1\":{\"256\":1,\"493\":1,\"679\":1,\"902\":1,\"1231\":1,\"1407\":1,\"1682\":1,\"2090\":1}}],[\"有一个完成\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"有时候作者把文档写完了也不知道用户是什么感觉\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"使用简单的解决方案可能更合适\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"使用下面方法\",{\"1\":{\"515\":1,\"700\":1,\"924\":1,\"1095\":1,\"1429\":1}}],[\"使用jar引入方式引入设计器\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"使用设计器\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"使用演示\",{\"0\":{\"211\":1,\"1174\":1,\"1641\":1,\"2049\":1}}],[\"使用mybatis\",{\"1\":{\"117\":1,\"1547\":1,\"1884\":1}}],[\"使用mybaits\",{\"1\":{\"38\":1,\"462\":1,\"464\":1,\"648\":1,\"650\":1,\"864\":1,\"866\":1,\"1087\":1,\"1089\":1,\"1376\":1,\"1378\":1,\"1505\":1,\"1805\":1}}],[\"使用方式在类上面写上\",{\"1\":{\"108\":1,\"1037\":1,\"1539\":1,\"1875\":1}}],[\"使用idea打开项目\",{\"0\":{\"107\":1,\"1036\":1,\"1538\":1,\"1874\":1}}],[\"使用git工具\",{\"0\":{\"106\":1,\"1035\":1,\"1537\":1,\"1873\":1}}],[\"使精力全部投入到项目设计研发中\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"而且可以降低社区人员的精力分散\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"屏幕截图\",{\"1\":{\"98\":2,\"104\":1,\"106\":1,\"107\":1,\"109\":1,\"110\":1,\"111\":1,\"123\":1,\"128\":1,\"130\":1,\"438\":2,\"467\":1,\"472\":1,\"474\":1,\"624\":2,\"653\":1,\"658\":1,\"660\":1,\"837\":2,\"872\":1,\"877\":1,\"879\":1,\"1027\":2,\"1033\":1,\"1035\":1,\"1036\":1,\"1038\":1,\"1039\":1,\"1040\":1,\"1053\":1,\"1058\":1,\"1060\":1,\"1352\":2,\"1381\":1,\"1386\":1,\"1388\":1,\"1529\":2,\"1535\":1,\"1537\":1,\"1538\":1,\"1540\":1,\"1541\":1,\"1542\":1,\"1553\":1,\"1558\":1,\"1560\":1,\"1865\":2,\"1871\":1,\"1873\":1,\"1874\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1890\":1,\"1895\":1,\"1897\":1,\"2191\":1,\"2192\":1,\"2195\":1,\"2260\":1,\"2261\":1,\"2264\":1,\"2278\":1,\"2279\":1,\"2282\":1,\"2304\":1,\"2305\":1,\"2308\":1}}],[\"所有流程的节点任务都会执行\",{\"1\":{\"842\":1,\"1065\":1}}],[\"所有节点任务都会执行\",{\"1\":{\"444\":1,\"630\":1,\"1358\":1}}],[\"所有的全量脚本\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"所有待办\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"所有审批人审批通过\",{\"1\":{\"210\":1,\"240\":1,\"1173\":1,\"1217\":1,\"1640\":1,\"1666\":1,\"2048\":1,\"2074\":1}}],[\"所属并行网关节点编码\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"所以目前已经解偶数据库操作\",{\"1\":{\"2195\":1,\"2264\":1,\"2282\":1,\"2308\":1}}],[\"所以可以通过以下方式获取对应的使用入口\",{\"1\":{\"461\":1,\"647\":1,\"1375\":1}}],[\"所以参与社区文档建设绝对是一件意义重大的事情\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"所以请给您觉得好的开源项目点一个小小的star\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"所拥有的权限等操作\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"大小控制在500kb以内\",{\"1\":{\"283\":1}}],[\"大小控制在100k以内\",{\"1\":{\"283\":1}}],[\"大胆联系我们哦\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"大于等于流程设计时指定的\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"大于等于\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"大于\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"481\":1,\"621\":1,\"667\":1,\"775\":1,\"821\":1,\"886\":1,\"893\":1,\"1179\":1,\"1349\":1,\"1395\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"大大缩短了学习成本\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"大家好\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"大家也可以对文档进行改进后提交pr修改申请\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"大家可以在issue提出观后感\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"大家都知道\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"大家会在这里提出自己的问题\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"大家在寻找开源项目的时候\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"大多数情况也是会先看star比较多的项目\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"跌了会失落\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"涨了会开心\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"作为新时代的程序员不能固步自封\",{\"1\":{\"2195\":1,\"2264\":1,\"2282\":1,\"2308\":1}}],[\"作为工作流引擎\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"作废\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"作者介绍\",{\"0\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"作者提供作者私人服务\",{\"1\":{\"978\":1,\"1706\":1,\"1908\":1}}],[\"作者\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"作者声明等\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"作者会关注到\",{\"1\":{\"101\":2,\"1030\":2,\"1532\":2,\"1868\":2}}],[\"作者会经常在issue里发布需求认领\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"作者每天都在盯着star\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"作用范围当前所有流程\",{\"1\":{\"11\":1,\"1484\":1,\"1778\":1}}],[\"作用范围当前流程定义\",{\"1\":{\"11\":1,\"1484\":1,\"1778\":1}}],[\"作用范围当前节点\",{\"1\":{\"11\":1,\"1484\":1,\"1778\":1}}],[\"本期主要解决了网关直连和流程图重构\",{\"1\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"本次更新效果图\",{\"0\":{\"2184\":1,\"2376\":1}}],[\"本次的版本大大提升了工作流的使用便捷性\",{\"1\":{\"2130\":1}}],[\"本次升级\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"本实例采用iframe方式嵌入设计器\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"本项目代码可免费商业使用\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"本科毕业设计\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"本节点配置办理人变量表达式\",{\"1\":{\"49\":1,\"935\":1,\"1105\":1,\"1516\":1,\"1816\":1}}],[\"南山客\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"毕业设计\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"数据源\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"数据源绑定\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"数据类型\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"数据表\",{\"1\":{\"263\":1,\"504\":1,\"689\":1,\"913\":1,\"1242\":1,\"1418\":1,\"1689\":1,\"2097\":1}}],[\"数据填充器\",{\"0\":{\"219\":1,\"788\":1,\"1188\":1,\"1649\":1,\"2057\":1}}],[\"数据驱动\",{\"1\":{\"115\":1,\"1882\":1}}],[\"数据库\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"数据库表结构\",{\"1\":{\"115\":1,\"1882\":1}}],[\"数据库支持\",{\"1\":{\"113\":1,\"115\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"1882\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"数据入库\",{\"1\":{\"113\":1,\"1544\":1,\"1880\":1}}],[\"数据共享等等\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"数据初始化\",{\"1\":{\"10\":1,\"1483\":1,\"1777\":1}}],[\"暗影\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"雨巷\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"政务系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"智慧政务\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"智慧燃气平台\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"湖北建科工程\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"图灵谷\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"节水信息管理系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"节点详情进入改为双击\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"节点线条保存关联名称\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"节点表版本号字段标识下个版本删除\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"节点名称\",{\"1\":{\"270\":1,\"511\":1,\"696\":1,\"920\":1,\"1249\":1,\"1425\":1,\"1696\":1,\"2104\":1}}],[\"节点跳转关联表\",{\"1\":{\"263\":1,\"504\":1,\"689\":1,\"913\":1,\"1242\":1,\"1418\":1,\"1689\":1,\"2097\":1}}],[\"节点类型\",{\"1\":{\"241\":1,\"267\":1,\"268\":1,\"270\":1,\"476\":1,\"508\":1,\"509\":1,\"511\":1,\"662\":1,\"693\":1,\"694\":1,\"696\":1,\"881\":1,\"888\":1,\"917\":1,\"918\":1,\"920\":1,\"1218\":1,\"1246\":1,\"1247\":1,\"1249\":1,\"1390\":1,\"1422\":1,\"1423\":1,\"1425\":1,\"1667\":1,\"1693\":1,\"1694\":1,\"1696\":1,\"2075\":1,\"2101\":1,\"2102\":1,\"2104\":1}}],[\"节点id\",{\"1\":{\"177\":1,\"179\":1,\"1148\":1,\"1607\":1,\"1609\":1,\"2015\":1,\"2017\":1}}],[\"节点编码\",{\"1\":{\"161\":1,\"168\":1,\"184\":1,\"270\":1,\"363\":1,\"369\":1,\"511\":1,\"548\":1,\"554\":1,\"696\":1,\"735\":1,\"742\":1,\"920\":1,\"1133\":1,\"1140\":1,\"1249\":1,\"1269\":1,\"1275\":1,\"1425\":1,\"1591\":1,\"1598\":1,\"1614\":1,\"1696\":1,\"1999\":1,\"2006\":1,\"2022\":1,\"2104\":1}}],[\"节点权限\",{\"1\":{\"125\":1,\"469\":1,\"655\":1,\"874\":1,\"1055\":1,\"1383\":1,\"1555\":1,\"1892\":1}}],[\"节点扩展属性\",{\"0\":{\"31\":1,\"1798\":1},\"1\":{\"2181\":1,\"2373\":1}}],[\"节点和流程监听器\",{\"0\":{\"15\":1,\"847\":1,\"1070\":1,\"1488\":1,\"1782\":1}}],[\"节点监听器和某个节点有关\",{\"1\":{\"444\":1,\"630\":1,\"1358\":1}}],[\"节点监听器\",{\"0\":{\"22\":1,\"453\":1,\"639\":1,\"854\":1,\"1077\":1,\"1367\":1,\"1495\":1,\"1789\":1},\"1\":{\"11\":2,\"444\":1,\"630\":1,\"842\":2,\"1065\":2,\"1358\":1,\"1484\":2,\"1778\":2}}],[\"海狼oa系统\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"二三维智能设计软件统一平台\",{\"1\":{\"94\":1,\"1525\":1,\"1861\":1}}],[\"晨帆智能\",{\"1\":{\"94\":1,\"1525\":1,\"1861\":1}}],[\"上传命令\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"上传私库的到本地\",{\"0\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"上下一一对应\",{\"1\":{\"453\":1,\"639\":1,\"1367\":1}}],[\"上个节点分派监听器修改\",{\"1\":{\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"上报不合规的地方来审批整改\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"上一个节点任务办理时\",{\"1\":{\"49\":1,\"524\":1,\"709\":1,\"935\":1,\"1105\":1,\"1438\":1,\"1516\":1,\"1816\":1}}],[\"合作费用\",{\"1\":{\"282\":1,\"283\":1}}],[\"合作方式\",{\"1\":{\"282\":1,\"283\":1}}],[\"合规性和风险管理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"合规管控系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"合法性校验\",{\"1\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1}}],[\"某某公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"餐云汇一站式闭环整体解决方案\",{\"1\":{\"94\":2,\"1525\":2,\"1861\":2}}],[\"餐云汇团队\",{\"1\":{\"94\":1,\"1525\":1,\"1861\":1}}],[\"半月无霜个人项目\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"半月无霜\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"仿钉钉界面的开源工作流平台\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"武汉数演科技有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"打包附带api文档\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"打包附带源码\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"打包项目\",{\"1\":{\"74\":1,\"75\":1,\"818\":1,\"819\":1,\"958\":1,\"959\":1,\"1346\":1,\"1347\":1,\"1462\":1,\"1463\":1,\"1841\":1,\"1842\":1}}],[\"打开新的页签\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"打造免费开源低代码平台\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"陕西物联达智能科技有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"签收等功能\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"跟踪\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"派车\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"融运力tms是基于移动互联网的面向货主侧需求的订单履约类的tms系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"融运力tms\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"山东融佑信息科技有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"郑州如阳科技有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"端到端全生命周期数字化安全与质量管理\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"关闭按钮\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"关闭逻辑删除\",{\"1\":{\"29\":2,\"1082\":2,\"1502\":2,\"1796\":2}}],[\"关闭逻辑删除方案\",{\"0\":{\"29\":1,\"1502\":1,\"1796\":1}}],[\"关于dromara\",{\"1\":{\"282\":1,\"978\":1,\"1706\":1,\"1908\":1}}],[\"关系型\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"关键质量特性\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"质量和安全为一体\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"质量管理系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"集团军要对某个区域进行长期的军事演练\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"集合数据\",{\"1\":{\"202\":1,\"394\":1,\"579\":1,\"767\":1,\"1165\":1,\"1300\":1,\"1632\":1,\"2040\":1}}],[\"集成服务\",{\"1\":{\"282\":1}}],[\"集成\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"集成工作流引擎\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"集风险\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"杭州三之一智联科技有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"进销存运营平台\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"进行绘制流程的进度和状态\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"进行精简\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"进行不同的军事演练任务\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"进行控制\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"进行保存或者校验\",{\"1\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1}}],[\"进行业务处理\",{\"1\":{\"9\":1,\"442\":1,\"628\":1,\"841\":1,\"1064\":1,\"1356\":1,\"1482\":1,\"1776\":1}}],[\"极点oa智慧网络办公系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"新群\",{\"0\":{\"2130\":1}}],[\"新手教学视频\",{\"1\":{\"502\":1,\"687\":1,\"911\":1,\"1416\":1}}],[\"新版本流程图才能正常查看\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"新宋体\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"新闻公告\",{\"0\":{\"975\":1}}],[\"新闻\",{\"0\":{\"280\":1,\"1703\":1,\"1905\":1}}],[\"新增ruoyi\",{\"0\":{\"2161\":1,\"2327\":1,\"2353\":1},\"1\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"新增办理人选择项接口\",{\"1\":{\"995\":1}}],[\"新增办理人变量表达式流程案例\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"新增后需要通过savexml接口保存流程节点和流程跳转数据\",{\"0\":{\"348\":1,\"719\":1,\"1115\":1,\"1254\":1}}],[\"新增默认表达default|$\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"新增多租户模式\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"新增vue3版本\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"新增代码示例\",{\"1\":{\"326\":1,\"1018\":1,\"1749\":1,\"1952\":1}}],[\"新增根据流程定义和当前节点code获取下一节点api接口\",{\"1\":{\"324\":1,\"1016\":1,\"1747\":1,\"1950\":1}}],[\"新增根据流程定义id集合\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"新增权限监听器\",{\"1\":{\"323\":1,\"1015\":1,\"1746\":1,\"1949\":1}}],[\"新增监听器生命周期概念\",{\"1\":{\"322\":1,\"1014\":1,\"1745\":1,\"1948\":1}}],[\"新增监听器spel表达式\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2130\":1,\"2131\":1}}],[\"新增创建任务监听器\",{\"1\":{\"322\":1,\"1014\":1,\"1745\":1,\"1948\":1}}],[\"新增创建流程定义\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"新增赋值流程记录创建更新时间\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"新增历史任务记录结束节点\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"新增历史表数据同步为新的流程图元数据\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"新增链式查询排序提供id排序\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"新增配置文件\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"新增三个测试模块\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"新增用户表\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"新增1\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"新增测试模块\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"新增抄送演示案例\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"新增抄送人方法\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"新增jpa的solon扩展包\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"新增easy\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"新增分派监听器\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"新增可通过spi机制加载条件表达式\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"新增spel条件表达式\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"新增sqlserver全量脚本\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"新增方法\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"新增转办\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"新增boot3+java17支持\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"新增支持条件表达式\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"新增支持接入业务系统token\",{\"1\":{\"308\":1,\"999\":1,\"1731\":1,\"1934\":1}}],[\"新增支持solon\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2130\":1,\"2131\":1}}],[\"新增审批前获取当前办理人接口\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"新增mybatis\",{\"1\":{\"306\":1,\"314\":1,\"316\":1,\"997\":1,\"1006\":1,\"1008\":1,\"1729\":1,\"1737\":1,\"1739\":1,\"1932\":1,\"1940\":1,\"1942\":1}}],[\"新增mybatisplusconfig\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"新增获取所有前置节点接口\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"新增获取后置节点方法nodeservice\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"新增网关直连和测试案例\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"新增接口\",{\"1\":{\"301\":1,\"1927\":1,\"2179\":1,\"2180\":1,\"2371\":1,\"2372\":1}}],[\"新增oa\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"新增\",{\"0\":{\"195\":1,\"387\":1,\"572\":1,\"760\":1,\"1158\":1,\"1293\":1,\"1625\":1,\"2033\":1},\"1\":{\"195\":1,\"387\":1,\"572\":1,\"760\":1,\"1158\":1,\"1293\":1,\"1625\":1,\"2033\":1}}],[\"新增流程图元数据\",{\"1\":{\"995\":1}}],[\"新增流程图查询接口和扩展接口chartservice\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"新增流程状态枚举\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"新增流程定义表数据\",{\"0\":{\"348\":1,\"719\":1,\"1115\":1,\"1254\":1}}],[\"新增流程定义\",{\"0\":{\"349\":1,\"720\":1,\"1116\":1},\"1\":{\"139\":1,\"1569\":1,\"1977\":1}}],[\"新增流程\",{\"0\":{\"139\":1,\"1569\":1,\"1977\":1}}],[\"新增定义\",{\"0\":{\"123\":1,\"467\":1,\"653\":1,\"872\":1,\"1053\":1,\"1381\":1,\"1553\":1,\"1890\":1}}],[\"新创建的类使用这个模板生成注释\",{\"1\":{\"108\":1,\"1037\":1,\"1539\":1,\"1875\":1}}],[\"新建一个此pr功能点的专属分支\",{\"0\":{\"105\":1,\"1034\":1,\"1536\":1,\"1872\":1}}],[\"新理益智慧网络科技\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"供热收费\",{\"1\":{\"94\":2,\"1525\":2,\"1861\":2}}],[\"哈尔滨金睿科技有限公司\",{\"1\":{\"94\":1,\"1525\":1,\"1861\":1}}],[\"内部已实现自动获取\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"内部有默认实现\",{\"1\":{\"403\":1,\"406\":1,\"416\":1,\"588\":1,\"591\":1,\"601\":1,\"779\":1,\"782\":1,\"792\":1,\"1183\":1,\"1186\":1,\"1192\":1,\"1309\":1,\"1312\":1,\"1322\":1}}],[\"内部群\",{\"0\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"内部是通过mybatis进行增删改成\",{\"1\":{\"115\":1,\"1882\":1}}],[\"内部oa\",{\"1\":{\"94\":4,\"1023\":4,\"1525\":4,\"1861\":4}}],[\"内部系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"内部项目审核系统\",{\"1\":{\"94\":1,\"1861\":1}}],[\"内置json库snack3方式\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"内置\",{\"1\":{\"115\":1,\"1882\":1}}],[\"内置$\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2236\":1,\"2341\":1,\"2367\":1}}],[\"内置常见的条件表达式\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"内置常见的和spel条件表达式\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2236\":1,\"2341\":1,\"2367\":1}}],[\"内置常见表达式\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"内置表达式类型\",{\"0\":{\"216\":1,\"1179\":1,\"1646\":1,\"2054\":1}}],[\"内置表达式\",{\"0\":{\"47\":1,\"435\":1,\"523\":1,\"621\":1,\"708\":1,\"775\":1,\"821\":1,\"933\":1,\"1103\":1,\"1349\":1,\"1437\":1,\"1514\":1,\"1814\":1}}],[\"北京瑞科科技\",{\"1\":{\"94\":1,\"1861\":1}}],[\"昆明倍特技术服务\",{\"1\":{\"94\":1}}],[\"行内人员使用\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"外围管理平台\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"抚顺银行\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"项目功能模块\",{\"0\":{\"2189\":1,\"2258\":1,\"2276\":1,\"2302\":1}}],[\"项目集成开发服务\",{\"1\":{\"1908\":1}}],[\"项目上传中央仓库\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"项目代码\",{\"1\":{\"119\":1,\"278\":1,\"977\":1,\"1549\":1,\"1705\":1,\"1886\":1,\"1907\":1}}],[\"项目管理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"项目背景\",{\"1\":{\"115\":1,\"1882\":1}}],[\"项目地址\",{\"1\":{\"114\":1,\"121\":1,\"260\":1,\"501\":1,\"686\":1,\"910\":1,\"1239\":1,\"1415\":1,\"1545\":1,\"1551\":1,\"1686\":1,\"1881\":1,\"1888\":1,\"2094\":1}}],[\"项目也活的更长\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1}}],[\"项目贡献者待遇\",{\"0\":{\"102\":1,\"1031\":1,\"1533\":1,\"1869\":1}}],[\"项目介绍\",{\"0\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2160\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2227\":1,\"2236\":1,\"2326\":1,\"2329\":1,\"2341\":1,\"2352\":1,\"2355\":1,\"2367\":1,\"2373\":1},\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"项目名称\",{\"1\":{\"94\":1,\"131\":1,\"1023\":1,\"1061\":1,\"1525\":1,\"1561\":1,\"1861\":1,\"1898\":1}}],[\"|yyy\",{\"1\":{\"776\":1}}],[\"|$\",{\"1\":{\"523\":1,\"524\":1,\"526\":2,\"531\":1,\"708\":1,\"709\":1,\"711\":2,\"716\":1,\"1437\":1,\"1438\":1,\"1440\":2,\"1445\":1}}],[\"|分隔回显\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"|\",{\"1\":{\"97\":2,\"333\":5,\"335\":6,\"436\":1,\"523\":1,\"529\":1,\"622\":1,\"708\":1,\"714\":1,\"775\":1,\"776\":1,\"822\":1,\"825\":2,\"943\":2,\"964\":2,\"970\":2,\"1026\":2,\"1350\":1,\"1437\":1,\"1443\":1,\"1528\":2,\"1755\":5,\"1757\":6,\"1864\":2,\"1959\":5,\"1961\":6,\"2240\":6}}],[\"||\",{\"1\":{\"93\":1,\"333\":2,\"335\":3,\"515\":1,\"516\":1,\"531\":1,\"700\":1,\"701\":1,\"716\":1,\"829\":1,\"924\":1,\"925\":1,\"974\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1,\"1445\":1,\"1481\":1,\"1755\":2,\"1757\":3,\"1860\":1,\"1959\":2,\"1961\":3,\"2240\":3}}],[\"|flag\",{\"1\":{\"64\":1,\"306\":1,\"335\":1,\"775\":8,\"836\":1,\"948\":1,\"997\":1,\"1452\":1,\"1729\":1,\"1757\":1,\"1831\":1,\"1932\":1,\"1961\":1,\"2240\":1}}],[\"说明可以生成新任务\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"说明匹配上监听器表达式\",{\"1\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"说明是新增\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"恒返回true\",{\"1\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"实体类支持序列化\",{\"1\":{\"320\":1,\"1012\":1,\"1743\":1,\"1946\":1}}],[\"实体类和dao获取改为通过反射\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"实体类\",{\"1\":{\"299\":1}}],[\"实体集合\",{\"1\":{\"200\":1,\"392\":1,\"577\":1,\"765\":1,\"1163\":1,\"1298\":1,\"1630\":1,\"2038\":1}}],[\"实体\",{\"1\":{\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1293\":1,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":1,\"1625\":1,\"1626\":1,\"1627\":1,\"1628\":1,\"1629\":1,\"2033\":1,\"2034\":1,\"2035\":1,\"2036\":1,\"2037\":1}}],[\"实例id\",{\"1\":{\"184\":1,\"1614\":1,\"2022\":1}}],[\"实例\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"实现全局监听器接口\",{\"1\":{\"842\":1,\"1065\":1}}],[\"实现全局监听器四个接口\",{\"1\":{\"11\":1,\"1484\":1,\"1778\":1}}],[\"实现接口获取以上页面办理人权限数据\",{\"0\":{\"232\":1,\"431\":1,\"617\":1,\"809\":1,\"1209\":1,\"1337\":1,\"1658\":1,\"2066\":1,\"2113\":1,\"2124\":1,\"2141\":1,\"2158\":1,\"2225\":1,\"2324\":1,\"2350\":1}}],[\"实现接口提供给设计器\",{\"1\":{\"230\":1,\"429\":1,\"615\":1,\"807\":1,\"1207\":1,\"1335\":1,\"1656\":1,\"2064\":1,\"2111\":1,\"2122\":1,\"2139\":1,\"2156\":1,\"2223\":1,\"2322\":1,\"2348\":1}}],[\"实现流程控制\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"实现\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"实现gettype和eval方法\",{\"1\":{\"91\":1,\"531\":1,\"716\":1,\"827\":1,\"972\":1,\"1445\":1,\"1479\":1,\"1858\":1}}],[\"实现节点扩展属性数据模型接口\",{\"0\":{\"32\":1,\"1799\":1}}],[\"实现以下接口\",{\"0\":{\"16\":1,\"447\":1,\"633\":1,\"848\":1,\"1071\":1,\"1361\":1,\"1489\":1,\"1783\":1}}],[\"创建一个xml文档编辑器\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"创建一个bignumberserializer\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"创建人\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"创建者\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"创建时间和更新时间一样的问题\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"创建时间和更新时间自动生成规则\",{\"1\":{\"219\":1,\"412\":1,\"597\":1,\"788\":1,\"1188\":1,\"1318\":1,\"1649\":1,\"2057\":1}}],[\"创建时间\",{\"1\":{\"265\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"创建时间设置正序排列\",{\"0\":{\"204\":1,\"396\":1,\"581\":1,\"769\":1,\"1167\":1,\"1302\":1,\"1634\":1,\"2042\":1},\"1\":{\"204\":1,\"396\":1,\"581\":1,\"769\":1,\"1167\":1,\"1302\":1,\"1634\":1,\"2042\":1}}],[\"创建pr申请\",{\"0\":{\"110\":1,\"1039\":1,\"1541\":1,\"1877\":1}}],[\"创建\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"创建监听器结束\",{\"1\":{\"25\":1,\"455\":1,\"641\":1,\"857\":1,\"1080\":1,\"1369\":1,\"1498\":1,\"1792\":1}}],[\"创建监听器\",{\"0\":{\"20\":1,\"451\":1,\"637\":1,\"852\":1,\"1075\":1,\"1365\":1,\"1493\":1,\"1787\":1},\"1\":{\"10\":1,\"16\":1,\"24\":1,\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"843\":1,\"848\":1,\"856\":1,\"1066\":1,\"1071\":1,\"1079\":1,\"1357\":1,\"1361\":1,\"1483\":1,\"1489\":1,\"1497\":1,\"1777\":1,\"1783\":1,\"1791\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"将操作权限转给别人处理\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"将自己的主办或者经办权限转移委派至别的用户代为处理\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"将自己仓库的项目拉去到本地做代码编写\",{\"0\":{\"106\":1,\"1035\":1,\"1537\":1,\"1873\":1}}],[\"将待办任务的创建时间赋予历史任务开始时间\",{\"1\":{\"316\":2,\"1008\":2,\"1739\":2,\"1942\":2}}],[\"将具有更高的优先级进行评审与开发\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"将工作流中的某个任务退回给之前的执行者\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"将工作流中的某个任务退回给之前的发起人\",{\"1\":{\"240\":1,\"1666\":1,\"2074\":1}}],[\"将流程驳回至之前已经处理过的任务节点\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"将编写好的代码\",{\"0\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"将map转为字符串\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"将字符串转为map\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"并行支持扩展\",{\"1\":{\"1544\":1}}],[\"并行网关\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"并行网关三个任务分支的时候\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"并行网关范围内还存在待办任务未完成\",{\"1\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"并行网关规则\",{\"0\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"并行网关返回多个节点\",{\"1\":{\"181\":2,\"377\":2,\"562\":2,\"750\":2,\"1148\":2,\"1283\":2,\"1611\":2,\"2019\":2}}],[\"并在该文件夹下新建文件com\",{\"1\":{\"627\":1}}],[\"并在该文件夹下新建文件org\",{\"1\":{\"81\":1,\"441\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"并由当前处理人处理完后进入下一节点\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"并支持扩展\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"并支持追加文字和自定义流程图节点颜色等扩展\",{\"1\":{\"113\":1,\"1880\":1}}],[\"并快速接入业务系统\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"并继承datafillhandler\",{\"0\":{\"220\":1,\"413\":1,\"598\":1,\"789\":1,\"1189\":1,\"1319\":1,\"1650\":1,\"2058\":1}}],[\"并初始化流程节点和流程跳转数据\",{\"0\":{\"720\":1,\"1116\":1},\"1\":{\"139\":1,\"1569\":1,\"1977\":1}}],[\"并通过spi机制加载\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"并实现strtomap和maptostr方法\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"并且通过这个方法进行注册variableutil\",{\"1\":{\"531\":1,\"716\":1,\"1445\":1}}],[\"并且通过这个方法进行注册expressionutil\",{\"1\":{\"437\":1,\"623\":1,\"823\":1,\"1351\":1}}],[\"并且流程表的逻辑删除字段都更新为0\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"并且目前只实现了这四种\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"并且按照官网流程设计器引入进行设置\",{\"1\":{\"337\":1,\"1759\":1,\"1963\":1,\"2242\":1}}],[\"并且保持事务与业务系统一致\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"并且支持规则扩展\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"并且支持扩展\",{\"1\":{\"307\":1,\"311\":1,\"998\":1,\"1003\":1,\"1730\":1,\"1734\":1,\"1933\":1,\"1937\":1,\"2130\":1,\"2131\":1}}],[\"并且支持自定义扩展\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"并且希望拼接上某些字符串\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"并且两个字段对应\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"join\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"js配置代码\",{\"1\":{\"611\":1}}],[\"jsqlparser\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"js或者nginx中的代理\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"js\",{\"1\":{\"286\":4,\"982\":4,\"1710\":4,\"1912\":4}}],[\"json库支持snack3\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"json库扩展\",{\"0\":{\"80\":1,\"81\":1,\"440\":1,\"441\":1,\"626\":1,\"627\":1,\"839\":1,\"840\":1,\"961\":1,\"962\":1,\"1354\":1,\"1355\":1,\"1468\":1,\"1469\":1,\"1847\":1,\"1848\":1}}],[\"jsongenerator\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"json字段中\",{\"1\":{\"153\":1,\"155\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1995\":1}}],[\"json字符串\",{\"1\":{\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1355\":2,\"1469\":2,\"1848\":2}}],[\"json转换异常\",{\"1\":{\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1355\":2,\"1469\":2,\"1848\":2}}],[\"jsonstr\",{\"1\":{\"81\":4,\"441\":4,\"627\":4,\"840\":4,\"962\":4,\"1355\":4,\"1469\":4,\"1848\":4}}],[\"json\",{\"1\":{\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1355\":2,\"1469\":2,\"1848\":2}}],[\"json模块\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"jsonobject\",{\"1\":{\"25\":2,\"455\":2,\"641\":2,\"857\":2,\"1080\":2,\"1369\":2,\"1498\":2,\"1792\":2}}],[\"jsonconvertjackson\",{\"1\":{\"81\":3,\"441\":3,\"627\":3,\"840\":3,\"962\":3,\"1355\":3,\"1469\":3,\"1848\":3}}],[\"jsonconvert\",{\"1\":{\"3\":2,\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1355\":2,\"1469\":2,\"1770\":2,\"1848\":2}}],[\"jpa涉及持久化操作必须开启事务\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"jpa注意事项\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"jpa配置\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"jpa扩展\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"jpa\",{\"0\":{\"254\":1,\"463\":1,\"489\":1,\"649\":1,\"675\":1,\"865\":1,\"900\":1,\"1088\":1,\"1229\":1,\"1377\":1,\"1403\":1,\"1680\":1,\"2088\":1},\"1\":{\"118\":1,\"254\":1,\"313\":1,\"314\":1,\"403\":2,\"406\":3,\"463\":4,\"489\":4,\"493\":1,\"588\":2,\"591\":3,\"649\":4,\"675\":3,\"679\":1,\"779\":2,\"782\":3,\"865\":4,\"900\":3,\"1005\":1,\"1006\":1,\"1047\":1,\"1088\":4,\"1183\":2,\"1186\":3,\"1229\":3,\"1309\":2,\"1312\":3,\"1377\":4,\"1403\":3,\"1407\":1,\"1548\":1,\"1680\":1,\"1736\":1,\"1737\":1,\"1885\":1,\"1939\":1,\"1940\":1,\"2088\":1,\"2167\":1,\"2193\":2,\"2228\":1,\"2262\":2,\"2280\":2,\"2306\":2,\"2333\":1,\"2359\":1}}],[\"jpa和easy\",{\"1\":{\"113\":1,\"1544\":1,\"1880\":1}}],[\"javadocs<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"javadoc\",{\"1\":{\"2203\":3,\"2217\":3,\"2290\":3,\"2316\":3}}],[\"java注释掉\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"javatimemodule\",{\"1\":{\"286\":7,\"982\":7,\"1710\":7,\"1912\":7}}],[\"java\",{\"1\":{\"247\":2,\"287\":1,\"333\":4,\"483\":2,\"669\":2,\"894\":2,\"983\":1,\"1223\":2,\"1397\":2,\"1673\":2,\"1711\":1,\"1755\":4,\"1913\":1,\"1959\":4,\"2081\":2}}],[\"jar\",{\"1\":{\"115\":1,\"289\":1,\"985\":1,\"1713\":1,\"1882\":1,\"1915\":1}}],[\"jackson反序列化时忽略未知字段\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"jackson2objectmapperbuilder\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"jackson2objectmapperbuildercustomizer\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"jackson2httpmessageconverter\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"jacksonconfig\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"jacksonstdimpl\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"jackson\",{\"1\":{\"80\":1,\"311\":1,\"340\":1,\"440\":1,\"626\":1,\"839\":1,\"961\":1,\"1003\":1,\"1354\":1,\"1468\":1,\"1734\":1,\"1762\":1,\"1847\":1,\"1937\":1,\"1966\":1,\"2246\":1}}],[\"xdoclint\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"xiaoxiaoliu889\",{\"1\":{\"313\":4,\"314\":1,\"1005\":4,\"1006\":1,\"1736\":4,\"1737\":1,\"1939\":4,\"1940\":1}}],[\"xiarigang\",{\"1\":{\"297\":1,\"299\":2,\"308\":1,\"311\":1,\"313\":2,\"314\":1,\"316\":1,\"995\":2,\"999\":1,\"1003\":1,\"1005\":2,\"1006\":1,\"1008\":1,\"1721\":1,\"1731\":1,\"1734\":1,\"1736\":2,\"1737\":1,\"1739\":1,\"1923\":1,\"1925\":2,\"1934\":1,\"1937\":1,\"1939\":2,\"1940\":1,\"1942\":1}}],[\"xml的project目录下新增如下配置\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"xml的document对象\",{\"1\":{\"352\":1,\"724\":1,\"1120\":1,\"1258\":1}}],[\"xmlstring\",{\"1\":{\"350\":1,\"351\":2,\"353\":1,\"535\":1,\"536\":2,\"538\":1,\"722\":1,\"723\":2,\"725\":1,\"1118\":1,\"1119\":2,\"1121\":1,\"1256\":1,\"1257\":2,\"1259\":1}}],[\"xmlwriter\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"xml中updatelogic的某个负值错误\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"xml加载\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"xml\",{\"1\":{\"291\":2,\"496\":1,\"681\":1,\"904\":1,\"987\":2,\"1233\":1,\"1410\":1,\"1715\":2,\"1917\":2,\"2170\":1,\"2190\":1,\"2231\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2336\":1,\"2362\":1}}],[\"x中dockerfile为例\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"xr\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"xx开源项目作者集成了\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"xxx|yyy|zzz\",{\"1\":{\"1180\":1}}],[\"xxx为表达式策略\",{\"1\":{\"776\":1}}],[\"xxx为表达式类型\",{\"1\":{\"217\":1,\"1180\":1,\"1647\":1,\"2055\":1}}],[\"xxx\",{\"1\":{\"217\":1,\"257\":1,\"283\":1,\"311\":1,\"495\":1,\"523\":1,\"680\":1,\"708\":1,\"776\":2,\"903\":1,\"1003\":1,\"1232\":1,\"1409\":1,\"1437\":1,\"1647\":1,\"1683\":1,\"1734\":1,\"1937\":1,\"2055\":1,\"2091\":1,\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"xx单位综合信息服务系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"xx自来水股份有限公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"x\",{\"0\":{\"297\":2,\"993\":2,\"1721\":2,\"1923\":2},\"1\":{\"75\":3,\"248\":3,\"287\":2,\"333\":1,\"335\":3,\"336\":3,\"339\":3,\"341\":3,\"342\":3,\"343\":3,\"344\":3,\"345\":3,\"484\":3,\"670\":3,\"819\":3,\"895\":3,\"959\":3,\"983\":2,\"1224\":3,\"1347\":3,\"1398\":3,\"1463\":3,\"1674\":3,\"1711\":2,\"1755\":1,\"1757\":3,\"1758\":3,\"1761\":3,\"1763\":3,\"1764\":3,\"1765\":3,\"1766\":3,\"1767\":3,\"1842\":3,\"1913\":2,\"1959\":1,\"1961\":3,\"1962\":3,\"1965\":3,\"1967\":3,\"1968\":3,\"1969\":3,\"1970\":3,\"1971\":3,\"2082\":3}}],[\"请加微信号\",{\"1\":{\"979\":1,\"1707\":1,\"1909\":1}}],[\"请加联系方式询问\",{\"1\":{\"282\":1,\"283\":1}}],[\"请尽快使用新的接口\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"请使用自定义流程状态\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"请选择条件方式\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"请自行手动同步\",{\"1\":{\"331\":1,\"332\":1,\"1957\":1,\"1958\":1}}],[\"请参照hh\",{\"1\":{\"302\":1,\"333\":1,\"1725\":1,\"1755\":1,\"1928\":1,\"1959\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"请参考如下配置文件中进行修改\",{\"1\":{\"27\":1,\"457\":1,\"643\":1,\"859\":1,\"1082\":1,\"1371\":1,\"1500\":1,\"1794\":1}}],[\"请先了解表结构\",{\"1\":{\"248\":1,\"895\":1,\"1224\":1,\"1674\":1,\"2082\":1}}],[\"请假天数小于4\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"请假申请\",{\"1\":{\"217\":2,\"436\":2,\"622\":2,\"776\":2,\"822\":2,\"1180\":2,\"1350\":2,\"1647\":2,\"2055\":2}}],[\"请求中的token的名称或者key\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"请联系我\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"请注意\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"请注意地址少了\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"请注明软件出处\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"请不要删除和修改warm\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"请不要删除和修改根目录下的license文件\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"访问地址改为\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"独立使用的\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"独立设计器放行路径增加\",{\"1\":{\"337\":1,\"1759\":1,\"1963\":1,\"2242\":1}}],[\"独立维护\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"独立成项目\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"独立服务\",{\"1\":{\"74\":1,\"818\":1,\"958\":1,\"1346\":1,\"1462\":1,\"1841\":1}}],[\"独立启动该设计器\",{\"1\":{\"71\":1,\"815\":1,\"955\":1,\"1343\":1,\"1459\":1,\"1838\":1}}],[\"改成arrays\",{\"1\":{\"2150\":1,\"2209\":1,\"2270\":1,\"2296\":1}}],[\"改成spel|\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"改成spel\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"改成\",{\"1\":{\"333\":1,\"335\":1,\"1755\":1,\"1757\":1,\"1959\":1,\"1961\":1,\"2240\":1}}],[\"改成退回选择目标节点\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"改用taskservice\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"改为如下\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"改为通过mybatis\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"改为通过task表新增的form\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"改为spi方式加载\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"改为vue\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"改为org\",{\"1\":{\"336\":1,\"338\":2,\"1758\":1,\"1760\":2,\"1962\":1,\"1964\":2,\"2241\":1,\"2243\":2}}],[\"改为\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"改为跳转类型\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"改为有上层jar加载\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"改为匿名类\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"改为xxx\",{\"1\":{\"309\":1,\"338\":1,\"1000\":1,\"1732\":1,\"1760\":1,\"1935\":1,\"1964\":1,\"2243\":1}}],[\"改为只产生一条历史记录\",{\"1\":{\"302\":2,\"1725\":2,\"1928\":2,\"2162\":2,\"2328\":2,\"2354\":2}}],[\"改为只放行一个\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"改名为warm\",{\"1\":{\"74\":1,\"75\":1,\"818\":1,\"819\":1,\"958\":1,\"959\":1,\"1346\":1,\"1347\":1,\"1462\":1,\"1463\":1,\"1841\":1,\"1842\":1}}],[\"改造\",{\"0\":{\"70\":1,\"814\":1,\"954\":1,\"1342\":1,\"1458\":1,\"1837\":1}}],[\"部分功能可配置\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"部分审批人审批通过\",{\"1\":{\"210\":1,\"240\":1,\"1173\":1,\"1217\":1,\"1640\":1,\"1666\":1,\"2048\":1,\"2074\":1}}],[\"部分版本达\",{\"1\":{\"115\":1,\"1882\":1}}],[\"部署流程\",{\"0\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1},\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"部署方案二\",{\"0\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"部署方案一\",{\"0\":{\"74\":1,\"818\":1,\"958\":1,\"1346\":1,\"1462\":1,\"1841\":1}}],[\"部署\",{\"0\":{\"72\":1,\"816\":1,\"956\":1,\"1344\":1,\"1460\":1,\"1839\":1}}],[\"部门和用户等权限配置\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"部门的主键重复\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"部门列表等\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"部门领导审批之类的\",{\"1\":{\"57\":1,\"1112\":1,\"1524\":1,\"1824\":1}}],[\"部门领导审批等\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"部门等权限配置\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"部门等灵活分配任务\",{\"1\":{\"115\":1,\"1882\":1}}],[\"部门等\",{\"1\":{\"41\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"869\":1,\"1092\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1508\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1808\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1}}],[\"部门\",{\"1\":{\"17\":1,\"234\":2,\"433\":2,\"448\":1,\"481\":1,\"619\":2,\"634\":1,\"667\":1,\"811\":2,\"849\":1,\"886\":1,\"893\":1,\"1072\":1,\"1211\":2,\"1339\":2,\"1362\":1,\"1395\":1,\"1490\":1,\"1660\":2,\"1784\":1,\"2068\":2}}],[\"源码调试\",{\"0\":{\"71\":1,\"815\":1,\"955\":1,\"1343\":1,\"1459\":1,\"1838\":1}}],[\"下载依赖\",{\"0\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"下载此项目\",{\"0\":{\"2202\":1,\"2216\":1,\"2289\":1,\"2315\":1}}],[\"下载设计器源码\",{\"0\":{\"70\":1,\"814\":1,\"954\":1,\"1342\":1,\"1458\":1,\"1837\":1}}],[\"下面介绍如何使用设计器\",{\"1\":{\"2118\":1}}],[\"下面才是需要排除的地址\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"下个节点配置权限策略\",{\"1\":{\"450\":2,\"636\":2,\"851\":2,\"1074\":2,\"1364\":2,\"1492\":2,\"1786\":2}}],[\"下个节点配置办理人权限策略\",{\"1\":{\"18\":1}}],[\"下个节点配置办理人权限\",{\"1\":{\"18\":1}}],[\"下一步更新计划\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"下一个节点任务生成时即可获取替换\",{\"1\":{\"524\":1,\"709\":1,\"1438\":1}}],[\"下一个节点类型\",{\"1\":{\"269\":1,\"510\":1,\"695\":1,\"919\":1,\"1248\":1,\"1424\":1,\"1695\":1,\"2103\":1}}],[\"下一个节点是网关需要判断跳转条件\",{\"1\":{\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1,\"1611\":1,\"2019\":1}}],[\"下一个流程节点的编码\",{\"1\":{\"269\":1,\"510\":1,\"695\":1,\"919\":1,\"1248\":1,\"1424\":1,\"1695\":1,\"2103\":1}}],[\"过程状态记录\",{\"1\":{\"65\":1,\"408\":1,\"593\":1,\"784\":1,\"949\":1,\"1314\":1,\"1453\":1,\"1832\":1}}],[\"扩展支持\",{\"0\":{\"2194\":1,\"2263\":1,\"2281\":1,\"2307\":1}}],[\"扩展\",{\"0\":{\"531\":1,\"716\":1,\"1445\":1}}],[\"扩展字段\",{\"1\":{\"160\":1,\"267\":1,\"362\":1,\"508\":1,\"547\":1,\"693\":1,\"734\":1,\"917\":1,\"1132\":1,\"1246\":1,\"1268\":1,\"1422\":1,\"1590\":1,\"1693\":1,\"1998\":1,\"2101\":1}}],[\"扩展方便\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"扩展需要实现expressionstrategy接口或者继承expressionstrategyabstract抽象类2\",{\"1\":{\"437\":1,\"623\":1,\"823\":1,\"1351\":1}}],[\"扩展需要实现variablestrategy接口\",{\"1\":{\"91\":1,\"531\":1,\"716\":1,\"827\":1,\"972\":1,\"1445\":1,\"1479\":1,\"1858\":1}}],[\"扩展需要实现conditionstrategy接口或者继承conditionstrategyabstract抽象类\",{\"1\":{\"61\":1,\"833\":1,\"945\":1,\"1449\":1,\"1828\":1}}],[\"扩展策略也一定要返回true\",{\"1\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"扩展json库需要实现jsonconvert接口\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"扩展属性使用\",{\"0\":{\"36\":1,\"1803\":1}}],[\"扩展属性入库\",{\"0\":{\"35\":1,\"1802\":1}}],[\"扩展属性数据模型规则\",{\"0\":{\"33\":1,\"1800\":1}}],[\"注入\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"注入bean\",{\"0\":{\"221\":1,\"414\":1,\"599\":1,\"790\":1,\"1190\":1,\"1320\":1,\"1651\":1,\"2059\":1}}],[\"注册拦截器\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"注册表达式实现类\",{\"0\":{\"60\":1,\"78\":1,\"84\":1,\"90\":1,\"826\":1,\"944\":1,\"965\":1,\"971\":1,\"1448\":1,\"1466\":1,\"1472\":1,\"1478\":1,\"1827\":1,\"1845\":1,\"1851\":1,\"1857\":1}}],[\"注解标记允许匿名访问的url\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"注\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"注意事项描述\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"注意\",{\"1\":{\"18\":1,\"119\":1,\"121\":1,\"331\":1,\"450\":1,\"636\":1,\"851\":1,\"1051\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1549\":1,\"1551\":1,\"1786\":1,\"1886\":1,\"1888\":1,\"1957\":1}}],[\"然后执行流程监听器\",{\"1\":{\"444\":1,\"630\":1,\"1358\":1}}],[\"然后检查是否正确\",{\"1\":{\"336\":1,\"1758\":1,\"1962\":1,\"2241\":1}}],[\"然后参照他的意见决定是否审批通过\",{\"1\":{\"237\":1,\"240\":1,\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1214\":1,\"1217\":1,\"1218\":1,\"1390\":1,\"1663\":1,\"1666\":1,\"1667\":1,\"2071\":1,\"2074\":1,\"2075\":1}}],[\"然后按回车会自动生成\",{\"1\":{\"108\":1,\"1037\":1,\"1539\":1,\"1875\":1}}],[\"然后在进行执行\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":2,\"943\":2,\"964\":2,\"970\":2,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"然后再去尝试加载类路径\",{\"1\":{\"14\":1,\"845\":1,\"1068\":1,\"1487\":1,\"1781\":1}}],[\"也在此版本得到解决\",{\"1\":{\"2107\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"也是表达式的前缀\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"也可在开源交流群里\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"也可复用\",{\"1\":{\"115\":1,\"1882\":1}}],[\"也可使用对应orm框架的实现方式\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"也可用\",{\"1\":{\"41\":1,\"404\":3,\"406\":1,\"407\":2,\"518\":1,\"519\":1,\"520\":1,\"589\":3,\"591\":1,\"592\":2,\"703\":1,\"704\":1,\"705\":1,\"780\":3,\"782\":1,\"783\":2,\"869\":1,\"927\":1,\"928\":1,\"929\":1,\"1092\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1184\":3,\"1186\":1,\"1187\":2,\"1310\":3,\"1312\":1,\"1313\":2,\"1432\":1,\"1433\":1,\"1434\":1,\"1508\":1,\"1808\":1,\"2193\":4,\"2262\":4,\"2280\":4,\"2306\":4}}],[\"也可发送通知\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"也可以放到业务代码中办理完成后\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"也可以放到业务代码中办理前设置\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"也可以在流程或者节点监听器\",{\"1\":{\"3\":1,\"1770\":1}}],[\"待完善\",{\"1\":{\"427\":1,\"613\":1,\"805\":1,\"1205\":1,\"1333\":1}}],[\"待办已办查询标记为即将删除\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"待办表解偶用户\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"待办任务所有待办人都进行\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"待办任务有一个\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"待办任务表\",{\"1\":{\"262\":2,\"263\":1,\"503\":2,\"504\":1,\"688\":2,\"689\":1,\"912\":2,\"913\":1,\"1241\":2,\"1242\":1,\"1417\":2,\"1418\":1,\"1688\":2,\"1689\":1,\"2096\":2,\"2097\":1}}],[\"待办任务转为历史记录\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"待办\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"待办理\",{\"1\":{\"7\":1,\"1774\":1}}],[\"待提交\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"待判断的字符串\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"待补充\",{\"1\":{\"79\":1,\"960\":1,\"1467\":1,\"1846\":1}}],[\"待开发\",{\"1\":{\"57\":1,\"1112\":1,\"1524\":1,\"1824\":1}}],[\"8进行编码文档\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"8进行编码代码\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"8读取文件\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"8<\",{\"1\":{\"2203\":3,\"2217\":3,\"2290\":3,\"2316\":3}}],[\"84px\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"88<\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"80\",{\"1\":{\"271\":2,\"335\":1,\"512\":2,\"610\":1,\"697\":2,\"921\":2,\"1250\":2,\"1426\":2,\"1697\":2,\"1757\":1,\"1961\":1,\"2105\":2,\"2121\":1,\"2240\":1}}],[\"8080`\",{\"1\":{\"612\":1}}],[\"8080\",{\"1\":{\"75\":1,\"609\":1,\"610\":1,\"611\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1,\"2121\":2}}],[\"8已完成\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"82\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"81\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"8\",{\"0\":{\"57\":1,\"293\":1,\"299\":1,\"303\":1,\"311\":1,\"340\":1,\"356\":1,\"386\":1,\"387\":1,\"500\":1,\"501\":1,\"502\":1,\"541\":1,\"571\":1,\"572\":1,\"682\":1,\"726\":1,\"759\":1,\"760\":1,\"989\":1,\"1003\":1,\"1049\":1,\"1122\":1,\"1157\":1,\"1158\":1,\"1262\":1,\"1292\":1,\"1293\":1,\"1414\":1,\"1415\":1,\"1416\":1,\"1524\":1,\"1717\":1,\"1726\":1,\"1734\":1,\"1762\":1,\"1824\":1,\"1919\":1,\"1925\":1,\"1929\":1,\"1937\":1,\"1966\":1,\"2246\":1},\"1\":{\"216\":1,\"240\":1,\"262\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"287\":1,\"292\":1,\"333\":3,\"435\":1,\"482\":1,\"503\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"621\":1,\"668\":1,\"688\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"775\":1,\"821\":1,\"887\":1,\"912\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"983\":1,\"988\":1,\"1179\":1,\"1217\":1,\"1241\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1349\":1,\"1396\":1,\"1417\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1646\":1,\"1666\":1,\"1688\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1711\":1,\"1716\":1,\"1755\":3,\"1913\":1,\"1918\":1,\"1959\":3,\"2054\":1,\"2074\":1,\"2096\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"是warm\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"是不是通过warmflow工作流可以很简单的管理你的审批业务呢\",{\"1\":{\"2151\":1,\"2210\":1,\"2271\":1,\"2297\":1}}],[\"是\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"是任务完成后\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"是针对并行流程\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"是为了防止用户\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"是一款\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"是一个可通过jar引入设计器的工作流\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2236\":1,\"2329\":1,\"2341\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"是否显示banner图\",{\"1\":{\"403\":1,\"406\":1,\"588\":1,\"591\":1,\"779\":1,\"782\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"是否开启设计器ui\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1}}],[\"是否开启工作流\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"是否开启逻辑删除\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"460\":1,\"588\":1,\"591\":1,\"646\":1,\"779\":1,\"782\":1,\"862\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"是否设置为退回类型\",{\"1\":{\"293\":1,\"989\":1,\"1717\":1,\"1919\":1}}],[\"是否可以退回任意节点\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"是否发布\",{\"1\":{\"265\":1,\"506\":1,\"691\":1,\"915\":1,\"1244\":1,\"1420\":1,\"1691\":1,\"2099\":1}}],[\"是否任意调整\",{\"1\":{\"125\":1,\"469\":1,\"655\":1,\"874\":1,\"1055\":1,\"1383\":1,\"1555\":1,\"1892\":1}}],[\"是否能看懂\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"是否截取表达式前缀\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":2,\"943\":2,\"964\":2,\"970\":2,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"是表达式策略类接口\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"是spel表达式\",{\"1\":{\"55\":1,\"529\":1,\"714\":1,\"940\":1,\"1110\":1,\"1443\":1,\"1522\":1,\"1822\":1}}],[\"后再执行\",{\"1\":{\"825\":1,\"943\":1,\"964\":1,\"970\":1}}],[\"后端请求\",{\"1\":{\"421\":1,\"422\":1,\"606\":1,\"607\":1,\"799\":1,\"800\":1,\"1199\":1,\"1200\":1,\"1327\":1,\"1328\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"后端接收流程xml部分丢失\",{\"0\":{\"294\":1,\"990\":1,\"1718\":1,\"1920\":1}}],[\"后端放行路径\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"后端放行部分路径\",{\"0\":{\"225\":1,\"228\":1,\"420\":1,\"605\":1,\"798\":1,\"1198\":1,\"1326\":1,\"1654\":1,\"2062\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"后端基于国产工作流dromara\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"后端代码设置变量\",{\"0\":{\"53\":1,\"56\":1,\"527\":1,\"530\":1,\"712\":1,\"715\":1,\"938\":1,\"941\":1,\"1108\":1,\"1111\":1,\"1441\":1,\"1444\":1,\"1520\":1,\"1523\":1,\"1820\":1,\"1823\":1},\"1\":{\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"后续还会增加多租户和软删除等\",{\"1\":{\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"后续不建议用\",{\"1\":{\"443\":1,\"629\":1,\"1357\":1}}],[\"后续只提供mysql升级脚本\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"后续有时间再做校验\",{\"1\":{\"293\":1,\"989\":1,\"1717\":1,\"1919\":1}}],[\"后续会根据不同情况\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"后续会继续支持其他数据库或者国产数据库\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"后续会由社区提供其他支持\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"后续在\",{\"1\":{\"40\":1,\"868\":1,\"1091\":1,\"1507\":1,\"1807\":1}}],[\"表名\",{\"1\":{\"515\":2,\"700\":2,\"924\":2,\"1095\":2,\"1429\":2}}],[\"表字段明细\",{\"0\":{\"264\":1,\"505\":1,\"690\":1,\"914\":1,\"1243\":1,\"1419\":1,\"1690\":1,\"2098\":1}}],[\"表清单\",{\"0\":{\"263\":1,\"504\":1,\"689\":1,\"913\":1,\"1242\":1,\"1418\":1,\"1689\":1,\"2097\":1}}],[\"表描述\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"表结构\",{\"0\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"表单管理\",{\"0\":{\"79\":1,\"439\":1,\"625\":1,\"838\":1,\"960\":1,\"1353\":1,\"1467\":1,\"1846\":1}}],[\"表示默认办理人变量策略\",{\"1\":{\"52\":1,\"526\":1,\"711\":1,\"937\":1,\"1107\":1,\"1440\":1,\"1519\":1,\"1819\":1}}],[\"表达式扩展\",{\"0\":{\"824\":1}}],[\"表达式后缀\",{\"1\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1}}],[\"表达式\",{\"1\":{\"59\":2,\"63\":1,\"77\":2,\"83\":2,\"89\":2,\"115\":2,\"217\":1,\"436\":1,\"531\":1,\"622\":1,\"716\":1,\"776\":1,\"822\":1,\"825\":2,\"835\":1,\"943\":2,\"947\":1,\"964\":2,\"970\":2,\"1180\":1,\"1350\":1,\"1445\":1,\"1447\":2,\"1451\":1,\"1465\":2,\"1471\":2,\"1477\":2,\"1647\":1,\"1826\":2,\"1830\":1,\"1844\":2,\"1850\":2,\"1856\":2,\"1882\":2,\"2055\":1}}],[\"表达式策略类接口\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"表达式策略类型\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"表达式公共接口\",{\"0\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"表达式2等\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"表达式1\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"前后端端口一致\",{\"1\":{\"614\":1}}],[\"前后端不分离项目\",{\"1\":{\"614\":1}}],[\"前后端不分离版本\",{\"0\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"前后端不分离\",{\"1\":{\"226\":1,\"424\":1,\"802\":1,\"1202\":1,\"1330\":1,\"1655\":1,\"2063\":1,\"2110\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2321\":1,\"2347\":1}}],[\"前面的任务路线必须都完成即可往下执行\",{\"1\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"前面拼接dept\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"前面拼接role\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"前端配置如\",{\"1\":{\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1350\":1}}],[\"前端地址的前缀如dev\",{\"1\":{\"425\":1,\"426\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"前端加载设计器\",{\"0\":{\"424\":1,\"609\":1,\"802\":1,\"1202\":1,\"1330\":1,\"2110\":1,\"2121\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2321\":1,\"2347\":1}}],[\"前端加载设计器代理配置\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"前端加载页面\",{\"1\":{\"227\":1}}],[\"前端页面就不会丢失精度了\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"前端页面设置变量\",{\"0\":{\"52\":1,\"55\":1,\"526\":1,\"529\":1,\"711\":1,\"714\":1,\"937\":1,\"940\":1,\"1107\":1,\"1110\":1,\"1440\":1,\"1443\":1,\"1519\":1,\"1522\":1,\"1819\":1,\"1822\":1}}],[\"前端引入设计器\",{\"0\":{\"226\":1,\"229\":1,\"1655\":1,\"2063\":1}}],[\"前端使用\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"前端项目\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"前缀表示spel办理人变量策略\",{\"1\":{\"47\":1,\"933\":1,\"1103\":1,\"1514\":1,\"1814\":1}}],[\"则整个任务执行\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"则需要判断是否需要生成新任务\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"则需要动态替换权限标识\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"则可跳转anynodecode节点\",{\"1\":{\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1,\"1611\":1,\"2019\":1}}],[\"则必传\",{\"1\":{\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"375\":1,\"560\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1281\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1}}],[\"则c节点办理人变量为100\",{\"1\":{\"49\":1,\"524\":1,\"709\":1,\"935\":1,\"1105\":1,\"1438\":1,\"1516\":1,\"1816\":1}}],[\"即可替换完成\",{\"1\":{\"49\":1,\"935\":1,\"1105\":1,\"1516\":1,\"1816\":1,\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"匹配上就执行\",{\"1\":{\"48\":1,\"934\":1,\"1104\":1,\"1515\":1,\"1815\":1}}],[\"匹配规则\",{\"0\":{\"14\":1,\"48\":1,\"217\":1,\"776\":1,\"845\":1,\"934\":1,\"1068\":1,\"1104\":1,\"1180\":1,\"1487\":1,\"1515\":1,\"1647\":1,\"1781\":1,\"1815\":1,\"2055\":1}}],[\"倒叙匹配\",{\"1\":{\"48\":1,\"934\":1,\"1104\":1,\"1515\":1,\"1815\":1}}],[\"90\",{\"1\":{\"2253\":1}}],[\"9007199254740991l\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"94\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"99元\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"9已退回\",{\"1\":{\"266\":1,\"267\":1,\"507\":1,\"508\":1,\"692\":1,\"693\":1,\"916\":1,\"917\":1,\"1245\":1,\"1246\":1,\"1421\":1,\"1422\":1,\"1692\":1,\"1693\":1,\"2100\":1,\"2101\":1}}],[\"9失效\",{\"1\":{\"265\":1,\"506\":1,\"691\":1,\"915\":1,\"1244\":1,\"1420\":1,\"1691\":1,\"2099\":1}}],[\"9\",{\"0\":{\"294\":1,\"318\":1,\"345\":1,\"357\":1,\"388\":1,\"542\":1,\"573\":1,\"683\":1,\"727\":1,\"761\":1,\"990\":1,\"1010\":1,\"1123\":1,\"1159\":1,\"1263\":1,\"1294\":1,\"1718\":1,\"1741\":1,\"1767\":1,\"1920\":1,\"1944\":1,\"1971\":1,\"2253\":1},\"1\":{\"46\":1,\"216\":1,\"240\":1,\"262\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"292\":1,\"435\":1,\"482\":1,\"503\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"621\":1,\"668\":1,\"688\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"775\":1,\"821\":1,\"887\":1,\"912\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"932\":1,\"988\":1,\"1102\":1,\"1179\":1,\"1217\":1,\"1241\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1349\":1,\"1396\":1,\"1417\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1513\":1,\"1646\":1,\"1666\":1,\"1688\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1716\":1,\"1813\":1,\"1918\":1,\"2054\":1,\"2074\":1,\"2096\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"$tab\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"$proxy\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"$remote\",{\"1\":{\"75\":2,\"819\":2,\"959\":2,\"1347\":2,\"1463\":2,\"1842\":2}}],[\"$http\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"$uri\",{\"1\":{\"75\":2,\"819\":2,\"959\":2,\"1347\":2,\"1463\":2,\"1842\":2}}],[\"$前缀表示默认办理人变量策略\",{\"1\":{\"47\":1,\"933\":1,\"1103\":1,\"1514\":1,\"1814\":1}}],[\"$\",{\"1\":{\"46\":2,\"47\":1,\"52\":1,\"93\":3,\"216\":1,\"333\":1,\"338\":1,\"428\":1,\"516\":1,\"531\":1,\"609\":1,\"611\":1,\"612\":1,\"614\":1,\"701\":1,\"716\":1,\"806\":1,\"829\":3,\"925\":1,\"932\":2,\"933\":1,\"937\":1,\"974\":3,\"1096\":1,\"1102\":2,\"1103\":1,\"1107\":1,\"1206\":1,\"1334\":1,\"1430\":1,\"1445\":1,\"1481\":3,\"1513\":2,\"1514\":1,\"1519\":1,\"1646\":1,\"1755\":1,\"1760\":1,\"1813\":2,\"1814\":1,\"1819\":1,\"1860\":3,\"1959\":1,\"1964\":1,\"2054\":1,\"2121\":1,\"2243\":1}}],[\"就得有相应表达式\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"就可以动态指定一群人\",{\"1\":{\"2150\":1,\"2209\":1,\"2270\":1,\"2296\":1}}],[\"就可以后续就可以根据租户id过来任务\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"就会终止该操作\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"就是点击驳回后的状态\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"就是在下一个任务生成前执行\",{\"1\":{\"20\":1,\"451\":1,\"637\":1,\"852\":1,\"1075\":1,\"1365\":1,\"1493\":1,\"1787\":1}}],[\"就先遍历spel策略\",{\"1\":{\"48\":1,\"934\":1,\"1104\":1,\"1515\":1,\"1815\":1}}],[\"就需要后续能够动态设置办理人功能\",{\"1\":{\"45\":1,\"931\":1,\"1101\":1,\"1512\":1,\"1812\":1}}],[\"多网关直连使用\",{\"1\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"多个人可以同时处理\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"多个token用逗号分隔\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"多个值\",{\"1\":{\"35\":2,\"1802\":2}}],[\"多实例任务优化\",{\"1\":{\"115\":1,\"1882\":1}}],[\"多租户插件\",{\"1\":{\"516\":2,\"701\":2,\"925\":2,\"1096\":2,\"1430\":2}}],[\"多租户和逻辑删除\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"多租户字段隔离提供全局配置\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"多租户后台管理系统\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"多租户与软删除\",{\"1\":{\"113\":1,\"115\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"1882\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"多租户\",{\"0\":{\"42\":1,\"513\":1,\"698\":1,\"922\":1,\"1093\":1,\"1427\":1,\"1509\":1,\"1809\":1}}],[\"按需求执行\",{\"0\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"按需传输\",{\"1\":{\"41\":1,\"155\":1,\"156\":1,\"160\":3,\"161\":6,\"162\":4,\"168\":6,\"169\":4,\"170\":3,\"171\":3,\"172\":3,\"173\":3,\"174\":7,\"181\":2,\"183\":1,\"184\":1,\"362\":3,\"363\":5,\"364\":4,\"369\":5,\"370\":4,\"371\":2,\"372\":2,\"373\":2,\"374\":2,\"375\":7,\"377\":2,\"547\":3,\"548\":4,\"549\":3,\"554\":4,\"555\":3,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"560\":7,\"562\":2,\"734\":3,\"735\":6,\"736\":4,\"742\":6,\"743\":4,\"744\":3,\"745\":3,\"746\":3,\"747\":3,\"748\":7,\"750\":2,\"869\":1,\"1092\":1,\"1132\":3,\"1133\":6,\"1134\":4,\"1140\":6,\"1141\":4,\"1142\":3,\"1143\":3,\"1144\":3,\"1145\":3,\"1146\":7,\"1148\":2,\"1268\":3,\"1269\":6,\"1270\":4,\"1275\":6,\"1276\":4,\"1277\":2,\"1278\":2,\"1279\":2,\"1280\":2,\"1281\":7,\"1283\":2,\"1508\":1,\"1585\":1,\"1586\":1,\"1590\":3,\"1591\":6,\"1592\":4,\"1598\":6,\"1599\":4,\"1600\":3,\"1601\":3,\"1602\":3,\"1603\":3,\"1604\":7,\"1611\":2,\"1613\":1,\"1614\":1,\"1808\":1,\"1993\":1,\"1994\":1,\"1998\":3,\"1999\":6,\"2000\":4,\"2006\":6,\"2007\":4,\"2008\":3,\"2009\":3,\"2010\":3,\"2011\":3,\"2012\":7,\"2019\":2,\"2021\":1,\"2022\":1}}],[\"按业务需求决定\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"按要求更改\",{\"0\":{\"111\":1,\"1040\":1,\"1542\":1,\"1878\":1}}],[\"按照mybatis方式扩展其他的orm或者数据库类型即可\",{\"1\":{\"2195\":1,\"2264\":1,\"2282\":1,\"2308\":1}}],[\"按照以下前四点\",{\"1\":{\"2118\":1}}],[\"按照以下四点\",{\"1\":{\"2107\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"按照任务计划\",{\"1\":{\"262\":1,\"503\":1,\"688\":1,\"912\":1,\"1241\":1,\"1417\":1,\"1688\":1,\"2096\":1}}],[\"按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"按照自身业务要求\",{\"1\":{\"65\":1,\"408\":1,\"593\":1,\"784\":1,\"949\":1,\"1314\":1,\"1453\":1,\"1832\":1}}],[\"按照自己的需求\",{\"1\":{\"36\":1,\"1803\":1}}],[\"按照实际业务需求选择实现一个方法或者多个方法\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"角色及用户自定义类型\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"角色权限控制\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"角色的主键重复\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"角色列表\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"角色和部门等\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"角色\",{\"1\":{\"41\":1,\"115\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"234\":2,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"433\":2,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"619\":2,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"811\":2,\"869\":1,\"1092\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1211\":2,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1339\":2,\"1508\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1660\":2,\"1808\":1,\"1882\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2068\":2}}],[\"编写permissionhandler实现类\",{\"0\":{\"41\":1,\"869\":1,\"1092\":1,\"1508\":1,\"1808\":1}}],[\"编码\",{\"1\":{\"35\":2,\"1802\":2}}],[\"中调用\",{\"1\":{\"868\":1}}],[\"中\",{\"1\":{\"526\":1,\"711\":1,\"1440\":1}}],[\"中表示\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"中的根据无法正确删除user数据\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"中间和网关节点必须有跳转条件\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"中间节点拆分为或签\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"中间节点不可通过或者驳回到多个中间节点\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"中间节点\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"中铁四局集团全资子公司\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"中交武汉智行国际\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"中获取\",{\"1\":{\"40\":1,\"1091\":1,\"1507\":1,\"1807\":1}}],[\"中更新了\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"为此耗时一年时间自研warm\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"为此抽取出这个接口\",{\"1\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1}}],[\"为是否可编辑\",{\"1\":{\"425\":1,\"426\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"为需要查询的流程定义id\",{\"1\":{\"425\":1,\"426\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"为保存流程状态\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"为springutil指定bean\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"为了项目能够健康长久的发展下去\",{\"1\":{\"283\":1}}],[\"为了方便业务系统快速引入设计器\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"为感谢对\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"为提出问题的小伙伴答疑\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"为社区处理问题\",{\"0\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"为开源项目点一个star\",{\"0\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"为中心\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"为往圣继绝学\",{\"1\":{\"0\":1}}],[\"以确保平稳过渡和兼容性\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"以满足特定的需求\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"以上是sa\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"以上业务代码中会出现很多重复代码\",{\"1\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1}}],[\"以ruoyi\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"以并行网关结尾\",{\"1\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"以并行网关开头\",{\"1\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"以串行网关结尾\",{\"1\":{\"244\":1,\"479\":1,\"665\":1,\"884\":1,\"891\":1,\"1221\":1,\"1393\":1,\"1670\":1,\"2078\":1}}],[\"以串行网关开头\",{\"1\":{\"244\":1,\"479\":1,\"665\":1,\"884\":1,\"891\":1,\"1221\":1,\"1393\":1,\"1670\":1,\"2078\":1}}],[\"以便进行修改或重新处理\",{\"1\":{\"240\":2,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":2,\"2074\":2}}],[\"以下代码再ruoyi不分离版中测试\",{\"1\":{\"614\":1}}],[\"以下演示基于项目示例hh\",{\"1\":{\"465\":2,\"651\":2,\"870\":2,\"1050\":2,\"1379\":2}}],[\"以下为主要接口示例\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"以下为简短案例\",{\"0\":{\"2169\":1,\"2230\":1,\"2335\":1,\"2361\":1},\"1\":{\"257\":1,\"495\":1,\"903\":1,\"1232\":1,\"1409\":1,\"1683\":1,\"2091\":1}}],[\"以下满足其一即可\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"以下设置获取内置变量的function\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"以下是nginx代理示例\",{\"1\":{\"2121\":1}}],[\"以下是spring\",{\"1\":{\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"以下是错误示例\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"以下是存在的示例\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"以下是一些典型的应用场景\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"以下是在全局分派监听器中追加文字示例\",{\"1\":{\"3\":1,\"1770\":1}}],[\"以接口和静态资源的方式引入\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"以及warm组织成员和贡献者的红包奖励\",{\"1\":{\"132\":1,\"1062\":1,\"1562\":1,\"1899\":1}}],[\"以及开启流程代码\",{\"1\":{\"127\":1,\"471\":1,\"657\":1,\"876\":1,\"1057\":1,\"1385\":1,\"1557\":1,\"1894\":1}}],[\"以ctq\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"第二种\",{\"1\":{\"461\":1,\"647\":1,\"1375\":1}}],[\"第二种方式\",{\"1\":{\"38\":1,\"462\":1,\"464\":1,\"648\":1,\"650\":1,\"864\":1,\"866\":1,\"1087\":1,\"1089\":1,\"1376\":1,\"1378\":1,\"1505\":1,\"1805\":1}}],[\"第一种\",{\"1\":{\"461\":1,\"647\":1,\"1375\":1}}],[\"第一种方式\",{\"1\":{\"38\":1,\"462\":1,\"464\":1,\"648\":1,\"650\":1,\"864\":1,\"866\":1,\"1087\":1,\"1089\":1,\"1376\":1,\"1378\":1,\"1505\":1,\"1805\":1}}],[\"第一时间收到最新技术文章通知\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"第一时间收到新增开源案例通知\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"第一时间收到框架\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"第一时间收到框架更新通知\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"获取变量替换类型\",{\"1\":{\"531\":1,\"716\":1,\"1445\":1}}],[\"获取表字段\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"获取下一个节点列表\",{\"0\":{\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1}}],[\"获取目标节点最近的并行网关集合\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"获取角色列表\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"获取用户列表\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"获取办理人权限设置列表结果\",{\"1\":{\"233\":1,\"432\":1,\"618\":1,\"810\":1,\"1210\":1,\"1338\":1,\"1659\":1,\"2067\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"获取办理人权限设置列表tabs页签\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"获取办理人权限设置列表接口实现类\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"获取办理人权限设置列表接口\",{\"1\":{\"233\":1,\"432\":1,\"618\":1,\"810\":1,\"1210\":1,\"1338\":1,\"1659\":1,\"2067\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"获取总数量\",{\"0\":{\"193\":1,\"385\":1,\"570\":1,\"758\":1,\"1156\":1,\"1291\":1,\"1623\":1,\"2031\":1},\"1\":{\"193\":1,\"385\":1,\"570\":1,\"758\":1,\"1156\":1,\"1291\":1,\"1623\":1,\"2031\":1}}],[\"获取后置置节点\",{\"0\":{\"181\":1,\"1611\":1,\"2019\":1}}],[\"获取后置节点\",{\"0\":{\"179\":1,\"180\":1,\"1609\":1,\"1610\":1,\"2017\":1,\"2018\":1}}],[\"获取前置节点\",{\"0\":{\"177\":1,\"178\":1,\"1607\":1,\"1608\":1,\"2015\":1,\"2016\":1}}],[\"获取已发布流程节点\",{\"0\":{\"176\":1,\"1606\":1,\"2014\":1}}],[\"获取流程定义xml的字符串\",{\"1\":{\"538\":1}}],[\"获取流程定义xml\",{\"1\":{\"353\":1,\"725\":1,\"1121\":1,\"1259\":1}}],[\"获取流程定义\",{\"0\":{\"353\":1,\"538\":1,\"725\":1,\"1121\":1,\"1129\":1,\"1259\":1}}],[\"获取流程定义全部数据\",{\"1\":{\"143\":1,\"1129\":1,\"1573\":1,\"1981\":1}}],[\"获取流程定义全部数据对象\",{\"0\":{\"143\":1,\"1573\":1,\"1981\":1}}],[\"获取流程变量的map类型\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"获取流程图\",{\"0\":{\"358\":1,\"543\":1,\"730\":1,\"1126\":1,\"1264\":1}}],[\"获取流程图对象\",{\"1\":{\"157\":1,\"158\":1,\"1587\":1,\"1588\":1,\"1995\":1,\"1996\":1}}],[\"获取流程图的图片流\",{\"1\":{\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"358\":1,\"543\":1,\"730\":1,\"1126\":1,\"1264\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1991\":1,\"1992\":1,\"1993\":1,\"1994\":1}}],[\"获取可找作者定制化开发\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"获取策略类型\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"获取当前操作用户所有权限\",{\"1\":{\"41\":1,\"869\":1,\"1092\":1,\"1508\":1,\"1808\":1}}],[\"获取当前办理人\",{\"1\":{\"40\":1,\"41\":1,\"868\":1,\"869\":1,\"1091\":1,\"1092\":1,\"1507\":1,\"1508\":1,\"1807\":1,\"1808\":1}}],[\"获取组件中的mapper\",{\"1\":{\"38\":1,\"462\":1,\"464\":1,\"648\":1,\"650\":1,\"864\":1,\"866\":1,\"1087\":1,\"1089\":1,\"1376\":1,\"1378\":1,\"1505\":1,\"1805\":1}}],[\"获取节点扩展属性\",{\"1\":{\"32\":1,\"1799\":1}}],[\"自带流程图\",{\"1\":{\"2163\":1,\"2181\":1,\"2329\":1,\"2355\":1,\"2373\":1}}],[\"自己不再处理\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"自研条件表达式\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"自动获取\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"自动识别数据库类型\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"自定义填充\",{\"1\":{\"404\":1,\"407\":1,\"589\":1,\"592\":1,\"780\":1,\"783\":1,\"1184\":1,\"1187\":1,\"1310\":1,\"1313\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"自定义填充器\",{\"0\":{\"220\":1,\"413\":1,\"598\":1,\"789\":1,\"1189\":1,\"1319\":1,\"1650\":1,\"2058\":1}}],[\"自定义id生成策略\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"自定义表达式\",{\"0\":{\"437\":1,\"623\":1,\"823\":1,\"1351\":1},\"1\":{\"216\":1,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"2054\":1}}],[\"自定义流程状态扩展\",{\"1\":{\"66\":1,\"67\":2,\"409\":1,\"410\":2,\"594\":1,\"595\":2,\"785\":1,\"786\":2,\"950\":1,\"951\":2,\"1315\":1,\"1316\":2,\"1454\":1,\"1455\":2,\"1833\":1,\"1834\":2}}],[\"自定义流程状态\",{\"0\":{\"65\":1,\"408\":1,\"593\":1,\"784\":1,\"949\":1,\"1314\":1,\"1453\":1,\"1832\":1},\"1\":{\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1}}],[\"自定义流程图节点颜色\",{\"0\":{\"6\":1,\"1773\":1}}],[\"自行渲染\",{\"0\":{\"157\":1,\"158\":1,\"1587\":1,\"1588\":1,\"1995\":1,\"1996\":1}}],[\"自行实现\",{\"1\":{\"36\":1,\"1803\":1}}],[\"自由飞翔\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"业务流程优化\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"业务项目中存在哪种json就会使用哪种的实现\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"业务id\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"业务详情\",{\"1\":{\"265\":1,\"266\":1,\"506\":1,\"507\":1,\"691\":1,\"692\":1,\"915\":1,\"916\":1,\"1244\":1,\"1245\":1,\"1420\":1,\"1421\":1,\"1691\":1,\"1692\":1,\"2099\":1,\"2100\":1}}],[\"业务系统再次导入即可\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"业务系统需要对应修改\",{\"1\":{\"341\":1,\"1763\":1,\"1967\":1,\"2248\":1}}],[\"业务系统机构\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"业务系统数据\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"业务系统配置设计器的地址\",{\"1\":{\"71\":1,\"955\":1,\"1459\":1,\"1838\":1}}],[\"业务系统自行查询\",{\"1\":{\"36\":1,\"1803\":1}}],[\"业务中\",{\"1\":{\"45\":1,\"931\":1,\"1101\":1,\"1512\":1,\"1812\":1}}],[\"业务表新增或者更新操作\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"值\",{\"1\":{\"35\":2,\"1802\":2}}],[\"保存流程定义\",{\"0\":{\"535\":1,\"536\":1}}],[\"保存流程定义数据\",{\"1\":{\"534\":1,\"535\":1,\"536\":1}}],[\"保存流程节点和流程跳转数据\",{\"0\":{\"350\":1,\"351\":1,\"722\":1,\"723\":1,\"1118\":1,\"1119\":1,\"1256\":1,\"1257\":1}}],[\"保存流程节点和跳转\",{\"0\":{\"141\":1,\"1571\":1,\"1979\":1}}],[\"保存到实例表中的defjson\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"保存到节点表的ext字段\",{\"1\":{\"35\":1,\"1802\":1}}],[\"保存下一个节点办理人时\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"保存需要追加的文字\",{\"0\":{\"3\":1,\"1770\":1}}],[\"设计原理采取不分离的方式\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"设计器新增tabs扩展\",{\"1\":{\"1723\":1}}],[\"设计器新增设置驳回指定节点\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"设计器页面入口地址为\",{\"1\":{\"609\":1,\"2121\":1}}],[\"设计器页面入口是访问后端地址\",{\"1\":{\"226\":1,\"424\":1,\"802\":1,\"1202\":1,\"1330\":1,\"1655\":1,\"2063\":1,\"2110\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2321\":1,\"2347\":1}}],[\"设计器后端放行地址\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"设计器独立\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"设计器独立部署\",{\"0\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"设计器支持节点扩展属性设置\",{\"1\":{\"301\":1,\"1927\":1,\"2179\":1,\"2180\":1,\"2371\":1,\"2372\":1}}],[\"设计器引入优化\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"设计器引入\",{\"0\":{\"258\":1,\"418\":1,\"494\":1,\"603\":1,\"794\":1,\"908\":1,\"1237\":1,\"1324\":1,\"1408\":1,\"1684\":1,\"2092\":1,\"2174\":1,\"2235\":1,\"2340\":1,\"2366\":1},\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2130\":1,\"2131\":1}}],[\"设计器引入和单体类似\",{\"1\":{\"229\":1}}],[\"设计器办理人权限数据接入\",{\"0\":{\"230\":1,\"429\":1,\"615\":1,\"807\":1,\"1207\":1,\"1335\":1,\"1656\":1,\"2064\":1,\"2111\":1,\"2122\":1,\"2139\":1,\"2156\":1,\"2223\":1,\"2322\":1,\"2348\":1}}],[\"设计器集成\",{\"0\":{\"222\":1,\"1194\":1,\"1652\":1,\"2060\":1}}],[\"设计器不分离部署\",{\"0\":{\"74\":1,\"818\":1,\"958\":1,\"1346\":1,\"1462\":1,\"1841\":1}}],[\"设计器需要配置业务系统的代理地址\",{\"1\":{\"71\":1,\"815\":1,\"955\":1,\"1343\":1,\"1459\":1,\"1838\":1}}],[\"设计器配置该接口地址\",{\"1\":{\"70\":1,\"814\":1,\"954\":1,\"1342\":1,\"1458\":1,\"1837\":1}}],[\"设计器二开\",{\"0\":{\"69\":1,\"813\":1,\"953\":1,\"1341\":1,\"1457\":1,\"1836\":1}}],[\"设计器渲染效果\",{\"0\":{\"34\":1,\"1801\":1}}],[\"设置响应头\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"设置编码格式\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"设置生成xml的格式\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"设置开始节点\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"设置最大单页限制数量\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"设置数据库类型为mysql\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"设置倒序排列\",{\"0\":{\"207\":1,\"399\":1,\"584\":1,\"772\":1,\"1170\":1,\"1305\":1,\"1637\":1,\"2045\":1},\"1\":{\"207\":1,\"399\":1,\"584\":1,\"772\":1,\"1170\":1,\"1305\":1,\"1637\":1,\"2045\":1}}],[\"设置正序排列\",{\"0\":{\"206\":1,\"398\":1,\"583\":1,\"771\":1,\"1169\":1,\"1304\":1,\"1636\":1,\"2044\":1},\"1\":{\"206\":1,\"398\":1,\"583\":1,\"771\":1,\"1169\":1,\"1304\":1,\"1636\":1,\"2044\":1}}],[\"设置节点状态颜色\",{\"1\":{\"115\":1,\"1882\":1}}],[\"设置节点表的listener\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"设置创建类的模板\",{\"0\":{\"108\":1,\"1037\":1,\"1539\":1,\"1875\":1}}],[\"设置表达式\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"设置新增的表达式\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"设置办理人所拥有的权限\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"设置办理人id\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"设置当前办理人id\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"当由于各种原因\",{\"1\":{\"2198\":1,\"2212\":1,\"2285\":1,\"2311\":1}}],[\"当上一个任务办理时\",{\"1\":{\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"当使用jpa时指定jpapersistenceprovider\",{\"1\":{\"403\":1,\"489\":1,\"588\":1,\"675\":1,\"779\":1,\"900\":1,\"1183\":1,\"1229\":1,\"1309\":1,\"1403\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"当未设置办理人时\",{\"1\":{\"312\":1,\"1004\":1,\"1735\":1,\"1938\":1}}],[\"当然业务系统可以不集成设计器\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"当然是可以能脱离流程设计器\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"当然有其他合适的私活也可以介绍给作者\",{\"1\":{\"282\":1}}],[\"当然了\",{\"1\":{\"99\":1,\"1028\":1,\"1530\":1,\"1866\":1}}],[\"当流程完成\",{\"1\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"当流程有多个结束节点\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"当地节水系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"当内置的条件\",{\"1\":{\"824\":1,\"942\":1,\"963\":1,\"969\":1}}],[\"当内置的条件表达式不满足业务需求时\",{\"1\":{\"58\":1,\"1446\":1,\"1825\":1}}],[\"当内置的办理人变量不满足业务需求时\",{\"1\":{\"88\":1,\"1476\":1,\"1855\":1}}],[\"当内置的监听器表达式不满足业务需求时\",{\"1\":{\"82\":1,\"1470\":1,\"1849\":1}}],[\"当内置的设计器和接口不满足业务需求时\",{\"1\":{\"69\":1,\"813\":1,\"953\":1,\"1457\":1,\"1836\":1}}],[\"当选择截取\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"当业务系统需要给节点添加扩展属性时\",{\"1\":{\"31\":1,\"1798\":1}}],[\"当前任务执行\",{\"1\":{\"481\":1,\"667\":1,\"886\":1,\"893\":1,\"1395\":1}}],[\"当前任务完成后执行\",{\"1\":{\"10\":1,\"16\":1,\"24\":1,\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"843\":1,\"848\":1,\"856\":1,\"1066\":1,\"1071\":1,\"1079\":1,\"1357\":1,\"1361\":1,\"1483\":1,\"1489\":1,\"1497\":1,\"1777\":1,\"1783\":1,\"1791\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"当前流程节点的编码\",{\"1\":{\"269\":1,\"510\":1,\"695\":1,\"919\":1,\"1248\":1,\"1424\":1,\"1695\":1,\"2103\":1}}],[\"当前流程状态\",{\"1\":{\"65\":1,\"408\":1,\"593\":1,\"784\":1,\"949\":1,\"1314\":1,\"1453\":1,\"1832\":1}}],[\"当前节点类型\",{\"1\":{\"269\":1,\"510\":1,\"695\":1,\"919\":1,\"1248\":1,\"1424\":1,\"1695\":1,\"2103\":1}}],[\"当前节点处理人\",{\"1\":{\"240\":4,\"482\":8,\"668\":8,\"887\":8,\"1217\":4,\"1396\":8,\"1666\":4,\"2074\":4}}],[\"当前节点code\",{\"1\":{\"178\":1,\"180\":1,\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":2,\"1283\":1,\"1608\":1,\"1610\":1,\"1611\":1,\"2016\":1,\"2018\":1,\"2019\":1}}],[\"当前节点分派监听器\",{\"1\":{\"18\":1}}],[\"当前办理不可办理\",{\"1\":{\"170\":1,\"171\":1,\"371\":1,\"372\":1,\"556\":1,\"557\":1,\"744\":1,\"745\":1,\"1142\":1,\"1143\":1,\"1277\":1,\"1278\":1,\"1600\":1,\"1601\":1,\"2008\":1,\"2009\":1}}],[\"当前办理人唯一标识\",{\"1\":{\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1}}],[\"当前办理人\",{\"1\":{\"40\":1,\"41\":1,\"868\":1,\"869\":1,\"1091\":1,\"1092\":1,\"1507\":1,\"1508\":1,\"1807\":1,\"1808\":1}}],[\"开发中计划\",{\"0\":{\"298\":1,\"994\":1,\"1722\":1,\"1924\":1}}],[\"开发完成请务必登记使用项目列表\",{\"1\":{\"119\":1,\"1549\":1,\"1886\":1}}],[\"开始时间记录代表任务的创建时间\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"开始时间\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"开始学习前\",{\"1\":{\"248\":1,\"895\":1,\"1224\":1,\"1674\":1,\"2082\":1}}],[\"开始节点也能记录到历史任务记录中\",{\"1\":{\"322\":1,\"1014\":1,\"1745\":1,\"1948\":1}}],[\"开始节点出现再负坐标时\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"开始节点类型\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"开始节点名称\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"开始节点编码\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"开始节点必须有且只有一个跳转条件\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"开始节点和结束节点必须有\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"开始节点\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"开始节点的暂存\",{\"1\":{\"240\":1,\"482\":1,\"668\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",{\"1\":{\"319\":1,\"1011\":1,\"1742\":1,\"1945\":1}}],[\"开始监听器实现类例子\",{\"0\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"开始监听器\",{\"1\":{\"10\":1,\"16\":1,\"24\":1,\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"843\":1,\"848\":1,\"856\":1,\"1066\":1,\"1071\":1,\"1079\":1,\"1357\":1,\"1361\":1,\"1483\":1,\"1489\":1,\"1497\":1,\"1777\":1,\"1783\":1,\"1791\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"开源组织成员\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"开源仿钉钉工作流\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"开源集成案例\",{\"0\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"开源协议\",{\"0\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"开源工作流\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"开放生态\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"开启多个任务\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"开启流程可以不默认执行到中间节点\",{\"1\":{\"297\":1,\"995\":1,\"1721\":1,\"1923\":1}}],[\"开启流程后的状态\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"开启流程是传入租户id\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"开启流程会直接执行到开始节点后一个节点\",{\"1\":{\"127\":1,\"471\":1,\"657\":1,\"876\":1,\"1057\":1,\"1385\":1,\"1557\":1,\"1894\":1}}],[\"开启流程实例\",{\"0\":{\"127\":1,\"471\":1,\"657\":1,\"876\":1,\"1057\":1,\"1385\":1,\"1557\":1,\"1894\":1},\"1\":{\"160\":1,\"362\":1,\"547\":1,\"734\":1,\"1132\":1,\"1268\":1,\"1590\":1,\"1998\":1}}],[\"开启流程\",{\"0\":{\"66\":1,\"160\":1,\"362\":1,\"409\":1,\"498\":1,\"547\":1,\"594\":1,\"683\":1,\"734\":1,\"785\":1,\"906\":1,\"950\":1,\"1132\":1,\"1235\":1,\"1268\":1,\"1315\":1,\"1412\":1,\"1454\":1,\"1590\":1,\"1833\":1,\"1998\":1,\"2172\":1,\"2233\":1,\"2338\":1,\"2364\":1},\"1\":{\"246\":1,\"1672\":1,\"2080\":1,\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"开启后默认为0\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"460\":1,\"588\":1,\"591\":1,\"646\":1,\"779\":1,\"782\":1,\"862\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"开启后默认为2\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"460\":1,\"588\":1,\"591\":1,\"646\":1,\"779\":1,\"782\":1,\"862\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"通常是在流程设计器中预先设定好办理人\",{\"1\":{\"2148\":1,\"2207\":1,\"2268\":1,\"2294\":1}}],[\"通知\",{\"1\":{\"276\":1,\"1700\":1,\"1902\":1}}],[\"通用规则\",{\"0\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"通用多租户\",{\"0\":{\"44\":1,\"517\":1,\"702\":1,\"926\":1,\"1097\":1,\"1431\":1,\"1511\":1,\"1811\":1}}],[\"通用逻辑删除\",{\"0\":{\"30\":1,\"460\":1,\"646\":1,\"862\":1,\"1085\":1,\"1374\":1,\"1503\":1,\"1797\":1}}],[\"通过设计器获取坐标\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"通过设置id生成器类型\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"通过他的办理人变量表达式就能很好解决此问题\",{\"1\":{\"2148\":1,\"2207\":1,\"2268\":1,\"2294\":1}}],[\"通过warm\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"通过任务id流转\",{\"1\":{\"499\":1,\"684\":1,\"907\":1,\"1236\":1,\"1413\":1}}],[\"通过实例id流转\",{\"1\":{\"499\":1,\"684\":1,\"907\":1,\"1236\":1,\"1413\":1,\"2173\":1,\"2234\":1,\"2339\":1,\"2365\":1}}],[\"通过逻辑\",{\"1\":{\"481\":2,\"667\":2,\"886\":2,\"893\":2,\"1395\":2}}],[\"通过主键查找数据\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"通过上述注解获取工作流组件内各entity访问能力\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"通过后端graphics2d进行绘制\",{\"1\":{\"438\":1,\"624\":1,\"837\":1,\"1352\":1}}],[\"通过此配置兼容\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"通过此接口可以给办理人选择\",{\"1\":{\"57\":1,\"1112\":1,\"1524\":1,\"1824\":1}}],[\"通过defservice\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"通过权限标识过滤数据\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"通过$和\",{\"1\":{\"307\":1,\"336\":1,\"998\":1,\"1730\":1,\"1758\":1,\"1933\":1,\"1962\":1,\"2131\":1,\"2241\":1}}],[\"通过接口接入方式\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2130\":1,\"2131\":1}}],[\"通过检查fc\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"通过yml配置\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"通过jar包引入\",{\"1\":{\"258\":1,\"494\":1,\"908\":1,\"1237\":1,\"1408\":1,\"1684\":1,\"2092\":1,\"2174\":1,\"2235\":1,\"2340\":1,\"2366\":1}}],[\"通过或者退回到并行网关\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"通过或者退回\",{\"1\":{\"240\":1,\"887\":1,\"1217\":1,\"1396\":1,\"1666\":1,\"2074\":1}}],[\"通过还是退回\",{\"1\":{\"126\":1,\"470\":1,\"656\":1,\"875\":1,\"1056\":1,\"1384\":1,\"1556\":1,\"1893\":1}}],[\"通过这个方法进行注册expressionutil\",{\"1\":{\"60\":1,\"78\":1,\"84\":1,\"90\":1,\"826\":1,\"944\":1,\"965\":1,\"971\":1,\"1448\":1,\"1466\":1,\"1472\":1,\"1478\":1,\"1827\":1,\"1845\":1,\"1851\":1,\"1857\":1}}],[\"通过\",{\"0\":{\"415\":1,\"600\":1,\"791\":1,\"1191\":1,\"1321\":1},\"1\":{\"17\":1,\"115\":1,\"246\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1672\":1,\"1784\":1,\"1882\":1,\"2080\":1}}],[\"通过监听器\",{\"1\":{\"9\":1,\"442\":1,\"628\":1,\"841\":1,\"1064\":1,\"1356\":1,\"1482\":1,\"1776\":1}}],[\"window\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"width=\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"width\",{\"1\":{\"335\":6,\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1,\"1757\":6,\"1961\":6,\"2240\":6}}],[\"withlogicdelete\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"watch\",{\"1\":{\"333\":2,\"334\":2,\"335\":2,\"1755\":2,\"1756\":2,\"1757\":2,\"1959\":2,\"1960\":2,\"1961\":2,\"2240\":2}}],[\"warmflow工作流动态指定办理人\",{\"0\":{\"2147\":1,\"2206\":1,\"2267\":1,\"2293\":1}}],[\"warmflowcontroller\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"warmflowconfig\",{\"1\":{\"404\":1,\"407\":1,\"417\":1,\"516\":1,\"519\":1,\"589\":1,\"592\":1,\"602\":1,\"701\":1,\"704\":1,\"780\":1,\"783\":1,\"793\":1,\"925\":1,\"928\":1,\"1096\":1,\"1099\":1,\"1184\":1,\"1187\":1,\"1193\":1,\"1310\":1,\"1313\":1,\"1323\":1,\"1430\":1,\"1433\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"warmflow\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"warmflowinitiator\",{\"1\":{\"18\":2,\"342\":1,\"450\":2,\"636\":2,\"851\":2,\"1074\":2,\"1364\":2,\"1492\":2,\"1764\":1,\"1786\":2,\"1968\":1,\"2249\":1}}],[\"warm<\",{\"1\":{\"73\":2,\"796\":1,\"797\":1,\"817\":2,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"957\":2,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":2,\"1461\":2,\"1840\":2,\"2174\":1,\"2235\":1,\"2340\":1,\"2366\":1}}],[\"warm\",{\"0\":{\"2129\":1,\"2178\":1,\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2370\":1},\"1\":{\"0\":3,\"7\":2,\"24\":1,\"25\":1,\"29\":1,\"30\":2,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"75\":4,\"77\":1,\"81\":2,\"83\":1,\"86\":1,\"87\":1,\"89\":1,\"92\":1,\"93\":1,\"113\":1,\"115\":1,\"116\":3,\"119\":2,\"131\":1,\"133\":1,\"225\":2,\"226\":1,\"228\":2,\"229\":1,\"233\":1,\"234\":1,\"235\":5,\"248\":1,\"254\":2,\"255\":1,\"256\":1,\"257\":1,\"277\":1,\"279\":10,\"282\":2,\"283\":2,\"286\":3,\"289\":1,\"291\":2,\"336\":3,\"337\":1,\"338\":6,\"403\":2,\"404\":1,\"406\":6,\"416\":2,\"420\":1,\"421\":1,\"422\":1,\"423\":1,\"424\":1,\"425\":1,\"426\":1,\"428\":5,\"432\":1,\"433\":1,\"441\":2,\"455\":1,\"460\":2,\"463\":10,\"484\":1,\"489\":3,\"495\":1,\"518\":3,\"520\":1,\"531\":2,\"588\":2,\"589\":1,\"591\":6,\"601\":2,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":1,\"610\":2,\"611\":4,\"612\":3,\"614\":5,\"618\":1,\"619\":1,\"627\":2,\"641\":1,\"646\":2,\"649\":10,\"670\":1,\"675\":3,\"680\":1,\"703\":3,\"705\":1,\"716\":2,\"779\":2,\"780\":1,\"782\":6,\"792\":2,\"798\":1,\"799\":2,\"800\":2,\"801\":2,\"802\":1,\"803\":1,\"804\":1,\"806\":5,\"810\":1,\"811\":1,\"812\":5,\"819\":4,\"825\":1,\"828\":1,\"829\":1,\"831\":1,\"832\":1,\"834\":1,\"835\":1,\"836\":1,\"840\":2,\"856\":1,\"857\":1,\"862\":2,\"865\":10,\"895\":1,\"900\":3,\"903\":1,\"927\":3,\"929\":1,\"943\":1,\"946\":1,\"947\":1,\"948\":1,\"959\":4,\"962\":2,\"964\":1,\"967\":1,\"968\":1,\"970\":1,\"973\":1,\"974\":1,\"977\":1,\"978\":1,\"979\":2,\"982\":3,\"985\":1,\"987\":2,\"1042\":1,\"1044\":2,\"1045\":5,\"1061\":1,\"1063\":1,\"1079\":1,\"1080\":1,\"1082\":1,\"1085\":2,\"1088\":10,\"1098\":3,\"1100\":1,\"1183\":2,\"1184\":1,\"1186\":6,\"1192\":2,\"1198\":1,\"1199\":2,\"1200\":2,\"1201\":2,\"1202\":1,\"1203\":1,\"1204\":1,\"1206\":5,\"1210\":1,\"1211\":1,\"1212\":5,\"1224\":1,\"1229\":3,\"1232\":1,\"1309\":2,\"1310\":1,\"1312\":6,\"1322\":2,\"1326\":1,\"1327\":2,\"1328\":2,\"1329\":2,\"1330\":1,\"1331\":1,\"1332\":1,\"1334\":5,\"1338\":1,\"1339\":1,\"1340\":5,\"1347\":4,\"1355\":2,\"1369\":1,\"1374\":2,\"1377\":10,\"1398\":1,\"1403\":3,\"1409\":1,\"1432\":3,\"1434\":1,\"1445\":2,\"1447\":1,\"1450\":1,\"1451\":1,\"1452\":1,\"1463\":4,\"1465\":1,\"1469\":2,\"1471\":1,\"1474\":1,\"1475\":1,\"1477\":1,\"1480\":1,\"1481\":1,\"1497\":1,\"1498\":1,\"1502\":1,\"1503\":2,\"1544\":1,\"1546\":5,\"1549\":2,\"1561\":1,\"1563\":1,\"1654\":2,\"1655\":1,\"1659\":1,\"1660\":1,\"1661\":5,\"1674\":1,\"1680\":2,\"1681\":1,\"1682\":1,\"1683\":1,\"1701\":1,\"1702\":10,\"1705\":1,\"1706\":1,\"1707\":2,\"1710\":3,\"1713\":1,\"1715\":2,\"1758\":3,\"1759\":1,\"1760\":6,\"1774\":2,\"1791\":1,\"1792\":1,\"1796\":1,\"1797\":2,\"1826\":1,\"1829\":1,\"1830\":1,\"1831\":1,\"1842\":4,\"1844\":1,\"1848\":2,\"1850\":1,\"1853\":1,\"1854\":1,\"1856\":1,\"1859\":1,\"1860\":1,\"1880\":1,\"1882\":1,\"1883\":3,\"1886\":2,\"1898\":1,\"1900\":1,\"1903\":1,\"1904\":10,\"1907\":1,\"1908\":2,\"1909\":2,\"1912\":3,\"1915\":1,\"1917\":2,\"1962\":3,\"1963\":1,\"1964\":6,\"2062\":2,\"2063\":1,\"2067\":1,\"2068\":1,\"2069\":5,\"2082\":1,\"2088\":2,\"2089\":1,\"2090\":1,\"2091\":1,\"2109\":2,\"2110\":1,\"2114\":1,\"2115\":1,\"2117\":1,\"2120\":4,\"2121\":3,\"2125\":1,\"2126\":1,\"2128\":1,\"2132\":1,\"2134\":1,\"2137\":2,\"2138\":1,\"2142\":1,\"2143\":1,\"2145\":1,\"2154\":2,\"2155\":1,\"2159\":1,\"2163\":1,\"2165\":1,\"2168\":1,\"2175\":1,\"2177\":1,\"2181\":1,\"2183\":1,\"2186\":3,\"2188\":1,\"2191\":1,\"2193\":2,\"2199\":1,\"2202\":1,\"2203\":2,\"2204\":2,\"2213\":1,\"2216\":1,\"2217\":2,\"2218\":2,\"2221\":2,\"2222\":1,\"2226\":1,\"2229\":1,\"2236\":1,\"2238\":1,\"2241\":3,\"2242\":1,\"2243\":6,\"2244\":1,\"2248\":1,\"2249\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2255\":3,\"2257\":1,\"2260\":1,\"2262\":2,\"2273\":3,\"2275\":1,\"2278\":1,\"2280\":2,\"2286\":1,\"2289\":1,\"2290\":2,\"2291\":2,\"2299\":3,\"2301\":1,\"2304\":1,\"2306\":2,\"2312\":1,\"2315\":1,\"2316\":2,\"2317\":2,\"2320\":2,\"2321\":1,\"2325\":1,\"2329\":1,\"2331\":1,\"2334\":1,\"2341\":1,\"2343\":1,\"2346\":2,\"2347\":1,\"2351\":1,\"2355\":1,\"2357\":1,\"2360\":1,\"2367\":1,\"2369\":1,\"2373\":1,\"2375\":1}}],[\"write\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"writer\",{\"1\":{\"333\":4,\"1755\":4,\"1959\":4}}],[\"writestring\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"writevalueasstring\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"whites\",{\"1\":{\"228\":6}}],[\"ww💪\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"www\",{\"1\":{\"94\":1,\"114\":1,\"121\":1,\"1023\":1,\"1043\":1,\"1051\":1,\"1525\":1,\"1545\":1,\"1551\":1,\"1861\":1,\"1881\":1,\"1888\":1,\"2116\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2176\":1,\"2182\":1,\"2237\":1,\"2330\":1,\"2342\":1,\"2356\":1,\"2368\":1,\"2374\":1}}],[\"webmvcconfigurer\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"web\",{\"1\":{\"131\":1,\"288\":1,\"984\":1,\"1061\":1,\"1561\":1,\"1712\":1,\"1898\":1,\"1914\":1}}],[\"web<\",{\"1\":{\"73\":1,\"419\":1,\"604\":1,\"796\":1,\"797\":1,\"817\":1,\"957\":1,\"1196\":1,\"1197\":1,\"1325\":1,\"1345\":1,\"1461\":1,\"1840\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2174\":1,\"2220\":1,\"2235\":1,\"2319\":1,\"2340\":1,\"2345\":1,\"2366\":1}}],[\"height=\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"height\",{\"1\":{\"425\":4,\"426\":1,\"611\":4,\"612\":1,\"803\":4,\"804\":1,\"1203\":4,\"1204\":1,\"1331\":4,\"1332\":1}}],[\"headers\",{\"1\":{\"333\":4,\"1755\":4,\"1959\":4}}],[\"header\",{\"1\":{\"75\":4,\"819\":4,\"959\":4,\"1347\":4,\"1463\":4,\"1842\":4}}],[\"hbm2ddl\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"hikaridatasource\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"hibernate\",{\"1\":{\"406\":3,\"591\":3,\"782\":3,\"1186\":3,\"1312\":3}}],[\"histodefjson接口\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"histaskservice历史记录\",{\"0\":{\"182\":1,\"1612\":1,\"2020\":1}}],[\"hisstatus\",{\"1\":{\"65\":1,\"66\":1,\"67\":2,\"408\":1,\"409\":1,\"410\":2,\"593\":1,\"594\":1,\"595\":2,\"784\":1,\"785\":1,\"786\":2,\"949\":1,\"950\":1,\"951\":2,\"1314\":1,\"1315\":1,\"1316\":2,\"1453\":1,\"1454\":1,\"1455\":2,\"1832\":1,\"1833\":1,\"1834\":2}}],[\"his\",{\"1\":{\"29\":1,\"263\":1,\"504\":1,\"515\":1,\"689\":1,\"700\":1,\"913\":1,\"924\":1,\"1082\":1,\"1095\":1,\"1242\":1,\"1418\":1,\"1429\":1,\"1502\":1,\"1689\":1,\"1796\":1,\"2097\":1}}],[\"huangjian\",{\"1\":{\"307\":2,\"998\":2,\"1730\":2,\"1933\":2,\"2131\":2}}],[\"hutool\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"hh\",{\"0\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1},\"1\":{\"114\":1,\"121\":1,\"127\":1,\"131\":1,\"234\":3,\"433\":3,\"471\":1,\"496\":2,\"619\":3,\"657\":1,\"681\":2,\"811\":3,\"876\":1,\"904\":2,\"1057\":1,\"1061\":1,\"1211\":3,\"1233\":2,\"1339\":3,\"1385\":1,\"1410\":2,\"1545\":1,\"1551\":1,\"1557\":1,\"1561\":1,\"1660\":3,\"1881\":1,\"1888\":1,\"1894\":1,\"1898\":1,\"2068\":3,\"2170\":2,\"2231\":2,\"2336\":2,\"2362\":2}}],[\"hhzai\",{\"1\":{\"114\":1,\"121\":1,\"1043\":1,\"1051\":1,\"1545\":1,\"1551\":1,\"1881\":1,\"1888\":1,\"2116\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2176\":1,\"2182\":1,\"2237\":1,\"2330\":1,\"2342\":1,\"2356\":1,\"2368\":1,\"2374\":1}}],[\"houhou\",{\"1\":{\"278\":1,\"279\":1,\"282\":1,\"283\":1,\"977\":1,\"979\":1,\"1702\":1,\"1705\":1,\"1707\":1,\"1904\":1,\"1907\":1,\"1908\":1,\"1909\":1,\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"holly\",{\"1\":{\"94\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":3,\"1013\":1,\"1014\":1,\"1015\":1,\"1016\":3,\"1023\":1,\"1525\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":3,\"1861\":1,\"1947\":1,\"1948\":1,\"1949\":1,\"1950\":3}}],[\"host\",{\"1\":{\"75\":3,\"819\":3,\"959\":3,\"1347\":3,\"1463\":3,\"1842\":3}}],[\"h5ve团队\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"htm\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"html\",{\"1\":{\"75\":7,\"226\":1,\"229\":1,\"291\":3,\"338\":1,\"425\":1,\"426\":1,\"428\":3,\"803\":1,\"804\":1,\"806\":3,\"819\":7,\"959\":7,\"987\":3,\"1203\":1,\"1204\":1,\"1206\":3,\"1331\":1,\"1332\":1,\"1334\":3,\"1347\":7,\"1463\":7,\"1715\":3,\"1760\":1,\"1842\":7,\"1917\":3,\"1964\":1,\"2063\":1,\"2240\":2,\"2243\":1}}],[\"httpheaders\",{\"1\":{\"333\":3,\"1755\":3,\"1959\":3}}],[\"httpsecurity\",{\"1\":{\"421\":3,\"606\":3,\"799\":3,\"1199\":3,\"1327\":3,\"2109\":3,\"2120\":3,\"2137\":3,\"2154\":3,\"2221\":3,\"2320\":3,\"2346\":3}}],[\"httpservletresponse\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"https\",{\"1\":{\"94\":1,\"114\":1,\"119\":1,\"121\":1,\"254\":1,\"255\":1,\"256\":1,\"277\":1,\"283\":1,\"291\":3,\"987\":3,\"1023\":1,\"1044\":1,\"1525\":1,\"1545\":1,\"1549\":1,\"1551\":1,\"1680\":1,\"1681\":1,\"1682\":1,\"1701\":1,\"1715\":3,\"1861\":1,\"1881\":1,\"1886\":1,\"1888\":1,\"1903\":1,\"1917\":3,\"2088\":1,\"2089\":1,\"2090\":1,\"2117\":1,\"2128\":1,\"2134\":1,\"2145\":1,\"2165\":1,\"2168\":1,\"2177\":1,\"2183\":1,\"2199\":1,\"2213\":1,\"2229\":1,\"2238\":1,\"2286\":1,\"2312\":1,\"2331\":1,\"2334\":1,\"2343\":1,\"2357\":1,\"2360\":1,\"2369\":1,\"2375\":1}}],[\"http\",{\"1\":{\"75\":2,\"114\":1,\"121\":1,\"610\":1,\"819\":2,\"959\":2,\"1043\":1,\"1051\":1,\"1347\":2,\"1463\":2,\"1545\":1,\"1551\":1,\"1842\":2,\"1881\":1,\"1888\":1,\"2116\":1,\"2121\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2176\":1,\"2182\":1,\"2237\":1,\"2330\":1,\"2342\":1,\"2356\":1,\"2368\":1,\"2374\":1}}],[\"handle\",{\"1\":{\"403\":2,\"406\":2,\"416\":1,\"423\":1,\"518\":1,\"588\":2,\"591\":2,\"601\":1,\"608\":1,\"703\":1,\"779\":2,\"782\":2,\"792\":1,\"801\":1,\"927\":1,\"1098\":1,\"1183\":2,\"1186\":2,\"1192\":1,\"1201\":1,\"1309\":2,\"1312\":2,\"1322\":1,\"1329\":1,\"1432\":1,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"handledepute方法中删除受托人传参数错误\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"handlerfundto<sysuser>\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"handlerfundto<sysdept>\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"handlerfundto<sysrole>\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"handlerfundto<>\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"handlerfundto\",{\"1\":{\"234\":6,\"433\":6,\"619\":6,\"811\":6,\"1211\":6,\"1339\":6,\"1660\":6,\"2068\":6}}],[\"handlerselectvo\",{\"1\":{\"234\":8,\"433\":8,\"619\":8,\"811\":8,\"1211\":8,\"1339\":8,\"1660\":8,\"2068\":8}}],[\"handlerselectserviceimpl\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"handlerselectserviceimpl实现类\",{\"0\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"handlerselectservice\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"handlerselectservice接口\",{\"0\":{\"233\":1,\"432\":1,\"618\":1,\"810\":1,\"1210\":1,\"1338\":1,\"1659\":1,\"2067\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"handlerquery\",{\"1\":{\"233\":1,\"234\":4,\"432\":1,\"433\":4,\"618\":1,\"619\":4,\"810\":1,\"811\":4,\"1210\":1,\"1211\":4,\"1338\":1,\"1339\":4,\"1659\":1,\"1660\":4,\"2067\":1,\"2068\":4,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"handler\",{\"1\":{\"66\":1,\"113\":1,\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"268\":2,\"272\":1,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"403\":2,\"406\":2,\"409\":1,\"416\":1,\"509\":2,\"518\":1,\"521\":1,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"588\":2,\"591\":2,\"594\":1,\"601\":1,\"694\":2,\"703\":1,\"706\":1,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"779\":2,\"782\":2,\"785\":1,\"792\":1,\"918\":2,\"927\":1,\"930\":1,\"950\":1,\"1042\":1,\"1098\":1,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1183\":2,\"1186\":2,\"1192\":1,\"1216\":4,\"1247\":2,\"1251\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1309\":2,\"1312\":2,\"1315\":1,\"1322\":1,\"1423\":2,\"1432\":1,\"1435\":1,\"1454\":1,\"1544\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1694\":2,\"1698\":1,\"1833\":1,\"1880\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2102\":2,\"2106\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2193\":2,\"2236\":1,\"2262\":2,\"2280\":2,\"2306\":2,\"2341\":1,\"2367\":1}}],[\"handler5\",{\"1\":{\"46\":2,\"932\":2,\"1102\":2,\"1513\":2,\"1813\":2}}],[\"handler4\",{\"1\":{\"46\":2,\"932\":2,\"1102\":2,\"1513\":2,\"1813\":2}}],[\"handler3\",{\"1\":{\"46\":2,\"932\":2,\"1102\":2,\"1513\":2,\"1813\":2}}],[\"handler2是方法入参变量\",{\"1\":{\"55\":1,\"529\":1,\"714\":1,\"940\":1,\"1110\":1,\"1443\":1,\"1522\":1,\"1822\":1}}],[\"handler2\",{\"1\":{\"46\":2,\"47\":1,\"55\":1,\"56\":4,\"523\":1,\"529\":2,\"530\":4,\"708\":1,\"714\":2,\"715\":4,\"932\":2,\"933\":1,\"940\":1,\"941\":4,\"1102\":2,\"1103\":1,\"1110\":1,\"1111\":4,\"1437\":1,\"1443\":2,\"1444\":4,\"1513\":2,\"1514\":1,\"1522\":1,\"1523\":4,\"1813\":2,\"1814\":1,\"1822\":1,\"1823\":4}}],[\"handler1是需要被流程变量中替换的标识\",{\"1\":{\"52\":1,\"526\":1,\"711\":1,\"937\":1,\"1107\":1,\"1440\":1,\"1519\":1,\"1819\":1}}],[\"handler1\",{\"1\":{\"46\":2,\"47\":1,\"49\":1,\"52\":1,\"53\":1,\"523\":1,\"524\":1,\"526\":2,\"527\":1,\"708\":1,\"709\":1,\"711\":2,\"712\":1,\"932\":2,\"933\":1,\"935\":1,\"937\":1,\"938\":1,\"1102\":2,\"1103\":1,\"1105\":1,\"1107\":1,\"1108\":1,\"1437\":1,\"1438\":1,\"1440\":2,\"1441\":1,\"1513\":2,\"1514\":1,\"1516\":1,\"1519\":1,\"1520\":1,\"1813\":2,\"1814\":1,\"1816\":1,\"1819\":1,\"1820\":1,\"2149\":3,\"2150\":1,\"2208\":3,\"2209\":1,\"2269\":3,\"2270\":1,\"2295\":3,\"2296\":1}}],[\"hashmap<>\",{\"1\":{\"46\":1,\"53\":1,\"56\":1,\"62\":1,\"81\":1,\"217\":1,\"272\":1,\"436\":1,\"441\":1,\"521\":1,\"527\":1,\"530\":1,\"622\":1,\"627\":1,\"706\":1,\"712\":1,\"715\":1,\"776\":1,\"822\":1,\"834\":1,\"840\":1,\"930\":1,\"932\":1,\"938\":1,\"941\":1,\"946\":1,\"962\":1,\"1102\":1,\"1108\":1,\"1111\":1,\"1180\":1,\"1251\":1,\"1350\":1,\"1355\":1,\"1435\":1,\"1441\":1,\"1444\":1,\"1450\":1,\"1469\":1,\"1513\":1,\"1520\":1,\"1523\":1,\"1647\":1,\"1698\":1,\"1813\":1,\"1820\":1,\"1823\":1,\"1829\":1,\"1848\":1,\"2055\":1,\"2106\":1,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"hashmap\",{\"1\":{\"25\":3,\"455\":3,\"641\":3,\"857\":3,\"1080\":3,\"1369\":3,\"1498\":3,\"1792\":3}}],[\"配置介绍\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"配置管理\",{\"0\":{\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"配置办理人变量表达式$\",{\"1\":{\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"配置数据源对应的\",{\"1\":{\"459\":1,\"645\":1,\"861\":1,\"1084\":1,\"1373\":1}}],[\"配置配置\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"配置了其他id策略不生效的问题\",{\"1\":{\"310\":1,\"1002\":1,\"1733\":1,\"1936\":1}}],[\"配置\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"配置网关路由\",{\"1\":{\"228\":1}}],[\"配置跳转名称\",{\"1\":{\"126\":1,\"470\":1,\"656\":1,\"875\":1,\"1056\":1,\"1384\":1,\"1556\":1,\"1893\":1}}],[\"配置节点名称\",{\"1\":{\"125\":1,\"469\":1,\"655\":1,\"874\":1,\"1055\":1,\"1383\":1,\"1555\":1,\"1892\":1}}],[\"配置实现类的全限定名\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"配置默认逻辑删除值\",{\"0\":{\"28\":1,\"1501\":1,\"1795\":1}}],[\"配置文件目前支持banner图和填充器配置\",{\"1\":{\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"配置文件可以让工作流使用更加方便\",{\"1\":{\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"配置文件\",{\"0\":{\"7\":1,\"218\":1,\"401\":1,\"586\":1,\"777\":1,\"1181\":1,\"1307\":1,\"1648\":1,\"1774\":1,\"2056\":1}}],[\"逻辑\",{\"1\":{\"481\":2,\"667\":2,\"886\":2,\"893\":2,\"1395\":2}}],[\"逻辑未删除值\",{\"1\":{\"458\":1,\"459\":1,\"644\":1,\"645\":1,\"860\":1,\"861\":1,\"1083\":1,\"1084\":1,\"1372\":1,\"1373\":1}}],[\"逻辑未删除字段\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"460\":1,\"588\":1,\"591\":1,\"646\":1,\"779\":1,\"782\":1,\"862\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"逻辑已删除值\",{\"1\":{\"27\":1,\"457\":1,\"458\":1,\"459\":1,\"643\":1,\"644\":1,\"645\":1,\"859\":1,\"860\":1,\"861\":1,\"1082\":1,\"1083\":1,\"1084\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1500\":1,\"1794\":1}}],[\"逻辑删除字段值\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"460\":1,\"588\":1,\"591\":1,\"646\":1,\"779\":1,\"782\":1,\"862\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"逻辑删除\",{\"0\":{\"26\":1,\"456\":1,\"642\":1,\"858\":1,\"1081\":1,\"1370\":1,\"1499\":1,\"1793\":1}}],[\"拿到json后使用序列化可以拿到配置信息\",{\"1\":{\"25\":1,\"455\":1,\"641\":1,\"857\":1,\"1080\":1,\"1369\":1,\"1498\":1,\"1792\":1}}],[\"页面配置监听器时加上类路径\",{\"1\":{\"25\":1,\"455\":1,\"641\":1,\"857\":1,\"1080\":1,\"1369\":1,\"1498\":1,\"1792\":1}}],[\"页面配置全局或节点监听器\",{\"0\":{\"21\":1,\"452\":1,\"638\":1,\"853\":1,\"1076\":1,\"1366\":1,\"1494\":1,\"1788\":1}}],[\"778470567\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"7取回\",{\"1\":{\"1422\":1}}],[\"7版本升级脚本\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"7版本warm\",{\"1\":{\"332\":1,\"1958\":1}}],[\"7减签\",{\"1\":{\"174\":1,\"266\":1,\"375\":1,\"507\":1,\"560\":1,\"692\":1,\"748\":1,\"916\":1,\"1146\":1,\"1245\":1,\"1281\":1,\"1421\":1,\"1604\":1,\"1692\":1,\"2012\":1,\"2100\":1}}],[\"79\",{\"1\":{\"115\":1,\"1882\":1}}],[\"7\",{\"0\":{\"25\":1,\"54\":1,\"271\":1,\"292\":1,\"301\":1,\"304\":1,\"312\":1,\"319\":1,\"332\":1,\"334\":1,\"355\":1,\"375\":1,\"385\":1,\"495\":1,\"496\":1,\"497\":1,\"498\":1,\"499\":1,\"540\":1,\"560\":1,\"570\":1,\"681\":1,\"725\":1,\"740\":1,\"748\":1,\"758\":1,\"857\":1,\"988\":1,\"1004\":1,\"1011\":1,\"1048\":1,\"1080\":1,\"1112\":1,\"1121\":1,\"1138\":1,\"1146\":1,\"1156\":1,\"1250\":1,\"1261\":1,\"1281\":1,\"1291\":1,\"1409\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1498\":1,\"1521\":1,\"1697\":1,\"1716\":1,\"1723\":1,\"1727\":1,\"1735\":1,\"1742\":1,\"1756\":1,\"1792\":1,\"1821\":1,\"1918\":1,\"1927\":1,\"1930\":1,\"1938\":1,\"1945\":1,\"1958\":1,\"1960\":1,\"2105\":1,\"2117\":1,\"2128\":1,\"2134\":1,\"2145\":1,\"2247\":1,\"2405\":1},\"1\":{\"115\":1,\"216\":1,\"240\":2,\"262\":1,\"263\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"332\":1,\"435\":1,\"482\":1,\"503\":1,\"504\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"621\":1,\"668\":1,\"688\":1,\"689\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"775\":1,\"821\":1,\"887\":1,\"912\":1,\"913\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1179\":1,\"1217\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1349\":1,\"1396\":1,\"1417\":1,\"1418\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1646\":1,\"1666\":2,\"1688\":1,\"1689\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1882\":1,\"1958\":1,\"2054\":1,\"2074\":2,\"2096\":1,\"2097\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"goals>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"goal>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"gaussdb\",{\"1\":{\"492\":1,\"678\":1,\"1046\":1,\"1406\":1}}],[\"gateway\",{\"1\":{\"228\":1}}],[\"gatewayfilterchain\",{\"1\":{\"228\":1}}],[\"gson\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"guide\",{\"0\":{\"2384\":1,\"2386\":1,\"2388\":1,\"2396\":1,\"2421\":1},\"1\":{\"291\":3,\"987\":3,\"1715\":3,\"1917\":3}}],[\"globalconfig\",{\"1\":{\"459\":2,\"516\":3,\"645\":2,\"701\":3,\"861\":2,\"925\":3,\"1084\":2,\"1096\":3,\"1373\":2,\"1430\":3}}],[\"global\",{\"1\":{\"458\":1,\"644\":1,\"860\":1,\"1083\":1,\"1372\":1}}],[\"globalfilter\",{\"1\":{\"228\":1}}],[\"globallistener\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"ge|flag|4\",{\"1\":{\"1179\":1}}],[\"gen\",{\"1\":{\"286\":3,\"982\":3,\"1710\":3,\"1912\":3}}],[\"ge\",{\"1\":{\"216\":1,\"335\":2,\"775\":2,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"getfieldlist\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"getflowtype\",{\"1\":{\"66\":1,\"217\":1,\"272\":1,\"409\":1,\"436\":1,\"521\":1,\"594\":1,\"622\":1,\"706\":1,\"776\":1,\"785\":1,\"822\":1,\"930\":1,\"950\":1,\"1180\":1,\"1251\":1,\"1315\":1,\"1350\":1,\"1435\":1,\"1454\":1,\"1647\":1,\"1698\":1,\"1833\":1,\"2055\":1,\"2106\":1}}],[\"getflowstatus\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"getflowchartlist\",{\"1\":{\"4\":1,\"1771\":1}}],[\"getflowparams\",{\"1\":{\"3\":1,\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1770\":1,\"1784\":1}}],[\"getoutputstream\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"getone\",{\"1\":{\"192\":1,\"384\":1,\"569\":1,\"757\":1,\"1155\":1,\"1290\":1,\"1622\":1,\"2030\":1}}],[\"get赋值\",{\"1\":{\"309\":1,\"1000\":1,\"1732\":1,\"1935\":1}}],[\"getresultlist\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"getrequest\",{\"1\":{\"228\":1}}],[\"getrolename\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"getrolekey\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"getrole\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"getroleid\",{\"1\":{\"17\":1,\"41\":1,\"234\":1,\"433\":1,\"448\":1,\"619\":1,\"634\":1,\"811\":1,\"849\":1,\"869\":1,\"1072\":1,\"1092\":1,\"1211\":1,\"1339\":1,\"1362\":1,\"1490\":1,\"1508\":1,\"1660\":1,\"1784\":1,\"1808\":1,\"2068\":1}}],[\"getroles\",{\"1\":{\"17\":1,\"41\":1,\"448\":1,\"634\":1,\"849\":1,\"869\":1,\"1072\":1,\"1092\":1,\"1362\":1,\"1490\":1,\"1508\":1,\"1784\":1,\"1808\":1}}],[\"getwhites\",{\"1\":{\"228\":2}}],[\"geturi\",{\"1\":{\"228\":1}}],[\"getupdatetime\",{\"1\":{\"220\":1,\"413\":1,\"598\":1,\"789\":1,\"1189\":1,\"1319\":1,\"1650\":1,\"2058\":1}}],[\"getusername\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"getuserid\",{\"1\":{\"17\":2,\"41\":4,\"66\":1,\"234\":1,\"272\":1,\"409\":1,\"433\":1,\"448\":2,\"521\":1,\"594\":1,\"619\":1,\"634\":2,\"706\":1,\"785\":1,\"811\":1,\"849\":2,\"869\":4,\"930\":1,\"950\":1,\"1072\":2,\"1092\":4,\"1211\":1,\"1251\":1,\"1315\":1,\"1339\":1,\"1362\":2,\"1435\":1,\"1454\":1,\"1490\":2,\"1508\":4,\"1660\":1,\"1698\":1,\"1784\":2,\"1808\":4,\"1833\":1,\"2068\":1,\"2106\":1}}],[\"getuser\",{\"1\":{\"17\":4,\"41\":2,\"66\":1,\"234\":2,\"272\":1,\"409\":1,\"433\":2,\"448\":4,\"498\":1,\"499\":3,\"521\":1,\"594\":1,\"619\":2,\"634\":4,\"683\":1,\"684\":3,\"706\":1,\"785\":1,\"811\":2,\"849\":4,\"869\":2,\"906\":1,\"907\":3,\"930\":1,\"950\":1,\"1072\":4,\"1092\":2,\"1211\":2,\"1235\":1,\"1236\":3,\"1251\":1,\"1315\":1,\"1339\":2,\"1362\":4,\"1412\":1,\"1413\":3,\"1435\":1,\"1454\":1,\"1490\":4,\"1508\":2,\"1660\":2,\"1698\":1,\"1784\":4,\"1808\":2,\"1833\":1,\"2068\":2,\"2106\":1,\"2172\":1,\"2173\":2,\"2190\":4,\"2233\":1,\"2234\":2,\"2259\":4,\"2277\":4,\"2303\":4,\"2338\":1,\"2339\":2,\"2364\":1,\"2365\":2}}],[\"getday\",{\"1\":{\"217\":1,\"272\":1,\"436\":1,\"521\":1,\"622\":1,\"706\":1,\"776\":1,\"822\":1,\"930\":1,\"1180\":1,\"1251\":1,\"1350\":1,\"1435\":1,\"1647\":1,\"1698\":1,\"2055\":1,\"2106\":1}}],[\"getdeptname\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"getdept\",{\"1\":{\"234\":4,\"433\":4,\"619\":4,\"811\":4,\"1211\":4,\"1339\":4,\"1660\":4,\"2068\":4}}],[\"getdeptid\",{\"1\":{\"17\":1,\"41\":2,\"234\":2,\"433\":2,\"448\":1,\"619\":2,\"634\":1,\"811\":2,\"849\":1,\"869\":2,\"1072\":1,\"1092\":2,\"1211\":2,\"1339\":2,\"1362\":1,\"1490\":1,\"1508\":2,\"1660\":2,\"1784\":1,\"1808\":2,\"2068\":2}}],[\"getdeclaredfields\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"getdefjson\",{\"1\":{\"3\":1,\"1770\":1}}],[\"getparentid\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"getpath\",{\"1\":{\"228\":1}}],[\"getpublishbyflowcode\",{\"1\":{\"176\":1,\"1606\":1,\"2014\":1}}],[\"getpermissionlist\",{\"1\":{\"18\":1,\"46\":1,\"450\":1,\"636\":1,\"851\":1,\"932\":1,\"1074\":1,\"1102\":1,\"1364\":1,\"1492\":1,\"1513\":1,\"1786\":1,\"1813\":1}}],[\"getpermissionflag\",{\"1\":{\"17\":1,\"40\":1,\"334\":2,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1091\":1,\"1362\":1,\"1490\":1,\"1507\":1,\"1756\":2,\"1784\":1,\"1807\":1,\"1960\":2}}],[\"getalldatadefinition\",{\"1\":{\"143\":1,\"1129\":1,\"1130\":1,\"1573\":1,\"1981\":1}}],[\"getadditionalhandler\",{\"1\":{\"19\":2,\"449\":2,\"635\":2,\"850\":2,\"1073\":2,\"1363\":2,\"1491\":2,\"1785\":2}}],[\"getexpressionmap\",{\"1\":{\"62\":1,\"834\":1,\"946\":1,\"1450\":1,\"1829\":1}}],[\"getextmap\",{\"1\":{\"3\":2,\"4\":1,\"1770\":2,\"1771\":1}}],[\"gettaskid\",{\"1\":{\"1216\":4}}],[\"gettableinfo\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"gettablename\",{\"1\":{\"29\":1,\"515\":1,\"700\":1,\"924\":1,\"1082\":1,\"1095\":1,\"1429\":1,\"1502\":1,\"1796\":1}}],[\"gettenantidcolumn\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"gettenantid\",{\"1\":{\"404\":1,\"515\":1,\"516\":1,\"520\":1,\"589\":1,\"700\":1,\"701\":1,\"705\":1,\"780\":1,\"924\":1,\"925\":1,\"929\":1,\"1095\":1,\"1096\":1,\"1100\":1,\"1184\":1,\"1310\":1,\"1429\":1,\"1430\":1,\"1434\":1}}],[\"gettotal\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"gettypevalue\",{\"1\":{\"280\":1,\"975\":1,\"1703\":1,\"1905\":1}}],[\"gettype\",{\"1\":{\"59\":2,\"62\":1,\"64\":1,\"77\":2,\"83\":2,\"87\":1,\"89\":2,\"93\":1,\"531\":2,\"716\":2,\"825\":2,\"829\":1,\"832\":1,\"834\":1,\"836\":1,\"943\":2,\"946\":1,\"948\":1,\"964\":2,\"968\":1,\"970\":2,\"974\":1,\"1445\":2,\"1447\":2,\"1450\":1,\"1452\":1,\"1465\":2,\"1471\":2,\"1475\":1,\"1477\":2,\"1481\":1,\"1826\":2,\"1829\":1,\"1831\":1,\"1844\":2,\"1850\":2,\"1854\":1,\"1856\":2,\"1860\":1}}],[\"getbytes\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"getbyids\",{\"1\":{\"188\":1,\"380\":1,\"565\":1,\"753\":1,\"1151\":1,\"1286\":1,\"1618\":1,\"2026\":1}}],[\"getbyid\",{\"1\":{\"187\":1,\"189\":1,\"379\":1,\"381\":1,\"564\":1,\"566\":1,\"752\":1,\"754\":1,\"1150\":1,\"1152\":1,\"1285\":1,\"1287\":1,\"1617\":1,\"1619\":1,\"2025\":1,\"2027\":1}}],[\"getbyinsandnodecodes\",{\"1\":{\"184\":1,\"1614\":1,\"2022\":1}}],[\"getbean\",{\"1\":{\"38\":1,\"462\":1,\"464\":1,\"648\":1,\"650\":1,\"864\":1,\"866\":1,\"1087\":1,\"1089\":1,\"1376\":1,\"1378\":1,\"1505\":1,\"1805\":1}}],[\"getbusinessid\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"getcolumn\",{\"1\":{\"515\":5,\"516\":3,\"700\":5,\"701\":3,\"924\":5,\"925\":3,\"1095\":5,\"1096\":3,\"1429\":5,\"1430\":3}}],[\"getcurrentinstance\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"getcreatetime\",{\"1\":{\"220\":3,\"234\":3,\"413\":3,\"433\":3,\"598\":3,\"619\":3,\"789\":3,\"811\":3,\"1189\":3,\"1211\":3,\"1319\":3,\"1339\":3,\"1650\":3,\"1660\":3,\"2058\":3,\"2068\":3}}],[\"getcreateby\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"getclass\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"getinputstream\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"getinstanceid\",{\"1\":{\"19\":1,\"53\":1,\"56\":1,\"67\":1,\"410\":1,\"449\":1,\"527\":1,\"530\":1,\"595\":1,\"635\":1,\"712\":1,\"715\":1,\"786\":1,\"850\":1,\"938\":1,\"941\":1,\"951\":1,\"1073\":1,\"1108\":1,\"1111\":1,\"1316\":1,\"1363\":1,\"1441\":1,\"1444\":1,\"1455\":1,\"1491\":1,\"1520\":1,\"1523\":1,\"1785\":1,\"1820\":1,\"1823\":1,\"1834\":1,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"getinstance\",{\"1\":{\"3\":2,\"18\":1,\"19\":1,\"25\":1,\"272\":1,\"449\":1,\"450\":1,\"455\":1,\"521\":1,\"635\":1,\"636\":1,\"641\":1,\"706\":1,\"850\":1,\"851\":1,\"857\":1,\"930\":1,\"1073\":1,\"1074\":1,\"1080\":1,\"1251\":1,\"1363\":1,\"1364\":1,\"1369\":1,\"1435\":1,\"1491\":1,\"1492\":1,\"1498\":1,\"1698\":1,\"1770\":2,\"1785\":1,\"1786\":1,\"1792\":1,\"2106\":1}}],[\"getid\",{\"1\":{\"19\":2,\"220\":1,\"413\":1,\"449\":2,\"496\":1,\"498\":1,\"598\":1,\"635\":2,\"681\":1,\"683\":1,\"789\":1,\"850\":2,\"904\":1,\"906\":1,\"1073\":2,\"1189\":1,\"1233\":1,\"1235\":1,\"1319\":1,\"1363\":2,\"1410\":1,\"1412\":1,\"1491\":2,\"1650\":1,\"1785\":2,\"2058\":1,\"2170\":1,\"2172\":1,\"2231\":1,\"2233\":1,\"2336\":1,\"2338\":1,\"2362\":1,\"2364\":1}}],[\"getvariable\",{\"1\":{\"19\":1,\"25\":2,\"272\":1,\"449\":1,\"455\":2,\"521\":1,\"635\":1,\"641\":2,\"706\":1,\"850\":1,\"857\":2,\"930\":1,\"1073\":1,\"1080\":2,\"1251\":1,\"1363\":1,\"1369\":2,\"1435\":1,\"1491\":1,\"1498\":2,\"1698\":1,\"1785\":1,\"1792\":2,\"2106\":1}}],[\"getvalue\",{\"1\":{\"4\":1,\"1771\":1}}],[\"get\",{\"1\":{\"18\":1,\"19\":2,\"25\":1,\"63\":2,\"93\":1,\"449\":1,\"450\":1,\"455\":1,\"515\":2,\"516\":1,\"531\":1,\"635\":1,\"636\":1,\"641\":1,\"700\":2,\"701\":1,\"716\":1,\"829\":1,\"835\":2,\"850\":2,\"851\":1,\"857\":1,\"924\":2,\"925\":1,\"947\":2,\"974\":1,\"1073\":2,\"1074\":1,\"1080\":1,\"1095\":2,\"1096\":1,\"1363\":1,\"1364\":1,\"1369\":1,\"1429\":2,\"1430\":1,\"1445\":1,\"1451\":2,\"1481\":1,\"1491\":2,\"1492\":1,\"1498\":1,\"1785\":2,\"1786\":1,\"1792\":1,\"1830\":2,\"1860\":1}}],[\"getloginuser\",{\"1\":{\"17\":2,\"41\":2,\"66\":1,\"272\":1,\"409\":1,\"448\":2,\"521\":1,\"594\":1,\"634\":2,\"706\":1,\"785\":1,\"849\":2,\"869\":2,\"930\":1,\"950\":1,\"1072\":2,\"1092\":2,\"1251\":1,\"1315\":1,\"1362\":2,\"1435\":1,\"1454\":1,\"1490\":2,\"1508\":2,\"1698\":1,\"1784\":2,\"1808\":2,\"1833\":1,\"2106\":1}}],[\"getlogger\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"24\":1,\"81\":1,\"228\":1,\"272\":1,\"441\":1,\"448\":1,\"449\":1,\"450\":1,\"521\":1,\"627\":1,\"634\":1,\"635\":1,\"636\":1,\"706\":1,\"840\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":1,\"930\":1,\"962\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":1,\"1251\":1,\"1355\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1435\":1,\"1469\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":1,\"1698\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":1,\"1848\":1,\"2106\":1}}],[\"getkey\",{\"1\":{\"4\":1,\"499\":3,\"684\":3,\"907\":3,\"1236\":3,\"1413\":3,\"1771\":1,\"2173\":2,\"2190\":2,\"2234\":2,\"2259\":2,\"2277\":2,\"2303\":2,\"2339\":2,\"2365\":2}}],[\"getmapping\",{\"1\":{\"4\":1,\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1,\"1771\":1}}],[\"getnextnodelist\",{\"1\":{\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1,\"1611\":1,\"2019\":1}}],[\"getnexttasks\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"getname\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"getnowdate\",{\"1\":{\"19\":2,\"449\":2,\"635\":2,\"850\":2,\"1073\":2,\"1363\":2,\"1491\":2,\"1785\":2}}],[\"getnodeext\",{\"1\":{\"32\":1,\"1799\":1}}],[\"getnodetype\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"getnodename\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"getnodejson\",{\"1\":{\"4\":1,\"1771\":1}}],[\"getnode\",{\"1\":{\"3\":1,\"1770\":1}}],[\"getnodecode\",{\"1\":{\"3\":2,\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1770\":2,\"1785\":1}}],[\"getnodelist\",{\"1\":{\"3\":1,\"1770\":1}}],[\"getnickname\",{\"1\":{\"3\":2,\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"1770\":2,\"2068\":1}}],[\"gethandlerselectvo\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"gethandlerselect\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"gethandlertype\",{\"1\":{\"233\":1,\"234\":4,\"432\":1,\"433\":4,\"618\":1,\"619\":4,\"810\":1,\"811\":4,\"1210\":1,\"1211\":4,\"1338\":1,\"1339\":4,\"1659\":1,\"1660\":4,\"2067\":1,\"2068\":4,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"gethandler\",{\"1\":{\"3\":1,\"40\":1,\"41\":1,\"868\":1,\"869\":1,\"1091\":1,\"1092\":1,\"1507\":1,\"1508\":1,\"1770\":1,\"1807\":1,\"1808\":1}}],[\"gt|flag|4\",{\"1\":{\"1179\":1}}],[\"gt\",{\"1\":{\"216\":1,\"335\":2,\"775\":2,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"github\",{\"1\":{\"338\":1,\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"1760\":1,\"1964\":1,\"2119\":1,\"2243\":1}}],[\"github地址\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"git\",{\"1\":{\"114\":1,\"121\":1,\"254\":1,\"255\":1,\"256\":1,\"321\":1,\"322\":1,\"1013\":1,\"1014\":1,\"1545\":1,\"1551\":1,\"1680\":1,\"1681\":1,\"1682\":1,\"1744\":1,\"1745\":1,\"1881\":1,\"1888\":1,\"1947\":1,\"1948\":1,\"2088\":1,\"2089\":1,\"2090\":1,\"2199\":1,\"2213\":1,\"2286\":1,\"2312\":1}}],[\"gitee建新的仓库\",{\"0\":{\"2199\":1,\"2213\":1,\"2286\":1,\"2312\":1}}],[\"gitee变成maven私库\",{\"0\":{\"2197\":1,\"2211\":1,\"2284\":1,\"2310\":1}}],[\"gitee|github\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"gitee\",{\"1\":{\"114\":1,\"121\":1,\"254\":1,\"255\":1,\"256\":1,\"277\":1,\"1545\":1,\"1551\":1,\"1680\":1,\"1681\":1,\"1682\":1,\"1701\":1,\"1881\":1,\"1888\":1,\"1903\":1,\"2088\":1,\"2089\":1,\"2090\":1,\"2168\":1,\"2199\":1,\"2203\":1,\"2204\":2,\"2213\":1,\"2217\":1,\"2218\":2,\"2229\":1,\"2286\":1,\"2290\":1,\"2291\":2,\"2312\":1,\"2316\":1,\"2317\":2,\"2334\":1,\"2360\":1}}],[\"gitee地址\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"git提交规范\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"gitcode地址\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"groupid>\",{\"1\":{\"73\":2,\"291\":1,\"340\":1,\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":4,\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":4,\"796\":1,\"797\":1,\"817\":2,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":4,\"957\":2,\"987\":1,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":4,\"1325\":1,\"1345\":2,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":4,\"1461\":2,\"1715\":1,\"1762\":1,\"1840\":2,\"1917\":1,\"1966\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2203\":2,\"2217\":2,\"2220\":1,\"2228\":1,\"2235\":1,\"2246\":1,\"2290\":2,\"2316\":2,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"只支持mybatis和msyql\",{\"1\":{\"2195\":1,\"2264\":1,\"2282\":1,\"2308\":1}}],[\"只有所有负责人审批通过\",{\"1\":{\"482\":1,\"668\":1,\"887\":1,\"1396\":1}}],[\"只有指定节点任务才会执行\",{\"1\":{\"444\":1,\"630\":1,\"842\":1,\"1065\":1,\"1358\":1}}],[\"只有未设置办理人时可不传\",{\"1\":{\"363\":1,\"369\":1,\"548\":1,\"554\":1}}],[\"只有7张表\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"只针对mybatis\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"只提供mysql升级脚本和全量脚本\",{\"1\":{\"331\":1,\"1754\":1,\"1957\":1}}],[\"只处理长度过长的long类型\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"只会必须执行后面的所有任务路线\",{\"1\":{\"245\":1,\"480\":1,\"666\":1,\"885\":1,\"892\":1,\"1222\":1,\"1394\":1,\"1671\":1,\"2079\":1}}],[\"只会执行后面的一条任务路线\",{\"1\":{\"244\":1,\"479\":1,\"665\":1,\"884\":1,\"891\":1,\"1221\":1,\"1393\":1,\"1670\":1,\"2078\":1}}],[\"只会执行小类中任意一个\",{\"1\":{\"11\":2,\"1484\":2,\"1778\":2}}],[\"只需前面的一条路线完成即可往下执行\",{\"1\":{\"244\":1,\"479\":1,\"665\":1,\"884\":1,\"891\":1,\"1221\":1,\"1393\":1,\"1670\":1,\"2078\":1}}],[\"只需要实现globallistener接口\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"只新增流程定义表数据\",{\"0\":{\"140\":1,\"1570\":1,\"1978\":1}}],[\"6撤销\",{\"1\":{\"1422\":1}}],[\"6切换为低版本3\",{\"1\":{\"292\":1,\"988\":1,\"1716\":1,\"1918\":1}}],[\"64\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"6加签\",{\"1\":{\"174\":1,\"266\":1,\"375\":1,\"507\":1,\"560\":1,\"692\":1,\"748\":1,\"916\":1,\"1146\":1,\"1245\":1,\"1281\":1,\"1421\":1,\"1604\":1,\"1692\":1,\"2012\":1,\"2100\":1}}],[\"68\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"6\",{\"0\":{\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"118\":1,\"130\":1,\"246\":1,\"256\":1,\"259\":1,\"260\":1,\"261\":1,\"270\":1,\"291\":1,\"299\":1,\"301\":1,\"302\":2,\"305\":1,\"313\":1,\"320\":1,\"332\":1,\"333\":2,\"341\":1,\"354\":1,\"367\":1,\"374\":1,\"384\":1,\"452\":1,\"453\":1,\"454\":1,\"474\":1,\"481\":1,\"494\":1,\"539\":1,\"552\":1,\"559\":1,\"569\":1,\"638\":1,\"639\":1,\"640\":1,\"660\":1,\"667\":1,\"680\":1,\"724\":1,\"739\":1,\"747\":1,\"757\":1,\"853\":1,\"854\":1,\"855\":1,\"856\":1,\"879\":1,\"886\":1,\"893\":1,\"909\":1,\"910\":1,\"911\":1,\"939\":1,\"987\":1,\"995\":1,\"1005\":1,\"1012\":1,\"1047\":1,\"1060\":1,\"1076\":1,\"1077\":1,\"1078\":1,\"1079\":1,\"1109\":1,\"1120\":1,\"1137\":1,\"1145\":1,\"1155\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1249\":1,\"1260\":1,\"1273\":1,\"1280\":1,\"1290\":1,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":1,\"1366\":1,\"1367\":1,\"1368\":1,\"1388\":1,\"1395\":1,\"1408\":1,\"1494\":1,\"1495\":1,\"1496\":1,\"1497\":1,\"1560\":1,\"1672\":1,\"1682\":1,\"1685\":1,\"1686\":1,\"1687\":1,\"1696\":1,\"1715\":1,\"1723\":1,\"1725\":2,\"1728\":1,\"1736\":1,\"1743\":1,\"1755\":2,\"1763\":1,\"1788\":1,\"1789\":1,\"1790\":1,\"1791\":1,\"1885\":1,\"1897\":1,\"1917\":1,\"1925\":1,\"1927\":1,\"1928\":2,\"1931\":1,\"1939\":1,\"1946\":1,\"1958\":1,\"1959\":2,\"1967\":1,\"2080\":1,\"2090\":1,\"2093\":1,\"2094\":1,\"2095\":1,\"2104\":1,\"2116\":1,\"2127\":1,\"2144\":1,\"2161\":2,\"2177\":1,\"2238\":1,\"2248\":1,\"2327\":2,\"2343\":1,\"2353\":2,\"2369\":1,\"2399\":2,\"2405\":1},\"1\":{\"216\":1,\"262\":1,\"263\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":2,\"269\":1,\"270\":1,\"271\":1,\"332\":2,\"333\":2,\"435\":1,\"482\":1,\"503\":1,\"504\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":2,\"510\":1,\"511\":1,\"512\":1,\"621\":1,\"668\":1,\"688\":1,\"689\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":2,\"695\":1,\"696\":1,\"697\":1,\"775\":1,\"821\":1,\"912\":1,\"913\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":2,\"919\":1,\"920\":1,\"921\":1,\"1179\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":2,\"1248\":1,\"1249\":1,\"1250\":1,\"1349\":1,\"1417\":1,\"1418\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":2,\"1424\":1,\"1425\":1,\"1426\":1,\"1646\":1,\"1688\":1,\"1689\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":2,\"1695\":1,\"1696\":1,\"1697\":1,\"1755\":2,\"1958\":2,\"1959\":2,\"2054\":1,\"2096\":1,\"2097\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":2,\"2103\":1,\"2104\":1,\"2105\":1,\"2248\":1}}],[\"utf\",{\"1\":{\"333\":3,\"1755\":3,\"1959\":3,\"2203\":3,\"2217\":3,\"2290\":3,\"2316\":3}}],[\"utilexception高版本不兼容\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"usr\",{\"1\":{\"287\":3,\"983\":3,\"1711\":3,\"1913\":3}}],[\"userlist\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"usermapper\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"users\",{\"1\":{\"19\":2,\"449\":2,\"496\":1,\"635\":2,\"681\":1,\"850\":2,\"904\":1,\"1073\":2,\"1233\":1,\"1363\":2,\"1410\":1,\"1491\":2,\"1785\":2,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"userservice\",{\"1\":{\"3\":1,\"19\":2,\"449\":2,\"635\":2,\"850\":2,\"1073\":2,\"1363\":2,\"1491\":2,\"1770\":1,\"1785\":2}}],[\"user\",{\"1\":{\"17\":4,\"29\":1,\"46\":3,\"47\":1,\"55\":1,\"56\":2,\"66\":2,\"87\":1,\"216\":1,\"217\":3,\"234\":7,\"263\":1,\"272\":2,\"333\":2,\"335\":2,\"409\":2,\"433\":7,\"436\":4,\"448\":4,\"504\":1,\"515\":1,\"521\":2,\"523\":1,\"529\":2,\"530\":2,\"594\":2,\"619\":7,\"622\":4,\"634\":4,\"689\":1,\"700\":1,\"706\":2,\"708\":1,\"714\":2,\"715\":2,\"775\":1,\"776\":4,\"785\":2,\"811\":7,\"822\":4,\"825\":2,\"832\":1,\"849\":4,\"913\":1,\"924\":1,\"930\":2,\"932\":3,\"933\":1,\"940\":1,\"941\":2,\"943\":2,\"950\":2,\"964\":2,\"968\":1,\"970\":2,\"1072\":4,\"1082\":1,\"1095\":1,\"1102\":3,\"1103\":1,\"1110\":1,\"1111\":2,\"1179\":1,\"1180\":3,\"1211\":7,\"1216\":4,\"1242\":1,\"1251\":2,\"1315\":2,\"1339\":7,\"1350\":4,\"1362\":4,\"1418\":1,\"1429\":1,\"1435\":2,\"1437\":1,\"1443\":2,\"1444\":2,\"1454\":2,\"1475\":1,\"1490\":4,\"1502\":1,\"1513\":3,\"1514\":1,\"1522\":1,\"1523\":2,\"1646\":1,\"1647\":3,\"1660\":7,\"1689\":1,\"1698\":2,\"1755\":2,\"1757\":2,\"1784\":4,\"1796\":1,\"1813\":3,\"1814\":1,\"1822\":1,\"1823\":2,\"1833\":2,\"1854\":1,\"1959\":2,\"1961\":2,\"2054\":1,\"2055\":3,\"2068\":7,\"2097\":1,\"2106\":2,\"2240\":2}}],[\"userid\",{\"1\":{\"3\":2,\"1770\":2}}],[\"url>\",{\"1\":{\"2203\":2,\"2204\":1,\"2217\":2,\"2218\":1,\"2290\":2,\"2291\":1,\"2316\":2,\"2317\":1}}],[\"url\",{\"1\":{\"228\":2,\"425\":3,\"428\":1,\"611\":3,\"614\":1,\"803\":3,\"806\":1,\"1203\":3,\"1206\":1,\"1331\":3,\"1334\":1}}],[\"uri\",{\"1\":{\"228\":2}}],[\"unit>\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"unit\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"unitname\",{\"1\":{\"463\":2,\"649\":2,\"865\":2,\"1088\":2,\"1377\":2}}],[\"unitname=warm\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"unsigned\",{\"1\":{\"265\":1,\"266\":1,\"268\":1,\"269\":1,\"271\":1,\"506\":1,\"507\":1,\"509\":1,\"510\":1,\"512\":1,\"691\":1,\"692\":1,\"694\":1,\"695\":1,\"697\":1,\"915\":1,\"916\":1,\"918\":1,\"919\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1247\":1,\"1248\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1423\":1,\"1424\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1694\":1,\"1695\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2102\":1,\"2103\":1,\"2105\":1}}],[\"unactive\",{\"1\":{\"151\":1,\"165\":1,\"360\":1,\"367\":1,\"545\":1,\"552\":1,\"732\":1,\"739\":1,\"1128\":1,\"1137\":1,\"1266\":1,\"1273\":1,\"1581\":1,\"1595\":1,\"1989\":1,\"2003\":1}}],[\"unpublish\",{\"1\":{\"148\":1,\"356\":1,\"541\":1,\"728\":1,\"1124\":1,\"1262\":1,\"1578\":1,\"1986\":1}}],[\"uel实现\",{\"1\":{\"115\":1,\"1882\":1}}],[\"upgrade\",{\"0\":{\"2416\":1,\"2421\":1,\"2429\":1,\"2430\":1},\"1\":{\"109\":1,\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1038\":1,\"1224\":1,\"1398\":1,\"1540\":1,\"1674\":1,\"1876\":1,\"2082\":1}}],[\"updatefill\",{\"1\":{\"220\":1,\"413\":1,\"598\":1,\"789\":1,\"1189\":1,\"1319\":1,\"1650\":1,\"2058\":1}}],[\"updatebatch\",{\"1\":{\"202\":1,\"394\":1,\"579\":1,\"767\":1,\"1165\":1,\"1300\":1,\"1632\":1,\"2040\":1}}],[\"updatebyid\",{\"1\":{\"196\":1,\"388\":1,\"573\":1,\"761\":1,\"1159\":1,\"1294\":1,\"1626\":1,\"2034\":1}}],[\"updatehandler\",{\"1\":{\"174\":1,\"375\":1,\"560\":1,\"748\":1,\"1146\":1,\"1281\":1,\"1604\":1,\"2012\":1}}],[\"updatepublishstatus\",{\"1\":{\"145\":1,\"1575\":1,\"1983\":1}}],[\"update\",{\"0\":{\"2410\":1,\"2411\":1,\"2412\":1,\"2413\":1},\"1\":{\"109\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"301\":4,\"302\":8,\"306\":3,\"307\":9,\"308\":2,\"309\":2,\"310\":1,\"311\":4,\"312\":3,\"313\":4,\"314\":9,\"316\":7,\"327\":1,\"328\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"997\":3,\"998\":9,\"999\":2,\"1000\":2,\"1001\":1,\"1003\":4,\"1004\":3,\"1005\":4,\"1006\":9,\"1008\":7,\"1019\":1,\"1020\":1,\"1038\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1540\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1725\":8,\"1729\":3,\"1730\":9,\"1731\":2,\"1732\":2,\"1733\":1,\"1734\":4,\"1735\":3,\"1736\":4,\"1737\":9,\"1739\":7,\"1750\":1,\"1751\":1,\"1876\":1,\"1927\":4,\"1928\":8,\"1932\":3,\"1933\":9,\"1934\":2,\"1935\":2,\"1936\":1,\"1937\":4,\"1938\":3,\"1939\":4,\"1940\":9,\"1942\":7,\"1953\":1,\"1954\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2131\":8,\"2162\":8,\"2180\":4,\"2328\":8,\"2354\":8,\"2372\":4}}],[\"updatetestleave\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"ui`\",{\"1\":{\"611\":1}}],[\"ui文件夹的提交记录\",{\"1\":{\"332\":1,\"1958\":1}}],[\"ui设计等等\",{\"1\":{\"282\":1}}],[\"ui<\",{\"1\":{\"73\":1,\"817\":1,\"957\":1,\"1345\":1,\"1461\":1,\"1840\":1}}],[\"ui\",{\"1\":{\"73\":1,\"74\":1,\"75\":5,\"225\":1,\"226\":1,\"228\":1,\"229\":1,\"235\":2,\"338\":3,\"403\":1,\"419\":1,\"420\":1,\"421\":1,\"422\":1,\"423\":1,\"424\":1,\"425\":1,\"426\":1,\"428\":4,\"588\":1,\"604\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"610\":2,\"611\":3,\"612\":3,\"614\":2,\"779\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1,\"801\":1,\"802\":1,\"803\":1,\"804\":1,\"806\":4,\"812\":2,\"817\":1,\"818\":1,\"819\":5,\"957\":1,\"958\":1,\"959\":5,\"1183\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1201\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1206\":4,\"1212\":2,\"1309\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1334\":4,\"1340\":2,\"1345\":1,\"1346\":1,\"1347\":5,\"1461\":1,\"1462\":1,\"1463\":5,\"1654\":1,\"1655\":1,\"1661\":2,\"1760\":3,\"1840\":1,\"1841\":1,\"1842\":5,\"1964\":3,\"2062\":1,\"2063\":1,\"2069\":2,\"2108\":1,\"2109\":2,\"2110\":1,\"2119\":1,\"2120\":2,\"2121\":3,\"2136\":1,\"2137\":2,\"2138\":1,\"2153\":1,\"2154\":2,\"2155\":1,\"2174\":1,\"2220\":1,\"2221\":2,\"2222\":1,\"2235\":1,\"2243\":3,\"2319\":1,\"2320\":2,\"2321\":1,\"2340\":1,\"2345\":1,\"2346\":2,\"2347\":1,\"2366\":1}}],[\"更及时的获知\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"更新操作使用\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"更新脚本在项目里面的sql文件下\",{\"1\":{\"331\":1,\"991\":1,\"1754\":1,\"1957\":1}}],[\"更新日志\",{\"0\":{\"295\":1,\"300\":1,\"991\":1,\"996\":1,\"1719\":1,\"1724\":1,\"1921\":1,\"1926\":1,\"2162\":1,\"2328\":1,\"2354\":1},\"1\":{\"2107\":1,\"2131\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"更新时间有值时\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"更新时间\",{\"1\":{\"265\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"更新时间设置正序排列\",{\"0\":{\"205\":1,\"397\":1,\"582\":1,\"770\":1,\"1168\":1,\"1303\":1,\"1635\":1,\"2043\":1},\"1\":{\"205\":1,\"397\":1,\"582\":1,\"770\":1,\"1168\":1,\"1303\":1,\"1635\":1,\"2043\":1}}],[\"更新流程定义发布状态\",{\"0\":{\"145\":1,\"1575\":1,\"1983\":1}}],[\"更新快\",{\"1\":{\"115\":1,\"1882\":1}}],[\"更新业务数据\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"更多接口请参考\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"更多使用企业\",{\"1\":{\"0\":1}}],[\"更多开源项目详情\",{\"1\":{\"0\":1}}],[\"b任务办理时传入变量handler1=100\",{\"1\":{\"524\":1,\"709\":1,\"1438\":1}}],[\"b任务或者之前任务办理时传入变量handler1=100\",{\"1\":{\"49\":1,\"935\":1,\"1105\":1,\"1516\":1,\"1816\":1}}],[\"break\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"body\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"boot或者solon\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"boot\",{\"1\":{\"94\":2,\"131\":2,\"291\":1,\"987\":1,\"1023\":2,\"1061\":2,\"1525\":2,\"1561\":2,\"1715\":1,\"1861\":2,\"1898\":2,\"1917\":1}}],[\"boolean\",{\"1\":{\"62\":1,\"63\":2,\"64\":1,\"87\":1,\"217\":2,\"428\":1,\"436\":2,\"515\":2,\"516\":1,\"614\":1,\"622\":2,\"700\":2,\"701\":1,\"776\":2,\"806\":1,\"822\":2,\"825\":1,\"832\":1,\"834\":1,\"835\":2,\"836\":1,\"924\":2,\"925\":1,\"943\":1,\"946\":1,\"947\":2,\"948\":1,\"964\":1,\"968\":1,\"970\":1,\"1095\":2,\"1096\":1,\"1180\":2,\"1206\":1,\"1334\":1,\"1350\":2,\"1429\":2,\"1430\":1,\"1450\":1,\"1451\":2,\"1452\":1,\"1475\":1,\"1647\":2,\"1829\":1,\"1830\":2,\"1831\":1,\"1854\":1,\"2055\":2}}],[\"block\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"blockattackinnerinterceptor\",{\"1\":{\"291\":5,\"987\":5,\"1715\":5,\"1917\":5}}],[\"by\",{\"1\":{\"267\":1,\"271\":2,\"508\":1,\"512\":2,\"693\":1,\"697\":2,\"917\":1,\"921\":2,\"1246\":1,\"1250\":2,\"1422\":1,\"1426\":2,\"1693\":1,\"1697\":2,\"2101\":1,\"2105\":2}}],[\"bit\",{\"1\":{\"265\":2,\"266\":2,\"267\":2,\"268\":1,\"269\":2,\"270\":1,\"506\":2,\"507\":2,\"508\":2,\"509\":1,\"510\":2,\"511\":1,\"691\":2,\"692\":2,\"693\":2,\"694\":1,\"695\":2,\"696\":1,\"915\":2,\"916\":2,\"917\":2,\"918\":1,\"919\":2,\"920\":1,\"1244\":2,\"1245\":2,\"1246\":2,\"1247\":1,\"1248\":2,\"1249\":1,\"1420\":2,\"1421\":2,\"1422\":2,\"1423\":1,\"1424\":2,\"1425\":1,\"1691\":2,\"1692\":2,\"1693\":2,\"1694\":1,\"1695\":2,\"1696\":1,\"2099\":2,\"2100\":2,\"2101\":2,\"2102\":1,\"2103\":2,\"2104\":1}}],[\"bignumberserializer\",{\"1\":{\"286\":10,\"982\":10,\"1710\":10,\"1912\":10}}],[\"biginteger\",{\"1\":{\"286\":4,\"982\":4,\"1710\":4,\"1912\":4}}],[\"bigint\",{\"1\":{\"265\":1,\"266\":4,\"267\":2,\"268\":2,\"269\":2,\"270\":3,\"271\":2,\"506\":1,\"507\":4,\"508\":2,\"509\":2,\"510\":2,\"511\":3,\"512\":2,\"515\":1,\"516\":1,\"691\":1,\"692\":4,\"693\":2,\"694\":2,\"695\":2,\"696\":3,\"697\":2,\"700\":1,\"701\":1,\"915\":1,\"916\":4,\"917\":2,\"918\":2,\"919\":2,\"920\":3,\"921\":2,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1244\":1,\"1245\":4,\"1246\":2,\"1247\":2,\"1248\":2,\"1249\":3,\"1250\":2,\"1420\":1,\"1421\":4,\"1422\":2,\"1423\":2,\"1424\":2,\"1425\":3,\"1426\":2,\"1429\":1,\"1430\":1,\"1691\":1,\"1692\":4,\"1693\":2,\"1694\":2,\"1695\":2,\"1696\":3,\"1697\":2,\"2099\":1,\"2100\":4,\"2101\":2,\"2102\":2,\"2103\":2,\"2104\":3,\"2105\":2}}],[\"bigdecimal\",{\"1\":{\"217\":4,\"436\":4,\"622\":4,\"776\":4,\"822\":4,\"1180\":4,\"1350\":4,\"1647\":4,\"2055\":4}}],[\"b\",{\"1\":{\"217\":2,\"436\":2,\"622\":2,\"776\":2,\"822\":2,\"1180\":2,\"1350\":2,\"1647\":2,\"2055\":2}}],[\"bpmn\",{\"1\":{\"115\":2,\"1882\":2}}],[\"banner\",{\"1\":{\"403\":1,\"406\":1,\"459\":1,\"588\":1,\"591\":1,\"645\":1,\"779\":1,\"782\":1,\"861\":1,\"1084\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1373\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"banmoon\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"baomidou\",{\"1\":{\"291\":8,\"987\":8,\"1715\":8,\"1917\":8}}],[\"baomidou<\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"batchsize\",{\"1\":{\"201\":2,\"393\":2,\"578\":2,\"766\":2,\"1164\":2,\"1299\":2,\"1631\":2,\"2039\":2}}],[\"base\",{\"1\":{\"338\":2,\"425\":2,\"426\":2,\"803\":2,\"804\":2,\"1203\":2,\"1204\":2,\"1331\":2,\"1332\":2,\"1760\":2,\"1964\":2,\"2243\":2}}],[\"base64编码的图片流字符串\",{\"1\":{\"153\":1,\"155\":1,\"157\":1,\"1583\":1,\"1585\":1,\"1587\":1,\"1991\":1,\"1993\":1,\"1995\":1}}],[\"base1\",{\"1\":{\"35\":1,\"1802\":1}}],[\"bug\",{\"1\":{\"109\":1,\"276\":1,\"304\":1,\"308\":1,\"314\":1,\"999\":1,\"1006\":1,\"1038\":1,\"1540\":1,\"1700\":1,\"1727\":1,\"1731\":1,\"1737\":1,\"1876\":1,\"1902\":1,\"1930\":1,\"1934\":1,\"1940\":1,\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"build>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"builder\",{\"1\":{\"228\":1,\"286\":4,\"982\":4,\"1710\":4,\"1912\":4}}],[\"build\",{\"1\":{\"66\":1,\"217\":1,\"228\":2,\"272\":1,\"286\":1,\"409\":1,\"421\":1,\"436\":1,\"521\":1,\"594\":1,\"606\":1,\"622\":1,\"706\":1,\"776\":1,\"785\":1,\"799\":1,\"822\":1,\"930\":1,\"950\":1,\"982\":1,\"1180\":1,\"1199\":1,\"1251\":1,\"1315\":1,\"1327\":1,\"1350\":1,\"1435\":1,\"1454\":1,\"1647\":1,\"1698\":1,\"1710\":1,\"1833\":1,\"1912\":1,\"2055\":1,\"2106\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"business\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"businessdata\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"businesstype\",{\"1\":{\"19\":3,\"850\":3,\"1073\":3,\"1491\":3,\"1785\":3}}],[\"businessid\",{\"1\":{\"19\":2,\"160\":1,\"362\":1,\"547\":1,\"734\":1,\"850\":2,\"1073\":2,\"1132\":1,\"1268\":1,\"1491\":2,\"1590\":1,\"1785\":2,\"1998\":1}}],[\"btn\",{\"1\":{\"35\":1,\"1802\":1}}],[\"bean配置方式\",{\"0\":{\"404\":1,\"407\":1,\"417\":1,\"519\":1,\"589\":1,\"592\":1,\"602\":1,\"704\":1,\"780\":1,\"783\":1,\"793\":1,\"928\":1,\"1099\":1,\"1184\":1,\"1187\":1,\"1193\":1,\"1310\":1,\"1313\":1,\"1323\":1,\"1433\":1}}],[\"bean\",{\"1\":{\"41\":1,\"286\":2,\"288\":1,\"291\":2,\"404\":5,\"406\":1,\"407\":4,\"417\":1,\"421\":1,\"422\":1,\"459\":1,\"515\":1,\"516\":2,\"518\":1,\"519\":2,\"520\":1,\"589\":5,\"591\":1,\"592\":4,\"602\":1,\"606\":1,\"607\":1,\"645\":1,\"700\":1,\"701\":2,\"703\":1,\"704\":2,\"705\":1,\"780\":5,\"782\":1,\"783\":4,\"793\":1,\"799\":1,\"800\":1,\"861\":1,\"869\":1,\"924\":1,\"925\":2,\"927\":1,\"928\":2,\"929\":1,\"982\":2,\"984\":1,\"987\":2,\"1084\":1,\"1092\":1,\"1095\":1,\"1096\":2,\"1098\":1,\"1099\":2,\"1100\":1,\"1184\":5,\"1186\":1,\"1187\":4,\"1193\":1,\"1199\":1,\"1200\":1,\"1310\":5,\"1312\":1,\"1313\":4,\"1323\":1,\"1327\":1,\"1328\":1,\"1373\":1,\"1429\":1,\"1430\":2,\"1432\":1,\"1433\":2,\"1434\":1,\"1508\":1,\"1710\":2,\"1712\":1,\"1715\":2,\"1808\":1,\"1912\":2,\"1914\":1,\"1917\":2,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2193\":6,\"2221\":1,\"2262\":6,\"2280\":6,\"2306\":6,\"2320\":1,\"2346\":1}}],[\"bean注解注入到容器\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"betweenchart\",{\"1\":{\"4\":8,\"1771\":8}}],[\"<url>https\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"<url>file\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<repositories>\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"<repository>\",{\"1\":{\"2203\":1,\"2204\":1,\"2217\":1,\"2218\":1,\"2290\":1,\"2291\":1,\"2316\":1,\"2317\":1}}],[\"<name>releases<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<aggregate>true<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<additionalparam>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<artifactid>maven\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<artifactid>mybatis\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"<artifactid>solon\",{\"1\":{\"491\":2,\"677\":2,\"902\":2,\"1231\":2,\"1405\":2}}],[\"<artifactid>snack3<\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"<artifactid>warm\",{\"1\":{\"73\":2,\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"796\":1,\"797\":1,\"817\":2,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"957\":2,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":2,\"1325\":1,\"1345\":2,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2,\"1461\":2,\"1840\":2,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2220\":1,\"2228\":1,\"2235\":1,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"<charset>utf\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<configuration>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<class>com\",{\"1\":{\"649\":7}}],[\"<class>org\",{\"1\":{\"463\":7,\"865\":7,\"1088\":7,\"1377\":7}}],[\"<goal>jar<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<goal>jar\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<goals>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<groupid>io\",{\"1\":{\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"2119\":1}}],[\"<groupid>com\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"<groupid>org\",{\"1\":{\"73\":2,\"340\":1,\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":4,\"677\":2,\"796\":1,\"797\":1,\"817\":2,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":4,\"957\":2,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":4,\"1325\":1,\"1345\":2,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":4,\"1461\":2,\"1762\":1,\"1840\":2,\"1966\":1,\"2108\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2203\":2,\"2217\":2,\"2220\":1,\"2228\":1,\"2235\":1,\"2246\":1,\"2290\":2,\"2316\":2,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"<build>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<id>gitee\",{\"1\":{\"2203\":2,\"2204\":1,\"2217\":2,\"2218\":1,\"2290\":2,\"2291\":1,\"2316\":2,\"2317\":1}}],[\"<id>gitee<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<id>attach\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<iframe\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"<plugin>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<plugins>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<profile>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<persistence\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"<=\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"<snapshotrepository>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<style\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"<script\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"<script>\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"<slot\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"<distributionmanagement>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<div\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"<docencoding>utf\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<dependency>\",{\"1\":{\"73\":1,\"291\":1,\"340\":1,\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"796\":1,\"797\":1,\"817\":1,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"957\":1,\"987\":1,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":2,\"1325\":1,\"1345\":1,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2,\"1461\":1,\"1715\":1,\"1762\":1,\"1840\":1,\"1917\":1,\"1966\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2220\":1,\"2228\":1,\"2235\":1,\"2246\":1,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"<template>\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"<version>2\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<version>最新版本<\",{\"1\":{\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":2,\"2174\":1,\"2235\":1,\"2340\":1,\"2366\":1}}],[\"<version>1\",{\"1\":{\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2220\":1,\"2228\":1,\"2319\":1,\"2333\":1,\"2345\":1,\"2359\":1}}],[\"<version>版本号<\",{\"1\":{\"419\":1,\"604\":1,\"796\":1,\"797\":1,\"1196\":1,\"1197\":1,\"1325\":1}}],[\"<version>3\",{\"1\":{\"291\":1,\"340\":1,\"987\":1,\"1715\":1,\"1762\":1,\"1917\":1,\"1966\":1,\"2246\":1}}],[\"<encoding>utf\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"<execution>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<executions>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"<exclusion>\",{\"1\":{\"73\":1,\"491\":2,\"677\":2,\"817\":1,\"902\":2,\"957\":1,\"1231\":2,\"1345\":1,\"1405\":2,\"1461\":1,\"1840\":1}}],[\"<exclusions>\",{\"1\":{\"73\":1,\"491\":1,\"677\":1,\"817\":1,\"902\":1,\"957\":1,\"1231\":1,\"1345\":1,\"1405\":1,\"1461\":1,\"1840\":1}}],[\"<el\",{\"1\":{\"335\":27,\"1757\":27,\"1961\":27,\"2240\":27}}],[\"<\",{\"1\":{\"18\":1,\"73\":3,\"286\":1,\"291\":1,\"335\":6,\"340\":1,\"419\":1,\"425\":3,\"426\":4,\"450\":1,\"463\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":5,\"604\":1,\"611\":3,\"612\":4,\"636\":1,\"649\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":5,\"796\":1,\"797\":1,\"803\":3,\"804\":4,\"817\":3,\"851\":1,\"865\":1,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":5,\"957\":3,\"982\":1,\"987\":1,\"1074\":1,\"1088\":1,\"1196\":1,\"1197\":1,\"1203\":3,\"1204\":4,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":5,\"1325\":1,\"1331\":3,\"1332\":4,\"1345\":3,\"1364\":1,\"1377\":1,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":5,\"1461\":3,\"1492\":1,\"1710\":1,\"1715\":1,\"1757\":6,\"1762\":1,\"1786\":1,\"1840\":3,\"1912\":1,\"1917\":1,\"1961\":6,\"1966\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2196\":1,\"2203\":19,\"2204\":2,\"2217\":19,\"2218\":2,\"2220\":1,\"2228\":1,\"2235\":1,\"2240\":6,\"2246\":1,\"2265\":1,\"2283\":1,\"2290\":19,\"2291\":2,\"2309\":1,\"2316\":19,\"2317\":2,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"可能缓存原因\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"可能需要对进行定制化开发\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"可能需要处理跨域问题\",{\"1\":{\"609\":1,\"2121\":1}}],[\"可满足中小项目的组件\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"可满足不同场景\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2236\":1,\"2341\":1,\"2367\":1}}],[\"可应对不同场景\",{\"1\":{\"2115\":1,\"2126\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"可在作者提供的demo项目中设计好导出xml\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"可在不集成流程设计器情况下使用\",{\"1\":{\"1042\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"可在业务系统中增加接口\",{\"1\":{\"70\":1,\"814\":1,\"954\":1,\"1342\":1,\"1458\":1,\"1837\":1}}],[\"可多个网关直连\",{\"1\":{\"995\":1}}],[\"可匿名访问\",{\"1\":{\"421\":1,\"422\":1,\"606\":1,\"607\":1,\"799\":1,\"800\":1,\"1199\":1,\"1200\":1,\"1327\":1,\"1328\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"可重复度\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"可配置文件注入\",{\"1\":{\"404\":1,\"407\":1,\"589\":1,\"592\":1,\"780\":1,\"783\":1,\"1184\":1,\"1187\":1,\"1310\":1,\"1313\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"可参考官网文章逻辑删除和多租户\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"可参照warm\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"可不增加\",{\"1\":{\"337\":1,\"1759\":1,\"1963\":1,\"2242\":1}}],[\"可不设置入参\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"可退回到任意节点\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"可尝试切换maven版本\",{\"1\":{\"292\":1,\"988\":1,\"1716\":1,\"1918\":1}}],[\"可解决问题\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"可获得首页以及文档所有页面的展示\",{\"1\":{\"283\":1}}],[\"可获取流程图对象\",{\"1\":{\"155\":1,\"156\":1,\"1585\":1,\"1586\":1,\"1993\":1,\"1994\":1}}],[\"可提出未来版本更新需求\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"可协助解决问题\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"可传递\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"可追加多个token\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"可排序\",{\"0\":{\"191\":1,\"383\":1,\"568\":1,\"756\":1,\"1154\":1,\"1289\":1,\"1621\":1,\"2029\":1},\"1\":{\"191\":1,\"383\":1,\"568\":1,\"756\":1,\"1154\":1,\"1289\":1,\"1621\":1,\"2029\":1}}],[\"可任意跳转到对应节点\",{\"1\":{\"161\":1,\"168\":1,\"363\":1,\"369\":1,\"548\":1,\"554\":1,\"735\":1,\"742\":1,\"1133\":1,\"1140\":1,\"1269\":1,\"1275\":1,\"1591\":1,\"1598\":1,\"1999\":1,\"2006\":1}}],[\"可用于修改流程图样式或者新增内容\",{\"1\":{\"155\":1,\"156\":1,\"1585\":1,\"1586\":1,\"1993\":1,\"1994\":1}}],[\"可扩展\",{\"0\":{\"155\":1,\"156\":1,\"1585\":1,\"1586\":1,\"1993\":1,\"1994\":1},\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2188\":1,\"2246\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"可快速上手和集成\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"可进行二开设计器\",{\"1\":{\"69\":1,\"813\":1,\"953\":1,\"1457\":1,\"1836\":1}}],[\"可进行扩展\",{\"1\":{\"58\":1,\"82\":1,\"88\":1,\"824\":1,\"942\":1,\"963\":1,\"969\":1,\"1446\":1,\"1470\":1,\"1476\":1,\"1825\":1,\"1849\":1,\"1855\":1}}],[\"可实现的效果\",{\"0\":{\"50\":1,\"1492\":1,\"1517\":1,\"1786\":1,\"1817\":1}}],[\"可通过此配置自定义实现\",{\"1\":{\"403\":1,\"406\":1,\"416\":1,\"588\":1,\"591\":1,\"601\":1,\"779\":1,\"782\":1,\"792\":1,\"1183\":1,\"1186\":1,\"1192\":1,\"1309\":1,\"1312\":1,\"1322\":1}}],[\"可通过办理人变量表达式或者分派监听器\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"可通过填充器覆盖\",{\"1\":{\"219\":1,\"412\":1,\"597\":1,\"788\":1,\"1188\":1,\"1318\":1,\"1649\":1,\"2057\":1}}],[\"可通过动态变量\",{\"1\":{\"115\":1,\"1882\":1}}],[\"可通过jar包形式快速集成到项目\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2236\":1,\"2341\":1,\"2367\":1}}],[\"可通过配置文件注入\",{\"1\":{\"41\":1,\"404\":2,\"406\":1,\"407\":1,\"518\":1,\"519\":1,\"520\":1,\"589\":2,\"591\":1,\"592\":1,\"703\":1,\"704\":1,\"705\":1,\"780\":2,\"782\":1,\"783\":1,\"869\":1,\"927\":1,\"928\":1,\"929\":1,\"1092\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1184\":2,\"1186\":1,\"1187\":1,\"1310\":2,\"1312\":1,\"1313\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"1508\":1,\"1808\":1,\"2193\":3,\"2262\":3,\"2280\":3,\"2306\":3}}],[\"可通过这种方式开启\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"460\":1,\"588\":1,\"591\":1,\"646\":1,\"779\":1,\"782\":1,\"862\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"可以采用此法建立私库\",{\"1\":{\"2198\":1,\"2212\":1,\"2285\":1,\"2311\":1}}],[\"可以自此之后可支持各种复杂的网关混合\",{\"1\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"可以快速接入业务系统\",{\"1\":{\"2118\":1}}],[\"可以快速集成\",{\"1\":{\"2107\":1,\"2135\":1,\"2152\":1,\"2219\":1,\"2318\":1,\"2344\":1}}],[\"可以通过这种方式动态切换\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"可以通过条件表达式来判断\",{\"1\":{\"215\":1,\"774\":1,\"1178\":1,\"1645\":1,\"2053\":1}}],[\"可以直接访问后端接口加载页面\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"可以直接联系我们\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"可以配置自定义实现\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1}}],[\"可以参考如下\",{\"1\":{\"333\":1,\"334\":1,\"335\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"2240\":1}}],[\"可以跳转指定节点\",{\"1\":{\"326\":1,\"1018\":1,\"1749\":1,\"1952\":1}}],[\"可以把插件关了\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"可以获取流程变量\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"可以设置流程变量\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"可以多个\",{\"1\":{\"241\":1,\"268\":1,\"476\":1,\"509\":1,\"662\":1,\"694\":1,\"881\":1,\"888\":1,\"918\":1,\"1218\":1,\"1247\":1,\"1390\":1,\"1423\":1,\"1667\":1,\"1694\":1,\"2075\":1,\"2102\":1}}],[\"可以返回其中一种或者多种\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"可以按照本文中介绍的\",{\"1\":{\"222\":1,\"418\":1,\"603\":1,\"794\":1,\"1194\":1,\"1324\":1,\"1652\":1,\"2060\":1}}],[\"可以按照这个进行扩展\",{\"1\":{\"31\":1,\"1798\":1}}],[\"可以有效降的帮助别人\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"可以语流程实例状态不同\",{\"1\":{\"65\":1,\"408\":1,\"593\":1,\"784\":1,\"949\":1,\"1314\":1,\"1453\":1,\"1832\":1}}],[\"可以不设置\",{\"1\":{\"55\":1,\"529\":1,\"714\":1,\"940\":1,\"1110\":1,\"1443\":1,\"1522\":1,\"1822\":1}}],[\"可以使用orm自身的api\",{\"1\":{\"37\":1,\"863\":1,\"1086\":1,\"1504\":1,\"1804\":1}}],[\"可以统一使用一个流程监听器\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"可设置自定义权限策略\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"可对业务表更新\",{\"1\":{\"10\":1,\"1483\":1,\"1777\":1}}],[\"执行升级脚本\",{\"1\":{\"2244\":1,\"2248\":1,\"2249\":1,\"2251\":1,\"2252\":1,\"2253\":1}}],[\"执行升级脚本1\",{\"1\":{\"332\":1,\"333\":1,\"335\":1,\"1755\":1,\"1757\":1,\"1958\":1,\"1959\":1,\"1961\":1,\"2240\":1}}],[\"执行不同的任务\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"执行1\",{\"1\":{\"334\":1,\"1756\":1,\"1960\":1}}],[\"执行\",{\"1\":{\"248\":2,\"339\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"481\":2,\"484\":2,\"667\":2,\"670\":2,\"886\":2,\"893\":2,\"895\":2,\"1224\":2,\"1395\":2,\"1398\":2,\"1674\":2,\"1761\":1,\"1763\":1,\"1764\":1,\"1765\":1,\"1766\":1,\"1767\":1,\"1965\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"2082\":2}}],[\"执行结果\",{\"1\":{\"59\":1,\"63\":2,\"77\":1,\"83\":1,\"89\":1,\"531\":1,\"716\":1,\"825\":1,\"835\":2,\"943\":1,\"947\":2,\"964\":1,\"970\":1,\"1445\":1,\"1447\":1,\"1451\":2,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1830\":2,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"执行表达式后置方法\",{\"1\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1}}],[\"执行表达式前置方法\",{\"1\":{\"63\":1,\"835\":1,\"947\":1,\"1451\":1,\"1830\":1}}],[\"执行表达式\",{\"1\":{\"59\":2,\"63\":1,\"77\":2,\"83\":2,\"89\":2,\"531\":1,\"716\":1,\"825\":2,\"835\":1,\"943\":2,\"947\":1,\"964\":2,\"970\":2,\"1445\":1,\"1447\":2,\"1451\":1,\"1465\":2,\"1471\":2,\"1477\":2,\"1826\":2,\"1830\":1,\"1844\":2,\"1850\":2,\"1856\":2}}],[\"执行表达式之前\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"执行时修改\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"执行顺序\",{\"1\":{\"11\":1,\"444\":1,\"630\":1,\"842\":1,\"1065\":1,\"1358\":1,\"1484\":1,\"1778\":1}}],[\"默认为mysql\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"默认是\",{\"1\":{\"403\":1,\"406\":1,\"588\":1,\"591\":1,\"779\":1,\"782\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"默认true\",{\"1\":{\"403\":2,\"588\":2,\"779\":2,\"1183\":2,\"1309\":2,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"默认初始化节点\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"默认值\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"默认authorization\",{\"1\":{\"235\":1,\"779\":1,\"812\":1,\"1183\":1,\"1212\":1,\"1309\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"默认\",{\"1\":{\"216\":1,\"291\":1,\"335\":1,\"987\":1,\"1179\":1,\"1646\":1,\"1715\":1,\"1757\":1,\"1917\":1,\"1961\":1,\"2054\":1,\"2240\":1}}],[\"默认删除当然办理用户权限\",{\"1\":{\"170\":1,\"171\":1,\"371\":1,\"372\":1,\"556\":1,\"557\":1,\"744\":1,\"745\":1,\"1142\":1,\"1143\":1,\"1277\":1,\"1278\":1,\"1600\":1,\"1601\":1,\"2008\":1,\"2009\":1}}],[\"默认不忽略\",{\"1\":{\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1}}],[\"默认不截取\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":2,\"943\":2,\"964\":2,\"970\":2,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"默认表达式和支持\",{\"1\":{\"115\":1,\"1882\":1}}],[\"默认办理人变量表达式策略\",{\"1\":{\"93\":1,\"531\":1,\"716\":1,\"829\":1,\"974\":1,\"1445\":1,\"1481\":1,\"1860\":1}}],[\"默认办理人变量策略\",{\"0\":{\"51\":1,\"525\":1,\"710\":1,\"936\":1,\"1106\":1,\"1439\":1,\"1518\":1,\"1818\":1},\"1\":{\"47\":1,\"523\":1,\"708\":1,\"933\":1,\"1103\":1,\"1437\":1,\"1514\":1,\"1814\":1}}],[\"默认按照注入策略顺序\",{\"1\":{\"48\":1,\"934\":1,\"1104\":1,\"1515\":1,\"1815\":1}}],[\"默认逻辑未删除值\",{\"1\":{\"27\":1,\"457\":1,\"643\":1,\"859\":1,\"1082\":1,\"1371\":1,\"1500\":1,\"1794\":1}}],[\"默认开启\",{\"1\":{\"27\":1,\"457\":1,\"643\":1,\"859\":1,\"1082\":1,\"1371\":1,\"1500\":1,\"1794\":1}}],[\"默认先判断是否是监听器表达式\",{\"1\":{\"14\":1,\"845\":1,\"1068\":1,\"1487\":1,\"1781\":1}}],[\"默认支持内置spel表达式\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"5版本升级脚本\",{\"1\":{\"2240\":1}}],[\"5版本升级脚本warm\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1}}],[\"5作废\",{\"1\":{\"1422\":1}}],[\"5格式\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"59\",{\"1\":{\"332\":1,\"1958\":1}}],[\"5月\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"5票签\",{\"1\":{\"266\":1,\"507\":1,\"560\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"50\",{\"1\":{\"133\":2,\"1063\":2,\"1563\":2,\"1900\":2}}],[\"50x\",{\"1\":{\"75\":2,\"819\":2,\"959\":2,\"1347\":2,\"1463\":2,\"1842\":2}}],[\"504\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"503\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"502\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"500\",{\"1\":{\"75\":1,\"265\":1,\"266\":2,\"267\":1,\"291\":1,\"506\":1,\"507\":2,\"508\":1,\"691\":1,\"692\":2,\"693\":1,\"819\":1,\"915\":1,\"916\":2,\"917\":1,\"959\":1,\"987\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1347\":1,\"1420\":1,\"1421\":2,\"1422\":1,\"1463\":1,\"1691\":1,\"1692\":2,\"1693\":1,\"1715\":1,\"1842\":1,\"1917\":1,\"2099\":1,\"2100\":2,\"2101\":1}}],[\"55l\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"5\",{\"0\":{\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":2,\"21\":1,\"22\":1,\"23\":1,\"36\":1,\"50\":1,\"51\":1,\"117\":1,\"129\":1,\"235\":1,\"245\":1,\"255\":1,\"258\":1,\"269\":1,\"290\":1,\"306\":1,\"321\":1,\"335\":1,\"353\":1,\"366\":1,\"373\":1,\"378\":1,\"379\":1,\"380\":1,\"381\":1,\"382\":1,\"383\":2,\"384\":1,\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"397\":1,\"398\":1,\"399\":1,\"400\":1,\"428\":1,\"451\":1,\"473\":1,\"480\":1,\"491\":1,\"493\":1,\"531\":1,\"538\":1,\"551\":1,\"558\":1,\"563\":1,\"564\":1,\"565\":1,\"566\":1,\"567\":1,\"568\":2,\"569\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"579\":1,\"580\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1,\"585\":1,\"614\":1,\"637\":1,\"659\":1,\"666\":1,\"677\":1,\"679\":1,\"716\":1,\"723\":1,\"738\":1,\"746\":1,\"751\":1,\"752\":1,\"753\":1,\"754\":1,\"755\":1,\"756\":2,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"771\":1,\"772\":1,\"773\":1,\"806\":1,\"812\":1,\"833\":1,\"834\":1,\"835\":1,\"836\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":2,\"853\":1,\"854\":1,\"855\":1,\"878\":1,\"885\":1,\"892\":1,\"902\":1,\"908\":1,\"936\":1,\"986\":1,\"997\":1,\"1013\":1,\"1046\":1,\"1059\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1075\":2,\"1076\":1,\"1077\":1,\"1078\":1,\"1106\":1,\"1119\":1,\"1136\":1,\"1144\":1,\"1149\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1154\":2,\"1155\":1,\"1156\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1163\":1,\"1164\":1,\"1165\":1,\"1166\":1,\"1167\":1,\"1168\":1,\"1169\":1,\"1170\":1,\"1171\":1,\"1206\":1,\"1212\":1,\"1222\":1,\"1231\":1,\"1237\":1,\"1248\":1,\"1259\":1,\"1272\":1,\"1279\":1,\"1284\":1,\"1285\":1,\"1286\":1,\"1287\":1,\"1288\":1,\"1289\":2,\"1290\":1,\"1291\":1,\"1292\":1,\"1293\":1,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":1,\"1298\":1,\"1299\":1,\"1300\":1,\"1301\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1305\":1,\"1306\":1,\"1334\":1,\"1340\":1,\"1365\":1,\"1387\":1,\"1394\":1,\"1405\":1,\"1407\":1,\"1445\":1,\"1487\":1,\"1488\":1,\"1489\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1493\":2,\"1494\":1,\"1495\":1,\"1496\":1,\"1517\":1,\"1518\":1,\"1548\":1,\"1559\":1,\"1661\":1,\"1671\":1,\"1681\":1,\"1684\":1,\"1695\":1,\"1714\":1,\"1729\":1,\"1744\":1,\"1757\":1,\"1781\":1,\"1782\":1,\"1783\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1787\":2,\"1788\":1,\"1789\":1,\"1790\":1,\"1803\":1,\"1817\":1,\"1818\":1,\"1884\":1,\"1896\":1,\"1916\":1,\"1932\":1,\"1947\":1,\"1961\":1,\"2069\":1,\"2079\":1,\"2089\":1,\"2092\":1,\"2103\":1,\"2115\":1,\"2126\":1,\"2143\":1,\"2160\":1,\"2176\":1,\"2204\":1,\"2218\":1,\"2227\":1,\"2237\":1,\"2240\":1,\"2291\":1,\"2317\":1,\"2326\":1,\"2342\":1,\"2352\":1,\"2368\":1,\"2391\":1},\"1\":{\"27\":1,\"29\":1,\"46\":1,\"216\":2,\"240\":1,\"262\":1,\"263\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"291\":2,\"306\":2,\"333\":2,\"335\":1,\"425\":1,\"435\":1,\"482\":1,\"503\":1,\"504\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"611\":1,\"621\":1,\"668\":1,\"688\":1,\"689\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"775\":1,\"803\":1,\"821\":1,\"887\":1,\"912\":1,\"913\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"932\":1,\"987\":2,\"997\":2,\"1082\":1,\"1102\":1,\"1179\":2,\"1203\":1,\"1217\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1331\":1,\"1349\":1,\"1396\":1,\"1417\":1,\"1418\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1500\":1,\"1502\":1,\"1513\":1,\"1646\":2,\"1666\":1,\"1688\":1,\"1689\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1715\":2,\"1729\":2,\"1755\":2,\"1757\":1,\"1794\":1,\"1796\":1,\"1813\":1,\"1917\":2,\"1932\":2,\"1959\":2,\"1961\":1,\"2054\":2,\"2074\":1,\"2096\":1,\"2097\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2150\":2,\"2209\":2,\"2240\":1,\"2270\":2,\"2296\":2}}],[\"比如我的下载到\",{\"1\":{\"2202\":1,\"2216\":1,\"2289\":1,\"2315\":1}}],[\"比如网络\",{\"1\":{\"2198\":1,\"2212\":1,\"2285\":1,\"2311\":1}}],[\"比如按钮权限等\",{\"1\":{\"1723\":1}}],[\"比如80\",{\"1\":{\"609\":1,\"2121\":1}}],[\"比如token\",{\"1\":{\"337\":1,\"1759\":1,\"1963\":1,\"2242\":1}}],[\"比如spring\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"比如项目开发\",{\"1\":{\"282\":1}}],[\"比如xx\",{\"1\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"比如增加办理人\",{\"1\":{\"236\":1,\"1213\":1,\"1662\":1,\"2070\":1}}],[\"比如以ruoyi\",{\"1\":{\"227\":1}}],[\"比如管理员不校验\",{\"1\":{\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1}}],[\"比如流程图渲染\",{\"0\":{\"1130\":1},\"1\":{\"144\":1,\"1130\":1,\"1574\":1,\"1982\":1}}],[\"比如b\",{\"1\":{\"49\":1,\"524\":1,\"709\":1,\"935\":1,\"1105\":1,\"1438\":1,\"1516\":1,\"1816\":1}}],[\"比如最后注入spel策略\",{\"1\":{\"48\":1,\"934\":1,\"1104\":1,\"1515\":1,\"1815\":1}}],[\"比如用户\",{\"1\":{\"41\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"869\":1,\"1092\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1508\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1808\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1}}],[\"比如jpa\",{\"1\":{\"30\":1,\"406\":1,\"460\":1,\"591\":1,\"646\":1,\"782\":1,\"862\":1,\"1085\":1,\"1186\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1}}],[\"比如创建任务前需要初始化信息或者校验数据是否合法\",{\"1\":{\"20\":1,\"451\":1,\"637\":1,\"852\":1,\"1075\":1,\"1365\":1,\"1493\":1,\"1787\":1}}],[\"比如发起人审批\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"比如角色\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"比如\",{\"1\":{\"13\":1,\"52\":1,\"55\":1,\"241\":1,\"247\":2,\"476\":1,\"483\":2,\"526\":1,\"529\":1,\"662\":1,\"669\":2,\"711\":1,\"714\":1,\"825\":1,\"844\":1,\"881\":1,\"888\":1,\"894\":2,\"937\":1,\"940\":1,\"943\":1,\"964\":1,\"970\":1,\"1067\":1,\"1107\":1,\"1110\":1,\"1218\":1,\"1223\":2,\"1390\":1,\"1397\":2,\"1440\":1,\"1443\":1,\"1486\":1,\"1519\":1,\"1522\":1,\"1667\":1,\"1673\":2,\"1780\":1,\"1819\":1,\"1822\":1,\"2075\":1,\"2081\":2}}],[\"比如数据初始化\",{\"1\":{\"10\":1,\"1483\":1,\"1777\":1}}],[\"包括但不限于\",{\"1\":{\"978\":1,\"1706\":1}}],[\"包名\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"包名2\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"包容网关\",{\"1\":{\"297\":1,\"299\":1,\"993\":1,\"1721\":1,\"1923\":1,\"1925\":1}}],[\"包含\",{\"1\":{\"216\":1,\"335\":2,\"435\":1,\"621\":1,\"775\":1,\"821\":1,\"1179\":1,\"1349\":1,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"包含节点和跳转\",{\"1\":{\"143\":1,\"1129\":1,\"1573\":1,\"1981\":1}}],[\"包含可执行所有小类\",{\"1\":{\"11\":1,\"1484\":1,\"1778\":1}}],[\"包快速集成\",{\"1\":{\"115\":1,\"1882\":1}}],[\"如还为生效\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"如虎添翼\",{\"1\":{\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"如下\",{\"1\":{\"2130\":1}}],[\"如下图中示例可以很容易实现\",{\"1\":{\"18\":1,\"50\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1517\":1,\"1786\":1,\"1817\":1}}],[\"如流程引擎集成与使用\",{\"1\":{\"978\":1,\"1706\":1}}],[\"如com\",{\"1\":{\"627\":1}}],[\"如在未集成snack3库的环境下\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"如maven3\",{\"1\":{\"292\":1,\"988\":1,\"1716\":1,\"1918\":1}}],[\"如您在warm\",{\"1\":{\"283\":1}}],[\"如token\",{\"0\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"如\",{\"1\":{\"233\":2,\"234\":1,\"241\":1,\"428\":2,\"432\":2,\"433\":1,\"476\":1,\"614\":2,\"618\":2,\"619\":1,\"662\":1,\"806\":2,\"810\":2,\"811\":1,\"881\":1,\"888\":1,\"1206\":2,\"1210\":2,\"1211\":1,\"1218\":1,\"1334\":2,\"1338\":2,\"1339\":1,\"1390\":1,\"1659\":2,\"1660\":1,\"1667\":1,\"2067\":2,\"2068\":1,\"2075\":1,\"2114\":2,\"2125\":2,\"2142\":2,\"2159\":2,\"2226\":2,\"2325\":2,\"2351\":2}}],[\"如是网关跳过取下一节点\",{\"1\":{\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1,\"1611\":1,\"2019\":1}}],[\"如有遗漏\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"如有想法可联系290631660\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"如it支持请求\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"如发票审核\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"如客户咨询\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"如请假\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"如进行中\",{\"1\":{\"115\":1,\"1882\":1}}],[\"如何成为赞助商\",{\"1\":{\"1048\":1}}],[\"如何成为项目贡献者\",{\"0\":{\"101\":1,\"1030\":1,\"1532\":1,\"1868\":1}}],[\"如何处理long类型精度丢失问题\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"如何贡献\",{\"0\":{\"95\":1,\"1024\":1,\"1526\":1,\"1862\":1}}],[\"如需dromara\",{\"1\":{\"979\":1,\"1707\":1,\"1909\":1}}],[\"如需还想按照原本的自动完成\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"如需求还不够清晰\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"如需修改默认值\",{\"1\":{\"27\":1,\"457\":1,\"643\":1,\"859\":1,\"1082\":1,\"1371\":1,\"1500\":1,\"1794\":1}}],[\"如org\",{\"1\":{\"81\":1,\"441\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"如flag\",{\"1\":{\"63\":2,\"835\":2,\"947\":2,\"1451\":2,\"1830\":2}}],[\"如角色和部门等\",{\"1\":{\"39\":1,\"867\":1,\"1090\":1,\"1506\":1,\"1806\":1}}],[\"如若关闭\",{\"1\":{\"27\":1,\"1082\":1,\"1500\":1,\"1794\":1}}],[\"如包名1\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"如start\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"如果没有此配置没有生效\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"如果没有实例id\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"如果截取\",{\"1\":{\"825\":1,\"943\":1,\"964\":1,\"970\":1}}],[\"如果业务系统不开启租户\",{\"1\":{\"515\":1,\"700\":1,\"924\":1,\"1095\":1,\"1429\":1}}],[\"如果业务和工作流引擎中的租户字段不一致\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"如果不满足实际业务\",{\"1\":{\"403\":1,\"406\":1,\"416\":1,\"588\":1,\"591\":1,\"601\":1,\"779\":1,\"782\":1,\"792\":1,\"1183\":1,\"1186\":1,\"1192\":1,\"1309\":1,\"1312\":1,\"1322\":1}}],[\"如果想要共享后端权限\",{\"1\":{\"337\":1,\"1759\":1,\"1963\":1,\"2242\":1}}],[\"如果扩展了条件表达式策略\",{\"1\":{\"336\":1,\"1758\":1,\"1962\":1,\"2241\":1}}],[\"如果设计器是自己维护的\",{\"1\":{\"333\":1,\"334\":1,\"335\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"2240\":1}}],[\"如果设置了发起人审批\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"如果二开设计器\",{\"1\":{\"331\":1,\"332\":1,\"1957\":1,\"1958\":1}}],[\"如果是对全表的删除或更新操作\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"如果是互斥网关则会判断是否满足条件\",{\"1\":{\"129\":1,\"473\":1,\"659\":1,\"878\":1,\"1059\":1,\"1387\":1,\"1559\":1,\"1896\":1}}],[\"如果还不行\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"如果字数太多无法写完\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"如果版本更新\",{\"1\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"如果前置节点是并行网关\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"如果前置节点是非并行网关\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"如果已办数量=总数量\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"如果办理过程中存在并行网关\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"如果驳回\",{\"1\":{\"242\":1,\"477\":1,\"663\":1,\"882\":1,\"889\":1,\"1219\":1,\"1391\":1,\"1668\":1,\"2076\":1}}],[\"如果有多个token\",{\"1\":{\"235\":1,\"779\":1,\"812\":1,\"1183\":1,\"1212\":1,\"1309\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"如果有多个监听器\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"如果需要工作流共享业务系统权限\",{\"1\":{\"235\":1,\"779\":1,\"812\":1,\"1183\":1,\"1212\":1,\"1309\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"如果觉得内置的id\",{\"1\":{\"219\":1,\"412\":1,\"597\":1,\"788\":1,\"1188\":1,\"1318\":1,\"1649\":1,\"2057\":1}}],[\"如果指定节点\",{\"1\":{\"161\":1,\"168\":1,\"363\":1,\"369\":1,\"548\":1,\"554\":1,\"735\":1,\"742\":1,\"1133\":1,\"1140\":1,\"1269\":1,\"1275\":1,\"1591\":1,\"1598\":1,\"1999\":1,\"2006\":1}}],[\"如果内置的接口不满足或者不够支持实际业务开发\",{\"1\":{\"70\":1,\"814\":1,\"954\":1,\"1342\":1,\"1458\":1,\"1837\":1}}],[\"如果满足不了需求\",{\"1\":{\"37\":1,\"863\":1,\"1086\":1,\"1504\":1,\"1804\":1}}],[\"如果复选框\",{\"1\":{\"35\":2,\"1802\":2}}],[\"如果\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"如果您的企业也使用了\",{\"1\":{\"0\":1}}],[\"如果您的开源项目也使用了\",{\"1\":{\"0\":1}}],[\"分割不同监听器\",{\"1\":{\"453\":1,\"639\":1,\"1367\":1}}],[\"分页插件\",{\"1\":{\"291\":2,\"987\":2,\"1715\":2,\"1917\":2}}],[\"分页对象\",{\"1\":{\"189\":1,\"381\":1,\"566\":1,\"754\":1,\"1152\":1,\"1287\":1,\"1619\":1,\"2027\":1}}],[\"分页查询\",{\"0\":{\"189\":1,\"381\":1,\"566\":1,\"754\":1,\"1152\":1,\"1287\":1,\"1619\":1,\"2027\":1},\"1\":{\"189\":1,\"381\":1,\"566\":1,\"754\":1,\"1152\":1,\"1287\":1,\"1619\":1,\"2027\":1}}],[\"分发源码时候\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"分类更细\",{\"1\":{\"115\":1,\"1882\":1}}],[\"分类简单\",{\"1\":{\"115\":1,\"1882\":1}}],[\"分离部署\",{\"0\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"分隔回显\",{\"1\":{\"333\":2,\"334\":2,\"1755\":2,\"1756\":2,\"1959\":2,\"1960\":2}}],[\"分隔\",{\"1\":{\"13\":1,\"334\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1756\":1,\"1780\":1,\"1960\":1}}],[\"分派后执行\",{\"1\":{\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"分派\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"分派办理人监听器\",{\"1\":{\"10\":1,\"443\":1,\"629\":1,\"843\":1,\"1066\":1,\"1357\":1,\"1483\":1,\"1777\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"分派监听器实现类例子\",{\"0\":{\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1}}],[\"分派监听器执行结束\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"分派监听器开始执行\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"分派监听器\",{\"0\":{\"18\":1},\"1\":{\"3\":1,\"16\":1,\"24\":1,\"447\":1,\"633\":1,\"848\":1,\"856\":1,\"1071\":1,\"1079\":1,\"1361\":1,\"1489\":1,\"1497\":1,\"1770\":1,\"1783\":1,\"1791\":1}}],[\"用来处理超过js数据范围的long类型\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"用逗号隔开\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"用逗号分隔\",{\"1\":{\"235\":1,\"779\":1,\"812\":1,\"1183\":1,\"1212\":1,\"1309\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"用逗号拼接\",{\"1\":{\"35\":2,\"1802\":2}}],[\"用于流程执行中的数据转递\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"用于分页显示\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"用于it服务请求的处理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"用于管理客户服务请求\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"用于管理企业的日常业务流程\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"用户权限标识集合\",{\"1\":{\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1}}],[\"用户角色抽取出来\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"用户列表\",{\"1\":{\"233\":1,\"432\":1,\"618\":1,\"810\":1,\"1210\":1,\"1338\":1,\"1659\":1,\"2067\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"用户\",{\"1\":{\"233\":1,\"234\":3,\"432\":1,\"433\":3,\"618\":1,\"619\":3,\"810\":1,\"811\":3,\"1210\":1,\"1211\":3,\"1338\":1,\"1339\":3,\"1659\":1,\"1660\":3,\"2067\":1,\"2068\":3,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"用户自定义排序方案\",{\"0\":{\"208\":1,\"400\":1,\"585\":1,\"773\":1,\"1171\":1,\"1306\":1,\"1638\":1,\"2046\":1},\"1\":{\"208\":1,\"400\":1,\"585\":1,\"773\":1,\"1171\":1,\"1306\":1,\"1638\":1,\"2046\":1}}],[\"用户所拥有的权限标识\",{\"1\":{\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"375\":1,\"560\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1281\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1}}],[\"用户类\",{\"1\":{\"56\":1,\"530\":1,\"715\":1,\"941\":1,\"1111\":1,\"1444\":1,\"1523\":1,\"1823\":1}}],[\"用户等\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"用\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"4增量脚本sql\",{\"1\":{\"2241\":1}}],[\"4终止\",{\"1\":{\"1422\":1}}],[\"4<\",{\"1\":{\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"2167\":1,\"2203\":1,\"2217\":1,\"2228\":1,\"2290\":1,\"2316\":1,\"2333\":1,\"2359\":1}}],[\"4版本后建议使用分派监听器修改办理人\",{\"1\":{\"447\":1,\"633\":1,\"1361\":1}}],[\"43\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"42\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"46\",{\"1\":{\"332\":1,\"1958\":1}}],[\"4会签\",{\"1\":{\"266\":1,\"507\":1,\"560\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"4并行网关\",{\"1\":{\"266\":1,\"267\":1,\"268\":1,\"269\":2,\"270\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":2,\"511\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":2,\"696\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":2,\"920\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":2,\"1249\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":2,\"1425\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":2,\"1696\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":2,\"2104\":1}}],[\"404\",{\"1\":{\"2377\":1}}],[\"4096\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"400\",{\"1\":{\"265\":1,\"268\":2,\"506\":1,\"509\":2,\"691\":1,\"694\":2,\"915\":1,\"918\":2,\"1244\":1,\"1247\":2,\"1420\":1,\"1423\":2,\"1691\":1,\"1694\":2,\"2099\":1,\"2102\":2}}],[\"40\",{\"1\":{\"115\":1,\"265\":2,\"266\":3,\"267\":3,\"268\":1,\"269\":2,\"270\":1,\"271\":1,\"287\":1,\"506\":2,\"507\":3,\"508\":3,\"509\":1,\"510\":2,\"511\":1,\"512\":1,\"691\":2,\"692\":3,\"693\":3,\"694\":1,\"695\":2,\"696\":1,\"697\":1,\"915\":2,\"916\":3,\"917\":3,\"918\":1,\"919\":2,\"920\":1,\"921\":1,\"983\":1,\"1244\":2,\"1245\":3,\"1246\":3,\"1247\":1,\"1248\":2,\"1249\":1,\"1250\":1,\"1420\":2,\"1421\":3,\"1422\":3,\"1423\":1,\"1424\":2,\"1425\":1,\"1426\":1,\"1691\":2,\"1692\":3,\"1693\":3,\"1694\":1,\"1695\":2,\"1696\":1,\"1697\":1,\"1711\":1,\"1882\":1,\"1913\":1,\"2099\":2,\"2100\":3,\"2101\":3,\"2102\":1,\"2103\":2,\"2104\":1,\"2105\":1}}],[\"4\",{\"0\":{\"13\":1,\"18\":1,\"19\":1,\"35\":1,\"49\":1,\"116\":1,\"128\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"244\":1,\"254\":1,\"257\":1,\"268\":1,\"279\":1,\"289\":1,\"307\":1,\"314\":1,\"322\":1,\"327\":1,\"336\":1,\"342\":1,\"352\":1,\"365\":1,\"372\":1,\"376\":1,\"377\":1,\"382\":1,\"427\":1,\"429\":1,\"430\":1,\"431\":1,\"432\":1,\"433\":1,\"450\":1,\"455\":1,\"472\":1,\"479\":1,\"490\":1,\"492\":1,\"499\":1,\"528\":1,\"537\":1,\"550\":1,\"557\":1,\"561\":1,\"562\":1,\"567\":1,\"613\":1,\"615\":1,\"616\":1,\"617\":1,\"618\":1,\"619\":1,\"636\":1,\"641\":1,\"658\":1,\"665\":1,\"676\":1,\"678\":1,\"713\":1,\"722\":1,\"737\":1,\"745\":1,\"749\":1,\"750\":1,\"755\":1,\"805\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"811\":1,\"830\":1,\"831\":1,\"832\":1,\"845\":1,\"851\":1,\"877\":1,\"884\":1,\"891\":1,\"901\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":2,\"935\":1,\"985\":1,\"998\":1,\"1006\":1,\"1014\":1,\"1019\":1,\"1045\":1,\"1058\":1,\"1068\":1,\"1074\":1,\"1105\":1,\"1118\":1,\"1135\":1,\"1143\":1,\"1147\":1,\"1148\":1,\"1153\":1,\"1205\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1221\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1235\":1,\"1236\":2,\"1247\":1,\"1258\":1,\"1271\":1,\"1278\":1,\"1282\":1,\"1283\":1,\"1288\":1,\"1333\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1364\":1,\"1369\":1,\"1386\":1,\"1393\":1,\"1404\":1,\"1406\":1,\"1413\":1,\"1442\":1,\"1486\":1,\"1492\":1,\"1516\":1,\"1547\":1,\"1558\":1,\"1656\":1,\"1657\":1,\"1658\":1,\"1659\":1,\"1660\":1,\"1670\":1,\"1680\":1,\"1683\":1,\"1694\":1,\"1713\":1,\"1730\":1,\"1737\":1,\"1745\":1,\"1750\":1,\"1758\":1,\"1764\":1,\"1780\":1,\"1786\":1,\"1802\":1,\"1816\":1,\"1883\":1,\"1895\":1,\"1915\":1,\"1933\":1,\"1940\":1,\"1948\":1,\"1953\":1,\"1962\":1,\"1968\":1,\"2064\":1,\"2065\":1,\"2066\":1,\"2067\":1,\"2068\":1,\"2078\":1,\"2088\":1,\"2091\":1,\"2102\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2114\":1,\"2122\":1,\"2123\":1,\"2124\":1,\"2125\":1,\"2129\":1,\"2133\":1,\"2139\":1,\"2140\":1,\"2141\":1,\"2142\":1,\"2156\":1,\"2157\":1,\"2158\":1,\"2159\":1,\"2173\":1,\"2175\":1,\"2203\":1,\"2217\":1,\"2223\":1,\"2224\":1,\"2225\":1,\"2226\":1,\"2234\":1,\"2236\":1,\"2241\":1,\"2249\":1,\"2290\":1,\"2316\":1,\"2322\":1,\"2323\":1,\"2324\":1,\"2325\":1,\"2339\":1,\"2341\":1,\"2348\":1,\"2349\":1,\"2350\":1,\"2351\":1,\"2365\":1,\"2367\":1,\"2389\":1},\"1\":{\"19\":1,\"46\":1,\"59\":1,\"63\":2,\"64\":1,\"77\":1,\"83\":1,\"89\":1,\"101\":1,\"216\":2,\"217\":1,\"240\":1,\"254\":1,\"262\":1,\"263\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"287\":1,\"291\":1,\"306\":1,\"333\":2,\"335\":1,\"336\":1,\"406\":2,\"435\":1,\"436\":1,\"449\":1,\"482\":1,\"483\":1,\"499\":1,\"503\":1,\"504\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"591\":2,\"621\":1,\"622\":1,\"635\":1,\"668\":1,\"669\":1,\"684\":1,\"688\":1,\"689\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"775\":9,\"776\":1,\"782\":2,\"821\":1,\"822\":1,\"825\":1,\"835\":2,\"836\":1,\"850\":1,\"887\":1,\"894\":1,\"907\":1,\"912\":1,\"913\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"932\":1,\"943\":1,\"947\":2,\"948\":1,\"964\":1,\"970\":1,\"983\":1,\"987\":1,\"997\":1,\"1030\":1,\"1073\":1,\"1102\":1,\"1179\":2,\"1180\":1,\"1186\":2,\"1214\":1,\"1217\":1,\"1223\":1,\"1236\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1312\":2,\"1349\":1,\"1350\":1,\"1363\":1,\"1396\":1,\"1397\":1,\"1413\":1,\"1417\":1,\"1418\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1447\":1,\"1451\":2,\"1452\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1491\":1,\"1513\":1,\"1532\":1,\"1646\":2,\"1647\":1,\"1666\":1,\"1680\":1,\"1688\":1,\"1689\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1711\":1,\"1715\":1,\"1729\":1,\"1755\":2,\"1757\":1,\"1758\":1,\"1785\":1,\"1813\":1,\"1826\":1,\"1830\":2,\"1831\":1,\"1844\":1,\"1850\":1,\"1856\":1,\"1868\":1,\"1913\":1,\"1917\":1,\"1932\":1,\"1959\":2,\"1961\":1,\"1962\":1,\"2054\":2,\"2055\":1,\"2074\":1,\"2088\":1,\"2096\":1,\"2097\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2121\":1,\"2150\":2,\"2173\":1,\"2190\":1,\"2209\":2,\"2234\":1,\"2240\":1,\"2249\":1,\"2259\":1,\"2270\":2,\"2277\":1,\"2296\":2,\"2303\":1,\"2339\":1,\"2365\":1}}],[\"消息通知等\",{\"1\":{\"10\":1,\"1483\":1,\"1777\":1}}],[\"但是这样对一般的项目会是好事吗\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"但是由于不同orm框架的数据库操作的\",{\"1\":{\"461\":1,\"647\":1,\"1375\":1}}],[\"但我们每年都在支付第三方域名\",{\"1\":{\"283\":1}}],[\"但动态修改颜色或添加注释需结合前端代码\",{\"1\":{\"115\":1,\"1882\":1}}],[\"但近年活跃度下降\",{\"1\":{\"115\":1,\"1882\":1}}],[\"但在开始写代码之前\",{\"1\":{\"100\":1,\"1029\":1,\"1531\":1,\"1867\":1}}],[\"但不限于\",{\"1\":{\"10\":1,\"1483\":1,\"1777\":1}}],[\"但一群人会走的更远\",{\"1\":{\"0\":1}}],[\"监听办理过程的不同环节\",{\"1\":{\"442\":1,\"628\":1,\"1356\":1}}],[\"监听办理过程的不同时期\",{\"1\":{\"9\":1,\"841\":1,\"1064\":1,\"1482\":1,\"1776\":1}}],[\"监听节点属性变化并更新\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"监听器生命周期\",{\"1\":{\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"监听器生命周期图\",{\"0\":{\"12\":1,\"445\":1,\"631\":1,\"846\":1,\"1069\":1,\"1359\":1,\"1485\":1,\"1779\":1}}],[\"监听器可以说是工作流引擎的上限\",{\"1\":{\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"监听器管理\",{\"0\":{\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"监听器配置页面ui调整\",{\"1\":{\"2131\":1}}],[\"监听器使用\",{\"0\":{\"446\":1,\"632\":1,\"1360\":1}}],[\"监听器问题修复\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"监听器优化配置\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1}}],[\"监听器等对象获取不到\",{\"0\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"监听器等\",{\"1\":{\"125\":1,\"469\":1,\"655\":1,\"874\":1,\"1055\":1,\"1383\":1,\"1555\":1,\"1892\":1}}],[\"监听器与流程变量\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2163\":1,\"2175\":1,\"2181\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2329\":1,\"2341\":1,\"2355\":1,\"2367\":1,\"2373\":1}}],[\"监听器表达式实现类\",{\"0\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"监听器表达式策略实现类集合\",{\"1\":{\"86\":1,\"831\":1,\"967\":1,\"1474\":1,\"1853\":1}}],[\"监听器表达式策略接口\",{\"1\":{\"86\":1,\"831\":1,\"967\":1,\"1474\":1,\"1853\":1}}],[\"监听器表达式接口\",{\"0\":{\"86\":1,\"831\":1,\"967\":1,\"1474\":1,\"1853\":1}}],[\"监听器表达式\",{\"0\":{\"85\":1,\"830\":1,\"966\":1,\"1473\":1,\"1852\":1}}],[\"监听器表达式扩展\",{\"0\":{\"82\":1,\"963\":1,\"1470\":1,\"1849\":1}}],[\"监听器参数使用\",{\"0\":{\"25\":1,\"455\":1,\"641\":1,\"857\":1,\"1080\":1,\"1369\":1,\"1498\":1,\"1792\":1}}],[\"监听器接口\",{\"1\":{\"16\":1,\"447\":1,\"633\":1,\"848\":1,\"1071\":1,\"1361\":1,\"1489\":1,\"1783\":1}}],[\"监听器路径\",{\"1\":{\"13\":2,\"265\":1,\"268\":1,\"506\":1,\"509\":1,\"691\":1,\"694\":1,\"844\":2,\"915\":1,\"918\":1,\"1067\":2,\"1244\":1,\"1247\":1,\"1420\":1,\"1423\":1,\"1486\":2,\"1691\":1,\"1694\":1,\"1780\":2,\"2099\":1,\"2102\":1}}],[\"监听器类型和监听器路径\",{\"1\":{\"453\":1,\"639\":1,\"1367\":1}}],[\"监听器类型\",{\"0\":{\"443\":1,\"629\":1,\"1357\":1},\"1\":{\"13\":1,\"265\":1,\"268\":1,\"506\":1,\"509\":1,\"691\":1,\"694\":1,\"844\":1,\"915\":1,\"918\":1,\"1067\":1,\"1244\":1,\"1247\":1,\"1420\":1,\"1423\":1,\"1486\":1,\"1691\":1,\"1694\":1,\"1780\":1,\"2099\":1,\"2102\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"监听器设置\",{\"0\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1},\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"监听器大类\",{\"0\":{\"11\":1,\"842\":1,\"1065\":1,\"1484\":1,\"1778\":1}}],[\"监听器小类\",{\"0\":{\"10\":1,\"843\":1,\"1066\":1,\"1483\":1,\"1777\":1}}],[\"监听器\",{\"0\":{\"9\":1,\"442\":1,\"628\":1,\"841\":1,\"1064\":1,\"1356\":1,\"1482\":1,\"1776\":1},\"1\":{\"115\":1,\"1882\":1}}],[\"监听器变量新增返回节点信息\",{\"1\":{\"324\":1,\"1016\":1,\"1747\":1,\"1950\":1}}],[\"监听器变量\",{\"1\":{\"3\":1,\"17\":1,\"19\":1,\"24\":4,\"448\":1,\"449\":1,\"634\":1,\"635\":1,\"849\":1,\"850\":1,\"856\":4,\"1072\":1,\"1073\":1,\"1079\":4,\"1362\":1,\"1363\":1,\"1490\":1,\"1491\":1,\"1497\":4,\"1770\":1,\"1784\":1,\"1785\":1,\"1791\":4}}],[\"在pom\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"在一些特殊场景下\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"在某些情况下\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"在使用mybatis扩展包时\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"在\",{\"1\":{\"279\":1,\"1702\":1,\"1904\":1}}],[\"在监听器中\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"在执行流程时\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"在执行互斥网关时候\",{\"1\":{\"215\":1,\"774\":1,\"1178\":1,\"1645\":1,\"2053\":1}}],[\"在开始之前\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1}}],[\"在前端加载设计器页面路径后面\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"在人力资源管理中\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"在项目管理中\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"在resource目录下新建meta\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"在进行截取\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"在流程变量中传入$\",{\"1\":{\"2149\":1,\"2208\":1,\"2269\":1,\"2295\":1}}],[\"在流程定义中配置\",{\"1\":{\"11\":1,\"444\":1,\"630\":1,\"842\":1,\"1065\":1,\"1358\":1,\"1484\":1,\"1778\":1}}],[\"在流程节点中配置\",{\"1\":{\"11\":1,\"444\":1,\"630\":1,\"842\":1,\"1065\":1,\"1358\":1,\"1484\":1,\"1778\":1}}],[\"在办理流程过程中\",{\"1\":{\"9\":1,\"442\":1,\"628\":1,\"841\":1,\"1064\":1,\"1356\":1,\"1482\":1,\"1776\":1}}],[\"在此\",{\"1\":{\"0\":4}}],[\"提高业务效率\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"提高工作效率\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"提供流程配置界面\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"提供角色\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"提供待办任务\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"提供集成方式\",{\"1\":{\"330\":1,\"1022\":1,\"1753\":1,\"1956\":1}}],[\"提供\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"提供的方案\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"提供实例\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"提供解决方案\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"提供问题答疑服务和技术分享等服务\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"提问的规范在issue的模板里已经写好了\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"提示语增加流程编码\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"提示\",{\"1\":{\"9\":1,\"27\":1,\"31\":1,\"37\":1,\"39\":1,\"43\":1,\"45\":1,\"58\":1,\"65\":1,\"69\":1,\"80\":1,\"82\":1,\"88\":1,\"113\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"209\":1,\"215\":1,\"219\":1,\"222\":1,\"226\":1,\"229\":1,\"236\":1,\"247\":1,\"272\":1,\"288\":1,\"289\":1,\"291\":1,\"293\":1,\"294\":1,\"984\":1,\"985\":1,\"987\":1,\"989\":1,\"990\":1,\"1053\":1,\"1055\":1,\"1056\":1,\"1057\":1,\"1058\":1,\"1059\":1,\"1446\":1,\"1453\":1,\"1457\":1,\"1468\":1,\"1470\":1,\"1476\":1,\"1482\":1,\"1500\":1,\"1504\":1,\"1506\":1,\"1510\":1,\"1512\":1,\"1544\":1,\"1553\":1,\"1555\":1,\"1556\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1639\":1,\"1645\":1,\"1649\":1,\"1652\":1,\"1655\":1,\"1662\":1,\"1673\":1,\"1698\":1,\"1712\":1,\"1713\":1,\"1715\":1,\"1717\":1,\"1718\":1,\"1754\":1,\"1776\":1,\"1794\":1,\"1798\":1,\"1804\":1,\"1806\":1,\"1810\":1,\"1812\":1,\"1825\":1,\"1832\":1,\"1836\":1,\"1847\":1,\"1849\":1,\"1855\":1,\"1880\":1,\"1890\":1,\"1892\":1,\"1893\":1,\"1894\":1,\"1895\":1,\"1896\":1,\"1914\":1,\"1915\":1,\"1917\":1,\"1919\":1,\"1920\":1,\"2047\":1,\"2053\":1,\"2057\":1,\"2060\":1,\"2063\":1,\"2070\":1,\"2081\":1,\"2106\":1}}],[\"提交时间范围\",{\"1\":{\"332\":1,\"1958\":1}}],[\"提交issue\",{\"0\":{\"277\":1,\"1701\":1,\"1903\":1}}],[\"提交审批后的状态\",{\"1\":{\"243\":1,\"478\":1,\"664\":1,\"883\":1,\"890\":1,\"1220\":1,\"1392\":1,\"1669\":1,\"2077\":1}}],[\"提交流程后\",{\"1\":{\"128\":1,\"472\":1,\"658\":1,\"877\":1,\"1058\":1,\"1386\":1,\"1558\":1,\"1895\":1}}],[\"提交流程\",{\"0\":{\"128\":1,\"472\":1,\"658\":1,\"877\":1,\"1058\":1,\"1386\":1,\"1558\":1,\"1895\":1}}],[\"提交到自己的远程仓库\",{\"0\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"提交pr\",{\"0\":{\"103\":1,\"1032\":1,\"1534\":1,\"1870\":1}}],[\"提交\",{\"1\":{\"0\":2}}],[\"效果图\",{\"0\":{\"5\":1,\"8\":1,\"1772\":1,\"1775\":1}}],[\"3<\",{\"1\":{\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2}}],[\"35\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"31\",{\"0\":{\"304\":1,\"329\":1,\"1021\":1,\"1727\":1,\"1752\":1,\"1930\":1,\"1955\":1}}],[\"3待办任务的委托人权限\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"3自动通过\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"3互斥网关\",{\"1\":{\"266\":1,\"267\":1,\"268\":1,\"269\":2,\"270\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":2,\"511\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":2,\"696\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":2,\"920\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":2,\"1249\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":2,\"1425\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":2,\"1696\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":2,\"2104\":1}}],[\"3委派\",{\"1\":{\"174\":1,\"266\":1,\"375\":1,\"507\":1,\"560\":1,\"692\":1,\"748\":1,\"916\":1,\"1146\":1,\"1245\":1,\"1281\":1,\"1421\":1,\"1604\":1,\"1692\":1,\"2012\":1,\"2100\":1}}],[\"30\",{\"1\":{\"133\":4,\"335\":1,\"1063\":4,\"1563\":4,\"1757\":1,\"1900\":4,\"1961\":1,\"2240\":1}}],[\"3或者以上\",{\"1\":{\"27\":1,\"29\":1,\"1082\":1,\"1500\":1,\"1502\":1,\"1794\":1,\"1796\":1}}],[\"3\",{\"0\":{\"5\":1,\"12\":1,\"34\":1,\"48\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":2,\"68\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":2,\"85\":1,\"86\":1,\"87\":1,\"91\":1,\"92\":1,\"93\":1,\"115\":1,\"127\":1,\"214\":1,\"227\":1,\"229\":1,\"239\":1,\"243\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":2,\"254\":1,\"255\":1,\"256\":1,\"267\":1,\"278\":1,\"288\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":2,\"309\":1,\"310\":1,\"315\":1,\"323\":1,\"328\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":2,\"338\":1,\"339\":1,\"351\":1,\"364\":1,\"368\":1,\"369\":1,\"370\":1,\"371\":2,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"381\":1,\"411\":1,\"417\":1,\"423\":1,\"424\":1,\"425\":1,\"426\":2,\"427\":1,\"428\":1,\"437\":1,\"446\":1,\"447\":1,\"448\":1,\"449\":2,\"450\":1,\"451\":1,\"452\":1,\"453\":1,\"454\":1,\"464\":1,\"471\":1,\"478\":1,\"486\":1,\"487\":1,\"488\":1,\"489\":2,\"490\":1,\"491\":1,\"498\":1,\"520\":1,\"525\":1,\"536\":1,\"549\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":2,\"557\":1,\"558\":1,\"559\":1,\"560\":1,\"566\":1,\"596\":1,\"602\":1,\"608\":1,\"609\":1,\"610\":1,\"611\":1,\"612\":2,\"613\":1,\"614\":1,\"623\":1,\"632\":1,\"633\":1,\"634\":1,\"635\":2,\"636\":1,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"650\":1,\"657\":1,\"664\":1,\"672\":1,\"673\":1,\"674\":1,\"675\":2,\"676\":1,\"677\":1,\"705\":1,\"710\":1,\"721\":1,\"736\":1,\"741\":1,\"742\":1,\"743\":1,\"744\":2,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"754\":1,\"787\":1,\"793\":1,\"801\":1,\"802\":1,\"803\":1,\"804\":2,\"805\":1,\"806\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":2,\"823\":1,\"827\":1,\"828\":1,\"829\":1,\"836\":1,\"844\":1,\"850\":1,\"866\":1,\"876\":1,\"883\":1,\"890\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":2,\"901\":1,\"902\":1,\"906\":1,\"929\":1,\"934\":1,\"945\":1,\"946\":1,\"947\":1,\"948\":2,\"952\":1,\"956\":1,\"957\":1,\"958\":1,\"959\":2,\"966\":1,\"967\":1,\"968\":1,\"972\":1,\"973\":1,\"974\":1,\"984\":1,\"995\":1,\"997\":1,\"998\":1,\"999\":2,\"1000\":1,\"1001\":1,\"1007\":1,\"1015\":1,\"1020\":1,\"1044\":1,\"1057\":1,\"1067\":1,\"1073\":1,\"1089\":1,\"1100\":1,\"1104\":1,\"1117\":1,\"1134\":1,\"1139\":1,\"1140\":1,\"1141\":1,\"1142\":2,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1152\":1,\"1177\":1,\"1193\":1,\"1201\":1,\"1202\":1,\"1203\":1,\"1204\":2,\"1205\":1,\"1206\":1,\"1216\":1,\"1220\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1229\":2,\"1230\":1,\"1231\":1,\"1235\":1,\"1246\":1,\"1257\":1,\"1270\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":2,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1287\":1,\"1317\":1,\"1323\":1,\"1329\":1,\"1330\":1,\"1331\":1,\"1332\":2,\"1333\":1,\"1334\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":1,\"1351\":1,\"1360\":1,\"1361\":1,\"1362\":1,\"1363\":2,\"1364\":1,\"1365\":1,\"1366\":1,\"1367\":1,\"1368\":1,\"1378\":1,\"1385\":1,\"1392\":1,\"1400\":1,\"1401\":1,\"1402\":1,\"1403\":2,\"1404\":1,\"1405\":1,\"1412\":1,\"1434\":1,\"1439\":1,\"1449\":1,\"1450\":1,\"1451\":1,\"1452\":2,\"1456\":1,\"1460\":1,\"1461\":1,\"1462\":1,\"1463\":2,\"1473\":1,\"1474\":1,\"1475\":1,\"1479\":1,\"1480\":1,\"1481\":1,\"1485\":1,\"1491\":1,\"1515\":1,\"1546\":1,\"1557\":1,\"1644\":1,\"1655\":1,\"1665\":1,\"1669\":1,\"1676\":1,\"1677\":1,\"1678\":1,\"1679\":2,\"1680\":1,\"1681\":1,\"1682\":1,\"1693\":1,\"1702\":1,\"1712\":1,\"1726\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1731\":2,\"1732\":1,\"1733\":1,\"1738\":1,\"1746\":1,\"1751\":1,\"1756\":1,\"1757\":1,\"1758\":1,\"1759\":2,\"1760\":1,\"1761\":1,\"1772\":1,\"1779\":1,\"1785\":1,\"1801\":1,\"1815\":1,\"1828\":1,\"1829\":1,\"1830\":1,\"1831\":2,\"1835\":1,\"1839\":1,\"1840\":1,\"1841\":1,\"1842\":2,\"1852\":1,\"1853\":1,\"1854\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1882\":1,\"1894\":1,\"1904\":1,\"1914\":1,\"1929\":1,\"1930\":1,\"1931\":1,\"1932\":1,\"1933\":1,\"1934\":2,\"1935\":1,\"1936\":1,\"1941\":1,\"1949\":1,\"1954\":1,\"1960\":1,\"1961\":1,\"1962\":1,\"1963\":2,\"1964\":1,\"1965\":1,\"2052\":1,\"2063\":1,\"2073\":1,\"2077\":1,\"2084\":1,\"2085\":1,\"2086\":1,\"2087\":2,\"2088\":1,\"2089\":1,\"2090\":1,\"2101\":1,\"2110\":1,\"2121\":1,\"2129\":1,\"2132\":1,\"2138\":1,\"2155\":1,\"2172\":1,\"2174\":1,\"2202\":1,\"2216\":1,\"2222\":1,\"2233\":1,\"2235\":1,\"2240\":1,\"2241\":1,\"2242\":2,\"2243\":1,\"2244\":1,\"2250\":1,\"2289\":1,\"2315\":1,\"2321\":1,\"2338\":1,\"2340\":1,\"2347\":1,\"2364\":1,\"2366\":1,\"2385\":1,\"2387\":1,\"2389\":1,\"2391\":1,\"2397\":2},\"1\":{\"49\":1,\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"101\":1,\"131\":1,\"216\":1,\"240\":1,\"241\":3,\"242\":3,\"262\":1,\"263\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":2,\"269\":1,\"270\":1,\"271\":1,\"291\":1,\"314\":1,\"334\":1,\"335\":1,\"336\":1,\"418\":1,\"435\":1,\"457\":1,\"476\":3,\"477\":3,\"482\":1,\"483\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"503\":1,\"504\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":2,\"510\":1,\"511\":1,\"512\":1,\"521\":1,\"523\":1,\"603\":1,\"609\":1,\"621\":1,\"643\":1,\"662\":3,\"663\":3,\"668\":1,\"669\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"688\":1,\"689\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":2,\"695\":1,\"696\":1,\"697\":1,\"706\":1,\"708\":1,\"775\":1,\"794\":1,\"821\":1,\"825\":1,\"859\":1,\"867\":1,\"881\":3,\"882\":3,\"887\":1,\"888\":3,\"889\":3,\"894\":1,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"912\":1,\"913\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":2,\"919\":1,\"920\":1,\"921\":1,\"930\":1,\"943\":1,\"964\":1,\"970\":1,\"987\":1,\"1006\":1,\"1030\":1,\"1061\":1,\"1082\":1,\"1090\":1,\"1105\":1,\"1179\":1,\"1194\":1,\"1214\":1,\"1217\":1,\"1218\":3,\"1219\":3,\"1223\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":2,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1324\":1,\"1349\":1,\"1371\":1,\"1390\":3,\"1391\":3,\"1396\":1,\"1397\":1,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2,\"1417\":1,\"1418\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":2,\"1424\":1,\"1425\":1,\"1426\":1,\"1435\":1,\"1437\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1516\":1,\"1532\":1,\"1561\":1,\"1646\":1,\"1666\":1,\"1667\":3,\"1668\":3,\"1688\":1,\"1689\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":2,\"1695\":1,\"1696\":1,\"1697\":1,\"1715\":1,\"1737\":1,\"1756\":1,\"1757\":1,\"1758\":1,\"1816\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1,\"1868\":1,\"1898\":1,\"1917\":1,\"1940\":1,\"1960\":1,\"1961\":1,\"1962\":1,\"2054\":1,\"2074\":1,\"2075\":3,\"2076\":3,\"2096\":1,\"2097\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":2,\"2103\":1,\"2104\":1,\"2105\":1,\"2107\":1,\"2108\":1,\"2118\":1,\"2119\":1,\"2121\":1,\"2135\":1,\"2136\":1,\"2149\":1,\"2152\":1,\"2153\":1,\"2167\":1,\"2208\":1,\"2219\":1,\"2220\":1,\"2228\":1,\"2240\":1,\"2241\":1,\"2244\":1,\"2269\":1,\"2295\":1,\"2318\":1,\"2319\":1,\"2333\":1,\"2344\":1,\"2345\":1,\"2359\":1}}],[\"+vue3\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"+\",{\"1\":{\"4\":1,\"17\":2,\"41\":2,\"64\":2,\"234\":2,\"333\":8,\"335\":11,\"338\":1,\"425\":3,\"426\":1,\"428\":5,\"433\":2,\"448\":2,\"496\":1,\"498\":1,\"499\":3,\"531\":2,\"611\":2,\"614\":5,\"619\":2,\"634\":2,\"681\":1,\"683\":1,\"684\":3,\"716\":2,\"803\":3,\"804\":1,\"806\":5,\"811\":2,\"836\":2,\"849\":2,\"869\":2,\"904\":1,\"906\":1,\"907\":3,\"948\":2,\"1072\":2,\"1092\":2,\"1203\":3,\"1204\":1,\"1206\":5,\"1211\":2,\"1233\":1,\"1235\":1,\"1236\":3,\"1331\":3,\"1332\":1,\"1334\":5,\"1339\":2,\"1362\":2,\"1410\":1,\"1412\":1,\"1413\":3,\"1445\":2,\"1452\":2,\"1490\":2,\"1508\":2,\"1660\":2,\"1755\":8,\"1757\":11,\"1760\":1,\"1771\":1,\"1784\":2,\"1808\":2,\"1831\":2,\"1959\":8,\"1961\":11,\"1964\":1,\"2068\":2,\"2170\":1,\"2172\":1,\"2173\":2,\"2231\":1,\"2233\":1,\"2234\":2,\"2240\":11,\"2243\":1,\"2336\":1,\"2338\":1,\"2339\":2,\"2362\":1,\"2364\":1,\"2365\":2}}],[\"aggregate>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"atomicboolean\",{\"1\":{\"515\":2,\"700\":2,\"924\":2,\"1095\":2,\"1429\":2}}],[\"attachment\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"attack\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"avatar\",{\"1\":{\"284\":1,\"980\":1,\"1708\":1,\"1910\":1}}],[\"allow\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"all\",{\"1\":{\"248\":1,\"484\":1,\"670\":1,\"895\":1,\"1224\":1,\"1398\":1,\"1674\":1,\"2082\":1}}],[\"auto\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"autowired\",{\"1\":{\"228\":1,\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"authenticated\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"authfilter\",{\"1\":{\"228\":2}}],[\"auth\",{\"1\":{\"228\":3}}],[\"auth1\",{\"1\":{\"35\":1,\"1802\":1}}],[\"authorizehttprequests\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"authorization1\",{\"1\":{\"779\":1,\"1183\":1,\"1309\":1}}],[\"authorization\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"authorization=$\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"author\",{\"1\":{\"24\":1,\"29\":1,\"40\":1,\"41\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"77\":1,\"83\":1,\"86\":1,\"87\":1,\"89\":1,\"92\":1,\"93\":1,\"228\":2,\"233\":1,\"234\":1,\"291\":1,\"404\":1,\"432\":1,\"433\":1,\"520\":1,\"531\":2,\"589\":1,\"618\":1,\"619\":1,\"705\":1,\"716\":2,\"780\":1,\"810\":1,\"811\":1,\"825\":1,\"828\":1,\"829\":1,\"831\":1,\"832\":1,\"834\":1,\"835\":1,\"836\":1,\"856\":1,\"868\":1,\"869\":1,\"929\":1,\"943\":1,\"946\":1,\"947\":1,\"948\":1,\"964\":1,\"967\":1,\"968\":1,\"970\":1,\"973\":1,\"974\":1,\"987\":1,\"1079\":1,\"1082\":1,\"1091\":1,\"1092\":1,\"1100\":1,\"1184\":1,\"1210\":1,\"1211\":1,\"1310\":1,\"1338\":1,\"1339\":1,\"1434\":1,\"1445\":2,\"1447\":1,\"1450\":1,\"1451\":1,\"1452\":1,\"1465\":1,\"1471\":1,\"1474\":1,\"1475\":1,\"1477\":1,\"1480\":1,\"1481\":1,\"1497\":1,\"1502\":1,\"1507\":1,\"1508\":1,\"1659\":1,\"1660\":1,\"1715\":1,\"1791\":1,\"1796\":1,\"1807\":1,\"1808\":1,\"1826\":1,\"1829\":1,\"1830\":1,\"1831\":1,\"1844\":1,\"1850\":1,\"1853\":1,\"1854\":1,\"1856\":1,\"1859\":1,\"1860\":1,\"1917\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"a\",{\"1\":{\"217\":2,\"436\":2,\"622\":2,\"776\":2,\"822\":2,\"1180\":2,\"1350\":2,\"1647\":2,\"2055\":2}}],[\"anon\",{\"1\":{\"422\":1,\"607\":2,\"800\":2,\"1200\":2,\"1328\":2}}],[\"annotation\",{\"1\":{\"291\":4,\"987\":4,\"1715\":4,\"1917\":4}}],[\"anyrequest\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"any\",{\"1\":{\"268\":1,\"301\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"1927\":1,\"2102\":1,\"2180\":1,\"2372\":1}}],[\"anynodecode不为空\",{\"1\":{\"181\":1,\"377\":1,\"562\":1,\"750\":1,\"1148\":1,\"1283\":1,\"1611\":1,\"2019\":1}}],[\"anynodecode\",{\"1\":{\"181\":2,\"377\":2,\"562\":2,\"750\":2,\"1148\":2,\"1283\":2,\"1611\":2,\"2019\":2}}],[\"antmatchers\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"ant\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"activity\",{\"1\":{\"265\":1,\"267\":1,\"506\":1,\"508\":1,\"691\":1,\"693\":1,\"915\":1,\"917\":1,\"1244\":1,\"1246\":1,\"1420\":1,\"1422\":1,\"1691\":1,\"1693\":1,\"2099\":1,\"2101\":1}}],[\"activiti\",{\"1\":{\"115\":2,\"1882\":2}}],[\"active\",{\"1\":{\"150\":1,\"164\":1,\"359\":1,\"366\":1,\"544\":1,\"551\":1,\"731\":1,\"738\":1,\"1127\":1,\"1136\":1,\"1265\":1,\"1272\":1,\"1580\":1,\"1594\":1,\"1988\":1,\"2002\":1}}],[\"amis\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"app\",{\"1\":{\"338\":2,\"425\":2,\"426\":2,\"803\":2,\"804\":2,\"1203\":2,\"1204\":2,\"1331\":2,\"1332\":2,\"1760\":2,\"1964\":2,\"2243\":2}}],[\"application\",{\"1\":{\"288\":1,\"333\":1,\"984\":1,\"1712\":1,\"1755\":1,\"1914\":1,\"1959\":1}}],[\"approver\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"approval\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"api是前端访问前缀比如prod\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"api注解\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"apijson\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"api\",{\"1\":{\"115\":1,\"228\":2,\"338\":2,\"425\":3,\"426\":3,\"803\":3,\"804\":3,\"1203\":3,\"1204\":3,\"1331\":3,\"1332\":3,\"1760\":2,\"1882\":1,\"1964\":2,\"2187\":1,\"2243\":2,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"apache\",{\"1\":{\"115\":1,\"1882\":1,\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"advanced\",{\"0\":{\"2378\":1,\"2394\":1,\"2400\":1,\"2404\":1}}],[\"adru\",{\"1\":{\"316\":2,\"1008\":2,\"1739\":2,\"1942\":2}}],[\"admin的application\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"admin123\",{\"1\":{\"114\":1,\"121\":1,\"1043\":1,\"1051\":1,\"1545\":1,\"1551\":1,\"1881\":1,\"1888\":1,\"2116\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2176\":1,\"2182\":1,\"2237\":1,\"2330\":1,\"2342\":1,\"2356\":1,\"2368\":1,\"2374\":1}}],[\"admin\",{\"1\":{\"114\":1,\"121\":1,\"496\":1,\"681\":1,\"904\":1,\"1043\":1,\"1051\":1,\"1233\":1,\"1410\":1,\"1545\":1,\"1551\":1,\"1881\":1,\"1888\":1,\"2116\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2170\":1,\"2176\":1,\"2182\":1,\"2231\":1,\"2237\":1,\"2330\":1,\"2336\":1,\"2342\":1,\"2356\":1,\"2362\":1,\"2368\":1,\"2374\":1}}],[\"additionalparam>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"addinterceptor\",{\"1\":{\"423\":1,\"516\":1,\"608\":1,\"701\":1,\"801\":1,\"925\":1,\"1096\":1,\"1201\":1,\"1329\":1,\"1430\":1}}],[\"addinterceptors\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"addinnerinterceptor\",{\"1\":{\"291\":3,\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"987\":3,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1,\"1715\":3,\"1917\":3}}],[\"addpathpatterns\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"addserializer\",{\"1\":{\"286\":6,\"982\":6,\"1710\":6,\"1912\":6}}],[\"addsignature\",{\"1\":{\"172\":1,\"373\":1,\"558\":1,\"746\":1,\"1144\":1,\"1216\":2,\"1279\":1,\"1602\":1,\"2010\":1}}],[\"addhandlers\",{\"1\":{\"170\":1,\"171\":1,\"172\":1,\"174\":1,\"371\":1,\"372\":1,\"373\":1,\"375\":1,\"556\":2,\"557\":2,\"558\":2,\"559\":2,\"560\":1,\"744\":1,\"745\":1,\"746\":1,\"748\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1146\":1,\"1216\":3,\"1277\":1,\"1278\":1,\"1279\":1,\"1281\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1604\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2012\":1}}],[\"addr\",{\"1\":{\"75\":2,\"819\":2,\"959\":2,\"1347\":2,\"1463\":2,\"1842\":2}}],[\"addtasks\",{\"1\":{\"46\":4,\"932\":4,\"1102\":4,\"1513\":4,\"1813\":4}}],[\"addtext\",{\"1\":{\"4\":2,\"1771\":2}}],[\"add\",{\"1\":{\"17\":2,\"41\":2,\"46\":1,\"75\":1,\"86\":1,\"92\":1,\"241\":1,\"333\":1,\"448\":2,\"476\":1,\"634\":2,\"662\":1,\"819\":1,\"828\":1,\"831\":1,\"849\":2,\"869\":2,\"881\":1,\"888\":1,\"932\":1,\"959\":1,\"967\":1,\"973\":1,\"1072\":2,\"1092\":2,\"1102\":1,\"1218\":1,\"1347\":1,\"1362\":2,\"1390\":1,\"1463\":1,\"1474\":1,\"1480\":1,\"1490\":2,\"1508\":2,\"1513\":1,\"1667\":1,\"1755\":1,\"1784\":2,\"1808\":2,\"1813\":1,\"1842\":1,\"1853\":1,\"1859\":1,\"1959\":1,\"2075\":1}}],[\"addall\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"artifactid>\",{\"1\":{\"73\":2,\"291\":1,\"340\":1,\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":4,\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":4,\"796\":1,\"797\":1,\"817\":2,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":4,\"957\":2,\"987\":1,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":4,\"1325\":1,\"1345\":2,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":4,\"1461\":2,\"1715\":1,\"1762\":1,\"1840\":2,\"1917\":1,\"1966\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2203\":2,\"2217\":2,\"2220\":1,\"2228\":1,\"2235\":1,\"2246\":1,\"2290\":2,\"2316\":2,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"array\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"arrays\",{\"1\":{\"29\":1,\"46\":2,\"234\":1,\"433\":1,\"499\":3,\"515\":1,\"619\":1,\"684\":3,\"700\":1,\"811\":1,\"907\":3,\"924\":1,\"932\":2,\"1082\":1,\"1095\":1,\"1102\":2,\"1211\":1,\"1216\":8,\"1236\":3,\"1339\":1,\"1413\":3,\"1429\":1,\"1502\":1,\"1513\":2,\"1660\":1,\"1796\":1,\"1813\":2,\"2068\":1,\"2150\":1,\"2173\":2,\"2190\":2,\"2209\":1,\"2234\":2,\"2259\":2,\"2270\":1,\"2277\":2,\"2296\":1,\"2303\":2,\"2339\":2,\"2365\":2}}],[\"arraylist<>\",{\"1\":{\"17\":1,\"46\":1,\"86\":1,\"92\":1,\"228\":1,\"448\":1,\"634\":1,\"828\":1,\"831\":1,\"849\":1,\"932\":1,\"967\":1,\"973\":1,\"1072\":1,\"1102\":1,\"1362\":1,\"1474\":1,\"1480\":1,\"1490\":1,\"1513\":1,\"1784\":1,\"1813\":1,\"1853\":1,\"1859\":1}}],[\"aftereval\",{\"1\":{\"63\":2,\"64\":1,\"835\":2,\"836\":1,\"947\":2,\"948\":1,\"1451\":2,\"1452\":1,\"1830\":2,\"1831\":1}}],[\"abstract\",{\"1\":{\"63\":2,\"835\":2,\"947\":2,\"1451\":2,\"1830\":2}}],[\"associated\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"assertutil\",{\"1\":{\"63\":2,\"835\":2,\"947\":2,\"1451\":2,\"1830\":2}}],[\"assignmentlistener\",{\"1\":{\"18\":2,\"450\":2,\"636\":2,\"851\":2,\"1074\":2,\"1364\":2,\"1492\":2,\"1786\":2}}],[\"assignmentexplistener\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"assignment\",{\"1\":{\"3\":1,\"10\":1,\"13\":1,\"16\":2,\"24\":1,\"443\":1,\"447\":2,\"629\":1,\"633\":2,\"843\":1,\"844\":1,\"848\":2,\"856\":1,\"1066\":1,\"1067\":1,\"1071\":2,\"1079\":1,\"1357\":1,\"1361\":2,\"1483\":1,\"1486\":1,\"1489\":2,\"1497\":1,\"1770\":1,\"1777\":1,\"1780\":1,\"1783\":2,\"1791\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"aslist\",{\"1\":{\"29\":1,\"46\":2,\"234\":1,\"433\":1,\"499\":3,\"515\":1,\"619\":1,\"684\":3,\"700\":1,\"811\":1,\"907\":3,\"924\":1,\"932\":2,\"1082\":1,\"1095\":1,\"1102\":2,\"1211\":1,\"1216\":8,\"1236\":3,\"1339\":1,\"1413\":3,\"1429\":1,\"1502\":1,\"1513\":2,\"1660\":1,\"1796\":1,\"1813\":2,\"2068\":1,\"2150\":2,\"2173\":2,\"2190\":2,\"2209\":2,\"2234\":2,\"2259\":2,\"2270\":2,\"2277\":2,\"2296\":2,\"2303\":2,\"2339\":2,\"2365\":2}}],[\"0<\",{\"1\":{\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"2119\":1}}],[\"0版本warm\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"04\",{\"0\":{\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1014\":1,\"1015\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1945\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1949\":1}}],[\"05\",{\"0\":{\"318\":1,\"328\":1,\"1010\":1,\"1020\":1,\"1741\":1,\"1751\":1,\"1944\":1,\"1954\":1,\"2253\":1}}],[\"000000\",{\"1\":{\"404\":1,\"520\":1,\"589\":1,\"705\":1,\"780\":1,\"929\":1,\"1100\":1,\"1184\":1,\"1310\":1,\"1434\":1}}],[\"00\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"0待提交\",{\"1\":{\"267\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"2101\":1}}],[\"0开源的项目\",{\"1\":{\"283\":1}}],[\"0开源协议\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"0开始节点\",{\"1\":{\"266\":1,\"267\":1,\"268\":1,\"269\":2,\"270\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":2,\"511\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":2,\"696\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":2,\"920\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":2,\"1249\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":2,\"1425\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":2,\"1696\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":2,\"2104\":1}}],[\"0挂起\",{\"1\":{\"265\":1,\"267\":1,\"506\":1,\"508\":1,\"691\":1,\"693\":1,\"915\":1,\"917\":1,\"1244\":1,\"1246\":1,\"1420\":1,\"1422\":1,\"1691\":1,\"1693\":1,\"2099\":1,\"2101\":1}}],[\"0未发布\",{\"1\":{\"265\":1,\"506\":1,\"691\":1,\"915\":1,\"1244\":1,\"1420\":1,\"1691\":1,\"2099\":1}}],[\"06\",{\"0\":{\"315\":1,\"316\":1,\"317\":1,\"327\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1019\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1750\":1,\"1941\":1,\"1942\":1,\"1943\":1,\"1953\":1,\"2250\":1,\"2251\":1,\"2252\":1},\"1\":{\"133\":14,\"1063\":14,\"1563\":14,\"1900\":14}}],[\"03\",{\"0\":{\"299\":1,\"301\":2,\"312\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"1004\":1,\"1016\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1735\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1925\":1,\"1927\":2,\"1938\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"2247\":1},\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"07\",{\"0\":{\"303\":1,\"322\":1,\"1014\":1,\"1726\":1,\"1745\":1,\"1929\":1,\"1948\":1},\"1\":{\"133\":3,\"1063\":3,\"1563\":3,\"1900\":3}}],[\"09\",{\"0\":{\"311\":1,\"312\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1734\":1,\"1735\":1,\"1937\":1,\"1938\":1,\"2245\":1,\"2246\":1,\"2247\":1},\"1\":{\"133\":1,\"1563\":1,\"1900\":1}}],[\"01\",{\"0\":{\"302\":1,\"303\":1,\"309\":1,\"1000\":1,\"1725\":1,\"1726\":1,\"1732\":1,\"1928\":1,\"1929\":1,\"1935\":1,\"2243\":1},\"1\":{\"133\":2,\"1063\":1,\"1563\":2,\"1900\":2}}],[\"0\",{\"0\":{\"310\":1,\"317\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":2,\"339\":1,\"344\":1,\"1001\":1,\"1009\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":2,\"1733\":1,\"1740\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1752\":1,\"1753\":2,\"1761\":1,\"1766\":1,\"1936\":1,\"1943\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":2,\"1965\":1,\"1970\":1,\"2244\":1,\"2252\":1,\"2387\":1},\"1\":{\"7\":5,\"18\":1,\"27\":1,\"30\":1,\"63\":2,\"64\":1,\"217\":2,\"241\":1,\"265\":2,\"266\":2,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"333\":11,\"335\":14,\"403\":1,\"406\":1,\"426\":1,\"436\":2,\"450\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"476\":1,\"506\":2,\"507\":2,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"588\":1,\"591\":1,\"612\":1,\"622\":2,\"636\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"662\":1,\"691\":2,\"692\":2,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"776\":2,\"779\":1,\"782\":1,\"804\":1,\"822\":2,\"835\":2,\"836\":1,\"851\":1,\"859\":1,\"860\":1,\"861\":1,\"862\":1,\"881\":1,\"888\":1,\"915\":2,\"916\":2,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"947\":2,\"948\":1,\"1074\":1,\"1082\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1180\":2,\"1183\":1,\"1186\":1,\"1204\":1,\"1218\":1,\"1244\":2,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1309\":1,\"1312\":1,\"1332\":1,\"1350\":2,\"1364\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1374\":1,\"1390\":1,\"1420\":2,\"1421\":2,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1451\":2,\"1452\":1,\"1492\":1,\"1500\":1,\"1503\":1,\"1647\":2,\"1667\":1,\"1691\":2,\"1692\":2,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1755\":11,\"1757\":14,\"1774\":5,\"1786\":1,\"1794\":1,\"1797\":1,\"1830\":2,\"1831\":1,\"1959\":11,\"1961\":14,\"2055\":2,\"2075\":1,\"2099\":2,\"2100\":2,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2118\":1,\"2193\":1,\"2240\":14,\"2244\":1,\"2252\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"08\",{\"0\":{\"313\":1,\"314\":1,\"318\":1,\"1005\":1,\"1006\":1,\"1010\":1,\"1736\":1,\"1737\":1,\"1741\":1,\"1939\":1,\"1940\":1,\"1944\":1,\"2248\":1,\"2249\":1,\"2253\":1},\"1\":{\"4\":1,\"133\":4,\"1063\":4,\"1563\":4,\"1771\":1,\"1900\":4}}],[\"02\",{\"0\":{\"323\":1,\"1015\":1,\"1723\":1,\"1746\":1,\"1949\":1},\"1\":{\"4\":1,\"133\":1,\"1063\":1,\"1563\":1,\"1771\":1,\"1900\":1}}],[\"txt\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"ttc\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"time\",{\"1\":{\"265\":2,\"266\":2,\"267\":2,\"268\":2,\"269\":2,\"270\":2,\"271\":2,\"506\":2,\"507\":2,\"508\":2,\"509\":2,\"510\":2,\"511\":2,\"512\":2,\"691\":2,\"692\":2,\"693\":2,\"694\":2,\"695\":2,\"696\":2,\"697\":2,\"915\":2,\"916\":2,\"917\":2,\"918\":2,\"919\":2,\"920\":2,\"921\":2,\"1244\":2,\"1245\":2,\"1246\":2,\"1247\":2,\"1248\":2,\"1249\":2,\"1250\":2,\"1420\":2,\"1421\":2,\"1422\":2,\"1423\":2,\"1424\":2,\"1425\":2,\"1426\":2,\"1691\":2,\"1692\":2,\"1693\":2,\"1694\":2,\"1695\":2,\"1696\":2,\"1697\":2,\"2099\":2,\"2100\":2,\"2101\":2,\"2102\":2,\"2103\":2,\"2104\":2,\"2105\":2}}],[\"title\",{\"1\":{\"0\":1,\"280\":1,\"975\":1,\"1703\":1,\"1905\":1}}],[\"threadlocal<>\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"threadlocal<string>\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"threadlocal\",{\"1\":{\"515\":4,\"516\":3,\"700\":4,\"701\":3,\"924\":4,\"925\":3,\"1095\":4,\"1096\":3,\"1429\":4,\"1430\":3}}],[\"throws\",{\"1\":{\"286\":1,\"333\":3,\"421\":1,\"496\":1,\"497\":1,\"499\":2,\"606\":1,\"681\":1,\"682\":1,\"684\":2,\"799\":1,\"904\":1,\"905\":1,\"907\":2,\"982\":1,\"1199\":1,\"1233\":1,\"1234\":1,\"1236\":2,\"1327\":1,\"1410\":1,\"1411\":1,\"1413\":2,\"1710\":1,\"1755\":3,\"1912\":1,\"1959\":3,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2170\":1,\"2171\":1,\"2173\":2,\"2190\":1,\"2221\":1,\"2231\":1,\"2232\":1,\"2234\":2,\"2259\":1,\"2277\":1,\"2303\":1,\"2320\":1,\"2336\":1,\"2337\":1,\"2339\":2,\"2346\":1,\"2362\":1,\"2363\":1,\"2365\":2}}],[\"throw\",{\"1\":{\"29\":1,\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1082\":1,\"1355\":2,\"1469\":2,\"1502\":1,\"1796\":1,\"1848\":2}}],[\"this\",{\"1\":{\"228\":1,\"425\":4,\"611\":4,\"803\":4,\"1203\":4,\"1331\":4}}],[\"template>\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"text\",{\"1\":{\"267\":1,\"333\":1,\"508\":1,\"693\":1,\"917\":1,\"1246\":1,\"1422\":1,\"1693\":1,\"1755\":1,\"1959\":1,\"2101\":1}}],[\"tenantinterceptor\",{\"1\":{\"515\":3,\"700\":3,\"924\":3,\"1095\":3,\"1429\":3}}],[\"tenantlineinnerinterceptor\",{\"1\":{\"515\":2,\"516\":4,\"700\":2,\"701\":4,\"924\":2,\"925\":4,\"1095\":2,\"1096\":4,\"1429\":2,\"1430\":4}}],[\"tenantlinehandler\",{\"1\":{\"515\":1,\"516\":1,\"700\":1,\"701\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1429\":1,\"1430\":1}}],[\"tenanthandler\",{\"1\":{\"404\":3,\"407\":2,\"519\":2,\"520\":1,\"589\":3,\"592\":2,\"704\":2,\"705\":1,\"780\":3,\"783\":2,\"928\":2,\"929\":1,\"1099\":2,\"1100\":1,\"1184\":3,\"1187\":2,\"1310\":3,\"1313\":2,\"1433\":2,\"1434\":1,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"tenant\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"403\":1,\"406\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"515\":3,\"516\":2,\"518\":1,\"588\":1,\"591\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"700\":3,\"701\":2,\"703\":1,\"779\":1,\"782\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"924\":3,\"925\":2,\"927\":1,\"1095\":3,\"1096\":2,\"1098\":1,\"1183\":1,\"1186\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1309\":1,\"1312\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1429\":3,\"1430\":2,\"1432\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"termination\",{\"1\":{\"162\":1,\"169\":1,\"364\":1,\"370\":1,\"549\":1,\"555\":1,\"736\":1,\"743\":1,\"1134\":1,\"1141\":1,\"1270\":1,\"1276\":1,\"1592\":1,\"1599\":1,\"2000\":1,\"2007\":1,\"2190\":2,\"2259\":2,\"2277\":2,\"2303\":2}}],[\"test模块的测类\",{\"1\":{\"257\":1,\"495\":1,\"680\":1,\"903\":1,\"1232\":1,\"1409\":1,\"1683\":1,\"2091\":1}}],[\"test项目中\",{\"1\":{\"257\":1,\"495\":1,\"680\":1,\"903\":1,\"1232\":1,\"1409\":1,\"1683\":1,\"2091\":1}}],[\"testvariable\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"test\",{\"1\":{\"46\":1,\"94\":1,\"333\":8,\"335\":4,\"406\":2,\"518\":1,\"591\":2,\"703\":1,\"782\":2,\"927\":1,\"932\":1,\"1023\":1,\"1098\":1,\"1102\":1,\"1186\":2,\"1312\":2,\"1432\":1,\"1513\":1,\"1525\":1,\"1755\":8,\"1757\":4,\"1813\":1,\"1861\":1,\"1959\":8,\"1961\":4,\"2240\":4}}],[\"testleavemap\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"testleavemapper\",{\"1\":{\"19\":5,\"449\":4,\"635\":4,\"850\":5,\"1073\":5,\"1363\":4,\"1491\":5,\"1785\":5}}],[\"testleave\",{\"1\":{\"19\":18,\"53\":1,\"56\":1,\"66\":4,\"67\":1,\"217\":5,\"272\":7,\"409\":4,\"410\":1,\"436\":5,\"449\":16,\"521\":7,\"527\":1,\"530\":1,\"594\":4,\"595\":1,\"622\":5,\"635\":16,\"706\":7,\"712\":1,\"715\":1,\"776\":5,\"785\":4,\"786\":1,\"822\":5,\"850\":18,\"930\":7,\"938\":1,\"941\":1,\"950\":4,\"951\":1,\"1073\":18,\"1108\":1,\"1111\":1,\"1180\":5,\"1251\":7,\"1315\":4,\"1316\":1,\"1350\":5,\"1363\":16,\"1435\":7,\"1441\":1,\"1444\":1,\"1454\":4,\"1455\":1,\"1491\":18,\"1520\":1,\"1523\":1,\"1647\":5,\"1698\":7,\"1785\":18,\"1820\":1,\"1823\":1,\"1833\":4,\"1834\":1,\"2055\":5,\"2106\":7,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"testleaveserviceimpl\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"t\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"tran\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"transactional\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"transaction\",{\"1\":{\"291\":1,\"463\":1,\"649\":1,\"865\":1,\"987\":1,\"1088\":1,\"1377\":1,\"1715\":1,\"1917\":1}}],[\"transfer\",{\"1\":{\"170\":1,\"241\":1,\"371\":1,\"476\":1,\"556\":1,\"662\":1,\"744\":1,\"881\":1,\"888\":1,\"1142\":1,\"1216\":3,\"1218\":1,\"1277\":1,\"1390\":1,\"1600\":1,\"1667\":1,\"2008\":1,\"2075\":1}}],[\"treefundto<>\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"treefundto<sysdept>\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"treefundto\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"trim\",{\"1\":{\"63\":2,\"64\":3,\"835\":2,\"836\":3,\"947\":2,\"948\":3,\"1451\":2,\"1452\":3,\"1830\":2,\"1831\":3}}],[\"true\",{\"1\":{\"29\":1,\"30\":1,\"62\":1,\"87\":1,\"161\":1,\"174\":1,\"288\":3,\"291\":1,\"333\":4,\"334\":2,\"335\":4,\"375\":1,\"403\":4,\"406\":3,\"460\":1,\"515\":1,\"516\":1,\"560\":1,\"588\":4,\"591\":3,\"611\":1,\"612\":1,\"646\":1,\"700\":1,\"701\":1,\"748\":1,\"779\":4,\"782\":3,\"832\":1,\"834\":1,\"862\":1,\"924\":1,\"925\":1,\"946\":1,\"968\":1,\"984\":3,\"987\":1,\"1082\":1,\"1085\":1,\"1095\":1,\"1096\":1,\"1146\":1,\"1183\":4,\"1186\":3,\"1281\":1,\"1309\":4,\"1312\":3,\"1374\":1,\"1429\":1,\"1430\":1,\"1450\":1,\"1475\":1,\"1502\":1,\"1503\":1,\"1604\":1,\"1712\":3,\"1715\":1,\"1755\":4,\"1756\":2,\"1757\":4,\"1796\":1,\"1797\":1,\"1829\":1,\"1854\":1,\"1914\":3,\"1917\":1,\"1959\":4,\"1960\":2,\"1961\":4,\"1999\":1,\"2012\":1,\"2193\":3,\"2240\":4,\"2262\":3,\"2280\":3,\"2306\":3}}],[\"try\",{\"1\":{\"29\":1,\"75\":1,\"81\":2,\"441\":2,\"627\":2,\"819\":1,\"840\":2,\"959\":1,\"962\":2,\"1082\":1,\"1347\":1,\"1355\":2,\"1463\":1,\"1469\":2,\"1502\":1,\"1796\":1,\"1842\":1,\"1848\":2}}],[\"target\",{\"1\":{\"266\":2,\"507\":2,\"611\":1,\"612\":1,\"692\":2,\"916\":2,\"1245\":2,\"1421\":2,\"1692\":2,\"2100\":2}}],[\"tabs页签\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"tablename\",{\"1\":{\"29\":2,\"515\":6,\"516\":2,\"700\":6,\"701\":2,\"924\":6,\"925\":2,\"1082\":2,\"1095\":6,\"1096\":2,\"1429\":6,\"1430\":2,\"1502\":2,\"1796\":2}}],[\"tablenames\",{\"1\":{\"29\":2,\"1082\":2,\"1502\":2,\"1796\":2}}],[\"tableinfohelper\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"tableinfo\",{\"1\":{\"29\":5,\"515\":7,\"516\":3,\"700\":7,\"701\":3,\"924\":7,\"925\":3,\"1082\":5,\"1095\":7,\"1096\":3,\"1429\":7,\"1430\":3,\"1502\":5,\"1796\":5}}],[\"task表的id\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"taskid\",{\"1\":{\"67\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"183\":3,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"410\":1,\"554\":1,\"555\":1,\"556\":2,\"557\":2,\"558\":2,\"559\":2,\"595\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"786\":1,\"951\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1316\":1,\"1455\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1613\":3,\"1834\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2021\":3}}],[\"taskmapper\",{\"1\":{\"38\":2,\"462\":2,\"464\":1,\"648\":2,\"650\":1,\"864\":2,\"866\":1,\"1087\":2,\"1089\":1,\"1376\":2,\"1378\":1,\"1505\":2,\"1805\":2}}],[\"task\",{\"1\":{\"18\":3,\"29\":2,\"46\":3,\"263\":2,\"266\":1,\"335\":2,\"450\":3,\"504\":2,\"507\":1,\"515\":2,\"636\":3,\"689\":2,\"692\":1,\"700\":2,\"851\":3,\"868\":1,\"913\":2,\"916\":1,\"924\":2,\"932\":3,\"1074\":3,\"1082\":2,\"1095\":2,\"1102\":3,\"1242\":2,\"1245\":1,\"1364\":3,\"1418\":2,\"1421\":1,\"1429\":2,\"1492\":3,\"1502\":2,\"1513\":3,\"1689\":2,\"1692\":1,\"1757\":2,\"1786\":3,\"1796\":2,\"1813\":3,\"1961\":2,\"2097\":2,\"2100\":1,\"2240\":2}}],[\"taskserviceimpl\",{\"1\":{\"868\":1}}],[\"taskservice待办任务接口\",{\"0\":{\"368\":1,\"553\":1,\"741\":1,\"1139\":1,\"1274\":1}}],[\"taskservice待办任务\",{\"0\":{\"167\":1,\"1597\":1,\"2005\":1}}],[\"taskservice\",{\"1\":{\"67\":1,\"410\":1,\"595\":1,\"786\":1,\"951\":1,\"1216\":12,\"1316\":1,\"1455\":1,\"1834\":1,\"2190\":2,\"2259\":2,\"2277\":2,\"2303\":2}}],[\"tasks\",{\"1\":{\"18\":2,\"450\":2,\"636\":2,\"851\":2,\"1074\":2,\"1364\":2,\"1492\":2,\"1786\":2}}],[\"total是业务数据总数\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"total\",{\"1\":{\"234\":6,\"433\":6,\"619\":6,\"811\":6,\"1211\":6,\"1339\":6,\"1660\":6,\"2068\":6}}],[\"token案例\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"token是业务系统的token\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"token\",{\"0\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1},\"1\":{\"131\":1,\"235\":3,\"779\":1,\"812\":3,\"1183\":1,\"1212\":3,\"1309\":1,\"1340\":3,\"1561\":1,\"1661\":3,\"1898\":1,\"2069\":3}}],[\"top\",{\"1\":{\"94\":1,\"114\":1,\"121\":1,\"1023\":1,\"1043\":1,\"1051\":1,\"1525\":1,\"1545\":1,\"1551\":1,\"1861\":1,\"1881\":1,\"1888\":1,\"2116\":1,\"2127\":1,\"2133\":1,\"2144\":1,\"2164\":1,\"2176\":1,\"2182\":1,\"2237\":1,\"2330\":1,\"2342\":1,\"2356\":1,\"2368\":1,\"2374\":1}}],[\"toptext\",{\"1\":{\"4\":1,\"1771\":1}}],[\"tojsonstring\",{\"1\":{\"25\":1,\"455\":1,\"641\":1,\"857\":1,\"1080\":1,\"1369\":1,\"1498\":1,\"1792\":1}}],[\"tolist\",{\"1\":{\"17\":1,\"41\":1,\"448\":1,\"634\":1,\"849\":1,\"869\":1,\"1072\":1,\"1092\":1,\"1362\":1,\"1490\":1,\"1508\":1,\"1784\":1,\"1808\":1}}],[\"tostring\",{\"1\":{\"17\":2,\"66\":1,\"234\":3,\"272\":1,\"286\":1,\"409\":1,\"433\":3,\"448\":2,\"499\":3,\"521\":1,\"594\":1,\"619\":3,\"634\":2,\"684\":3,\"706\":1,\"785\":1,\"811\":3,\"849\":2,\"907\":3,\"930\":1,\"950\":1,\"982\":1,\"1072\":2,\"1211\":3,\"1236\":3,\"1251\":1,\"1315\":1,\"1339\":3,\"1362\":2,\"1413\":3,\"1435\":1,\"1454\":1,\"1490\":2,\"1660\":3,\"1698\":1,\"1710\":1,\"1784\":2,\"1833\":1,\"1912\":1,\"2068\":3,\"2106\":1,\"2173\":2,\"2234\":2,\"2339\":2,\"2365\":2}}],[\"typed\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"type=\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"typefactory\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"type\",{\"1\":{\"13\":1,\"265\":1,\"266\":3,\"267\":1,\"268\":3,\"269\":3,\"270\":1,\"271\":1,\"280\":1,\"286\":3,\"288\":1,\"314\":1,\"334\":4,\"403\":2,\"506\":1,\"507\":3,\"508\":1,\"509\":3,\"510\":3,\"511\":1,\"512\":1,\"588\":2,\"691\":1,\"692\":3,\"693\":1,\"694\":3,\"695\":3,\"696\":1,\"697\":1,\"779\":2,\"844\":1,\"915\":1,\"916\":3,\"917\":1,\"918\":3,\"919\":3,\"920\":1,\"921\":1,\"975\":1,\"982\":3,\"984\":1,\"1006\":1,\"1067\":1,\"1183\":2,\"1244\":1,\"1245\":3,\"1246\":1,\"1247\":3,\"1248\":3,\"1249\":1,\"1250\":1,\"1309\":2,\"1420\":1,\"1421\":3,\"1422\":1,\"1423\":3,\"1424\":3,\"1425\":1,\"1426\":1,\"1486\":1,\"1691\":1,\"1692\":3,\"1693\":1,\"1694\":3,\"1695\":3,\"1696\":1,\"1697\":1,\"1703\":1,\"1710\":3,\"1712\":1,\"1737\":1,\"1756\":4,\"1780\":1,\"1905\":1,\"1912\":3,\"1914\":1,\"1940\":1,\"1960\":4,\"2099\":1,\"2100\":3,\"2101\":1,\"2102\":3,\"2103\":3,\"2104\":1,\"2105\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"type和listener\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"event\",{\"1\":{\"425\":3,\"426\":2,\"611\":3,\"612\":2,\"803\":3,\"804\":2,\"1203\":3,\"1204\":2,\"1331\":3,\"1332\":2}}],[\"eval\",{\"1\":{\"59\":2,\"63\":1,\"77\":2,\"83\":2,\"87\":2,\"89\":2,\"93\":1,\"216\":1,\"217\":2,\"333\":2,\"335\":2,\"436\":3,\"531\":2,\"622\":3,\"716\":2,\"775\":1,\"776\":3,\"822\":3,\"825\":2,\"829\":1,\"832\":2,\"835\":1,\"943\":2,\"947\":1,\"964\":2,\"968\":2,\"970\":2,\"974\":1,\"1179\":1,\"1180\":2,\"1350\":3,\"1445\":2,\"1447\":2,\"1451\":1,\"1465\":2,\"1471\":2,\"1475\":2,\"1477\":2,\"1481\":1,\"1646\":1,\"1647\":2,\"1755\":2,\"1757\":2,\"1826\":2,\"1830\":1,\"1844\":2,\"1850\":2,\"1854\":2,\"1856\":2,\"1860\":1,\"1959\":2,\"1961\":2,\"2054\":1,\"2055\":2,\"2240\":2}}],[\"evalvariable\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"evalvarentity\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"evalvar\",{\"1\":{\"46\":2,\"47\":1,\"55\":1,\"56\":1,\"523\":1,\"529\":2,\"530\":1,\"708\":1,\"714\":2,\"715\":1,\"825\":2,\"932\":2,\"933\":1,\"940\":1,\"941\":1,\"943\":2,\"964\":2,\"970\":2,\"1102\":2,\"1103\":1,\"1110\":1,\"1111\":1,\"1437\":1,\"1443\":2,\"1444\":1,\"1513\":2,\"1514\":1,\"1522\":1,\"1523\":1,\"1813\":2,\"1814\":1,\"1822\":1,\"1823\":1}}],[\"el\",{\"1\":{\"335\":4,\"1757\":4,\"1961\":4,\"2240\":4}}],[\"else\",{\"1\":{\"19\":1,\"64\":1,\"286\":1,\"333\":2,\"335\":2,\"449\":1,\"635\":1,\"836\":1,\"850\":1,\"948\":1,\"982\":1,\"1073\":1,\"1363\":1,\"1452\":1,\"1491\":1,\"1710\":1,\"1755\":2,\"1757\":2,\"1785\":1,\"1831\":1,\"1912\":1,\"1959\":2,\"1961\":2,\"2240\":2}}],[\"emit\",{\"1\":{\"333\":2,\"335\":2,\"1755\":2,\"1757\":2,\"1959\":2,\"1961\":2,\"2240\":2}}],[\"email\",{\"1\":{\"284\":2,\"980\":2,\"1708\":2,\"1910\":2}}],[\"enhance\",{\"0\":{\"2380\":1,\"2390\":1,\"2398\":1,\"2406\":1}}],[\"encoding><\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"end\",{\"1\":{\"447\":1,\"633\":1,\"1361\":1}}],[\"env\",{\"1\":{\"425\":2,\"426\":2,\"803\":2,\"804\":2,\"1203\":2,\"1204\":2,\"1331\":2,\"1332\":2}}],[\"enabled\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"enabletransactionmanagement\",{\"1\":{\"291\":2,\"987\":2,\"1715\":2,\"1917\":2}}],[\"entitymanager\",{\"1\":{\"463\":11,\"649\":11,\"865\":11,\"1088\":11,\"1377\":11}}],[\"entity\",{\"1\":{\"189\":2,\"190\":2,\"191\":2,\"192\":2,\"193\":2,\"194\":2,\"195\":2,\"196\":2,\"198\":2,\"220\":15,\"381\":2,\"382\":2,\"383\":2,\"384\":2,\"385\":2,\"386\":2,\"387\":2,\"388\":2,\"390\":2,\"413\":15,\"463\":10,\"566\":2,\"567\":2,\"568\":2,\"569\":2,\"570\":2,\"571\":2,\"572\":2,\"573\":2,\"575\":2,\"598\":15,\"649\":10,\"754\":2,\"755\":2,\"756\":2,\"757\":2,\"758\":2,\"759\":2,\"760\":2,\"761\":2,\"763\":2,\"789\":15,\"865\":10,\"1088\":10,\"1152\":2,\"1153\":2,\"1154\":2,\"1155\":2,\"1156\":2,\"1157\":2,\"1158\":2,\"1159\":2,\"1161\":2,\"1189\":15,\"1287\":2,\"1288\":2,\"1289\":2,\"1290\":2,\"1291\":2,\"1292\":2,\"1293\":2,\"1294\":2,\"1296\":2,\"1319\":15,\"1377\":10,\"1619\":2,\"1620\":2,\"1621\":2,\"1622\":2,\"1623\":2,\"1624\":2,\"1625\":2,\"1626\":2,\"1628\":2,\"1650\":15,\"2027\":2,\"2028\":2,\"2029\":2,\"2030\":2,\"2031\":2,\"2032\":2,\"2033\":2,\"2034\":2,\"2036\":2,\"2058\":15}}],[\"entfrm\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"entryset\",{\"1\":{\"4\":1,\"1771\":1}}],[\"entry\",{\"1\":{\"4\":3,\"1771\":3}}],[\"entry<string\",{\"1\":{\"4\":1,\"1771\":1}}],[\"easy\",{\"0\":{\"256\":1,\"491\":1,\"677\":1,\"902\":1,\"1231\":1,\"1405\":1,\"1682\":1,\"2090\":1},\"1\":{\"118\":1,\"256\":1,\"302\":1,\"333\":1,\"491\":2,\"493\":1,\"677\":2,\"679\":1,\"902\":2,\"1047\":1,\"1231\":2,\"1405\":2,\"1407\":1,\"1548\":1,\"1682\":1,\"1725\":1,\"1755\":1,\"1885\":1,\"1928\":1,\"1959\":1,\"2090\":1,\"2162\":1,\"2167\":1,\"2228\":1,\"2328\":1,\"2333\":1,\"2354\":1,\"2359\":1}}],[\"erfeijiadao\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"erp\",{\"1\":{\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"error\",{\"1\":{\"75\":1,\"81\":2,\"441\":2,\"627\":2,\"819\":1,\"840\":2,\"959\":1,\"962\":2,\"1347\":1,\"1355\":2,\"1463\":1,\"1469\":2,\"1842\":1,\"1848\":2}}],[\"eq|flag|4\",{\"1\":{\"1179\":1}}],[\"eq|flag|5\",{\"1\":{\"306\":1,\"335\":1,\"997\":1,\"1729\":1,\"1757\":1,\"1932\":1,\"1961\":1,\"2240\":1}}],[\"eq\",{\"1\":{\"63\":2,\"64\":3,\"216\":1,\"306\":2,\"333\":1,\"335\":4,\"775\":2,\"835\":2,\"836\":3,\"947\":2,\"948\":3,\"997\":2,\"1451\":2,\"1452\":3,\"1646\":1,\"1729\":2,\"1755\":1,\"1757\":4,\"1830\":2,\"1831\":3,\"1932\":2,\"1959\":1,\"1961\":4,\"2054\":1,\"2240\":4}}],[\"equals\",{\"1\":{\"3\":1,\"19\":1,\"29\":1,\"64\":1,\"234\":3,\"433\":3,\"515\":3,\"516\":2,\"619\":3,\"700\":3,\"701\":2,\"811\":3,\"836\":1,\"850\":1,\"924\":3,\"925\":2,\"948\":1,\"1073\":1,\"1082\":1,\"1095\":3,\"1096\":2,\"1211\":3,\"1339\":3,\"1429\":3,\"1430\":2,\"1452\":1,\"1491\":1,\"1502\":1,\"1660\":3,\"1770\":1,\"1785\":1,\"1796\":1,\"1831\":1,\"2068\":3}}],[\"executions>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"execution>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"executeupdate\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"existentity\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"exists\",{\"1\":{\"194\":1,\"386\":1,\"571\":1,\"759\":1,\"1157\":1,\"1292\":1,\"1624\":1,\"2032\":1}}],[\"experience\",{\"0\":{\"2414\":1,\"2418\":1,\"2423\":1,\"2426\":1}}],[\"export\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"exportxml\",{\"1\":{\"333\":1,\"352\":1,\"537\":1,\"724\":1,\"1120\":1,\"1258\":1,\"1755\":1,\"1959\":1}}],[\"exportdefinition\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"exportjson\",{\"1\":{\"142\":1,\"302\":1,\"333\":1,\"1572\":1,\"1725\":1,\"1755\":1,\"1928\":1,\"1959\":1,\"1980\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"expression\",{\"0\":{\"436\":1,\"622\":1,\"822\":1,\"1350\":1},\"1\":{\"59\":2,\"63\":3,\"77\":2,\"83\":2,\"87\":2,\"89\":2,\"93\":3,\"217\":1,\"336\":2,\"515\":1,\"516\":1,\"531\":5,\"700\":1,\"701\":1,\"716\":5,\"776\":1,\"825\":2,\"829\":3,\"832\":2,\"835\":3,\"924\":1,\"925\":1,\"943\":2,\"947\":3,\"964\":2,\"968\":2,\"970\":2,\"974\":3,\"1095\":1,\"1096\":1,\"1180\":1,\"1429\":1,\"1430\":1,\"1445\":5,\"1447\":2,\"1451\":3,\"1465\":2,\"1471\":2,\"1475\":2,\"1477\":2,\"1481\":3,\"1647\":1,\"1758\":2,\"1826\":2,\"1830\":3,\"1844\":2,\"1850\":2,\"1854\":2,\"1856\":2,\"1860\":3,\"1962\":2,\"2055\":1,\"2241\":2}}],[\"expressionstrategylist\",{\"1\":{\"86\":2,\"92\":2,\"828\":2,\"831\":2,\"967\":2,\"973\":2,\"1474\":2,\"1480\":2,\"1853\":2,\"1859\":2}}],[\"expressionstrategy<list<string>>\",{\"1\":{\"92\":2,\"828\":2,\"973\":2,\"1480\":2,\"1859\":2}}],[\"expressionstrategy<boolean>>\",{\"1\":{\"62\":2,\"834\":2,\"946\":2,\"1450\":2,\"1829\":2}}],[\"expressionstrategy<boolean>\",{\"1\":{\"62\":2,\"86\":2,\"831\":2,\"834\":2,\"946\":2,\"967\":2,\"1450\":2,\"1474\":2,\"1829\":2,\"1853\":2}}],[\"expressionstrategy<t>\",{\"1\":{\"59\":2,\"77\":2,\"83\":2,\"89\":2,\"825\":2,\"943\":2,\"964\":2,\"970\":2,\"1447\":2,\"1465\":2,\"1471\":2,\"1477\":2,\"1826\":2,\"1844\":2,\"1850\":2,\"1856\":2}}],[\"expressionstrategyeq\",{\"1\":{\"60\":1,\"78\":1,\"84\":1,\"90\":1,\"826\":1,\"944\":1,\"965\":1,\"971\":1,\"1448\":1,\"1466\":1,\"1472\":1,\"1478\":1,\"1827\":1,\"1845\":1,\"1851\":1,\"1857\":1}}],[\"expressionstrategy\",{\"1\":{\"59\":2,\"62\":3,\"77\":2,\"83\":2,\"86\":2,\"89\":2,\"92\":2,\"825\":2,\"828\":2,\"831\":2,\"834\":3,\"943\":2,\"946\":3,\"964\":2,\"967\":2,\"970\":2,\"973\":2,\"1447\":2,\"1450\":3,\"1465\":2,\"1471\":2,\"1474\":2,\"1477\":2,\"1480\":2,\"1826\":2,\"1829\":3,\"1844\":2,\"1850\":2,\"1853\":2,\"1856\":2,\"1859\":2}}],[\"expressionstrategy接口\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":1,\"943\":1,\"964\":1,\"970\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"expressionutil\",{\"1\":{\"46\":1,\"60\":1,\"78\":1,\"84\":1,\"90\":1,\"826\":1,\"932\":1,\"944\":1,\"965\":1,\"971\":1,\"1102\":1,\"1448\":1,\"1466\":1,\"1472\":1,\"1478\":1,\"1513\":1,\"1813\":1,\"1827\":1,\"1845\":1,\"1851\":1,\"1857\":1}}],[\"excludepathpatterns\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"exclusions>\",{\"1\":{\"73\":1,\"491\":1,\"677\":1,\"817\":1,\"902\":1,\"957\":1,\"1231\":1,\"1345\":1,\"1405\":1,\"1461\":1,\"1840\":1}}],[\"exclusion>\",{\"1\":{\"73\":1,\"491\":2,\"677\":2,\"817\":1,\"902\":2,\"957\":1,\"1231\":2,\"1345\":1,\"1405\":2,\"1461\":1,\"1840\":1}}],[\"exchange\",{\"1\":{\"228\":4}}],[\"exception\",{\"1\":{\"81\":1,\"333\":3,\"421\":1,\"441\":1,\"496\":1,\"497\":1,\"499\":2,\"606\":1,\"627\":1,\"681\":1,\"682\":1,\"684\":2,\"799\":1,\"840\":1,\"904\":1,\"905\":1,\"907\":2,\"962\":1,\"1199\":1,\"1233\":1,\"1234\":1,\"1236\":2,\"1327\":1,\"1355\":1,\"1410\":1,\"1411\":1,\"1413\":2,\"1469\":1,\"1755\":3,\"1848\":1,\"1959\":3,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2170\":1,\"2171\":1,\"2173\":2,\"2190\":1,\"2221\":1,\"2231\":1,\"2232\":1,\"2234\":2,\"2259\":1,\"2277\":1,\"2303\":1,\"2320\":1,\"2336\":1,\"2337\":1,\"2339\":2,\"2346\":1,\"2362\":1,\"2363\":1,\"2365\":2}}],[\"exceptioncons\",{\"1\":{\"63\":2,\"835\":2,\"947\":2,\"1451\":2,\"1830\":2}}],[\"extension\",{\"1\":{\"291\":4,\"987\":4,\"1715\":4,\"1917\":4}}],[\"extends\",{\"1\":{\"16\":1,\"62\":1,\"64\":1,\"86\":1,\"92\":1,\"286\":2,\"447\":1,\"633\":1,\"828\":1,\"831\":1,\"834\":1,\"836\":1,\"848\":1,\"946\":1,\"948\":1,\"967\":1,\"973\":1,\"982\":2,\"1071\":1,\"1361\":1,\"1450\":1,\"1452\":1,\"1474\":1,\"1480\":1,\"1489\":1,\"1710\":2,\"1783\":1,\"1829\":1,\"1831\":1,\"1853\":1,\"1859\":1,\"1912\":2}}],[\"ext\",{\"1\":{\"160\":1,\"265\":1,\"266\":1,\"267\":1,\"362\":1,\"506\":1,\"507\":1,\"508\":1,\"547\":1,\"691\":1,\"692\":1,\"693\":1,\"734\":1,\"915\":1,\"916\":1,\"917\":1,\"1132\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1268\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1590\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1998\":1,\"2099\":1,\"2100\":1,\"2101\":1}}],[\"extmap\",{\"1\":{\"4\":3,\"1771\":3}}],[\"e\",{\"1\":{\"29\":1,\"81\":4,\"133\":1,\"334\":4,\"441\":4,\"627\":4,\"840\":4,\"962\":4,\"1082\":1,\"1355\":4,\"1469\":4,\"1502\":1,\"1563\":1,\"1756\":4,\"1796\":1,\"1848\":4,\"1900\":1,\"1960\":4}}],[\"mirrorof是否位\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"minliuhua<\",{\"1\":{\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"2119\":1}}],[\"minliuhua\",{\"1\":{\"338\":1,\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"1760\":1,\"1964\":1,\"2170\":1,\"2231\":1,\"2243\":1,\"2336\":1,\"2362\":1}}],[\"min\",{\"1\":{\"286\":3,\"496\":1,\"681\":1,\"904\":1,\"982\":3,\"1233\":1,\"1410\":1,\"1710\":3,\"1912\":3,\"2170\":1,\"2202\":1,\"2203\":2,\"2216\":1,\"2217\":2,\"2231\":1,\"2289\":1,\"2290\":2,\"2315\":1,\"2316\":2,\"2336\":1,\"2362\":1}}],[\"min290\",{\"1\":{\"114\":1,\"121\":1,\"1545\":1,\"1551\":1,\"1881\":1,\"1888\":1,\"2199\":1,\"2204\":1,\"2213\":1,\"2218\":1,\"2286\":1,\"2291\":1,\"2312\":1,\"2317\":1}}],[\"mvn\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"mptenanthandler\",{\"1\":{\"515\":4,\"516\":2,\"700\":4,\"701\":2,\"924\":4,\"925\":2,\"1095\":4,\"1096\":2,\"1429\":4,\"1430\":2}}],[\"mdata\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"msdownload\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"multipartfile\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"mutate\",{\"1\":{\"228\":4}}],[\"mounted\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"modifyhandler\",{\"1\":{\"560\":1}}],[\"modifyhandler增加链式调用\",{\"1\":{\"312\":1,\"1004\":1,\"1735\":1,\"1938\":1}}],[\"modal\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"modelvalue\",{\"1\":{\"335\":3,\"1757\":3,\"1961\":3,\"2240\":3}}],[\"model=\",{\"1\":{\"335\":8,\"1757\":8,\"1961\":8,\"2240\":8}}],[\"modes\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"modules\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"mono<void>\",{\"1\":{\"228\":1}}],[\"method\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"methods\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"meta\",{\"1\":{\"74\":1,\"426\":2,\"804\":2,\"818\":1,\"958\":1,\"1204\":2,\"1332\":2,\"1346\":1,\"1462\":1,\"1841\":1}}],[\"mediatype\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"message\",{\"1\":{\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"266\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"507\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"556\":2,\"557\":2,\"558\":2,\"559\":2,\"560\":1,\"692\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"916\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1216\":4,\"1245\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1421\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1692\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2100\":1}}],[\"mysql8dialect\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"mysql\",{\"1\":{\"115\":2,\"117\":1,\"247\":1,\"291\":1,\"403\":1,\"483\":1,\"492\":1,\"588\":1,\"669\":1,\"678\":1,\"779\":1,\"894\":1,\"987\":1,\"1046\":1,\"1183\":1,\"1223\":1,\"1309\":1,\"1397\":1,\"1406\":1,\"1547\":1,\"1673\":1,\"1715\":1,\"1882\":2,\"1884\":1,\"1917\":1,\"2081\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"mybatisplus全局配置\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"mybatisplusconfig\",{\"1\":{\"291\":1,\"515\":1,\"700\":1,\"924\":1,\"987\":1,\"1095\":1,\"1429\":1,\"1715\":1,\"1917\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"291\":5,\"515\":4,\"516\":2,\"700\":4,\"701\":2,\"924\":4,\"925\":2,\"987\":5,\"1095\":4,\"1096\":2,\"1429\":4,\"1430\":2,\"1715\":5,\"1917\":5}}],[\"mybatisplus\",{\"1\":{\"291\":5,\"987\":5,\"1715\":5,\"1917\":5}}],[\"mybatisconfiguration\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"mybatisconfig\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"mybatis\",{\"0\":{\"27\":1,\"38\":1,\"43\":1,\"252\":1,\"253\":1,\"255\":1,\"457\":1,\"462\":1,\"464\":1,\"487\":1,\"488\":1,\"490\":1,\"514\":1,\"643\":1,\"648\":1,\"650\":1,\"673\":1,\"674\":1,\"676\":1,\"699\":1,\"859\":1,\"864\":1,\"866\":1,\"898\":1,\"899\":1,\"901\":1,\"923\":1,\"1082\":1,\"1087\":1,\"1089\":1,\"1094\":1,\"1227\":1,\"1228\":1,\"1230\":1,\"1371\":1,\"1376\":1,\"1378\":1,\"1401\":1,\"1402\":1,\"1404\":1,\"1428\":1,\"1500\":1,\"1505\":1,\"1510\":1,\"1678\":1,\"1679\":1,\"1681\":1,\"1794\":1,\"1805\":1,\"1810\":1,\"2086\":1,\"2087\":1,\"2089\":1},\"1\":{\"27\":1,\"43\":1,\"113\":2,\"117\":1,\"118\":3,\"131\":1,\"255\":1,\"291\":5,\"333\":1,\"457\":1,\"458\":2,\"459\":2,\"487\":3,\"488\":3,\"489\":1,\"490\":3,\"493\":3,\"514\":1,\"643\":1,\"644\":2,\"645\":2,\"673\":2,\"674\":2,\"675\":1,\"676\":2,\"679\":3,\"699\":1,\"859\":1,\"860\":2,\"861\":2,\"898\":3,\"899\":3,\"900\":1,\"901\":3,\"923\":1,\"987\":5,\"1042\":2,\"1047\":3,\"1082\":1,\"1083\":2,\"1084\":2,\"1094\":1,\"1227\":3,\"1228\":3,\"1229\":1,\"1230\":3,\"1371\":1,\"1372\":2,\"1373\":2,\"1401\":3,\"1402\":3,\"1403\":1,\"1404\":3,\"1407\":3,\"1428\":1,\"1500\":1,\"1510\":1,\"1544\":2,\"1547\":1,\"1548\":3,\"1561\":1,\"1681\":1,\"1715\":5,\"1755\":1,\"1794\":1,\"1810\":1,\"1880\":2,\"1884\":1,\"1885\":3,\"1898\":1,\"1917\":5,\"1959\":1,\"2089\":1,\"2115\":2,\"2126\":2,\"2132\":2,\"2143\":2,\"2167\":4,\"2175\":2,\"2188\":2,\"2228\":4,\"2236\":2,\"2257\":2,\"2275\":2,\"2301\":2,\"2333\":4,\"2341\":2,\"2359\":4,\"2367\":2}}],[\"master\",{\"0\":{\"2379\":1}}],[\"margin\",{\"1\":{\"335\":5,\"1757\":5,\"1961\":5,\"2240\":5}}],[\"max\",{\"1\":{\"286\":3,\"982\":3,\"1710\":3,\"1912\":3}}],[\"maven依赖\",{\"0\":{\"250\":1,\"486\":1,\"672\":1,\"897\":1,\"1226\":1,\"1400\":1,\"1676\":1,\"2084\":1}}],[\"maven\",{\"1\":{\"247\":1,\"483\":1,\"669\":1,\"894\":1,\"1223\":1,\"1397\":1,\"1673\":1,\"2081\":1,\"2203\":4,\"2204\":1,\"2217\":4,\"2218\":1,\"2290\":4,\"2291\":1,\"2316\":4,\"2317\":1}}],[\"matches\",{\"1\":{\"228\":1}}],[\"mathutil\",{\"1\":{\"64\":2,\"836\":2,\"948\":2,\"1452\":2,\"1831\":2}}],[\"main\",{\"1\":{\"74\":2,\"287\":1,\"288\":1,\"496\":1,\"681\":1,\"818\":2,\"904\":1,\"958\":2,\"983\":1,\"984\":1,\"1233\":1,\"1346\":2,\"1410\":1,\"1462\":2,\"1711\":1,\"1712\":1,\"1841\":2,\"1913\":1,\"1914\":1,\"2170\":1,\"2204\":1,\"2218\":1,\"2231\":1,\"2291\":1,\"2317\":1,\"2336\":1,\"2362\":1}}],[\"mappingjackson2httpmessageconverter\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"map类型\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"map转换异常\",{\"1\":{\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1355\":2,\"1469\":2,\"1848\":2}}],[\"maptostr\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"map\",{\"1\":{\"4\":1,\"17\":1,\"62\":3,\"81\":3,\"334\":2,\"441\":3,\"448\":1,\"627\":3,\"634\":1,\"834\":3,\"840\":3,\"849\":1,\"946\":3,\"962\":3,\"1072\":1,\"1355\":3,\"1362\":1,\"1450\":3,\"1469\":3,\"1490\":1,\"1756\":2,\"1771\":1,\"1784\":1,\"1829\":3,\"1848\":3,\"1960\":2}}],[\"maputil\",{\"1\":{\"4\":1,\"25\":1,\"81\":1,\"93\":1,\"441\":1,\"455\":1,\"531\":1,\"627\":1,\"641\":1,\"716\":1,\"829\":1,\"840\":1,\"857\":1,\"962\":1,\"974\":1,\"1080\":1,\"1355\":1,\"1369\":1,\"1445\":1,\"1469\":1,\"1481\":1,\"1498\":1,\"1771\":1,\"1792\":1,\"1848\":1,\"1860\":1}}],[\"map<string\",{\"1\":{\"4\":1,\"19\":1,\"25\":2,\"46\":1,\"53\":1,\"56\":1,\"59\":1,\"62\":2,\"63\":2,\"77\":1,\"81\":2,\"83\":1,\"87\":1,\"89\":1,\"93\":1,\"217\":1,\"272\":2,\"436\":1,\"441\":2,\"449\":1,\"455\":2,\"521\":2,\"527\":1,\"530\":1,\"531\":2,\"622\":1,\"627\":2,\"635\":1,\"641\":2,\"706\":2,\"712\":1,\"715\":1,\"716\":2,\"776\":1,\"822\":1,\"825\":1,\"829\":1,\"832\":1,\"834\":2,\"835\":2,\"840\":2,\"850\":1,\"857\":2,\"930\":2,\"932\":1,\"938\":1,\"941\":1,\"943\":1,\"946\":2,\"947\":2,\"962\":2,\"964\":1,\"968\":1,\"970\":1,\"974\":1,\"1073\":1,\"1080\":2,\"1102\":1,\"1108\":1,\"1111\":1,\"1180\":1,\"1251\":2,\"1350\":1,\"1355\":2,\"1363\":1,\"1369\":2,\"1435\":2,\"1441\":1,\"1444\":1,\"1445\":2,\"1447\":1,\"1450\":2,\"1451\":2,\"1465\":1,\"1469\":2,\"1471\":1,\"1475\":1,\"1477\":1,\"1481\":1,\"1491\":1,\"1498\":2,\"1513\":1,\"1520\":1,\"1523\":1,\"1647\":1,\"1698\":2,\"1771\":1,\"1785\":1,\"1792\":2,\"1813\":1,\"1820\":1,\"1823\":1,\"1826\":1,\"1829\":2,\"1830\":2,\"1844\":1,\"1848\":2,\"1850\":1,\"1854\":1,\"1856\":1,\"1860\":1,\"2055\":1,\"2106\":2,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"mm\",{\"1\":{\"3\":1,\"234\":6,\"433\":6,\"619\":6,\"811\":6,\"1211\":6,\"1339\":6,\"1660\":6,\"1770\":1,\"2068\":6}}],[\">=\",{\"1\":{\"2196\":1,\"2265\":1,\"2283\":1,\"2309\":1}}],[\"><\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\">c\",{\"1\":{\"49\":1,\"524\":1,\"709\":1,\"935\":1,\"1105\":1,\"1438\":1,\"1516\":1,\"1816\":1}}],[\">\",{\"1\":{\"4\":2,\"11\":2,\"17\":1,\"29\":1,\"41\":1,\"46\":1,\"216\":1,\"217\":1,\"234\":9,\"286\":2,\"306\":2,\"333\":13,\"335\":41,\"421\":1,\"423\":1,\"425\":2,\"426\":2,\"433\":9,\"436\":1,\"448\":1,\"463\":1,\"515\":2,\"516\":1,\"606\":1,\"608\":1,\"611\":2,\"612\":2,\"619\":9,\"622\":1,\"634\":1,\"649\":1,\"700\":2,\"701\":1,\"776\":1,\"799\":1,\"801\":1,\"803\":2,\"804\":2,\"811\":9,\"822\":1,\"842\":2,\"849\":1,\"865\":1,\"869\":1,\"924\":2,\"925\":1,\"932\":1,\"982\":2,\"997\":2,\"1065\":2,\"1072\":1,\"1082\":1,\"1088\":1,\"1092\":1,\"1095\":2,\"1096\":1,\"1102\":1,\"1179\":1,\"1180\":1,\"1199\":1,\"1201\":1,\"1203\":2,\"1204\":2,\"1211\":9,\"1327\":1,\"1329\":1,\"1331\":2,\"1332\":2,\"1339\":9,\"1350\":1,\"1362\":1,\"1377\":1,\"1429\":2,\"1430\":1,\"1484\":2,\"1490\":1,\"1502\":1,\"1508\":1,\"1513\":1,\"1646\":1,\"1647\":1,\"1660\":9,\"1710\":2,\"1729\":2,\"1755\":13,\"1757\":41,\"1771\":2,\"1778\":2,\"1784\":1,\"1796\":1,\"1808\":1,\"1813\":1,\"1912\":2,\"1932\":2,\"1959\":13,\"1961\":41,\"2054\":1,\"2055\":1,\"2068\":9,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2196\":1,\"2203\":6,\"2217\":6,\"2221\":1,\"2240\":41,\"2265\":1,\"2283\":1,\"2290\":6,\"2309\":1,\"2316\":6,\"2320\":1,\"2346\":1}}],[\"curuser\",{\"1\":{\"556\":2,\"557\":2,\"558\":2,\"559\":2,\"560\":1}}],[\"customshirofilterfactorybean\",{\"1\":{\"422\":2,\"607\":2,\"800\":2,\"1200\":2,\"1328\":2}}],[\"customtenanthandler\",{\"1\":{\"403\":1,\"404\":2,\"406\":1,\"407\":1,\"518\":1,\"519\":1,\"520\":1,\"588\":1,\"589\":2,\"591\":1,\"592\":1,\"703\":1,\"704\":1,\"705\":1,\"779\":1,\"780\":2,\"782\":1,\"783\":1,\"927\":1,\"928\":1,\"929\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1183\":1,\"1184\":2,\"1186\":1,\"1187\":1,\"1309\":1,\"1310\":2,\"1312\":1,\"1313\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"custom和form\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"custom改为form\",{\"1\":{\"314\":1,\"342\":1,\"1006\":1,\"1737\":1,\"1764\":1,\"1940\":1,\"1968\":1,\"2249\":1}}],[\"customizer\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"custom\",{\"1\":{\"265\":1,\"266\":1,\"268\":1,\"270\":1,\"314\":1,\"342\":1,\"506\":1,\"507\":1,\"509\":1,\"511\":1,\"691\":1,\"692\":1,\"694\":1,\"696\":1,\"915\":1,\"916\":1,\"918\":1,\"920\":1,\"1006\":1,\"1244\":1,\"1245\":1,\"1247\":1,\"1249\":1,\"1420\":1,\"1421\":1,\"1423\":1,\"1425\":1,\"1691\":1,\"1692\":1,\"1694\":1,\"1696\":1,\"1737\":1,\"1764\":1,\"1940\":1,\"1968\":1,\"2099\":1,\"2100\":1,\"2102\":1,\"2104\":1,\"2249\":1}}],[\"customdatafillhandler\",{\"1\":{\"220\":1,\"403\":1,\"404\":1,\"406\":1,\"407\":1,\"413\":1,\"416\":1,\"417\":1,\"588\":1,\"589\":1,\"591\":1,\"592\":1,\"598\":1,\"601\":1,\"602\":1,\"779\":1,\"780\":1,\"782\":1,\"783\":1,\"789\":1,\"792\":1,\"793\":1,\"1183\":1,\"1184\":1,\"1186\":1,\"1187\":1,\"1189\":1,\"1192\":1,\"1193\":1,\"1309\":1,\"1310\":1,\"1312\":1,\"1313\":1,\"1319\":1,\"1322\":1,\"1323\":1,\"1650\":1,\"2058\":1,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"custompermissionhandler\",{\"1\":{\"41\":1,\"869\":1,\"1092\":1,\"1508\":1,\"1808\":1}}],[\"customgloballistener\",{\"1\":{\"24\":2,\"856\":2,\"1079\":2,\"1497\":2,\"1791\":2}}],[\"c任务设置办理人变量为\",{\"1\":{\"524\":1,\"709\":1,\"1438\":1}}],[\"c任务设置办理人变量为$\",{\"1\":{\"49\":1,\"935\":1,\"1105\":1,\"1516\":1,\"1816\":1}}],[\"cfg\",{\"1\":{\"516\":3,\"701\":3,\"925\":3,\"1096\":3,\"1430\":3}}],[\"criteriaupdate\",{\"1\":{\"463\":3,\"649\":3,\"865\":3,\"1088\":3,\"1377\":3}}],[\"criteriaupdate<t>\",{\"1\":{\"463\":2,\"649\":2,\"865\":2,\"1088\":2,\"1377\":2}}],[\"criteriaquery\",{\"1\":{\"463\":3,\"649\":3,\"865\":3,\"1088\":3,\"1377\":3}}],[\"criteriaquery<t>\",{\"1\":{\"463\":2,\"649\":2,\"865\":2,\"1088\":2,\"1377\":2}}],[\"createquery\",{\"1\":{\"463\":2,\"649\":2,\"865\":2,\"1088\":2,\"1377\":2}}],[\"createprettyprint\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"create等\",{\"1\":{\"13\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1780\":1}}],[\"create\",{\"1\":{\"10\":1,\"16\":2,\"24\":1,\"265\":1,\"266\":1,\"267\":2,\"268\":1,\"269\":1,\"270\":1,\"271\":2,\"443\":1,\"447\":2,\"506\":1,\"507\":1,\"508\":2,\"509\":1,\"510\":1,\"511\":1,\"512\":2,\"629\":1,\"633\":2,\"691\":1,\"692\":1,\"693\":2,\"694\":1,\"695\":1,\"696\":1,\"697\":2,\"843\":1,\"848\":2,\"856\":1,\"915\":1,\"916\":1,\"917\":2,\"918\":1,\"919\":1,\"920\":1,\"921\":2,\"1066\":1,\"1071\":2,\"1079\":1,\"1244\":1,\"1245\":1,\"1246\":2,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":2,\"1357\":1,\"1361\":2,\"1420\":1,\"1421\":1,\"1422\":2,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":2,\"1483\":1,\"1489\":2,\"1497\":1,\"1691\":1,\"1692\":1,\"1693\":2,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":2,\"1777\":1,\"1783\":2,\"1791\":1,\"2099\":1,\"2100\":1,\"2101\":2,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":2,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"calc\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"case\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"catch\",{\"1\":{\"29\":1,\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1082\":1,\"1355\":2,\"1469\":2,\"1502\":1,\"1796\":1,\"1848\":2}}],[\"cdn流量费\",{\"1\":{\"283\":1}}],[\"csrf\",{\"1\":{\"228\":1}}],[\"checkauth\",{\"1\":{\"868\":1}}],[\"checkandsave\",{\"1\":{\"140\":1,\"348\":1,\"719\":1,\"1115\":1,\"1254\":1,\"1570\":1,\"1978\":1}}],[\"checklogin\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"chore\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"changeorigin\",{\"1\":{\"611\":1,\"612\":1}}],[\"changeoper\",{\"1\":{\"335\":4,\"1757\":4,\"1961\":4,\"2240\":4}}],[\"change=\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"change\",{\"1\":{\"333\":2,\"335\":2,\"1755\":2,\"1757\":2,\"1959\":2,\"1961\":2,\"2240\":2}}],[\"charset><\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"char\",{\"1\":{\"265\":2,\"266\":2,\"267\":1,\"268\":2,\"269\":1,\"270\":2,\"271\":2,\"506\":2,\"507\":2,\"508\":1,\"509\":2,\"510\":1,\"511\":2,\"512\":2,\"691\":2,\"692\":2,\"693\":1,\"694\":2,\"695\":1,\"696\":2,\"697\":2,\"915\":2,\"916\":2,\"917\":1,\"918\":2,\"919\":1,\"920\":2,\"921\":2,\"1244\":2,\"1245\":2,\"1246\":1,\"1247\":2,\"1248\":1,\"1249\":2,\"1250\":2,\"1420\":2,\"1421\":2,\"1422\":1,\"1423\":2,\"1424\":1,\"1425\":2,\"1426\":2,\"1691\":2,\"1692\":2,\"1693\":1,\"1694\":2,\"1695\":1,\"1696\":2,\"1697\":2,\"2099\":2,\"2100\":2,\"2101\":1,\"2102\":2,\"2103\":1,\"2104\":2,\"2105\":2}}],[\"chartdefobj\",{\"1\":{\"158\":1,\"1588\":1,\"1996\":1}}],[\"chartdef\",{\"1\":{\"154\":1,\"156\":1,\"1584\":1,\"1586\":1,\"1992\":1,\"1994\":1}}],[\"chart\",{\"1\":{\"7\":1,\"1774\":1}}],[\"chartinsobj\",{\"1\":{\"157\":1,\"1587\":1,\"1995\":1}}],[\"chartins\",{\"1\":{\"4\":1,\"153\":1,\"155\":1,\"1583\":1,\"1585\":1,\"1771\":1,\"1991\":1,\"1993\":1}}],[\"chartservice流程图绘制接口\",{\"0\":{\"152\":1,\"1582\":1,\"1990\":1}}],[\"chartservice\",{\"1\":{\"4\":1,\"1771\":1}}],[\"chain\",{\"1\":{\"228\":3}}],[\"clean\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"clientheight\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"closeopenpage\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"close\",{\"1\":{\"333\":1,\"425\":3,\"426\":3,\"611\":3,\"612\":3,\"803\":3,\"804\":3,\"1203\":3,\"1204\":3,\"1331\":3,\"1332\":3,\"1755\":1,\"1959\":1}}],[\"cloud网关服务的过滤器\",{\"1\":{\"228\":1}}],[\"cloud为例\",{\"1\":{\"227\":1}}],[\"cloud集成的跑批系统\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"cloud\",{\"1\":{\"131\":3,\"228\":1,\"1061\":3,\"1561\":3,\"1898\":3}}],[\"clazz\",{\"1\":{\"29\":2,\"1082\":2,\"1502\":2,\"1796\":2}}],[\"class>\",{\"1\":{\"463\":7,\"649\":7,\"865\":7,\"1088\":7,\"1377\":7}}],[\"class=\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"class<\",{\"1\":{\"29\":1,\"286\":1,\"982\":1,\"1082\":1,\"1502\":1,\"1710\":1,\"1796\":1,\"1912\":1}}],[\"class\",{\"1\":{\"3\":1,\"17\":2,\"18\":2,\"19\":2,\"24\":2,\"25\":1,\"29\":1,\"38\":1,\"41\":1,\"46\":1,\"56\":1,\"63\":1,\"64\":1,\"81\":5,\"87\":1,\"93\":1,\"217\":1,\"220\":1,\"228\":3,\"234\":1,\"272\":2,\"286\":7,\"291\":1,\"404\":2,\"407\":1,\"413\":1,\"417\":1,\"422\":1,\"423\":1,\"428\":1,\"433\":1,\"436\":1,\"441\":5,\"448\":2,\"449\":2,\"450\":2,\"455\":1,\"462\":1,\"463\":1,\"464\":1,\"515\":3,\"516\":3,\"519\":1,\"520\":1,\"521\":2,\"530\":1,\"531\":1,\"589\":2,\"592\":1,\"598\":1,\"602\":1,\"607\":1,\"608\":1,\"614\":1,\"619\":1,\"622\":1,\"627\":5,\"634\":2,\"635\":2,\"636\":2,\"641\":1,\"648\":1,\"649\":1,\"650\":1,\"700\":3,\"701\":3,\"704\":1,\"705\":1,\"706\":2,\"715\":1,\"716\":1,\"776\":1,\"780\":2,\"783\":1,\"789\":1,\"793\":1,\"800\":1,\"801\":1,\"806\":1,\"811\":1,\"822\":1,\"829\":1,\"832\":1,\"835\":1,\"836\":1,\"840\":5,\"849\":2,\"850\":2,\"851\":2,\"856\":2,\"857\":1,\"864\":1,\"865\":1,\"866\":1,\"869\":1,\"924\":3,\"925\":3,\"928\":1,\"929\":1,\"930\":2,\"932\":1,\"941\":1,\"947\":1,\"948\":1,\"962\":5,\"968\":1,\"974\":1,\"982\":7,\"987\":1,\"1072\":2,\"1073\":2,\"1074\":2,\"1079\":2,\"1080\":1,\"1082\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1092\":1,\"1095\":3,\"1096\":3,\"1099\":1,\"1100\":1,\"1102\":1,\"1111\":1,\"1180\":1,\"1184\":2,\"1187\":1,\"1189\":1,\"1193\":1,\"1200\":1,\"1201\":1,\"1206\":1,\"1211\":1,\"1251\":2,\"1310\":2,\"1313\":1,\"1319\":1,\"1323\":1,\"1328\":1,\"1329\":1,\"1334\":1,\"1339\":1,\"1350\":1,\"1355\":5,\"1362\":2,\"1363\":2,\"1364\":2,\"1369\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1429\":3,\"1430\":3,\"1433\":1,\"1434\":1,\"1435\":2,\"1444\":1,\"1445\":1,\"1451\":1,\"1452\":1,\"1469\":5,\"1475\":1,\"1481\":1,\"1490\":2,\"1491\":2,\"1492\":2,\"1497\":2,\"1498\":1,\"1502\":1,\"1505\":1,\"1508\":1,\"1513\":1,\"1523\":1,\"1647\":1,\"1650\":1,\"1660\":1,\"1698\":2,\"1710\":7,\"1715\":1,\"1770\":1,\"1784\":2,\"1785\":2,\"1786\":2,\"1791\":2,\"1792\":1,\"1796\":1,\"1805\":1,\"1808\":1,\"1813\":1,\"1823\":1,\"1830\":1,\"1831\":1,\"1848\":5,\"1854\":1,\"1860\":1,\"1912\":7,\"1917\":1,\"2055\":1,\"2058\":1,\"2068\":1,\"2106\":2,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"c\",{\"1\":{\"108\":1,\"1037\":1,\"1539\":1,\"1875\":1}}],[\"coordinate\",{\"1\":{\"268\":1,\"269\":1,\"509\":1,\"510\":1,\"694\":1,\"695\":1,\"918\":1,\"919\":1,\"1247\":1,\"1248\":1,\"1423\":1,\"1424\":1,\"1694\":1,\"1695\":1,\"2102\":1,\"2103\":1}}],[\"cooperate\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"cooperatetypes\",{\"1\":{\"183\":2,\"1613\":2,\"2021\":2}}],[\"cooperatetype\",{\"1\":{\"174\":1,\"375\":1,\"560\":1,\"748\":1,\"1146\":1,\"1281\":1,\"1604\":1,\"2012\":1}}],[\"countersign\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"copydef\",{\"1\":{\"149\":1,\"357\":1,\"542\":1,\"729\":1,\"1125\":1,\"1263\":1,\"1579\":1,\"1987\":1}}],[\"core包\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"core\",{\"1\":{\"81\":1,\"336\":2,\"406\":2,\"441\":1,\"518\":1,\"591\":2,\"627\":1,\"703\":1,\"782\":2,\"840\":1,\"927\":1,\"962\":1,\"1098\":1,\"1186\":2,\"1312\":2,\"1355\":1,\"1432\":1,\"1469\":1,\"1758\":2,\"1848\":1,\"1962\":2,\"2241\":2}}],[\"code\",{\"1\":{\"35\":2,\"265\":1,\"266\":2,\"267\":1,\"268\":1,\"269\":2,\"270\":1,\"506\":1,\"507\":2,\"508\":1,\"509\":1,\"510\":2,\"511\":1,\"515\":1,\"516\":1,\"691\":1,\"692\":2,\"693\":1,\"694\":1,\"695\":2,\"696\":1,\"700\":1,\"701\":1,\"915\":1,\"916\":2,\"917\":1,\"918\":1,\"919\":2,\"920\":1,\"924\":1,\"925\":1,\"1095\":1,\"1096\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":2,\"1249\":1,\"1420\":1,\"1421\":2,\"1422\":1,\"1423\":1,\"1424\":2,\"1425\":1,\"1429\":1,\"1430\":1,\"1691\":1,\"1692\":2,\"1693\":1,\"1694\":1,\"1695\":2,\"1696\":1,\"1802\":2,\"2099\":1,\"2100\":2,\"2101\":1,\"2102\":1,\"2103\":2,\"2104\":1}}],[\"connection\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"config调整\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"config\",{\"1\":{\"291\":1,\"338\":1,\"458\":2,\"611\":1,\"644\":2,\"860\":2,\"987\":1,\"1083\":2,\"1372\":2,\"1715\":1,\"1760\":1,\"1917\":1,\"1964\":1,\"2243\":1}}],[\"configuration>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"configuration+\",{\"0\":{\"417\":1,\"602\":1,\"793\":1,\"1193\":1,\"1323\":1}}],[\"configurationproperties\",{\"1\":{\"228\":1}}],[\"configuration\",{\"1\":{\"29\":2,\"228\":1,\"286\":1,\"291\":2,\"404\":1,\"407\":1,\"417\":1,\"422\":1,\"423\":1,\"515\":1,\"516\":1,\"519\":1,\"589\":1,\"592\":1,\"602\":1,\"607\":1,\"608\":1,\"700\":1,\"701\":1,\"704\":1,\"780\":1,\"783\":1,\"793\":1,\"800\":1,\"801\":1,\"924\":1,\"925\":1,\"928\":1,\"982\":1,\"987\":2,\"1082\":2,\"1095\":1,\"1096\":1,\"1099\":1,\"1184\":1,\"1187\":1,\"1193\":1,\"1200\":1,\"1201\":1,\"1310\":1,\"1313\":1,\"1323\":1,\"1328\":1,\"1329\":1,\"1429\":1,\"1430\":1,\"1433\":1,\"1502\":2,\"1710\":1,\"1715\":2,\"1796\":2,\"1912\":1,\"1917\":2,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"controller\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"contributions\",{\"1\":{\"284\":2,\"980\":2,\"1708\":2,\"1910\":2}}],[\"container\",{\"1\":{\"426\":3,\"612\":3,\"804\":3,\"1204\":3,\"1332\":3}}],[\"contains\",{\"1\":{\"18\":1,\"29\":1,\"450\":1,\"515\":1,\"636\":1,\"700\":1,\"851\":1,\"924\":1,\"1074\":1,\"1082\":1,\"1095\":1,\"1364\":1,\"1429\":1,\"1492\":1,\"1502\":1,\"1786\":1,\"1796\":1}}],[\"contenttype\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"content\",{\"1\":{\"333\":4,\"1755\":4,\"1959\":4}}],[\"context\",{\"1\":{\"291\":2,\"987\":2,\"1715\":2,\"1917\":2}}],[\"console\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"const\",{\"1\":{\"334\":4,\"425\":1,\"426\":4,\"611\":1,\"612\":4,\"803\":1,\"804\":4,\"1203\":1,\"1204\":4,\"1331\":1,\"1332\":4,\"1756\":4,\"1960\":4}}],[\"constructmaptype\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"consumer\",{\"1\":{\"155\":1,\"156\":1,\"1585\":1,\"1586\":1,\"1993\":1,\"1994\":1}}],[\"conditiononespl\",{\"1\":{\"333\":7,\"1755\":7,\"1959\":7}}],[\"conditionspltwo\",{\"1\":{\"335\":11,\"1757\":11,\"1961\":11,\"2240\":11}}],[\"conditionspl\",{\"1\":{\"333\":27,\"335\":26,\"1755\":27,\"1757\":26,\"1959\":27,\"1961\":26,\"2240\":26}}],[\"conditionstrategyeq\",{\"1\":{\"64\":1,\"836\":1,\"948\":1,\"1452\":1,\"1831\":1}}],[\"conditionstrategyabstract\",{\"1\":{\"63\":1,\"64\":1,\"835\":1,\"836\":1,\"947\":1,\"948\":1,\"1451\":1,\"1452\":1,\"1830\":1,\"1831\":1}}],[\"conditionstrategy\",{\"1\":{\"62\":1,\"63\":1,\"336\":1,\"834\":1,\"835\":1,\"946\":1,\"947\":1,\"1450\":1,\"1451\":1,\"1758\":1,\"1829\":1,\"1830\":1,\"1962\":1,\"2241\":1}}],[\"conditiontype\",{\"1\":{\"333\":10,\"335\":17,\"1755\":10,\"1757\":17,\"1959\":10,\"1961\":17,\"2240\":17}}],[\"condition\",{\"1\":{\"269\":1,\"333\":6,\"335\":10,\"510\":1,\"695\":1,\"919\":1,\"1248\":1,\"1424\":1,\"1695\":1,\"1755\":6,\"1757\":10,\"1959\":6,\"1961\":10,\"2103\":1,\"2240\":10}}],[\"conditionvalue\",{\"1\":{\"63\":2,\"333\":8,\"335\":12,\"835\":2,\"947\":2,\"1451\":2,\"1755\":8,\"1757\":12,\"1830\":2,\"1959\":8,\"1961\":12,\"2240\":12}}],[\"common增加依赖\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"compareto\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"component配置方式\",{\"0\":{\"520\":1,\"705\":1,\"929\":1,\"1100\":1,\"1434\":1}}],[\"component方式注入\",{\"0\":{\"415\":1,\"600\":1,\"791\":1,\"1191\":1,\"1321\":1}}],[\"component方式\",{\"1\":{\"41\":1,\"404\":3,\"406\":1,\"407\":2,\"518\":1,\"519\":1,\"520\":1,\"589\":3,\"591\":1,\"592\":2,\"703\":1,\"704\":1,\"705\":1,\"780\":3,\"782\":1,\"783\":2,\"869\":1,\"927\":1,\"928\":1,\"929\":1,\"1092\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1184\":3,\"1186\":1,\"1187\":2,\"1310\":3,\"1312\":1,\"1313\":2,\"1432\":1,\"1433\":1,\"1434\":1,\"1508\":1,\"1808\":1,\"2193\":4,\"2262\":4,\"2280\":4,\"2306\":4}}],[\"component\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"24\":1,\"29\":1,\"41\":1,\"56\":1,\"217\":1,\"228\":1,\"234\":1,\"272\":1,\"433\":1,\"436\":1,\"448\":1,\"449\":1,\"450\":1,\"515\":1,\"521\":1,\"530\":1,\"619\":1,\"622\":1,\"634\":1,\"635\":1,\"636\":1,\"700\":1,\"706\":1,\"715\":1,\"776\":1,\"811\":1,\"822\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":1,\"869\":1,\"924\":1,\"930\":1,\"941\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":1,\"1082\":1,\"1092\":1,\"1095\":1,\"1111\":1,\"1180\":1,\"1211\":1,\"1251\":1,\"1339\":1,\"1350\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1429\":1,\"1435\":1,\"1444\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":1,\"1502\":1,\"1508\":1,\"1523\":1,\"1647\":1,\"1660\":1,\"1698\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":1,\"1796\":1,\"1808\":1,\"1823\":1,\"2055\":1,\"2068\":1,\"2106\":1}}],[\"component或者\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"com商议合作\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"com\",{\"1\":{\"19\":1,\"114\":1,\"119\":1,\"121\":1,\"254\":1,\"255\":1,\"256\":1,\"277\":1,\"283\":2,\"291\":9,\"338\":1,\"403\":2,\"416\":1,\"588\":2,\"591\":2,\"601\":1,\"703\":1,\"779\":2,\"792\":1,\"850\":1,\"987\":9,\"1044\":1,\"1073\":1,\"1183\":2,\"1192\":1,\"1309\":2,\"1322\":1,\"1491\":1,\"1545\":1,\"1549\":1,\"1551\":1,\"1680\":1,\"1681\":1,\"1682\":1,\"1701\":1,\"1715\":9,\"1760\":1,\"1785\":1,\"1881\":1,\"1886\":1,\"1888\":1,\"1903\":1,\"1917\":9,\"1964\":1,\"2088\":1,\"2089\":1,\"2090\":1,\"2168\":1,\"2193\":2,\"2199\":1,\"2204\":1,\"2213\":1,\"2218\":1,\"2229\":1,\"2243\":1,\"2262\":2,\"2280\":2,\"2286\":1,\"2291\":1,\"2306\":2,\"2312\":1,\"2317\":1,\"2334\":1,\"2360\":1}}],[\"colin\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"collaborator\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"collectors\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"collect\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"cola\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"color\",{\"1\":{\"4\":3,\"7\":1,\"1771\":3,\"1774\":1}}],[\"right\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"rigangxia\",{\"1\":{\"255\":1,\"1681\":1,\"2089\":1}}],[\"r<void>\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"r<string>\",{\"1\":{\"4\":1,\"1771\":1}}],[\"raw\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"rawtype\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"ratio\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"routes\",{\"1\":{\"228\":1}}],[\"rootentity\",{\"1\":{\"220\":6,\"413\":6,\"598\":6,\"789\":6,\"1189\":6,\"1319\":6,\"1650\":6,\"2058\":6}}],[\"root\",{\"1\":{\"75\":2,\"287\":6,\"819\":2,\"959\":2,\"983\":6,\"1347\":2,\"1463\":2,\"1711\":6,\"1842\":2,\"1913\":6}}],[\"rolelist\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"rolemapper\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"role\",{\"1\":{\"17\":3,\"41\":3,\"46\":1,\"234\":5,\"241\":4,\"242\":4,\"284\":2,\"433\":5,\"448\":3,\"476\":4,\"477\":4,\"499\":6,\"619\":5,\"634\":3,\"662\":4,\"663\":4,\"684\":6,\"811\":5,\"849\":3,\"869\":3,\"881\":4,\"882\":4,\"888\":4,\"889\":4,\"907\":6,\"932\":1,\"980\":2,\"1072\":3,\"1092\":3,\"1102\":1,\"1211\":5,\"1216\":8,\"1218\":4,\"1219\":4,\"1236\":6,\"1339\":5,\"1362\":3,\"1390\":4,\"1391\":4,\"1413\":6,\"1490\":3,\"1508\":3,\"1513\":1,\"1660\":5,\"1667\":4,\"1668\":4,\"1708\":2,\"1784\":3,\"1808\":3,\"1813\":1,\"1910\":2,\"2068\":5,\"2075\":4,\"2076\":4,\"2173\":4,\"2190\":4,\"2234\":4,\"2259\":4,\"2277\":4,\"2303\":4,\"2339\":4,\"2365\":4}}],[\"roles\",{\"1\":{\"17\":3,\"41\":2,\"448\":3,\"634\":3,\"849\":3,\"869\":2,\"1072\":3,\"1092\":2,\"1362\":3,\"1490\":3,\"1508\":2,\"1784\":3,\"1808\":2}}],[\"ruoyi\",{\"1\":{\"19\":1,\"131\":6,\"228\":4,\"291\":5,\"403\":2,\"416\":1,\"588\":2,\"601\":1,\"779\":2,\"792\":1,\"850\":1,\"987\":5,\"1061\":3,\"1073\":1,\"1183\":2,\"1192\":1,\"1309\":2,\"1322\":1,\"1491\":1,\"1561\":6,\"1715\":5,\"1785\":1,\"1898\":6,\"1917\":5,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"releases<\",{\"1\":{\"2203\":2,\"2204\":1,\"2217\":2,\"2218\":1,\"2290\":2,\"2291\":1,\"2316\":2,\"2317\":1}}],[\"repositories>\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"repository\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"repository>\",{\"1\":{\"2203\":1,\"2204\":1,\"2217\":1,\"2218\":1,\"2290\":1,\"2291\":1,\"2316\":1,\"2317\":1}}],[\"repo\",{\"1\":{\"2199\":1,\"2202\":1,\"2203\":2,\"2213\":1,\"2216\":1,\"2217\":2,\"2286\":1,\"2289\":1,\"2290\":2,\"2312\":1,\"2315\":1,\"2316\":2}}],[\"replace\",{\"1\":{\"18\":1,\"93\":2,\"450\":1,\"531\":2,\"636\":1,\"716\":2,\"829\":2,\"851\":1,\"974\":2,\"1074\":1,\"1364\":1,\"1445\":2,\"1481\":2,\"1492\":1,\"1786\":1,\"1860\":2}}],[\"registry\",{\"1\":{\"423\":2,\"608\":2,\"801\":2,\"1201\":2,\"1329\":2}}],[\"registermodule\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"register\",{\"1\":{\"228\":1}}],[\"regular\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"reject\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"reject退回\",{\"1\":{\"161\":1,\"168\":1,\"181\":1,\"266\":1,\"269\":1,\"363\":1,\"369\":1,\"377\":1,\"507\":1,\"510\":1,\"548\":1,\"554\":1,\"562\":1,\"692\":1,\"695\":1,\"735\":1,\"742\":1,\"750\":1,\"916\":1,\"919\":1,\"1133\":1,\"1140\":1,\"1148\":1,\"1245\":1,\"1248\":1,\"1269\":1,\"1275\":1,\"1283\":1,\"1421\":1,\"1424\":1,\"1591\":1,\"1598\":1,\"1611\":1,\"1692\":1,\"1695\":1,\"1999\":1,\"2006\":1,\"2019\":1,\"2100\":1,\"2103\":1}}],[\"requestmapping\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"requests\",{\"1\":{\"421\":2,\"606\":2,\"799\":2,\"1199\":2,\"1327\":2,\"2109\":2,\"2120\":2,\"2137\":2,\"2154\":2,\"2221\":2,\"2320\":2,\"2346\":2}}],[\"request\",{\"1\":{\"228\":4}}],[\"ref\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"ref=\",{\"1\":{\"426\":2,\"612\":2,\"804\":2,\"1204\":2,\"1332\":2}}],[\"reflect\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"refreshscope\",{\"1\":{\"228\":1}}],[\"refactor\",{\"1\":{\"109\":1,\"302\":4,\"306\":3,\"307\":1,\"309\":1,\"311\":1,\"313\":1,\"314\":2,\"997\":3,\"998\":1,\"1000\":1,\"1003\":1,\"1005\":1,\"1006\":2,\"1038\":1,\"1540\":1,\"1725\":4,\"1729\":3,\"1730\":1,\"1732\":1,\"1734\":1,\"1736\":1,\"1737\":2,\"1876\":1,\"1928\":4,\"1932\":3,\"1933\":1,\"1935\":1,\"1937\":1,\"1939\":1,\"1940\":2,\"2131\":1,\"2162\":4,\"2328\":4,\"2354\":4}}],[\"removebyids\",{\"1\":{\"199\":1,\"391\":1,\"576\":1,\"764\":1,\"1162\":1,\"1297\":1,\"1629\":1,\"2037\":1}}],[\"removebyid\",{\"1\":{\"197\":1,\"389\":1,\"574\":1,\"762\":1,\"1160\":1,\"1295\":1,\"1627\":1,\"2035\":1}}],[\"remove\",{\"1\":{\"163\":1,\"198\":1,\"301\":2,\"302\":3,\"307\":1,\"309\":1,\"314\":2,\"316\":1,\"365\":1,\"390\":1,\"550\":1,\"575\":1,\"737\":1,\"763\":1,\"998\":1,\"1000\":1,\"1006\":2,\"1008\":1,\"1135\":1,\"1161\":1,\"1271\":1,\"1296\":1,\"1593\":1,\"1628\":1,\"1725\":3,\"1730\":1,\"1732\":1,\"1737\":2,\"1739\":1,\"1927\":2,\"1928\":3,\"1933\":1,\"1935\":1,\"1940\":2,\"1942\":1,\"2001\":1,\"2036\":1,\"2131\":1,\"2162\":3,\"2180\":2,\"2328\":3,\"2354\":3,\"2372\":2}}],[\"removedef\",{\"1\":{\"146\":1,\"354\":1,\"539\":1,\"726\":1,\"1122\":1,\"1260\":1,\"1576\":1,\"1984\":1}}],[\"remote\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"revert\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"reset\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"responseentity\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"responseentity<byte\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"response\",{\"1\":{\"333\":6,\"1755\":6,\"1959\":6}}],[\"restart\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"rest\",{\"1\":{\"115\":1,\"1882\":1}}],[\"result\",{\"1\":{\"93\":2,\"531\":2,\"716\":2,\"829\":2,\"974\":2,\"1445\":2,\"1481\":2,\"1860\":2}}],[\"resource包路径变更的问题\",{\"1\":{\"320\":1,\"1012\":1,\"1743\":1,\"1946\":1}}],[\"resources目录下都可以\",{\"1\":{\"74\":1,\"818\":1,\"958\":1,\"1346\":1,\"1462\":1,\"1841\":1}}],[\"resources\",{\"1\":{\"74\":1,\"496\":1,\"681\":1,\"818\":1,\"904\":1,\"958\":1,\"1233\":1,\"1346\":1,\"1410\":1,\"1462\":1,\"1841\":1,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"resource\",{\"1\":{\"19\":1,\"38\":1,\"449\":1,\"461\":1,\"462\":1,\"463\":1,\"464\":1,\"515\":1,\"635\":1,\"647\":1,\"648\":1,\"649\":1,\"650\":1,\"700\":1,\"850\":1,\"864\":1,\"865\":1,\"866\":1,\"924\":1,\"1073\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1095\":1,\"1363\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1429\":1,\"1491\":1,\"1505\":1,\"1785\":1,\"1805\":1}}],[\"react版本\",{\"0\":{\"427\":1,\"613\":1,\"805\":1,\"1205\":1,\"1333\":1}}],[\"react\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"readvalue\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"real\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"redirect\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"reduction\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"reductionhandlers\",{\"1\":{\"173\":1,\"174\":1,\"374\":1,\"375\":1,\"560\":1,\"747\":1,\"748\":1,\"1145\":1,\"1146\":1,\"1216\":1,\"1280\":1,\"1281\":1,\"1603\":1,\"1604\":1,\"2011\":1,\"2012\":1}}],[\"reductionsignature\",{\"1\":{\"173\":1,\"374\":1,\"559\":1,\"747\":1,\"1145\":1,\"1216\":2,\"1280\":1,\"1603\":1,\"2011\":1}}],[\"red\",{\"1\":{\"4\":3,\"1771\":3}}],[\"return\",{\"1\":{\"4\":2,\"32\":1,\"40\":1,\"41\":4,\"56\":2,\"59\":4,\"62\":2,\"63\":3,\"64\":3,\"77\":4,\"81\":6,\"83\":4,\"87\":2,\"89\":4,\"93\":5,\"217\":4,\"228\":3,\"233\":2,\"234\":13,\"286\":2,\"291\":4,\"333\":3,\"404\":3,\"407\":2,\"417\":1,\"421\":1,\"422\":1,\"425\":1,\"428\":1,\"432\":2,\"433\":13,\"436\":4,\"441\":6,\"515\":7,\"516\":5,\"519\":1,\"520\":1,\"530\":2,\"531\":7,\"589\":3,\"592\":2,\"602\":1,\"606\":1,\"607\":1,\"611\":1,\"614\":1,\"618\":2,\"619\":13,\"622\":4,\"627\":6,\"700\":7,\"701\":5,\"704\":1,\"705\":1,\"715\":2,\"716\":7,\"776\":4,\"780\":3,\"783\":2,\"793\":1,\"799\":1,\"800\":1,\"803\":1,\"806\":1,\"810\":2,\"811\":13,\"822\":4,\"825\":4,\"829\":5,\"832\":2,\"834\":2,\"835\":3,\"836\":3,\"840\":6,\"868\":1,\"869\":4,\"924\":7,\"925\":5,\"928\":1,\"929\":1,\"941\":2,\"943\":4,\"946\":2,\"947\":3,\"948\":3,\"962\":6,\"964\":4,\"968\":2,\"970\":4,\"974\":5,\"982\":2,\"987\":4,\"1091\":1,\"1092\":4,\"1095\":7,\"1096\":5,\"1099\":1,\"1100\":1,\"1111\":2,\"1180\":4,\"1184\":3,\"1187\":2,\"1193\":1,\"1199\":1,\"1200\":1,\"1203\":1,\"1206\":1,\"1210\":2,\"1211\":13,\"1310\":3,\"1313\":2,\"1323\":1,\"1327\":1,\"1328\":1,\"1331\":1,\"1334\":1,\"1338\":2,\"1339\":13,\"1350\":4,\"1355\":6,\"1429\":7,\"1430\":5,\"1433\":1,\"1434\":1,\"1444\":2,\"1445\":7,\"1447\":4,\"1450\":2,\"1451\":3,\"1452\":3,\"1465\":4,\"1469\":6,\"1471\":4,\"1475\":2,\"1477\":4,\"1481\":5,\"1507\":1,\"1508\":4,\"1523\":2,\"1647\":4,\"1659\":2,\"1660\":13,\"1710\":2,\"1715\":4,\"1755\":3,\"1771\":2,\"1799\":1,\"1807\":1,\"1808\":4,\"1823\":2,\"1826\":4,\"1829\":2,\"1830\":3,\"1831\":3,\"1844\":4,\"1848\":6,\"1850\":4,\"1854\":2,\"1856\":4,\"1860\":5,\"1912\":2,\"1917\":4,\"1959\":3,\"2055\":4,\"2067\":2,\"2068\":13,\"2109\":1,\"2114\":2,\"2120\":1,\"2125\":2,\"2137\":1,\"2142\":2,\"2154\":1,\"2159\":2,\"2193\":2,\"2221\":1,\"2226\":2,\"2262\":2,\"2280\":2,\"2306\":2,\"2320\":1,\"2325\":2,\"2346\":1,\"2351\":2}}],[\"r\",{\"1\":{\"4\":1,\"333\":2,\"1755\":2,\"1771\":1,\"1959\":2}}],[\"查询方式需要改动\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"查询每个并行网关的所有的前置路线\",{\"1\":{\"246\":1,\"1672\":1,\"2080\":1}}],[\"查询用户列表\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"查询部门列表\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"查询角色列表\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"查询条件\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"查询参数\",{\"1\":{\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"618\":1,\"619\":1,\"810\":1,\"811\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1659\":1,\"1660\":1,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"查询一条记录\",{\"0\":{\"192\":1,\"384\":1,\"569\":1,\"757\":1,\"1155\":1,\"1290\":1,\"1622\":1,\"2030\":1},\"1\":{\"192\":1,\"384\":1,\"569\":1,\"757\":1,\"1155\":1,\"1290\":1,\"1622\":1,\"2030\":1}}],[\"查询代理层处理\",{\"1\":{\"191\":1,\"383\":1,\"568\":1,\"756\":1,\"1154\":1,\"1289\":1,\"1621\":1,\"2029\":1}}],[\"查询列表\",{\"0\":{\"190\":1,\"191\":1,\"382\":1,\"383\":1,\"567\":1,\"568\":1,\"755\":1,\"756\":1,\"1153\":1,\"1154\":1,\"1288\":1,\"1289\":1,\"1620\":1,\"1621\":1,\"2028\":1,\"2029\":1},\"1\":{\"190\":1,\"191\":1,\"382\":1,\"383\":1,\"567\":1,\"568\":1,\"755\":1,\"756\":1,\"1153\":1,\"1154\":1,\"1288\":1,\"1289\":1,\"1620\":1,\"1621\":1,\"2028\":1,\"2029\":1}}],[\"查询实体\",{\"1\":{\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"381\":1,\"382\":1,\"383\":1,\"384\":1,\"385\":1,\"386\":1,\"566\":1,\"567\":1,\"568\":1,\"569\":1,\"570\":1,\"571\":1,\"754\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1156\":1,\"1157\":1,\"1287\":1,\"1288\":1,\"1289\":1,\"1290\":1,\"1291\":1,\"1292\":1,\"1619\":1,\"1620\":1,\"1621\":1,\"1622\":1,\"1623\":1,\"1624\":1,\"2027\":1,\"2028\":1,\"2029\":1,\"2030\":1,\"2031\":1,\"2032\":1}}],[\"查询流程实例集合api\",{\"1\":{\"307\":1,\"998\":1,\"1730\":1,\"1933\":1,\"2131\":1}}],[\"查询流程实例集合\",{\"0\":{\"166\":1,\"740\":1,\"1138\":1,\"1596\":1,\"2004\":1},\"1\":{\"166\":1,\"740\":1,\"1138\":1,\"1596\":1,\"2004\":1}}],[\"查询流程设计所需的数据\",{\"0\":{\"144\":1,\"1130\":1,\"1574\":1,\"1982\":1},\"1\":{\"144\":1,\"1130\":1,\"1574\":1,\"1982\":1}}],[\"查询流程图\",{\"1\":{\"4\":1,\"1771\":1}}],[\"查看的时候不可编辑\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"查看跳转线退回的\",{\"1\":{\"293\":1,\"989\":1,\"1717\":1,\"1919\":1}}],[\"查看\",{\"1\":{\"0\":2}}],[\"26\",{\"0\":{\"1002\":1,\"2245\":1}}],[\"24\",{\"0\":{\"1723\":1},\"1\":{\"332\":1,\"1958\":1}}],[\"28\",{\"0\":{\"313\":1,\"315\":1,\"316\":1,\"330\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1022\":1,\"1736\":1,\"1738\":1,\"1739\":1,\"1753\":1,\"1939\":1,\"1941\":1,\"1942\":1,\"1956\":1,\"2248\":1,\"2250\":1,\"2251\":1}}],[\"23\",{\"0\":{\"302\":1,\"305\":1,\"310\":1,\"320\":1,\"1001\":1,\"1012\":1,\"1725\":1,\"1728\":1,\"1733\":1,\"1743\":1,\"1928\":1,\"1931\":1,\"1936\":1,\"1946\":1,\"2244\":1}}],[\"27\",{\"0\":{\"299\":1,\"319\":1,\"324\":1,\"1011\":1,\"1016\":1,\"1742\":1,\"1747\":1,\"1945\":1,\"1950\":1}}],[\"2待办任务的转办人权限\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"22\",{\"0\":{\"325\":1,\"1017\":1,\"1748\":1,\"1951\":1},\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"21\",{\"0\":{\"326\":1,\"400\":1,\"585\":1,\"773\":1,\"1018\":1,\"1171\":1,\"1306\":1,\"1749\":1,\"1952\":1},\"1\":{\"266\":1,\"332\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"1958\":1,\"2100\":1}}],[\"2结束节点\",{\"1\":{\"266\":1,\"267\":1,\"268\":1,\"269\":2,\"270\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":2,\"511\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":2,\"696\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":2,\"920\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":2,\"1249\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":2,\"1425\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":2,\"1696\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":2,\"2104\":1}}],[\"2转办\",{\"1\":{\"174\":1,\"266\":1,\"375\":1,\"507\":1,\"560\":1,\"692\":1,\"748\":1,\"916\":1,\"1146\":1,\"1245\":1,\"1281\":1,\"1421\":1,\"1604\":1,\"1692\":1,\"2012\":1,\"2100\":1}}],[\"2跳转线设置\",{\"0\":{\"126\":1,\"470\":1,\"656\":1,\"875\":1,\"1056\":1,\"1384\":1,\"1556\":1,\"1893\":1}}],[\"290631660\",{\"1\":{\"119\":1,\"283\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"29家\",{\"1\":{\"0\":1}}],[\"25\",{\"0\":{\"307\":1,\"311\":1,\"998\":1,\"1003\":1,\"1730\":1,\"1734\":1,\"1933\":1,\"1937\":1,\"2241\":1,\"2246\":1},\"1\":{\"115\":1,\"133\":14,\"335\":1,\"1063\":14,\"1563\":14,\"1757\":1,\"1882\":1,\"1900\":14,\"1961\":1,\"2240\":1}}],[\"255\",{\"1\":{\"7\":2,\"1774\":2}}],[\"20\",{\"0\":{\"306\":1,\"399\":1,\"584\":1,\"772\":1,\"997\":1,\"1170\":1,\"1305\":1,\"1729\":1,\"1925\":1,\"1932\":1,\"2240\":1},\"1\":{\"133\":5,\"265\":1,\"266\":2,\"267\":1,\"268\":2,\"287\":1,\"335\":1,\"506\":1,\"507\":2,\"508\":1,\"509\":2,\"691\":1,\"692\":2,\"693\":1,\"694\":2,\"915\":1,\"916\":2,\"917\":1,\"918\":2,\"983\":1,\"1063\":5,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":2,\"1420\":1,\"1421\":2,\"1422\":1,\"1423\":2,\"1563\":5,\"1691\":1,\"1692\":2,\"1693\":1,\"1694\":2,\"1711\":1,\"1757\":1,\"1900\":5,\"1913\":1,\"1961\":1,\"2099\":1,\"2100\":2,\"2101\":1,\"2102\":2,\"2240\":1}}],[\"2023\",{\"0\":{\"329\":1,\"330\":1,\"1021\":1,\"1022\":1,\"1752\":1,\"1753\":1,\"1955\":1,\"1956\":1}}],[\"2022\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"2024\",{\"0\":{\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"997\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1735\":1,\"1736\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1930\":1,\"1931\":1,\"1932\":1,\"1933\":1,\"1934\":1,\"1935\":1,\"1936\":1,\"1937\":1,\"1938\":1,\"1939\":1,\"1940\":1,\"1941\":1,\"1942\":1,\"1943\":1,\"1944\":1,\"1945\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1},\"1\":{\"24\":1,\"133\":20,\"856\":1,\"1063\":20,\"1079\":1,\"1497\":1,\"1563\":20,\"1791\":1,\"1900\":20}}],[\"2025\",{\"0\":{\"299\":1,\"301\":1,\"302\":1,\"303\":1,\"1723\":1,\"1725\":1,\"1726\":1,\"1925\":1,\"1927\":1,\"1928\":1,\"1929\":1},\"1\":{\"4\":1,\"133\":1,\"332\":2,\"1563\":1,\"1771\":1,\"1900\":1,\"1958\":2}}],[\"200\",{\"1\":{\"7\":1,\"268\":1,\"269\":1,\"509\":1,\"510\":1,\"694\":1,\"695\":1,\"918\":1,\"919\":1,\"1247\":1,\"1248\":1,\"1423\":1,\"1424\":1,\"1694\":1,\"1695\":1,\"1774\":1,\"2102\":1,\"2103\":1}}],[\"2\",{\"0\":{\"4\":1,\"6\":1,\"7\":1,\"8\":2,\"11\":1,\"17\":1,\"29\":1,\"30\":1,\"33\":1,\"41\":1,\"44\":1,\"47\":1,\"60\":1,\"63\":1,\"67\":1,\"71\":1,\"74\":1,\"78\":1,\"84\":1,\"87\":1,\"90\":1,\"93\":1,\"114\":1,\"124\":1,\"125\":1,\"126\":1,\"211\":1,\"212\":1,\"213\":2,\"214\":1,\"217\":1,\"221\":1,\"224\":1,\"225\":1,\"226\":2,\"228\":1,\"229\":1,\"232\":1,\"233\":1,\"234\":2,\"238\":1,\"242\":1,\"249\":1,\"252\":1,\"261\":1,\"264\":1,\"265\":1,\"266\":2,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"277\":1,\"287\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"324\":1,\"329\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"350\":1,\"361\":1,\"362\":1,\"363\":2,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"370\":1,\"380\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"410\":1,\"414\":1,\"415\":1,\"416\":2,\"417\":1,\"420\":1,\"421\":1,\"422\":2,\"423\":1,\"425\":1,\"431\":1,\"432\":1,\"433\":2,\"436\":1,\"444\":1,\"445\":1,\"448\":1,\"459\":1,\"460\":1,\"463\":1,\"468\":1,\"469\":1,\"470\":1,\"477\":1,\"485\":1,\"488\":1,\"497\":1,\"502\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":2,\"520\":1,\"524\":1,\"535\":1,\"546\":1,\"547\":1,\"548\":2,\"549\":1,\"550\":1,\"551\":1,\"552\":1,\"555\":1,\"565\":1,\"589\":1,\"590\":1,\"591\":1,\"592\":1,\"595\":1,\"599\":1,\"600\":1,\"601\":2,\"602\":1,\"605\":1,\"606\":1,\"607\":2,\"608\":1,\"611\":1,\"617\":1,\"618\":1,\"619\":2,\"622\":1,\"630\":1,\"631\":1,\"634\":1,\"645\":1,\"646\":1,\"649\":1,\"654\":1,\"655\":1,\"656\":1,\"663\":1,\"671\":1,\"674\":1,\"687\":1,\"701\":1,\"702\":1,\"703\":1,\"704\":2,\"705\":1,\"709\":1,\"720\":1,\"733\":1,\"734\":1,\"735\":2,\"736\":1,\"737\":1,\"738\":1,\"739\":1,\"740\":1,\"743\":1,\"753\":1,\"776\":1,\"780\":1,\"781\":1,\"782\":1,\"783\":1,\"786\":1,\"790\":1,\"791\":1,\"792\":2,\"793\":1,\"798\":1,\"799\":1,\"800\":2,\"801\":1,\"803\":1,\"809\":1,\"810\":1,\"811\":2,\"815\":1,\"818\":1,\"822\":1,\"826\":1,\"829\":1,\"832\":1,\"835\":1,\"843\":1,\"849\":1,\"861\":1,\"862\":1,\"865\":1,\"869\":1,\"873\":1,\"874\":1,\"875\":1,\"882\":1,\"889\":1,\"896\":1,\"899\":1,\"905\":1,\"911\":1,\"925\":1,\"926\":1,\"927\":1,\"928\":2,\"929\":1,\"933\":1,\"944\":1,\"947\":1,\"951\":1,\"955\":1,\"958\":1,\"965\":1,\"968\":1,\"971\":1,\"974\":1,\"983\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1016\":1,\"1021\":1,\"1043\":1,\"1054\":1,\"1055\":1,\"1056\":1,\"1066\":1,\"1072\":1,\"1084\":1,\"1085\":1,\"1088\":1,\"1092\":1,\"1096\":1,\"1097\":1,\"1098\":1,\"1099\":2,\"1100\":1,\"1103\":1,\"1116\":1,\"1131\":1,\"1132\":1,\"1133\":2,\"1134\":1,\"1135\":1,\"1136\":1,\"1137\":1,\"1138\":1,\"1141\":1,\"1151\":1,\"1174\":1,\"1175\":1,\"1176\":2,\"1177\":1,\"1180\":1,\"1184\":1,\"1185\":1,\"1186\":1,\"1187\":1,\"1190\":1,\"1191\":1,\"1192\":2,\"1193\":1,\"1198\":1,\"1199\":1,\"1200\":2,\"1201\":1,\"1203\":1,\"1209\":1,\"1210\":1,\"1211\":2,\"1215\":1,\"1219\":1,\"1225\":1,\"1228\":1,\"1234\":1,\"1240\":1,\"1243\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1256\":1,\"1267\":1,\"1268\":1,\"1269\":2,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":1,\"1276\":1,\"1286\":1,\"1310\":1,\"1311\":1,\"1312\":1,\"1313\":1,\"1316\":1,\"1320\":1,\"1321\":1,\"1322\":2,\"1323\":1,\"1326\":1,\"1327\":1,\"1328\":2,\"1329\":1,\"1331\":1,\"1337\":1,\"1338\":1,\"1339\":2,\"1343\":1,\"1346\":1,\"1347\":1,\"1350\":1,\"1358\":1,\"1359\":1,\"1362\":1,\"1373\":1,\"1374\":1,\"1377\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1391\":1,\"1399\":1,\"1402\":1,\"1411\":1,\"1416\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1433\":2,\"1434\":1,\"1438\":1,\"1448\":1,\"1451\":1,\"1455\":1,\"1459\":1,\"1462\":1,\"1466\":1,\"1472\":1,\"1475\":1,\"1478\":1,\"1481\":1,\"1484\":1,\"1490\":1,\"1502\":1,\"1503\":1,\"1508\":1,\"1511\":1,\"1514\":1,\"1545\":1,\"1554\":1,\"1555\":1,\"1556\":1,\"1641\":1,\"1642\":1,\"1643\":2,\"1644\":1,\"1647\":1,\"1651\":1,\"1654\":1,\"1658\":1,\"1659\":1,\"1660\":2,\"1664\":1,\"1668\":1,\"1675\":1,\"1678\":1,\"1687\":1,\"1690\":1,\"1691\":1,\"1692\":2,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1701\":1,\"1711\":1,\"1734\":1,\"1735\":1,\"1736\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1747\":1,\"1752\":1,\"1762\":1,\"1763\":1,\"1764\":1,\"1765\":1,\"1766\":1,\"1771\":1,\"1773\":1,\"1774\":1,\"1775\":2,\"1778\":1,\"1784\":1,\"1796\":1,\"1797\":1,\"1800\":1,\"1808\":1,\"1811\":1,\"1814\":1,\"1827\":1,\"1830\":1,\"1834\":1,\"1838\":1,\"1841\":1,\"1845\":1,\"1851\":1,\"1854\":1,\"1857\":1,\"1860\":1,\"1881\":1,\"1891\":1,\"1892\":1,\"1893\":1,\"1903\":1,\"1913\":1,\"1937\":1,\"1938\":1,\"1939\":1,\"1940\":1,\"1941\":1,\"1942\":1,\"1943\":1,\"1950\":1,\"1955\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"2049\":1,\"2050\":1,\"2051\":2,\"2052\":1,\"2055\":1,\"2059\":1,\"2062\":1,\"2066\":1,\"2067\":1,\"2068\":2,\"2072\":1,\"2076\":1,\"2083\":1,\"2086\":1,\"2095\":1,\"2098\":1,\"2099\":1,\"2100\":2,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2109\":1,\"2113\":1,\"2114\":1,\"2120\":1,\"2124\":1,\"2125\":1,\"2131\":1,\"2137\":1,\"2141\":1,\"2142\":1,\"2154\":1,\"2158\":1,\"2159\":1,\"2169\":1,\"2170\":1,\"2171\":2,\"2172\":1,\"2173\":1,\"2199\":1,\"2200\":1,\"2213\":1,\"2214\":1,\"2221\":1,\"2225\":1,\"2226\":1,\"2230\":1,\"2231\":1,\"2232\":2,\"2233\":1,\"2234\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2286\":1,\"2287\":1,\"2312\":1,\"2313\":1,\"2320\":1,\"2324\":1,\"2325\":1,\"2335\":1,\"2336\":1,\"2337\":2,\"2338\":1,\"2339\":1,\"2346\":1,\"2350\":1,\"2351\":1,\"2361\":1,\"2362\":1,\"2363\":2,\"2364\":1,\"2365\":1},\"1\":{\"30\":1,\"35\":1,\"46\":1,\"47\":1,\"49\":1,\"59\":1,\"64\":3,\"77\":1,\"83\":1,\"89\":1,\"101\":1,\"102\":1,\"119\":1,\"133\":1,\"216\":1,\"217\":1,\"240\":2,\"241\":1,\"262\":1,\"263\":1,\"265\":1,\"266\":2,\"267\":2,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"283\":1,\"287\":2,\"291\":1,\"292\":1,\"316\":1,\"332\":1,\"333\":2,\"335\":3,\"340\":1,\"403\":1,\"406\":1,\"408\":1,\"418\":1,\"435\":1,\"447\":1,\"457\":1,\"458\":1,\"459\":1,\"460\":1,\"476\":1,\"482\":1,\"483\":1,\"499\":3,\"503\":1,\"504\":1,\"506\":1,\"507\":2,\"508\":2,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"515\":1,\"516\":1,\"521\":1,\"523\":1,\"524\":1,\"588\":1,\"591\":1,\"593\":1,\"603\":1,\"609\":1,\"621\":1,\"633\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"662\":1,\"668\":1,\"669\":1,\"684\":3,\"688\":1,\"689\":1,\"691\":1,\"692\":2,\"693\":2,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"700\":1,\"701\":1,\"706\":1,\"708\":1,\"709\":1,\"775\":1,\"776\":1,\"779\":1,\"782\":1,\"784\":1,\"794\":1,\"821\":1,\"825\":1,\"836\":3,\"859\":1,\"860\":1,\"861\":1,\"862\":1,\"867\":1,\"881\":1,\"887\":2,\"888\":1,\"894\":1,\"907\":3,\"912\":1,\"913\":1,\"915\":1,\"916\":2,\"917\":2,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"924\":1,\"925\":1,\"930\":1,\"932\":1,\"933\":1,\"935\":2,\"943\":1,\"948\":3,\"949\":1,\"964\":1,\"970\":1,\"983\":2,\"987\":1,\"988\":1,\"1008\":1,\"1030\":1,\"1031\":1,\"1044\":1,\"1082\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1090\":1,\"1095\":1,\"1096\":1,\"1102\":1,\"1103\":1,\"1105\":1,\"1179\":1,\"1180\":1,\"1183\":1,\"1186\":1,\"1194\":1,\"1214\":1,\"1216\":8,\"1217\":2,\"1218\":1,\"1223\":1,\"1236\":3,\"1241\":1,\"1242\":1,\"1244\":1,\"1245\":2,\"1246\":2,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1309\":1,\"1312\":1,\"1314\":1,\"1324\":1,\"1349\":1,\"1361\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1374\":1,\"1390\":1,\"1396\":2,\"1397\":1,\"1413\":3,\"1417\":1,\"1418\":1,\"1420\":1,\"1421\":2,\"1422\":2,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1429\":1,\"1430\":1,\"1435\":1,\"1437\":1,\"1438\":1,\"1447\":1,\"1452\":3,\"1465\":1,\"1471\":1,\"1477\":1,\"1503\":1,\"1513\":1,\"1514\":1,\"1516\":1,\"1532\":1,\"1533\":1,\"1549\":1,\"1563\":1,\"1646\":1,\"1647\":1,\"1666\":2,\"1667\":1,\"1688\":1,\"1689\":1,\"1691\":1,\"1692\":2,\"1693\":2,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1711\":2,\"1715\":1,\"1716\":1,\"1739\":1,\"1755\":2,\"1757\":3,\"1762\":1,\"1797\":1,\"1802\":1,\"1813\":1,\"1814\":1,\"1816\":1,\"1826\":1,\"1831\":3,\"1844\":1,\"1850\":1,\"1856\":1,\"1868\":1,\"1869\":1,\"1886\":1,\"1900\":1,\"1913\":2,\"1917\":1,\"1918\":1,\"1942\":1,\"1958\":1,\"1959\":2,\"1961\":3,\"1966\":1,\"2054\":1,\"2055\":1,\"2074\":2,\"2075\":1,\"2096\":1,\"2097\":1,\"2099\":1,\"2100\":2,\"2101\":2,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2109\":1,\"2120\":1,\"2121\":1,\"2137\":1,\"2149\":1,\"2154\":1,\"2173\":2,\"2190\":3,\"2193\":1,\"2203\":1,\"2208\":1,\"2217\":1,\"2221\":1,\"2234\":2,\"2240\":3,\"2246\":1,\"2248\":1,\"2249\":1,\"2251\":1,\"2252\":1,\"2259\":3,\"2262\":1,\"2269\":1,\"2277\":3,\"2280\":1,\"2290\":1,\"2295\":1,\"2303\":3,\"2306\":1,\"2316\":1,\"2320\":1,\"2339\":2,\"2346\":1,\"2365\":2}}],[\"other\",{\"0\":{\"2383\":1,\"2392\":1,\"2403\":1,\"2408\":1}}],[\"oceanbase\",{\"1\":{\"492\":1,\"678\":1,\"1046\":1,\"1406\":1}}],[\"opentab\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"option\",{\"1\":{\"335\":19,\"1757\":19,\"1961\":19,\"2240\":19}}],[\"optimistic\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"optimisticlockerinnerinterceptor\",{\"1\":{\"291\":5,\"987\":5,\"1715\":5,\"1917\":5}}],[\"onmounted\",{\"1\":{\"426\":2,\"612\":2,\"804\":2,\"1204\":2,\"1332\":2}}],[\"onmessage\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"of\",{\"1\":{\"333\":6,\"1755\":6,\"1959\":6}}],[\"ofpattern\",{\"1\":{\"3\":1,\"1770\":1}}],[\"overriding\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"override\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"29\":1,\"41\":2,\"63\":1,\"64\":2,\"81\":2,\"87\":2,\"93\":2,\"217\":1,\"220\":3,\"228\":1,\"234\":2,\"272\":1,\"286\":1,\"404\":1,\"413\":3,\"423\":1,\"433\":2,\"436\":1,\"441\":2,\"448\":1,\"449\":1,\"450\":1,\"515\":4,\"516\":3,\"520\":1,\"521\":1,\"531\":2,\"589\":1,\"598\":3,\"608\":1,\"619\":2,\"622\":1,\"627\":2,\"634\":1,\"635\":1,\"636\":1,\"700\":4,\"701\":3,\"705\":1,\"706\":1,\"716\":2,\"776\":1,\"780\":1,\"789\":3,\"801\":1,\"811\":2,\"822\":1,\"829\":2,\"832\":2,\"835\":1,\"836\":2,\"840\":2,\"849\":1,\"850\":1,\"851\":1,\"869\":2,\"924\":4,\"925\":3,\"929\":1,\"930\":1,\"947\":1,\"948\":2,\"962\":2,\"968\":2,\"974\":2,\"982\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1082\":1,\"1092\":2,\"1095\":4,\"1096\":3,\"1100\":1,\"1180\":1,\"1184\":1,\"1189\":3,\"1201\":1,\"1211\":2,\"1251\":1,\"1310\":1,\"1319\":3,\"1329\":1,\"1339\":2,\"1350\":1,\"1355\":2,\"1362\":1,\"1363\":1,\"1364\":1,\"1429\":4,\"1430\":3,\"1434\":1,\"1435\":1,\"1445\":2,\"1451\":1,\"1452\":2,\"1469\":2,\"1475\":2,\"1481\":2,\"1490\":1,\"1491\":1,\"1492\":1,\"1502\":1,\"1508\":2,\"1647\":1,\"1650\":3,\"1660\":2,\"1698\":1,\"1710\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1796\":1,\"1808\":2,\"1830\":1,\"1831\":2,\"1848\":2,\"1854\":2,\"1860\":2,\"1912\":1,\"2055\":1,\"2058\":3,\"2068\":2,\"2106\":1}}],[\"oss\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"ordered\",{\"1\":{\"228\":1}}],[\"orderby\",{\"1\":{\"208\":1,\"400\":1,\"585\":1,\"773\":1,\"1171\":1,\"1306\":1,\"1638\":1,\"2046\":1}}],[\"orderbydesc\",{\"1\":{\"207\":1,\"399\":1,\"584\":1,\"772\":1,\"1170\":1,\"1305\":1,\"1637\":1,\"2045\":1}}],[\"orderbyfield\",{\"1\":{\"206\":2,\"207\":2,\"208\":2,\"398\":2,\"399\":2,\"400\":2,\"583\":2,\"584\":2,\"585\":2,\"771\":2,\"772\":2,\"773\":2,\"1169\":2,\"1170\":2,\"1171\":2,\"1304\":2,\"1305\":2,\"1306\":2,\"1636\":2,\"1637\":2,\"1638\":2,\"2044\":2,\"2045\":2,\"2046\":2}}],[\"orderbyasc\",{\"1\":{\"206\":1,\"398\":1,\"583\":1,\"771\":1,\"1169\":1,\"1304\":1,\"1636\":1,\"2044\":1}}],[\"orderbyupdatetime\",{\"1\":{\"205\":1,\"397\":1,\"582\":1,\"770\":1,\"1168\":1,\"1303\":1,\"1635\":1,\"2043\":1}}],[\"orderbycreatetime\",{\"1\":{\"204\":1,\"396\":1,\"581\":1,\"769\":1,\"1167\":1,\"1302\":1,\"1634\":1,\"2042\":1}}],[\"orderbyid\",{\"1\":{\"203\":1,\"395\":1,\"580\":1,\"768\":1,\"1166\":1,\"1301\":1,\"1633\":1,\"2041\":1}}],[\"org\",{\"1\":{\"119\":1,\"289\":1,\"291\":3,\"336\":1,\"403\":1,\"406\":3,\"489\":1,\"518\":1,\"588\":1,\"591\":1,\"675\":1,\"779\":1,\"782\":3,\"900\":1,\"927\":1,\"985\":1,\"987\":3,\"1044\":1,\"1098\":1,\"1183\":1,\"1186\":3,\"1229\":1,\"1309\":1,\"1312\":3,\"1403\":1,\"1432\":1,\"1549\":1,\"1713\":1,\"1715\":3,\"1758\":1,\"1886\":1,\"1915\":1,\"1917\":3,\"1962\":1,\"2117\":1,\"2128\":1,\"2134\":1,\"2145\":1,\"2165\":1,\"2177\":1,\"2183\":1,\"2193\":1,\"2238\":1,\"2241\":1,\"2262\":1,\"2280\":1,\"2306\":1,\"2331\":1,\"2343\":1,\"2357\":1,\"2369\":1,\"2375\":1}}],[\"oracle适配\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"oracle\",{\"1\":{\"113\":1,\"115\":2,\"117\":2,\"492\":1,\"678\":1,\"1042\":1,\"1046\":1,\"1406\":1,\"1544\":1,\"1547\":2,\"1880\":1,\"1882\":2,\"1884\":2,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"orm和数据库扩展\",{\"0\":{\"2195\":1,\"2264\":1,\"2282\":1,\"2308\":1}}],[\"orm支持mybatis\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"orm\",{\"1\":{\"115\":2,\"403\":1,\"463\":7,\"489\":1,\"588\":1,\"649\":7,\"675\":1,\"779\":1,\"865\":7,\"900\":1,\"1088\":7,\"1183\":1,\"1229\":1,\"1309\":1,\"1377\":7,\"1403\":1,\"1882\":2,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"orm框架扩展\",{\"1\":{\"1042\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"orm框架支持\",{\"1\":{\"113\":1,\"1544\":1,\"1880\":1}}],[\"orm框架本身不支持逻辑删除\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"460\":1,\"588\":1,\"591\":1,\"646\":1,\"779\":1,\"782\":1,\"862\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"orm扩展包使用技巧\",{\"0\":{\"37\":1,\"461\":1,\"647\":1,\"863\":1,\"1086\":1,\"1375\":1,\"1504\":1,\"1804\":1}}],[\"oa\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"oa办公\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"oa审批系统\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"outputformat\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"out\",{\"1\":{\"46\":1,\"496\":1,\"498\":1,\"499\":3,\"681\":1,\"683\":1,\"684\":3,\"904\":1,\"906\":1,\"907\":3,\"932\":1,\"1102\":1,\"1233\":1,\"1235\":1,\"1236\":3,\"1410\":1,\"1412\":1,\"1413\":3,\"1513\":1,\"1813\":1,\"2170\":1,\"2172\":1,\"2173\":2,\"2231\":1,\"2233\":1,\"2234\":2,\"2336\":1,\"2338\":1,\"2339\":2,\"2362\":1,\"2364\":1,\"2365\":2}}],[\"o\",{\"1\":{\"25\":2,\"63\":2,\"93\":3,\"449\":4,\"455\":2,\"531\":3,\"635\":4,\"641\":2,\"716\":3,\"829\":3,\"835\":2,\"857\":2,\"947\":2,\"974\":3,\"1080\":2,\"1363\":4,\"1369\":2,\"1445\":3,\"1451\":2,\"1481\":3,\"1498\":2,\"1792\":2,\"1830\":2,\"1860\":3}}],[\"obj\",{\"1\":{\"335\":5,\"425\":2,\"426\":2,\"611\":2,\"612\":2,\"803\":2,\"804\":2,\"1203\":2,\"1204\":2,\"1331\":2,\"1332\":2,\"1757\":5,\"1961\":5,\"2240\":5}}],[\"objid\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"objectmapper\",{\"1\":{\"81\":9,\"286\":4,\"441\":9,\"627\":9,\"840\":9,\"962\":9,\"982\":4,\"1355\":9,\"1469\":9,\"1710\":4,\"1848\":9,\"1912\":4}}],[\"objectutil\",{\"1\":{\"19\":2,\"93\":1,\"220\":5,\"413\":5,\"449\":2,\"531\":1,\"598\":5,\"635\":2,\"716\":1,\"789\":5,\"829\":1,\"850\":2,\"974\":1,\"1073\":2,\"1189\":5,\"1319\":5,\"1363\":2,\"1445\":1,\"1481\":1,\"1491\":2,\"1650\":5,\"1785\":2,\"1860\":1,\"2058\":5}}],[\"object\",{\"1\":{\"19\":1,\"25\":1,\"46\":1,\"63\":1,\"81\":1,\"93\":1,\"220\":9,\"413\":9,\"441\":1,\"449\":1,\"455\":1,\"531\":1,\"598\":9,\"627\":1,\"635\":1,\"641\":1,\"716\":1,\"789\":9,\"829\":1,\"835\":1,\"840\":1,\"850\":1,\"857\":1,\"932\":1,\"947\":1,\"962\":1,\"974\":1,\"1073\":1,\"1080\":1,\"1102\":1,\"1189\":9,\"1319\":9,\"1355\":1,\"1363\":1,\"1369\":1,\"1445\":1,\"1451\":1,\"1469\":1,\"1481\":1,\"1491\":1,\"1498\":1,\"1513\":1,\"1650\":9,\"1785\":1,\"1792\":1,\"1813\":1,\"1830\":1,\"1848\":1,\"1860\":1,\"2058\":9}}],[\"objects\",{\"1\":{\"17\":1,\"66\":1,\"67\":2,\"220\":1,\"409\":1,\"410\":2,\"413\":1,\"448\":1,\"594\":1,\"595\":2,\"598\":1,\"634\":1,\"785\":1,\"786\":2,\"789\":1,\"849\":1,\"950\":1,\"951\":2,\"1072\":1,\"1189\":1,\"1315\":1,\"1316\":2,\"1319\":1,\"1362\":1,\"1454\":1,\"1455\":2,\"1490\":1,\"1650\":1,\"1784\":1,\"1833\":1,\"1834\":2,\"2058\":1}}],[\"object>\",{\"1\":{\"4\":2,\"19\":1,\"25\":2,\"46\":1,\"53\":1,\"56\":1,\"59\":1,\"63\":2,\"77\":1,\"81\":2,\"83\":1,\"87\":1,\"89\":1,\"93\":1,\"217\":1,\"272\":2,\"436\":1,\"441\":2,\"449\":1,\"455\":2,\"521\":2,\"527\":1,\"530\":1,\"531\":2,\"622\":1,\"627\":2,\"635\":1,\"641\":2,\"706\":2,\"712\":1,\"715\":1,\"716\":2,\"776\":1,\"822\":1,\"825\":1,\"829\":1,\"832\":1,\"835\":2,\"840\":2,\"850\":1,\"857\":2,\"930\":2,\"932\":1,\"938\":1,\"941\":1,\"943\":1,\"947\":2,\"962\":2,\"964\":1,\"968\":1,\"970\":1,\"974\":1,\"1073\":1,\"1080\":2,\"1102\":1,\"1108\":1,\"1111\":1,\"1180\":1,\"1251\":2,\"1350\":1,\"1355\":2,\"1363\":1,\"1369\":2,\"1435\":2,\"1441\":1,\"1444\":1,\"1445\":2,\"1447\":1,\"1451\":2,\"1465\":1,\"1469\":2,\"1471\":1,\"1475\":1,\"1477\":1,\"1481\":1,\"1491\":1,\"1498\":2,\"1513\":1,\"1520\":1,\"1523\":1,\"1647\":1,\"1698\":2,\"1771\":2,\"1785\":1,\"1792\":2,\"1813\":1,\"1820\":1,\"1823\":1,\"1826\":1,\"1830\":2,\"1844\":1,\"1848\":2,\"1850\":1,\"1854\":1,\"1856\":1,\"1860\":1,\"2055\":1,\"2106\":2,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"objtostr\",{\"1\":{\"3\":1,\"1770\":1}}],[\"ok\",{\"1\":{\"4\":1,\"333\":3,\"1755\":3,\"1771\":1,\"1959\":3}}],[\"nsimsun\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"number>\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"number\",{\"1\":{\"286\":4,\"982\":4,\"1710\":4,\"1912\":4}}],[\"numberserializer\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"null\",{\"1\":{\"3\":1,\"41\":4,\"63\":2,\"81\":1,\"93\":3,\"217\":1,\"234\":1,\"433\":1,\"436\":1,\"441\":1,\"531\":3,\"619\":1,\"622\":1,\"627\":1,\"716\":3,\"776\":1,\"811\":1,\"822\":1,\"829\":3,\"835\":2,\"840\":1,\"869\":4,\"947\":2,\"962\":1,\"974\":3,\"1092\":4,\"1180\":1,\"1211\":1,\"1339\":1,\"1350\":1,\"1355\":1,\"1445\":3,\"1451\":2,\"1469\":1,\"1481\":3,\"1508\":4,\"1647\":1,\"1660\":1,\"1770\":1,\"1808\":4,\"1830\":2,\"1848\":1,\"1860\":3,\"2055\":1,\"2068\":1}}],[\"n\",{\"1\":{\"265\":1,\"266\":1,\"268\":2,\"270\":1,\"333\":26,\"334\":8,\"335\":29,\"506\":1,\"507\":1,\"509\":2,\"511\":1,\"691\":1,\"692\":1,\"694\":2,\"696\":1,\"915\":1,\"916\":1,\"918\":2,\"920\":1,\"1244\":1,\"1245\":1,\"1247\":2,\"1249\":1,\"1420\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1691\":1,\"1692\":1,\"1694\":2,\"1696\":1,\"1755\":26,\"1756\":8,\"1757\":29,\"1959\":26,\"1960\":8,\"1961\":29,\"2099\":1,\"2100\":1,\"2102\":2,\"2104\":1,\"2240\":29}}],[\"n否\",{\"1\":{\"265\":1,\"266\":1,\"268\":2,\"270\":1,\"506\":1,\"507\":1,\"509\":2,\"511\":1,\"691\":1,\"692\":1,\"694\":2,\"696\":1,\"915\":1,\"916\":1,\"918\":2,\"920\":1,\"1244\":1,\"1245\":1,\"1247\":2,\"1249\":1,\"1420\":1,\"1421\":1,\"1423\":2,\"1425\":1,\"1691\":1,\"1692\":1,\"1694\":2,\"1696\":1,\"2099\":1,\"2100\":1,\"2102\":2,\"2104\":1}}],[\"nacos自行添加\",{\"1\":{\"228\":1}}],[\"nacos\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"name>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"name=\",{\"1\":{\"335\":2,\"426\":1,\"463\":1,\"612\":1,\"649\":1,\"804\":1,\"865\":1,\"1088\":1,\"1204\":1,\"1332\":1,\"1377\":1,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"name=authorization\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1340\":1,\"1661\":1,\"2069\":1}}],[\"name\",{\"1\":{\"75\":1,\"235\":1,\"265\":1,\"266\":2,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"284\":2,\"314\":1,\"425\":1,\"506\":1,\"507\":2,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"610\":1,\"611\":1,\"691\":1,\"692\":2,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"779\":1,\"803\":1,\"812\":1,\"819\":1,\"915\":1,\"916\":2,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"959\":1,\"980\":2,\"1006\":1,\"1183\":1,\"1203\":1,\"1212\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1309\":1,\"1331\":1,\"1340\":1,\"1347\":1,\"1420\":1,\"1421\":2,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1463\":1,\"1661\":1,\"1691\":1,\"1692\":2,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1708\":2,\"1737\":1,\"1842\":1,\"1910\":2,\"1940\":1,\"2069\":1,\"2099\":1,\"2100\":2,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2121\":1}}],[\"nginx\",{\"0\":{\"610\":1},\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"nginx配置示例\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"ne|flag|4\",{\"1\":{\"1179\":1}}],[\"next\",{\"1\":{\"269\":2,\"510\":2,\"695\":2,\"919\":2,\"1248\":2,\"1424\":2,\"1695\":2,\"2103\":2}}],[\"nextid\",{\"1\":{\"220\":1,\"413\":1,\"598\":1,\"789\":1,\"1189\":1,\"1319\":1,\"1650\":1,\"2058\":1}}],[\"nextidstr\",{\"1\":{\"66\":1,\"272\":1,\"409\":1,\"521\":1,\"594\":1,\"706\":1,\"785\":1,\"930\":1,\"950\":1,\"1251\":1,\"1315\":1,\"1435\":1,\"1454\":1,\"1698\":1,\"1833\":1,\"2106\":1}}],[\"ne\",{\"1\":{\"216\":1,\"335\":2,\"775\":2,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"news\",{\"0\":{\"2415\":1,\"2417\":1,\"2419\":1,\"2420\":1,\"2424\":1,\"2425\":1,\"2427\":1,\"2428\":1}}],[\"newentity\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"newtask\",{\"1\":{\"46\":2,\"932\":2,\"1102\":2,\"1513\":2,\"1813\":2}}],[\"new\",{\"1\":{\"17\":1,\"29\":1,\"46\":4,\"53\":1,\"56\":1,\"60\":1,\"62\":1,\"78\":1,\"81\":5,\"84\":1,\"86\":1,\"90\":1,\"92\":1,\"217\":3,\"220\":2,\"228\":1,\"234\":9,\"272\":1,\"286\":5,\"291\":4,\"333\":2,\"404\":2,\"407\":2,\"413\":2,\"417\":1,\"422\":2,\"423\":1,\"433\":9,\"436\":3,\"441\":5,\"448\":1,\"496\":1,\"515\":5,\"516\":5,\"519\":1,\"521\":1,\"527\":1,\"530\":1,\"589\":2,\"592\":2,\"598\":2,\"602\":1,\"607\":2,\"608\":1,\"619\":9,\"622\":3,\"627\":5,\"634\":1,\"681\":1,\"700\":5,\"701\":5,\"704\":1,\"706\":1,\"712\":1,\"715\":1,\"776\":3,\"780\":2,\"783\":2,\"789\":2,\"793\":1,\"800\":2,\"801\":1,\"811\":9,\"822\":3,\"826\":1,\"828\":1,\"831\":1,\"834\":1,\"840\":5,\"849\":1,\"904\":1,\"924\":5,\"925\":5,\"928\":1,\"930\":1,\"932\":4,\"938\":1,\"941\":1,\"944\":1,\"946\":1,\"962\":5,\"965\":1,\"967\":1,\"971\":1,\"973\":1,\"982\":5,\"987\":4,\"1072\":1,\"1082\":1,\"1095\":5,\"1096\":5,\"1099\":1,\"1102\":4,\"1108\":1,\"1111\":1,\"1180\":3,\"1184\":2,\"1187\":2,\"1189\":2,\"1193\":1,\"1200\":2,\"1201\":1,\"1211\":9,\"1216\":4,\"1233\":1,\"1251\":1,\"1310\":2,\"1313\":2,\"1319\":2,\"1323\":1,\"1328\":2,\"1329\":1,\"1339\":9,\"1350\":3,\"1355\":5,\"1362\":1,\"1410\":1,\"1429\":5,\"1430\":5,\"1433\":1,\"1435\":1,\"1441\":1,\"1444\":1,\"1448\":1,\"1450\":1,\"1466\":1,\"1469\":5,\"1472\":1,\"1474\":1,\"1478\":1,\"1480\":1,\"1490\":1,\"1502\":1,\"1513\":4,\"1520\":1,\"1523\":1,\"1647\":3,\"1650\":2,\"1660\":9,\"1698\":1,\"1710\":5,\"1715\":4,\"1755\":2,\"1784\":1,\"1796\":1,\"1813\":4,\"1820\":1,\"1823\":1,\"1827\":1,\"1829\":1,\"1845\":1,\"1848\":5,\"1851\":1,\"1853\":1,\"1857\":1,\"1859\":1,\"1912\":5,\"1917\":4,\"1959\":2,\"2055\":3,\"2058\":2,\"2068\":9,\"2106\":1,\"2149\":1,\"2150\":1,\"2170\":1,\"2190\":1,\"2193\":2,\"2208\":1,\"2209\":1,\"2231\":1,\"2259\":1,\"2262\":2,\"2269\":1,\"2270\":1,\"2277\":1,\"2280\":2,\"2295\":1,\"2296\":1,\"2303\":1,\"2306\":2,\"2336\":1,\"2362\":1}}],[\"no\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"noear<\",{\"1\":{\"340\":1,\"491\":2,\"677\":2,\"902\":2,\"1231\":2,\"1405\":2,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"none<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"none\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"none无动作\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"nonnull\",{\"1\":{\"17\":1,\"66\":1,\"67\":2,\"409\":1,\"410\":2,\"448\":1,\"594\":1,\"595\":2,\"634\":1,\"785\":1,\"786\":2,\"849\":1,\"950\":1,\"951\":2,\"1072\":1,\"1315\":1,\"1316\":2,\"1362\":1,\"1454\":1,\"1455\":2,\"1490\":1,\"1784\":1,\"1833\":1,\"1834\":2}}],[\"notice\",{\"0\":{\"2422\":1}}],[\"notify\",{\"1\":{\"13\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"25\":1,\"272\":1,\"447\":1,\"448\":1,\"449\":1,\"450\":1,\"455\":1,\"521\":1,\"633\":1,\"634\":1,\"635\":1,\"636\":1,\"641\":1,\"706\":1,\"844\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"857\":1,\"930\":1,\"1067\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1080\":1,\"1251\":1,\"1361\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1369\":1,\"1435\":1,\"1486\":1,\"1489\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1498\":1,\"1698\":1,\"1780\":1,\"1783\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1792\":1,\"2106\":1}}],[\"notnike|flag|4\",{\"1\":{\"1179\":1}}],[\"notnike\",{\"1\":{\"216\":1,\"335\":2,\"775\":2,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"not\",{\"1\":{\"30\":1,\"403\":1,\"406\":1,\"458\":1,\"460\":1,\"588\":1,\"591\":1,\"644\":1,\"646\":1,\"779\":1,\"782\":1,\"860\":1,\"862\":1,\"1083\":1,\"1085\":1,\"1183\":1,\"1186\":1,\"1309\":1,\"1312\":1,\"1372\":1,\"1374\":1,\"1503\":1,\"1797\":1,\"2193\":1,\"2196\":1,\"2262\":1,\"2265\":1,\"2280\":1,\"2283\":1,\"2306\":1,\"2309\":1,\"2377\":1}}],[\"nodeservice节点接口\",{\"0\":{\"376\":1,\"561\":1,\"749\":1,\"1147\":1,\"1282\":1}}],[\"nodeservice流程节点\",{\"0\":{\"175\":1,\"1605\":1,\"2013\":1}}],[\"node监听类型和监听路径字段长度\",{\"1\":{\"322\":1,\"1014\":1,\"1745\":1,\"1948\":1}}],[\"node字段\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"nodeid\",{\"1\":{\"177\":2,\"179\":2,\"1148\":2,\"1607\":2,\"1609\":2,\"2015\":2,\"2017\":2}}],[\"nodecodes\",{\"1\":{\"184\":2,\"1614\":2,\"2022\":2}}],[\"nodecode\",{\"1\":{\"161\":1,\"168\":1,\"363\":1,\"369\":1,\"499\":1,\"548\":1,\"554\":1,\"684\":1,\"735\":1,\"742\":1,\"907\":1,\"1133\":1,\"1140\":1,\"1236\":1,\"1269\":1,\"1275\":1,\"1413\":1,\"1591\":1,\"1598\":1,\"1999\":1,\"2006\":1,\"2173\":1,\"2190\":1,\"2234\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2339\":1,\"2365\":1}}],[\"nodeextservice\",{\"1\":{\"32\":1,\"1799\":1}}],[\"node\",{\"1\":{\"29\":1,\"263\":1,\"266\":5,\"267\":3,\"268\":5,\"269\":4,\"270\":3,\"504\":1,\"507\":5,\"508\":3,\"509\":5,\"510\":4,\"511\":3,\"515\":1,\"689\":1,\"692\":5,\"693\":3,\"694\":5,\"695\":4,\"696\":3,\"700\":1,\"913\":1,\"916\":5,\"917\":3,\"918\":5,\"919\":4,\"920\":3,\"924\":1,\"1082\":1,\"1095\":1,\"1242\":1,\"1245\":5,\"1246\":3,\"1247\":5,\"1248\":4,\"1249\":3,\"1418\":1,\"1421\":5,\"1422\":3,\"1423\":5,\"1424\":4,\"1425\":3,\"1429\":1,\"1502\":1,\"1689\":1,\"1692\":5,\"1693\":3,\"1694\":5,\"1695\":4,\"1696\":3,\"1796\":1,\"2097\":1,\"2100\":5,\"2101\":3,\"2102\":5,\"2103\":4,\"2104\":3}}],[\"nodejson\",{\"1\":{\"3\":5,\"1770\":5}}],[\"nownodecode\",{\"1\":{\"178\":2,\"180\":2,\"181\":2,\"377\":2,\"562\":2,\"750\":2,\"1148\":4,\"1283\":2,\"1608\":2,\"1610\":2,\"1611\":2,\"2016\":2,\"2018\":2,\"2019\":2}}],[\"now\",{\"1\":{\"3\":1,\"269\":2,\"510\":2,\"695\":2,\"919\":2,\"1248\":2,\"1424\":2,\"1695\":2,\"1770\":1,\"2103\":2}}],[\"src\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"src=\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"scoped>\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"script>\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"switch\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"shirofilterfactorybean\",{\"1\":{\"422\":5,\"607\":5,\"800\":5,\"1200\":5,\"1328\":5}}],[\"shiro过滤器配置\",{\"1\":{\"422\":1,\"607\":1,\"800\":1,\"1200\":1,\"1328\":1}}],[\"shiroconfig\",{\"1\":{\"422\":1,\"607\":1,\"800\":1,\"1200\":1,\"1328\":1}}],[\"shiro\",{\"0\":{\"422\":1,\"607\":1,\"800\":1,\"1200\":1,\"1328\":1}}],[\"show\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"share\",{\"1\":{\"287\":3,\"983\":3,\"1711\":3,\"1913\":3}}],[\"shadow\",{\"1\":{\"40\":1,\"41\":1,\"868\":1,\"869\":1,\"1091\":1,\"1092\":1,\"1507\":1,\"1508\":1,\"1807\":1,\"1808\":1}}],[\"snapshotrepository>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"snapshots<\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"snack3\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"snowflake19\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"snowid19\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"snowid15\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"snowid14\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"slot>\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"super\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"suffixnodelist\",{\"1\":{\"179\":1,\"180\":1,\"302\":1,\"1609\":1,\"1610\":1,\"1725\":1,\"1928\":1,\"2017\":1,\"2018\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"ss\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"sainterceptor\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"satokenconfigure\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"safe\",{\"1\":{\"286\":6,\"982\":6,\"1710\":6,\"1912\":6}}],[\"savexml\",{\"1\":{\"350\":1,\"351\":1,\"535\":1,\"536\":1,\"722\":1,\"723\":1,\"1118\":1,\"1119\":1,\"1256\":1,\"1257\":1}}],[\"save\",{\"1\":{\"195\":1,\"387\":1,\"572\":1,\"760\":1,\"1158\":1,\"1293\":1,\"1625\":1,\"2033\":1}}],[\"savedef\",{\"1\":{\"141\":1,\"302\":1,\"1571\":1,\"1725\":1,\"1928\":1,\"1979\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"saveandinitnode\",{\"1\":{\"139\":1,\"720\":1,\"1116\":1,\"1569\":1,\"1977\":1}}],[\"savebatch\",{\"1\":{\"19\":1,\"200\":1,\"201\":1,\"392\":1,\"393\":1,\"449\":1,\"577\":1,\"578\":1,\"635\":1,\"765\":1,\"766\":1,\"850\":1,\"1073\":1,\"1163\":1,\"1164\":1,\"1298\":1,\"1299\":1,\"1363\":1,\"1491\":1,\"1630\":1,\"1631\":1,\"1785\":1,\"2038\":1,\"2039\":1}}],[\"sa\",{\"0\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1},\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"sqlserver\",{\"1\":{\"492\":1,\"678\":1,\"1046\":1,\"1406\":1}}],[\"sqlsessionfactory改为构造函数引入\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"sql\",{\"1\":{\"115\":1,\"117\":1,\"248\":2,\"332\":1,\"333\":1,\"335\":1,\"336\":1,\"339\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"406\":2,\"484\":2,\"591\":2,\"670\":2,\"782\":2,\"895\":2,\"1186\":2,\"1224\":2,\"1312\":2,\"1398\":2,\"1547\":1,\"1674\":2,\"1755\":1,\"1757\":1,\"1758\":1,\"1761\":1,\"1763\":1,\"1764\":1,\"1765\":1,\"1766\":1,\"1767\":1,\"1882\":1,\"1884\":1,\"1958\":1,\"1959\":1,\"1961\":1,\"1962\":1,\"1965\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"2082\":2,\"2244\":1,\"2248\":1,\"2249\":1,\"2251\":1,\"2252\":1,\"2253\":1}}],[\"sources<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"source\",{\"1\":{\"403\":1,\"588\":1,\"779\":1,\"1183\":1,\"1309\":1,\"2193\":1,\"2203\":3,\"2217\":3,\"2262\":1,\"2280\":1,\"2290\":3,\"2306\":1,\"2316\":3}}],[\"solon项目\",{\"1\":{\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"491\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1404\":1,\"1405\":1}}],[\"solon插件包增加usermapper\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"solon注解问题\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"solon版本yml弄错了\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"solon\",{\"0\":{\"405\":1,\"459\":1,\"516\":1,\"590\":1,\"645\":1,\"701\":1,\"781\":1,\"797\":1,\"861\":1,\"925\":1,\"1084\":1,\"1096\":1,\"1185\":1,\"1197\":1,\"1311\":1,\"1373\":1,\"1430\":1},\"1\":{\"115\":1,\"463\":1,\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"491\":1,\"649\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"797\":1,\"865\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"1088\":1,\"1197\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1377\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1404\":1,\"1405\":1,\"1882\":1,\"2167\":1,\"2228\":1,\"2333\":1,\"2359\":1}}],[\"software\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"sb3\",{\"1\":{\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"898\":1,\"899\":1,\"901\":1,\"1227\":1,\"1228\":1,\"1230\":1,\"1401\":1,\"1402\":1,\"1404\":1}}],[\"sb删除加载配置文件\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"sb\",{\"1\":{\"73\":1,\"291\":4,\"419\":1,\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"491\":1,\"604\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"796\":1,\"817\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"957\":1,\"987\":4,\"1196\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1325\":1,\"1345\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1404\":1,\"1405\":1,\"1461\":1,\"1715\":4,\"1840\":1,\"1917\":4,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2174\":1,\"2220\":1,\"2235\":1,\"2319\":1,\"2340\":1,\"2345\":1,\"2366\":1}}],[\"springhibernatejpapersistenceprovider\",{\"1\":{\"403\":1,\"489\":1,\"588\":1,\"675\":1,\"779\":1,\"900\":1,\"1183\":1,\"1229\":1,\"1309\":1,\"1403\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"springframework\",{\"1\":{\"291\":3,\"403\":1,\"489\":1,\"588\":1,\"675\":1,\"779\":1,\"900\":1,\"987\":3,\"1183\":1,\"1229\":1,\"1309\":1,\"1403\":1,\"1715\":3,\"1917\":3,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"spring开启懒加载后\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"spring\",{\"0\":{\"402\":1,\"421\":1,\"436\":1,\"458\":1,\"515\":1,\"587\":1,\"606\":1,\"622\":1,\"644\":1,\"700\":1,\"778\":1,\"799\":1,\"822\":1,\"860\":1,\"924\":1,\"1083\":1,\"1095\":1,\"1182\":1,\"1199\":1,\"1308\":1,\"1327\":1,\"1350\":1,\"1372\":1,\"1429\":1},\"1\":{\"131\":3,\"217\":1,\"228\":1,\"247\":1,\"288\":1,\"463\":1,\"483\":1,\"649\":1,\"669\":1,\"776\":1,\"865\":1,\"894\":1,\"984\":1,\"1061\":3,\"1088\":1,\"1180\":1,\"1223\":1,\"1377\":1,\"1397\":1,\"1561\":3,\"1647\":1,\"1673\":1,\"1712\":1,\"1898\":3,\"1914\":1,\"2055\":1,\"2081\":1}}],[\"springdoc\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"springboot项目\",{\"1\":{\"491\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"902\":1,\"1231\":1,\"1405\":1}}],[\"springboot项目的条件表达式默认支持spel\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"springboot3项目\",{\"1\":{\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"898\":1,\"899\":1,\"901\":1,\"1227\":1,\"1228\":1,\"1230\":1,\"1401\":1,\"1402\":1,\"1404\":1}}],[\"springboot2项目\",{\"1\":{\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1404\":1}}],[\"springboot2+vue2\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"springboot\",{\"0\":{\"796\":1,\"1196\":1},\"1\":{\"115\":1,\"1882\":1}}],[\"springboottest\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"spel表达式\",{\"1\":{\"335\":1,\"1757\":1,\"1961\":1,\"2240\":1}}],[\"spelflag\",{\"1\":{\"335\":9,\"1757\":9,\"1961\":9,\"2240\":9}}],[\"spel|\",{\"1\":{\"333\":1,\"1179\":1,\"1755\":1,\"1959\":1}}],[\"spel条件表达\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"spel\",{\"0\":{\"436\":1,\"622\":1,\"822\":1,\"1350\":1},\"1\":{\"115\":4,\"216\":2,\"217\":2,\"335\":12,\"435\":1,\"436\":1,\"523\":1,\"529\":1,\"621\":1,\"622\":1,\"708\":1,\"714\":1,\"775\":2,\"776\":2,\"821\":1,\"822\":1,\"825\":2,\"943\":2,\"964\":2,\"970\":2,\"1179\":1,\"1180\":1,\"1349\":1,\"1350\":1,\"1437\":1,\"1443\":1,\"1646\":2,\"1647\":2,\"1757\":12,\"1882\":4,\"1961\":12,\"2054\":2,\"2055\":2,\"2240\":12}}],[\"spelhelper\",{\"1\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"spel监听器表达式\",{\"1\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"spel办理人变量表达式\",{\"1\":{\"56\":1,\"530\":1,\"715\":1,\"941\":1,\"1111\":1,\"1444\":1,\"1523\":1,\"1823\":1}}],[\"spel办理人变量策略\",{\"0\":{\"54\":1,\"528\":1,\"713\":1,\"939\":1,\"1109\":1,\"1442\":1,\"1521\":1,\"1821\":1},\"1\":{\"47\":1,\"523\":1,\"708\":1,\"933\":1,\"1103\":1,\"1437\":1,\"1514\":1,\"1814\":1}}],[\"splitat\",{\"1\":{\"63\":1,\"64\":2,\"531\":2,\"716\":2,\"835\":1,\"836\":2,\"947\":1,\"948\":2,\"1445\":2,\"1451\":1,\"1452\":2,\"1830\":1,\"1831\":2}}],[\"split\",{\"1\":{\"63\":10,\"64\":4,\"333\":3,\"334\":6,\"335\":5,\"835\":10,\"836\":4,\"947\":10,\"948\":4,\"1451\":10,\"1452\":4,\"1755\":3,\"1756\":6,\"1757\":5,\"1830\":10,\"1831\":4,\"1959\":3,\"1960\":6,\"1961\":5,\"2240\":5}}],[\"skipanynode\",{\"1\":{\"499\":1,\"684\":1,\"907\":1,\"1236\":1,\"1413\":1,\"2173\":1,\"2190\":1,\"2234\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2339\":1,\"2365\":1}}],[\"skipflow\",{\"1\":{\"499\":1,\"684\":1,\"907\":1,\"1236\":1,\"1413\":1,\"2173\":1,\"2190\":1,\"2234\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2339\":1,\"2365\":1}}],[\"skipconditionshow\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"skipcondition\",{\"1\":{\"333\":24,\"335\":29,\"1755\":24,\"1757\":29,\"1959\":24,\"1961\":29,\"2240\":29}}],[\"skip标识即将删除\",{\"1\":{\"321\":1,\"1013\":1,\"1744\":1,\"1947\":1}}],[\"skiptype\",{\"1\":{\"161\":1,\"168\":1,\"181\":2,\"363\":1,\"369\":1,\"377\":2,\"499\":6,\"548\":1,\"554\":1,\"562\":2,\"684\":6,\"735\":1,\"742\":1,\"750\":2,\"907\":6,\"1133\":1,\"1140\":1,\"1148\":2,\"1236\":6,\"1269\":1,\"1275\":1,\"1283\":2,\"1413\":6,\"1591\":1,\"1598\":1,\"1611\":2,\"1999\":1,\"2006\":1,\"2019\":2,\"2173\":4,\"2190\":4,\"2234\":4,\"2259\":4,\"2277\":4,\"2303\":4,\"2339\":4,\"2365\":4}}],[\"skipbyinsid\",{\"1\":{\"53\":1,\"56\":1,\"67\":1,\"161\":1,\"363\":1,\"410\":1,\"499\":1,\"527\":1,\"530\":1,\"548\":1,\"595\":1,\"684\":1,\"712\":1,\"715\":1,\"735\":1,\"786\":1,\"907\":1,\"938\":1,\"941\":1,\"951\":1,\"1108\":1,\"1111\":1,\"1133\":1,\"1236\":1,\"1269\":1,\"1316\":1,\"1413\":1,\"1441\":1,\"1444\":1,\"1455\":1,\"1520\":1,\"1523\":1,\"1591\":1,\"1820\":1,\"1823\":1,\"1834\":1,\"1999\":1,\"2149\":1,\"2150\":1,\"2173\":1,\"2208\":1,\"2209\":1,\"2234\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1,\"2339\":1,\"2365\":1}}],[\"skip\",{\"1\":{\"29\":1,\"67\":1,\"168\":1,\"263\":1,\"266\":1,\"268\":1,\"269\":3,\"314\":1,\"321\":1,\"369\":1,\"410\":1,\"499\":2,\"504\":1,\"507\":1,\"509\":1,\"510\":3,\"515\":1,\"554\":1,\"595\":1,\"684\":2,\"689\":1,\"692\":1,\"694\":1,\"695\":3,\"700\":1,\"742\":1,\"786\":1,\"907\":2,\"913\":1,\"916\":1,\"918\":1,\"919\":3,\"924\":1,\"951\":1,\"1006\":1,\"1013\":1,\"1082\":1,\"1095\":1,\"1140\":1,\"1236\":2,\"1242\":1,\"1245\":1,\"1247\":1,\"1248\":3,\"1275\":1,\"1316\":1,\"1413\":2,\"1418\":1,\"1421\":1,\"1423\":1,\"1424\":3,\"1429\":1,\"1455\":1,\"1502\":1,\"1598\":1,\"1689\":1,\"1692\":1,\"1694\":1,\"1695\":3,\"1737\":1,\"1744\":1,\"1796\":1,\"1834\":1,\"1940\":1,\"1947\":1,\"2006\":1,\"2097\":1,\"2100\":1,\"2102\":1,\"2103\":3,\"2173\":1,\"2190\":2,\"2234\":1,\"2259\":2,\"2277\":2,\"2303\":2,\"2339\":1,\"2365\":1}}],[\"simsun\",{\"1\":{\"287\":3,\"983\":3,\"1711\":3,\"1913\":3}}],[\"simplemodule\",{\"1\":{\"286\":7,\"982\":7,\"1710\":7,\"1912\":7}}],[\"signature\",{\"1\":{\"241\":2,\"476\":2,\"662\":2,\"881\":2,\"888\":2,\"1218\":2,\"1390\":2,\"1667\":2,\"2075\":2}}],[\"since\",{\"1\":{\"24\":1,\"856\":1,\"1079\":1,\"1497\":1,\"1791\":1}}],[\"size\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"sysdept\",{\"1\":{\"234\":4,\"433\":4,\"619\":4,\"811\":4,\"1211\":4,\"1339\":4,\"1660\":4,\"2068\":4}}],[\"sysdeptmapper\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"sysrole\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"sysrolemapper\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"system\",{\"1\":{\"19\":1,\"46\":1,\"403\":2,\"416\":1,\"496\":1,\"498\":1,\"499\":3,\"588\":2,\"601\":1,\"681\":1,\"683\":1,\"684\":3,\"779\":2,\"792\":1,\"850\":1,\"904\":1,\"906\":1,\"907\":3,\"932\":1,\"1073\":1,\"1102\":1,\"1183\":2,\"1192\":1,\"1233\":1,\"1235\":1,\"1236\":3,\"1309\":2,\"1322\":1,\"1410\":1,\"1412\":1,\"1413\":3,\"1491\":1,\"1513\":1,\"1785\":1,\"1813\":1,\"2170\":1,\"2172\":1,\"2173\":2,\"2193\":2,\"2231\":1,\"2233\":1,\"2234\":2,\"2262\":2,\"2280\":2,\"2306\":2,\"2336\":1,\"2338\":1,\"2339\":2,\"2362\":1,\"2364\":1,\"2365\":2}}],[\"sysusermapper\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"sysuser\",{\"1\":{\"3\":5,\"41\":11,\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"869\":11,\"1092\":11,\"1211\":3,\"1339\":3,\"1508\":11,\"1660\":3,\"1770\":5,\"1808\":11,\"2068\":3}}],[\"stputil\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"style>\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"style=\",{\"1\":{\"335\":6,\"425\":2,\"611\":2,\"803\":2,\"1203\":2,\"1331\":2,\"1757\":6,\"1961\":6,\"2240\":6}}],[\"style=常规\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"style\",{\"1\":{\"109\":1,\"301\":1,\"1038\":1,\"1540\":1,\"1876\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"standardcharsets\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"stackoverflowerror\",{\"0\":{\"293\":1,\"989\":1,\"1717\":1,\"1919\":1}}],[\"star\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1}}],[\"star的多少关系到项目能否被更多人看到\",{\"1\":{\"97\":1,\"1026\":1,\"1528\":1,\"1864\":1}}],[\"starrydesert\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"startflow\",{\"1\":{\"498\":1,\"683\":1,\"906\":1,\"1235\":1,\"1412\":1,\"2172\":1,\"2190\":1,\"2233\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2338\":1,\"2364\":1}}],[\"starter<\",{\"1\":{\"291\":1,\"487\":2,\"488\":2,\"489\":2,\"490\":2,\"491\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"898\":2,\"899\":2,\"900\":1,\"901\":2,\"902\":1,\"987\":1,\"1227\":2,\"1228\":2,\"1229\":1,\"1230\":2,\"1231\":1,\"1401\":2,\"1402\":2,\"1403\":1,\"1404\":2,\"1405\":1,\"1715\":1,\"1917\":1}}],[\"starter\",{\"1\":{\"291\":2,\"987\":2,\"1715\":2,\"1917\":2}}],[\"starter改为warm\",{\"1\":{\"291\":2,\"987\":2,\"1715\":2,\"1917\":2}}],[\"startlistener\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"start\",{\"1\":{\"10\":1,\"16\":2,\"24\":1,\"66\":1,\"160\":1,\"217\":1,\"272\":1,\"362\":1,\"409\":1,\"436\":1,\"443\":1,\"447\":2,\"498\":1,\"521\":1,\"547\":1,\"594\":1,\"622\":1,\"629\":1,\"633\":2,\"683\":1,\"706\":1,\"734\":1,\"776\":1,\"785\":1,\"822\":1,\"843\":1,\"848\":2,\"856\":1,\"906\":1,\"930\":1,\"950\":1,\"1066\":1,\"1071\":2,\"1079\":1,\"1132\":1,\"1180\":1,\"1235\":1,\"1251\":1,\"1268\":1,\"1315\":1,\"1350\":1,\"1357\":1,\"1361\":2,\"1412\":1,\"1435\":1,\"1454\":1,\"1483\":1,\"1489\":2,\"1497\":1,\"1590\":1,\"1647\":1,\"1698\":1,\"1777\":1,\"1783\":2,\"1791\":1,\"1833\":1,\"1998\":1,\"2055\":1,\"2106\":1,\"2172\":1,\"2190\":1,\"2192\":1,\"2233\":1,\"2259\":1,\"2261\":1,\"2277\":1,\"2279\":1,\"2303\":1,\"2305\":1,\"2338\":1,\"2364\":1}}],[\"static\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"24\":1,\"62\":1,\"81\":1,\"228\":1,\"272\":1,\"286\":3,\"441\":1,\"448\":1,\"449\":1,\"450\":1,\"521\":1,\"627\":1,\"634\":1,\"635\":1,\"636\":1,\"706\":1,\"834\":1,\"840\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":1,\"930\":1,\"946\":1,\"962\":1,\"982\":3,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":1,\"1251\":1,\"1355\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1435\":1,\"1450\":1,\"1469\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":1,\"1698\":1,\"1710\":3,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":1,\"1829\":1,\"1848\":1,\"1912\":3,\"2106\":1}}],[\"status改为string类型\",{\"1\":{\"341\":1,\"1763\":1,\"1967\":1,\"2248\":1}}],[\"status\",{\"1\":{\"7\":1,\"265\":1,\"266\":1,\"267\":2,\"506\":1,\"507\":1,\"508\":2,\"691\":1,\"692\":1,\"693\":2,\"915\":1,\"916\":1,\"917\":2,\"1244\":1,\"1245\":1,\"1246\":2,\"1420\":1,\"1421\":1,\"1422\":2,\"1691\":1,\"1692\":1,\"1693\":2,\"1774\":1,\"2099\":1,\"2100\":1,\"2101\":2}}],[\"stripprefix=1\",{\"1\":{\"228\":1}}],[\"string>\",{\"1\":{\"422\":1,\"607\":1,\"800\":1,\"1200\":1,\"1328\":1}}],[\"stringutils\",{\"1\":{\"3\":2,\"17\":1,\"18\":1,\"19\":2,\"81\":1,\"93\":2,\"228\":1,\"441\":1,\"448\":1,\"449\":1,\"450\":1,\"531\":2,\"627\":1,\"634\":1,\"635\":1,\"636\":1,\"716\":2,\"829\":2,\"840\":1,\"849\":1,\"850\":2,\"851\":1,\"962\":1,\"974\":2,\"1072\":1,\"1073\":2,\"1074\":1,\"1355\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1445\":2,\"1469\":1,\"1481\":2,\"1490\":1,\"1491\":2,\"1492\":1,\"1770\":2,\"1784\":1,\"1785\":2,\"1786\":1,\"1848\":1,\"1860\":2}}],[\"string\",{\"1\":{\"3\":1,\"4\":1,\"16\":4,\"18\":1,\"19\":1,\"29\":1,\"40\":1,\"41\":3,\"56\":3,\"59\":3,\"63\":7,\"64\":3,\"66\":1,\"77\":3,\"81\":3,\"83\":3,\"87\":2,\"89\":3,\"93\":6,\"217\":3,\"228\":1,\"272\":2,\"286\":2,\"333\":2,\"404\":1,\"409\":1,\"428\":2,\"436\":3,\"441\":3,\"447\":5,\"450\":1,\"496\":1,\"515\":3,\"516\":2,\"520\":1,\"521\":2,\"530\":3,\"531\":9,\"589\":1,\"594\":1,\"614\":2,\"622\":3,\"627\":3,\"633\":5,\"636\":1,\"681\":1,\"700\":3,\"701\":2,\"705\":1,\"706\":2,\"715\":3,\"716\":9,\"776\":3,\"780\":1,\"785\":1,\"806\":2,\"822\":3,\"825\":2,\"829\":6,\"832\":2,\"835\":7,\"836\":3,\"840\":3,\"848\":4,\"850\":1,\"851\":1,\"868\":1,\"869\":3,\"904\":1,\"924\":3,\"925\":2,\"929\":1,\"930\":2,\"941\":3,\"943\":2,\"947\":7,\"948\":3,\"950\":1,\"962\":3,\"964\":2,\"968\":2,\"970\":2,\"974\":6,\"982\":2,\"1071\":4,\"1073\":1,\"1074\":1,\"1082\":1,\"1091\":1,\"1092\":3,\"1095\":3,\"1096\":2,\"1100\":1,\"1111\":3,\"1180\":3,\"1184\":1,\"1206\":2,\"1233\":1,\"1251\":2,\"1310\":1,\"1315\":1,\"1334\":2,\"1350\":3,\"1355\":3,\"1361\":5,\"1364\":1,\"1410\":1,\"1429\":3,\"1430\":2,\"1434\":1,\"1435\":2,\"1444\":3,\"1445\":9,\"1447\":3,\"1451\":7,\"1452\":3,\"1454\":1,\"1465\":3,\"1469\":3,\"1471\":3,\"1475\":2,\"1477\":3,\"1481\":6,\"1489\":4,\"1491\":1,\"1492\":1,\"1502\":1,\"1507\":1,\"1508\":3,\"1523\":3,\"1647\":3,\"1698\":2,\"1710\":2,\"1755\":2,\"1770\":1,\"1771\":1,\"1783\":4,\"1785\":1,\"1786\":1,\"1796\":1,\"1807\":1,\"1808\":3,\"1823\":3,\"1826\":3,\"1830\":7,\"1831\":3,\"1833\":1,\"1844\":3,\"1848\":3,\"1850\":3,\"1854\":2,\"1856\":3,\"1860\":6,\"1912\":2,\"1959\":2,\"2055\":3,\"2106\":2,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"strtomap\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"strtobean\",{\"1\":{\"3\":1,\"1770\":1}}],[\"structureuser\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"streamutils\",{\"1\":{\"41\":1,\"869\":1,\"1092\":1,\"1508\":1,\"1808\":1}}],[\"stream\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"security放行配置示例\",{\"1\":{\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"securitymanager\",{\"1\":{\"422\":2,\"607\":2,\"800\":2,\"1200\":2,\"1328\":2}}],[\"securityfilterchain\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"security\",{\"0\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1},\"1\":{\"228\":2}}],[\"securityutils\",{\"1\":{\"17\":2,\"41\":2,\"66\":1,\"272\":1,\"409\":1,\"448\":2,\"521\":1,\"594\":1,\"634\":2,\"706\":1,\"785\":1,\"849\":2,\"869\":2,\"930\":1,\"950\":1,\"1072\":2,\"1092\":2,\"1251\":1,\"1315\":1,\"1362\":2,\"1435\":1,\"1454\":1,\"1490\":2,\"1508\":2,\"1698\":1,\"1784\":2,\"1808\":2,\"1833\":1,\"2106\":1}}],[\"seaflow\",{\"1\":{\"131\":2,\"1061\":2,\"1561\":2,\"1898\":2}}],[\"seven\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"select语句获取结果\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"select>\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"select\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"selectuserlist\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"selectuserbyid\",{\"1\":{\"3\":1,\"1770\":1}}],[\"selectdeptlist\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"selectrolelist\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"selectcount\",{\"1\":{\"193\":1,\"385\":1,\"570\":1,\"758\":1,\"1156\":1,\"1291\":1,\"1623\":1,\"2031\":1}}],[\"selecttestleavebyid\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"serial\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2190\":1,\"2231\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2336\":1,\"2362\":1}}],[\"serializerprovider\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"serialize\",{\"1\":{\"286\":2,\"982\":2,\"1710\":2,\"1912\":2}}],[\"serializable\",{\"1\":{\"16\":1,\"447\":1,\"633\":1,\"848\":1,\"1071\":1,\"1361\":1,\"1489\":1,\"1783\":1}}],[\"servlet\",{\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"serverhttprequest\",{\"1\":{\"228\":2}}],[\"serverwebexchange\",{\"1\":{\"228\":1}}],[\"server\",{\"1\":{\"75\":2,\"113\":1,\"115\":1,\"117\":2,\"610\":2,\"819\":2,\"959\":2,\"1347\":2,\"1463\":2,\"1544\":1,\"1547\":2,\"1842\":2,\"1880\":1,\"1882\":1,\"1884\":2,\"2121\":2}}],[\"services文件夹\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"service\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"set到headerauthorization上\",{\"1\":{\"1340\":1}}],[\"set到header的authorization上\",{\"1\":{\"235\":1,\"812\":1,\"1212\":1,\"1661\":1,\"2069\":1}}],[\"setvariable\",{\"1\":{\"531\":1,\"716\":1,\"1445\":1}}],[\"settenantlinehandler\",{\"1\":{\"515\":1,\"700\":1,\"924\":1,\"1095\":1,\"1429\":1}}],[\"setup\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"setupdatetime\",{\"1\":{\"19\":1,\"220\":2,\"413\":2,\"449\":1,\"598\":2,\"635\":1,\"789\":2,\"850\":1,\"1073\":1,\"1189\":2,\"1319\":2,\"1363\":1,\"1491\":1,\"1650\":2,\"1785\":1,\"2058\":2}}],[\"setfilterchaindefinitionmap\",{\"1\":{\"422\":1,\"607\":1,\"800\":1,\"1200\":1,\"1328\":1}}],[\"setflowstatus\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"setheader\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"sethandlername\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"sethandlercode\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"sethandler\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"setcontenttype\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"setcharacterencoding\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"setcreatetime\",{\"1\":{\"19\":1,\"220\":1,\"234\":3,\"413\":1,\"433\":3,\"449\":1,\"598\":1,\"619\":3,\"635\":1,\"789\":1,\"811\":3,\"850\":1,\"1073\":1,\"1189\":1,\"1211\":3,\"1319\":1,\"1339\":3,\"1363\":1,\"1491\":1,\"1650\":1,\"1660\":3,\"1785\":1,\"2058\":1,\"2068\":3}}],[\"setescapetext\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"setencoding\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"setexpression\",{\"1\":{\"59\":2,\"60\":2,\"62\":1,\"77\":2,\"78\":2,\"83\":2,\"84\":2,\"86\":1,\"89\":2,\"90\":2,\"92\":1,\"437\":1,\"623\":1,\"823\":1,\"825\":2,\"826\":2,\"828\":1,\"831\":1,\"834\":1,\"943\":2,\"944\":2,\"946\":1,\"964\":2,\"965\":2,\"967\":1,\"970\":2,\"971\":2,\"973\":1,\"1351\":1,\"1447\":2,\"1448\":2,\"1450\":1,\"1465\":2,\"1466\":2,\"1471\":2,\"1472\":2,\"1474\":1,\"1477\":2,\"1478\":2,\"1480\":1,\"1826\":2,\"1827\":2,\"1829\":1,\"1844\":2,\"1845\":2,\"1850\":2,\"1851\":2,\"1853\":1,\"1856\":2,\"1857\":2,\"1859\":1}}],[\"setmaxlimit\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"setdbtype\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"setdefjson\",{\"1\":{\"3\":1,\"1770\":1}}],[\"setproperties\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"setparentid\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"setpermissionlist\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"setpermissionflag\",{\"1\":{\"17\":1,\"448\":1,\"634\":1,\"849\":1,\"1072\":1,\"1362\":1,\"1490\":1,\"1784\":1}}],[\"setnewlines\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"setname\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"setnodetype\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"setnodename\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"setnodecode\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"setgroupname\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"setstorageid\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"setwhites\",{\"1\":{\"228\":1}}],[\"setindent\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"setinstanceid\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"setid\",{\"1\":{\"46\":1,\"66\":1,\"220\":1,\"234\":1,\"272\":1,\"409\":1,\"413\":1,\"433\":1,\"521\":1,\"594\":1,\"598\":1,\"619\":1,\"706\":1,\"785\":1,\"789\":1,\"811\":1,\"930\":1,\"932\":1,\"950\":1,\"1102\":1,\"1189\":1,\"1211\":1,\"1251\":1,\"1315\":1,\"1319\":1,\"1339\":1,\"1435\":1,\"1454\":1,\"1513\":1,\"1650\":1,\"1660\":1,\"1698\":1,\"1813\":1,\"1833\":1,\"2058\":1,\"2068\":1,\"2106\":1}}],[\"setaccessible\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"set\",{\"1\":{\"18\":1,\"29\":1,\"75\":4,\"450\":1,\"515\":3,\"516\":1,\"636\":1,\"700\":3,\"701\":1,\"819\":4,\"851\":1,\"924\":3,\"925\":1,\"959\":4,\"1074\":1,\"1082\":1,\"1095\":3,\"1096\":1,\"1347\":4,\"1364\":1,\"1429\":3,\"1430\":1,\"1463\":4,\"1492\":1,\"1502\":1,\"1786\":1,\"1796\":1,\"1842\":4}}],[\"vite\",{\"1\":{\"426\":2,\"804\":2,\"1204\":2,\"1332\":2}}],[\"vip群由四名后端与一名前端工程师组成\",{\"1\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"vip群\",{\"0\":{\"278\":1,\"977\":1,\"1705\":1,\"1907\":1}}],[\"vendor\",{\"1\":{\"403\":1,\"489\":1,\"588\":1,\"675\":1,\"779\":1,\"900\":1,\"1183\":1,\"1229\":1,\"1309\":1,\"1403\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"version>\",{\"1\":{\"291\":1,\"340\":1,\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"796\":1,\"797\":1,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"987\":1,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":2,\"1325\":1,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2,\"1715\":1,\"1762\":1,\"1917\":1,\"1966\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2203\":2,\"2217\":2,\"2220\":1,\"2228\":1,\"2235\":1,\"2246\":1,\"2290\":2,\"2316\":2,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"version\",{\"1\":{\"265\":1,\"268\":1,\"506\":1,\"509\":1,\"691\":1,\"694\":1,\"915\":1,\"918\":1,\"1244\":1,\"1247\":1,\"1420\":1,\"1423\":1,\"1691\":1,\"1694\":1,\"2099\":1,\"2102\":1}}],[\"v\",{\"1\":{\"335\":10,\"1757\":10,\"1961\":10,\"2240\":10}}],[\"v1\",{\"0\":{\"299\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"332\":1,\"333\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"995\":1,\"997\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1723\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1735\":1,\"1736\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1752\":1,\"1753\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1758\":1,\"1759\":1,\"1760\":1,\"1761\":1,\"1762\":1,\"1763\":1,\"1764\":1,\"1765\":1,\"1766\":1,\"1767\":1,\"1925\":1,\"1927\":1,\"1928\":1,\"1929\":1,\"1930\":1,\"1931\":1,\"1932\":1,\"1933\":1,\"1934\":1,\"1935\":1,\"1936\":1,\"1937\":1,\"1938\":1,\"1939\":1,\"1940\":1,\"1941\":1,\"1942\":1,\"1943\":1,\"1944\":1,\"1945\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1958\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"1962\":1,\"1963\":1,\"1964\":1,\"1965\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2385\":1,\"2387\":1,\"2389\":1,\"2391\":1,\"2397\":1,\"2399\":1,\"2405\":1}}],[\"vx\",{\"0\":{\"297\":1,\"993\":1,\"1721\":1,\"1923\":1}}],[\"vo等独立成一个模块\",{\"1\":{\"299\":1}}],[\"vote\",{\"1\":{\"241\":1,\"476\":1,\"662\":1,\"881\":1,\"888\":1,\"1218\":1,\"1390\":1,\"1667\":1,\"2075\":1}}],[\"void\",{\"1\":{\"3\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"24\":4,\"25\":1,\"29\":1,\"46\":1,\"59\":1,\"62\":1,\"63\":1,\"66\":1,\"77\":1,\"83\":1,\"86\":1,\"89\":1,\"92\":1,\"220\":3,\"228\":1,\"272\":2,\"286\":1,\"333\":1,\"409\":1,\"413\":3,\"423\":1,\"447\":1,\"448\":1,\"449\":1,\"450\":1,\"455\":1,\"496\":1,\"497\":1,\"498\":1,\"499\":2,\"516\":1,\"521\":2,\"594\":1,\"598\":3,\"608\":1,\"633\":1,\"634\":1,\"635\":1,\"636\":1,\"641\":1,\"681\":1,\"682\":1,\"683\":1,\"684\":2,\"701\":1,\"706\":2,\"785\":1,\"789\":3,\"801\":1,\"825\":1,\"828\":1,\"831\":1,\"834\":1,\"835\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":4,\"857\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":2,\"925\":1,\"930\":2,\"932\":1,\"943\":1,\"946\":1,\"947\":1,\"950\":1,\"964\":1,\"967\":1,\"970\":1,\"973\":1,\"982\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":4,\"1080\":1,\"1082\":1,\"1096\":1,\"1102\":1,\"1189\":3,\"1201\":1,\"1216\":4,\"1233\":1,\"1234\":1,\"1235\":1,\"1236\":2,\"1251\":2,\"1315\":1,\"1319\":3,\"1329\":1,\"1361\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1369\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":2,\"1430\":1,\"1435\":2,\"1447\":1,\"1450\":1,\"1451\":1,\"1454\":1,\"1465\":1,\"1471\":1,\"1474\":1,\"1477\":1,\"1480\":1,\"1489\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":4,\"1498\":1,\"1502\":1,\"1513\":1,\"1650\":3,\"1698\":2,\"1710\":1,\"1755\":1,\"1770\":1,\"1783\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":4,\"1792\":1,\"1796\":1,\"1813\":1,\"1826\":1,\"1829\":1,\"1830\":1,\"1833\":1,\"1844\":1,\"1850\":1,\"1853\":1,\"1856\":1,\"1859\":1,\"1912\":1,\"1959\":1,\"2058\":3,\"2106\":2,\"2170\":1,\"2171\":1,\"2172\":1,\"2173\":2,\"2190\":6,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":2,\"2259\":6,\"2277\":6,\"2303\":6,\"2336\":1,\"2337\":1,\"2338\":1,\"2339\":2,\"2362\":1,\"2363\":1,\"2364\":1,\"2365\":2}}],[\"v3\",{\"1\":{\"228\":1}}],[\"v2\",{\"1\":{\"228\":1}}],[\"vben5\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"vue2\",{\"0\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"vue切换json方式\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"vue切换json的api\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"vue切换mybaits\",{\"0\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"vue所有功能\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"vue集成\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"vue项目已经准备了七套流程\",{\"1\":{\"127\":1,\"471\":1,\"657\":1,\"876\":1,\"1057\":1,\"1385\":1,\"1557\":1,\"1894\":1}}],[\"vue实战案例较完善\",{\"1\":{\"115\":1,\"1882\":1}}],[\"vue\",{\"0\":{\"260\":1,\"501\":1,\"686\":1,\"910\":1,\"1239\":1,\"1415\":1,\"1686\":1,\"2094\":1,\"2161\":1,\"2327\":1,\"2353\":1},\"1\":{\"114\":1,\"121\":1,\"131\":4,\"287\":1,\"333\":4,\"334\":4,\"335\":6,\"338\":2,\"425\":2,\"426\":1,\"465\":2,\"496\":1,\"612\":1,\"651\":2,\"681\":1,\"803\":2,\"804\":1,\"870\":2,\"904\":1,\"983\":1,\"1050\":2,\"1061\":1,\"1203\":2,\"1204\":1,\"1233\":1,\"1331\":2,\"1332\":1,\"1379\":2,\"1410\":1,\"1545\":1,\"1551\":1,\"1561\":4,\"1711\":1,\"1755\":4,\"1756\":4,\"1757\":6,\"1760\":2,\"1881\":1,\"1888\":1,\"1898\":4,\"1913\":1,\"1959\":4,\"1960\":4,\"1961\":6,\"1964\":2,\"2161\":1,\"2170\":1,\"2231\":1,\"2240\":4,\"2243\":2,\"2327\":1,\"2336\":1,\"2353\":1,\"2362\":1}}],[\"vue封装实战项目\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"vue3项目引入过程同上vue2\",{\"1\":{\"612\":1}}],[\"vue3集成前端\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"vue3+element\",{\"1\":{\"131\":1,\"1061\":1,\"1561\":1,\"1898\":1}}],[\"vue3\",{\"0\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1},\"1\":{\"73\":1,\"131\":2,\"817\":1,\"957\":1,\"1061\":2,\"1345\":1,\"1461\":1,\"1561\":2,\"1840\":1,\"1898\":2}}],[\"vue中实现类nodeextserviceimpl\",{\"1\":{\"32\":1,\"1799\":1}}],[\"vanlin\",{\"1\":{\"308\":1,\"313\":1,\"314\":7,\"995\":1,\"999\":1,\"1005\":1,\"1006\":7,\"1721\":1,\"1731\":1,\"1736\":1,\"1737\":7,\"1934\":1,\"1939\":1,\"1940\":7}}],[\"var\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"varchar\",{\"1\":{\"265\":8,\"266\":12,\"267\":7,\"268\":12,\"269\":7,\"270\":4,\"271\":3,\"506\":8,\"507\":12,\"508\":7,\"509\":12,\"510\":7,\"511\":4,\"512\":3,\"691\":8,\"692\":12,\"693\":7,\"694\":12,\"695\":7,\"696\":4,\"697\":3,\"915\":8,\"916\":12,\"917\":7,\"918\":12,\"919\":7,\"920\":4,\"921\":3,\"1244\":8,\"1245\":12,\"1246\":7,\"1247\":12,\"1248\":7,\"1249\":4,\"1250\":3,\"1420\":8,\"1421\":12,\"1422\":7,\"1423\":12,\"1424\":7,\"1425\":4,\"1426\":3,\"1691\":8,\"1692\":12,\"1693\":7,\"1694\":12,\"1695\":7,\"1696\":4,\"1697\":3,\"2099\":8,\"2100\":12,\"2101\":7,\"2102\":12,\"2103\":7,\"2104\":4,\"2105\":3}}],[\"variablestr\",{\"1\":{\"93\":3,\"531\":3,\"716\":3,\"829\":3,\"974\":3,\"1445\":3,\"1481\":3,\"1860\":3}}],[\"variablestrategy\",{\"1\":{\"92\":1,\"93\":1,\"531\":2,\"716\":2,\"828\":1,\"829\":1,\"973\":1,\"974\":1,\"1445\":2,\"1480\":1,\"1481\":1,\"1859\":1,\"1860\":1}}],[\"variablevalue\",{\"1\":{\"63\":2,\"835\":2,\"947\":2,\"1451\":2,\"1830\":2}}],[\"variabletest\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"variablemap\",{\"1\":{\"25\":4,\"455\":4,\"641\":4,\"857\":4,\"1080\":4,\"1369\":4,\"1498\":4,\"1792\":4}}],[\"variable\",{\"1\":{\"16\":1,\"18\":3,\"19\":4,\"25\":4,\"46\":7,\"53\":4,\"56\":4,\"59\":2,\"63\":8,\"77\":2,\"81\":4,\"83\":2,\"87\":2,\"89\":2,\"93\":3,\"160\":1,\"161\":1,\"168\":1,\"181\":2,\"217\":4,\"267\":1,\"272\":9,\"362\":1,\"363\":1,\"369\":1,\"377\":2,\"436\":4,\"441\":4,\"447\":1,\"449\":2,\"450\":3,\"455\":4,\"508\":1,\"521\":9,\"527\":4,\"530\":4,\"531\":5,\"547\":1,\"548\":1,\"554\":1,\"562\":2,\"622\":4,\"627\":4,\"633\":1,\"635\":2,\"636\":3,\"641\":4,\"693\":1,\"706\":9,\"712\":4,\"715\":4,\"716\":5,\"734\":1,\"735\":1,\"742\":1,\"750\":2,\"776\":4,\"822\":4,\"825\":2,\"829\":3,\"832\":2,\"835\":8,\"840\":4,\"848\":1,\"850\":4,\"851\":3,\"857\":4,\"917\":1,\"930\":9,\"932\":7,\"938\":4,\"941\":4,\"943\":2,\"947\":8,\"962\":4,\"964\":2,\"968\":2,\"970\":2,\"974\":3,\"1071\":1,\"1073\":4,\"1074\":3,\"1080\":4,\"1102\":7,\"1108\":4,\"1111\":4,\"1132\":1,\"1133\":1,\"1140\":1,\"1148\":2,\"1180\":4,\"1246\":1,\"1251\":9,\"1268\":1,\"1269\":1,\"1275\":1,\"1283\":2,\"1350\":4,\"1355\":4,\"1361\":1,\"1363\":2,\"1364\":3,\"1369\":4,\"1422\":1,\"1435\":9,\"1441\":4,\"1444\":4,\"1445\":5,\"1447\":2,\"1451\":8,\"1465\":2,\"1469\":4,\"1471\":2,\"1475\":2,\"1477\":2,\"1481\":3,\"1489\":1,\"1491\":4,\"1492\":3,\"1498\":4,\"1513\":7,\"1520\":4,\"1523\":4,\"1590\":1,\"1591\":1,\"1598\":1,\"1611\":2,\"1647\":4,\"1693\":1,\"1698\":9,\"1783\":1,\"1785\":4,\"1786\":3,\"1792\":4,\"1813\":7,\"1820\":4,\"1823\":4,\"1826\":2,\"1830\":8,\"1844\":2,\"1848\":4,\"1850\":2,\"1854\":2,\"1856\":2,\"1860\":3,\"1998\":1,\"1999\":1,\"2006\":1,\"2019\":2,\"2055\":4,\"2101\":1,\"2106\":9,\"2149\":4,\"2150\":4,\"2208\":4,\"2209\":4,\"2269\":4,\"2270\":4,\"2295\":4,\"2296\":4}}],[\"value=\",{\"1\":{\"335\":19,\"1757\":19,\"1961\":19,\"2240\":19}}],[\"value\",{\"1\":{\"30\":2,\"35\":2,\"63\":2,\"64\":3,\"286\":5,\"333\":2,\"334\":18,\"335\":6,\"403\":2,\"406\":2,\"458\":2,\"460\":2,\"516\":1,\"588\":2,\"591\":2,\"644\":2,\"646\":2,\"701\":1,\"779\":2,\"782\":2,\"835\":2,\"836\":3,\"860\":2,\"862\":2,\"925\":1,\"947\":2,\"948\":3,\"982\":5,\"1083\":2,\"1085\":2,\"1096\":1,\"1183\":2,\"1186\":2,\"1309\":2,\"1312\":2,\"1372\":2,\"1374\":2,\"1430\":1,\"1451\":2,\"1452\":3,\"1503\":2,\"1710\":5,\"1755\":2,\"1756\":18,\"1757\":6,\"1797\":2,\"1802\":2,\"1830\":2,\"1831\":3,\"1912\":5,\"1959\":2,\"1960\":18,\"1961\":6,\"2193\":2,\"2240\":6,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"valueof\",{\"1\":{\"3\":1,\"41\":2,\"63\":1,\"217\":1,\"272\":1,\"436\":1,\"521\":1,\"622\":1,\"706\":1,\"776\":1,\"822\":1,\"835\":1,\"869\":2,\"930\":1,\"947\":1,\"1092\":2,\"1180\":1,\"1251\":1,\"1350\":1,\"1435\":1,\"1451\":1,\"1508\":2,\"1647\":1,\"1698\":1,\"1770\":1,\"1808\":2,\"1830\":1,\"2055\":1,\"2106\":1}}],[\"function\",{\"1\":{\"334\":2,\"335\":2,\"426\":1,\"428\":1,\"612\":1,\"614\":1,\"804\":1,\"806\":1,\"1204\":1,\"1206\":1,\"1332\":1,\"1334\":1,\"1756\":2,\"1757\":2,\"1960\":2,\"1961\":2,\"2240\":2}}],[\"found\",{\"1\":{\"2377\":1}}],[\"fonts目录\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"fonts目录下\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"fonts\",{\"1\":{\"287\":3,\"983\":3,\"1711\":3,\"1913\":3}}],[\"fork<\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"fork项目到自己仓库\",{\"0\":{\"104\":1,\"1033\":1,\"1535\":1,\"1871\":1}}],[\"form\",{\"1\":{\"265\":2,\"266\":2,\"268\":2,\"270\":2,\"333\":2,\"334\":16,\"335\":16,\"506\":2,\"507\":2,\"509\":2,\"511\":2,\"691\":2,\"692\":2,\"694\":2,\"696\":2,\"915\":2,\"916\":2,\"918\":2,\"920\":2,\"1244\":2,\"1245\":2,\"1247\":2,\"1249\":2,\"1420\":2,\"1421\":2,\"1423\":2,\"1425\":2,\"1691\":2,\"1692\":2,\"1694\":2,\"1696\":2,\"1755\":2,\"1756\":16,\"1757\":16,\"1959\":2,\"1960\":16,\"1961\":16,\"2099\":2,\"2100\":2,\"2102\":2,\"2104\":2,\"2240\":16}}],[\"format\",{\"1\":{\"3\":1,\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1,\"1770\":1}}],[\"forwarded\",{\"1\":{\"75\":2,\"819\":2,\"959\":2,\"1347\":2,\"1463\":2,\"1842\":2}}],[\"foreach\",{\"1\":{\"4\":1,\"46\":2,\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"932\":2,\"1095\":2,\"1096\":1,\"1102\":2,\"1429\":2,\"1430\":1,\"1513\":2,\"1771\":1,\"1813\":2}}],[\"for\",{\"1\":{\"3\":1,\"4\":1,\"18\":2,\"29\":1,\"75\":2,\"450\":2,\"636\":2,\"819\":2,\"851\":2,\"959\":2,\"1074\":2,\"1082\":1,\"1347\":2,\"1364\":2,\"1463\":2,\"1492\":2,\"1502\":1,\"1770\":1,\"1771\":1,\"1786\":2,\"1796\":1,\"1842\":2}}],[\"fc\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"from\",{\"1\":{\"314\":2,\"342\":1,\"426\":1,\"612\":1,\"804\":1,\"1006\":2,\"1204\":1,\"1332\":1,\"1737\":2,\"1764\":1,\"1940\":2,\"1968\":1,\"2249\":1}}],[\"from=warmflow\",{\"1\":{\"283\":1}}],[\"frameborder=\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"framework\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"frameinvoker\",{\"1\":{\"38\":1,\"462\":1,\"464\":1,\"648\":1,\"650\":1,\"864\":1,\"866\":1,\"1087\":1,\"1089\":1,\"1376\":1,\"1378\":1,\"1505\":1,\"1805\":1}}],[\"feat\",{\"1\":{\"109\":1,\"301\":3,\"302\":7,\"306\":4,\"307\":7,\"308\":1,\"309\":4,\"310\":4,\"311\":4,\"313\":5,\"314\":10,\"316\":3,\"995\":1,\"997\":4,\"998\":7,\"999\":1,\"1000\":4,\"1001\":4,\"1003\":4,\"1005\":5,\"1006\":10,\"1008\":3,\"1038\":1,\"1540\":1,\"1723\":2,\"1725\":7,\"1729\":4,\"1730\":7,\"1731\":1,\"1732\":4,\"1733\":4,\"1734\":4,\"1736\":5,\"1737\":10,\"1739\":3,\"1876\":1,\"1927\":3,\"1928\":7,\"1932\":4,\"1933\":7,\"1934\":1,\"1935\":4,\"1936\":4,\"1937\":4,\"1939\":5,\"1940\":10,\"1942\":3,\"2131\":7,\"2162\":7,\"2180\":3,\"2328\":7,\"2354\":7,\"2372\":3}}],[\"flex和jpa\",{\"1\":{\"1042\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"flex和easy\",{\"1\":{\"117\":1,\"1547\":1,\"1884\":1}}],[\"flex的自带方法\",{\"1\":{\"464\":1,\"650\":1,\"866\":1,\"1089\":1,\"1378\":1}}],[\"flex的solon扩展包\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"flex扩展包\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"flex\",{\"0\":{\"255\":1,\"464\":1,\"490\":1,\"650\":1,\"676\":1,\"866\":1,\"901\":1,\"1089\":1,\"1230\":1,\"1378\":1,\"1404\":1,\"1681\":1,\"2089\":1},\"1\":{\"113\":1,\"118\":1,\"255\":1,\"302\":1,\"313\":1,\"333\":1,\"490\":3,\"493\":1,\"676\":2,\"679\":1,\"901\":3,\"1005\":1,\"1047\":1,\"1230\":3,\"1404\":3,\"1407\":1,\"1544\":1,\"1548\":1,\"1681\":1,\"1725\":1,\"1736\":1,\"1755\":1,\"1880\":1,\"1885\":1,\"1928\":1,\"1939\":1,\"1959\":1,\"2089\":1,\"2162\":1,\"2167\":1,\"2228\":1,\"2328\":1,\"2333\":1,\"2354\":1,\"2359\":1}}],[\"flag|5\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"flag|4\",{\"1\":{\"216\":8,\"1646\":8,\"2054\":8}}],[\"flag为变量和以下方法入参命名一致\",{\"1\":{\"217\":1,\"436\":1,\"622\":1,\"776\":1,\"822\":1,\"1180\":1,\"1350\":1,\"1647\":1,\"2055\":1}}],[\"flag\",{\"1\":{\"93\":1,\"216\":3,\"217\":5,\"265\":1,\"266\":1,\"267\":1,\"268\":2,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"306\":2,\"333\":6,\"335\":4,\"436\":6,\"506\":1,\"507\":1,\"508\":1,\"509\":2,\"510\":1,\"511\":1,\"512\":1,\"515\":3,\"521\":1,\"531\":1,\"622\":6,\"691\":1,\"692\":1,\"693\":1,\"694\":2,\"695\":1,\"696\":1,\"697\":1,\"700\":3,\"706\":1,\"716\":1,\"775\":1,\"776\":6,\"822\":6,\"829\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":2,\"919\":1,\"920\":1,\"921\":1,\"924\":3,\"930\":1,\"974\":1,\"997\":2,\"1095\":3,\"1179\":3,\"1180\":5,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":2,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1350\":6,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":2,\"1424\":1,\"1425\":1,\"1426\":1,\"1429\":3,\"1435\":1,\"1445\":1,\"1481\":1,\"1646\":3,\"1647\":5,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":2,\"1695\":1,\"1696\":1,\"1697\":1,\"1698\":1,\"1729\":2,\"1755\":6,\"1757\":4,\"1860\":1,\"1932\":2,\"1959\":6,\"1961\":4,\"2054\":3,\"2055\":5,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":2,\"2103\":1,\"2104\":1,\"2105\":1,\"2106\":1,\"2240\":4}}],[\"flow<\",{\"1\":{\"2204\":1,\"2218\":1,\"2291\":1,\"2317\":1}}],[\"flow自研了流程图绘制\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"flow后妈妈再也不用担心我加班了\",{\"1\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"flow能给你带来什么\",{\"0\":{\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"flow作者\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"flow作为一个国产的工作流引擎\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"flow引擎实现多维度灵活配置\",{\"0\":{\"2178\":1,\"2370\":1}}],[\"flow国产工作流引擎\",{\"1\":{\"2163\":1,\"2181\":1,\"2329\":1,\"2355\":1,\"2373\":1}}],[\"flow国产工作流引擎🎉\",{\"1\":{\"113\":1,\"1042\":1,\"1544\":1,\"1880\":1,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2175\":1,\"2188\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2341\":1,\"2367\":1}}],[\"flow新春版1\",{\"0\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"flow发布1\",{\"0\":{\"2129\":1}}],[\"flow支持跨部门的流程协作\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"flow来分析和优化现有业务流程\",{\"1\":{\"1045\":1,\"1546\":1}}],[\"flowtablename\",{\"1\":{\"515\":2,\"700\":2,\"924\":2,\"1095\":2,\"1429\":2}}],[\"flowtask<\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"flowtaskmapper\",{\"1\":{\"38\":3,\"462\":3,\"464\":1,\"648\":3,\"650\":1,\"864\":3,\"866\":1,\"1087\":3,\"1089\":1,\"1376\":3,\"1378\":1,\"1505\":3,\"1805\":3}}],[\"flowdefinitionmapper\",{\"1\":{\"464\":2,\"650\":2,\"866\":2,\"1089\":2,\"1378\":2}}],[\"flowdefinition\",{\"1\":{\"463\":3,\"649\":3,\"865\":3,\"1088\":3,\"1377\":3}}],[\"flowdefinition<\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"flowuser<\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"flowuserdao\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"flowskip<\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"flowstatus变量书写错误的问题\",{\"1\":{\"310\":1,\"1001\":1,\"1733\":1,\"1936\":1}}],[\"flowstatus与hisstatus可以不同\",{\"1\":{\"66\":1,\"67\":2,\"409\":1,\"410\":2,\"594\":1,\"595\":2,\"785\":1,\"786\":2,\"950\":1,\"951\":2,\"1315\":1,\"1316\":2,\"1454\":1,\"1455\":2,\"1833\":1,\"1834\":2}}],[\"flowstatus\",{\"1\":{\"65\":1,\"66\":5,\"67\":8,\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"217\":1,\"272\":1,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"408\":1,\"409\":5,\"410\":8,\"436\":1,\"521\":1,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"593\":1,\"594\":5,\"595\":8,\"622\":1,\"706\":1,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"776\":1,\"784\":1,\"785\":5,\"786\":8,\"822\":1,\"930\":1,\"949\":1,\"950\":5,\"951\":8,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1180\":1,\"1251\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1314\":1,\"1315\":5,\"1316\":8,\"1350\":1,\"1435\":1,\"1453\":1,\"1454\":5,\"1455\":8,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1647\":1,\"1698\":1,\"1832\":1,\"1833\":5,\"1834\":8,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2055\":1,\"2106\":1}}],[\"flownode<\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"flowinstance<\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"flowhistask<\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"flowfactory\",{\"1\":{\"449\":2,\"461\":1,\"635\":2,\"647\":1,\"850\":2,\"932\":2,\"1073\":2,\"1102\":2,\"1363\":2,\"1375\":1}}],[\"flowfactory修改为flowengine\",{\"1\":{\"302\":1,\"1725\":1,\"1928\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"flow的门面\",{\"1\":{\"2191\":1,\"2260\":1,\"2278\":1,\"2304\":1}}],[\"flow的驾驶人\",{\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"flow的xml\",{\"1\":{\"329\":1,\"1021\":1,\"1752\":1,\"1955\":1}}],[\"flow的pom\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"flow=\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"flow内置的19位雪花算法\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"flow官网挂广告\",{\"1\":{\"979\":1,\"1707\":1,\"1909\":1}}],[\"flow官网投放广告\",{\"1\":{\"283\":1}}],[\"flow官网提供多个赞助商广告位\",{\"1\":{\"283\":1}}],[\"flow是基于apache\",{\"1\":{\"283\":1}}],[\"flow工作流\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"flow工作流引擎的作者\",{\"1\":{\"2186\":1,\"2255\":1,\"2273\":1,\"2299\":1}}],[\"flow工作流引擎数据库主键自增策略实现👇\",{\"1\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"flow工作流私人培训\",{\"1\":{\"282\":1,\"978\":1,\"1706\":1,\"1908\":1}}],[\"flow工作流配置\",{\"1\":{\"7\":1,\"30\":1,\"235\":1,\"286\":1,\"403\":1,\"406\":1,\"416\":1,\"460\":1,\"489\":2,\"518\":1,\"588\":1,\"591\":1,\"601\":1,\"646\":1,\"675\":2,\"703\":1,\"779\":1,\"782\":1,\"792\":1,\"812\":1,\"862\":1,\"900\":2,\"927\":1,\"982\":1,\"1085\":1,\"1098\":1,\"1183\":1,\"1186\":1,\"1192\":1,\"1212\":1,\"1229\":2,\"1309\":1,\"1312\":1,\"1322\":1,\"1340\":1,\"1374\":1,\"1403\":2,\"1432\":1,\"1503\":1,\"1661\":1,\"1710\":1,\"1774\":1,\"1797\":1,\"1912\":1,\"2069\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"flow项目非常好\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"flow源码头部的版权声明\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"flow采用apache\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"flow可用于员工招聘\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"flow可以用来跟踪项目任务的状态\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"flowable和activities确实大而全\",{\"1\":{\"2187\":1,\"2256\":1,\"2274\":1,\"2300\":1}}],[\"flowable\",{\"1\":{\"115\":1,\"131\":1,\"1561\":1,\"1882\":1,\"1898\":1}}],[\"flowable对比\",{\"0\":{\"115\":1,\"1882\":1}}],[\"flowexception\",{\"1\":{\"29\":1,\"81\":2,\"441\":2,\"627\":2,\"840\":2,\"962\":2,\"1082\":1,\"1355\":2,\"1469\":2,\"1502\":1,\"1796\":1,\"1848\":2}}],[\"flowengine\",{\"1\":{\"3\":2,\"19\":2,\"46\":2,\"1491\":2,\"1513\":2,\"1770\":2,\"1785\":2,\"1813\":2}}],[\"flowcode\",{\"1\":{\"66\":1,\"160\":1,\"176\":1,\"217\":1,\"272\":1,\"362\":1,\"409\":1,\"436\":1,\"521\":1,\"547\":1,\"594\":1,\"622\":1,\"706\":1,\"734\":1,\"776\":1,\"785\":1,\"822\":1,\"930\":1,\"950\":1,\"1132\":1,\"1180\":1,\"1251\":1,\"1268\":1,\"1315\":1,\"1350\":1,\"1435\":1,\"1454\":1,\"1590\":1,\"1606\":1,\"1647\":1,\"1698\":1,\"1833\":1,\"1998\":1,\"2014\":1,\"2055\":1,\"2106\":1}}],[\"flowcons\",{\"1\":{\"18\":2,\"25\":1,\"63\":1,\"64\":2,\"450\":2,\"455\":1,\"531\":2,\"636\":2,\"641\":1,\"716\":2,\"835\":1,\"836\":2,\"851\":2,\"857\":1,\"947\":1,\"948\":2,\"1074\":2,\"1080\":1,\"1364\":2,\"1369\":1,\"1445\":2,\"1451\":1,\"1452\":2,\"1492\":2,\"1498\":1,\"1786\":2,\"1792\":1,\"1830\":1,\"1831\":2}}],[\"flowchartlist\",{\"1\":{\"4\":2,\"1771\":2}}],[\"flowchartchain\",{\"1\":{\"4\":2,\"1771\":2}}],[\"flowchart\",{\"1\":{\"4\":5,\"358\":1,\"543\":1,\"730\":1,\"1126\":1,\"1264\":1,\"1771\":5}}],[\"flowparams对象删除setxxx\",{\"1\":{\"309\":1,\"338\":1,\"1000\":1,\"1732\":1,\"1760\":1,\"1935\":1,\"1964\":1,\"2243\":1}}],[\"flowparams包含如下字段\",{\"1\":{\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1}}],[\"flowparams\",{\"1\":{\"17\":5,\"40\":1,\"46\":3,\"53\":2,\"56\":2,\"66\":5,\"67\":4,\"160\":1,\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"217\":5,\"272\":5,\"362\":1,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"409\":5,\"410\":4,\"436\":5,\"448\":5,\"521\":5,\"527\":2,\"530\":2,\"547\":1,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"594\":5,\"595\":4,\"622\":5,\"634\":5,\"706\":5,\"712\":2,\"715\":2,\"734\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"776\":5,\"785\":5,\"786\":4,\"822\":5,\"849\":5,\"868\":1,\"930\":5,\"932\":3,\"938\":2,\"941\":2,\"950\":5,\"951\":4,\"1072\":5,\"1091\":1,\"1102\":3,\"1108\":2,\"1111\":2,\"1132\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1180\":5,\"1216\":4,\"1251\":5,\"1268\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1315\":5,\"1316\":4,\"1350\":5,\"1362\":5,\"1435\":5,\"1441\":2,\"1444\":2,\"1454\":5,\"1455\":4,\"1490\":5,\"1507\":1,\"1513\":3,\"1520\":2,\"1523\":2,\"1590\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1647\":5,\"1698\":5,\"1784\":5,\"1807\":1,\"1813\":3,\"1820\":2,\"1823\":2,\"1833\":5,\"1834\":4,\"1998\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2055\":5,\"2106\":5,\"2149\":2,\"2150\":2,\"2208\":2,\"2209\":2,\"2269\":2,\"2270\":2,\"2295\":2,\"2296\":2}}],[\"flow\",{\"1\":{\"0\":3,\"7\":1,\"29\":7,\"30\":1,\"73\":2,\"74\":1,\"75\":5,\"81\":2,\"115\":1,\"119\":1,\"131\":1,\"225\":2,\"226\":1,\"228\":5,\"229\":2,\"235\":5,\"248\":2,\"254\":1,\"255\":1,\"256\":1,\"257\":2,\"263\":7,\"265\":2,\"266\":1,\"267\":1,\"277\":1,\"279\":9,\"286\":1,\"291\":4,\"332\":2,\"333\":1,\"335\":1,\"336\":3,\"337\":1,\"338\":4,\"339\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"403\":1,\"406\":5,\"416\":1,\"419\":1,\"420\":1,\"421\":1,\"422\":1,\"423\":1,\"424\":1,\"425\":2,\"426\":2,\"428\":5,\"441\":2,\"460\":1,\"463\":11,\"484\":2,\"487\":3,\"488\":3,\"489\":4,\"490\":3,\"491\":2,\"495\":2,\"504\":7,\"506\":2,\"507\":1,\"508\":1,\"515\":7,\"518\":2,\"588\":1,\"591\":5,\"601\":1,\"604\":1,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":1,\"610\":2,\"611\":5,\"612\":4,\"614\":5,\"627\":2,\"646\":1,\"649\":11,\"670\":2,\"673\":2,\"674\":2,\"675\":3,\"676\":2,\"677\":2,\"680\":2,\"689\":7,\"691\":2,\"692\":1,\"693\":1,\"700\":7,\"703\":2,\"779\":1,\"782\":5,\"792\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":2,\"800\":2,\"801\":2,\"802\":1,\"803\":2,\"804\":2,\"806\":5,\"812\":5,\"817\":2,\"818\":1,\"819\":5,\"840\":2,\"862\":1,\"865\":11,\"895\":2,\"898\":3,\"899\":3,\"900\":3,\"901\":3,\"902\":2,\"903\":2,\"913\":7,\"915\":2,\"916\":1,\"917\":1,\"924\":7,\"927\":2,\"957\":2,\"958\":1,\"959\":5,\"962\":2,\"982\":1,\"987\":4,\"1044\":1,\"1045\":1,\"1061\":1,\"1082\":7,\"1085\":1,\"1088\":11,\"1095\":7,\"1098\":2,\"1183\":1,\"1186\":5,\"1192\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":2,\"1200\":2,\"1201\":2,\"1202\":1,\"1203\":2,\"1204\":2,\"1206\":5,\"1212\":5,\"1224\":2,\"1227\":3,\"1228\":3,\"1229\":3,\"1230\":3,\"1231\":2,\"1232\":2,\"1242\":7,\"1244\":2,\"1245\":1,\"1246\":1,\"1309\":1,\"1312\":5,\"1322\":1,\"1325\":1,\"1326\":1,\"1327\":2,\"1328\":2,\"1329\":2,\"1330\":1,\"1331\":2,\"1332\":2,\"1334\":5,\"1340\":5,\"1345\":2,\"1346\":1,\"1347\":5,\"1355\":2,\"1374\":1,\"1377\":11,\"1398\":2,\"1401\":3,\"1402\":3,\"1403\":3,\"1404\":3,\"1405\":2,\"1409\":2,\"1418\":7,\"1420\":2,\"1421\":1,\"1422\":1,\"1429\":7,\"1432\":2,\"1461\":2,\"1462\":1,\"1463\":5,\"1469\":2,\"1502\":7,\"1503\":1,\"1546\":1,\"1549\":1,\"1561\":1,\"1654\":2,\"1655\":1,\"1661\":5,\"1674\":2,\"1680\":1,\"1681\":1,\"1682\":1,\"1683\":2,\"1689\":7,\"1691\":2,\"1692\":1,\"1693\":1,\"1701\":1,\"1702\":9,\"1710\":1,\"1715\":4,\"1755\":1,\"1757\":1,\"1758\":3,\"1759\":1,\"1760\":4,\"1761\":1,\"1763\":1,\"1764\":1,\"1765\":1,\"1766\":1,\"1767\":1,\"1774\":1,\"1796\":7,\"1797\":1,\"1840\":2,\"1841\":1,\"1842\":5,\"1848\":2,\"1882\":1,\"1886\":1,\"1898\":1,\"1903\":1,\"1904\":9,\"1912\":1,\"1917\":4,\"1958\":2,\"1959\":1,\"1961\":1,\"1962\":3,\"1963\":1,\"1964\":4,\"1965\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"2062\":2,\"2063\":1,\"2069\":5,\"2082\":2,\"2088\":1,\"2089\":1,\"2090\":1,\"2091\":2,\"2097\":7,\"2099\":2,\"2100\":1,\"2101\":1,\"2108\":1,\"2109\":2,\"2110\":1,\"2117\":1,\"2119\":1,\"2120\":4,\"2121\":3,\"2128\":1,\"2134\":1,\"2136\":1,\"2137\":2,\"2138\":1,\"2145\":1,\"2153\":1,\"2154\":2,\"2155\":1,\"2165\":1,\"2167\":1,\"2168\":1,\"2174\":1,\"2177\":1,\"2183\":1,\"2193\":1,\"2199\":1,\"2202\":1,\"2203\":2,\"2204\":1,\"2213\":1,\"2216\":1,\"2217\":2,\"2218\":1,\"2220\":1,\"2221\":2,\"2222\":1,\"2228\":1,\"2229\":1,\"2235\":1,\"2238\":1,\"2241\":2,\"2242\":1,\"2243\":4,\"2244\":1,\"2248\":1,\"2249\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2262\":1,\"2280\":1,\"2286\":1,\"2289\":1,\"2290\":2,\"2291\":1,\"2306\":1,\"2312\":1,\"2315\":1,\"2316\":2,\"2317\":1,\"2319\":1,\"2320\":2,\"2321\":1,\"2331\":1,\"2333\":1,\"2334\":1,\"2340\":1,\"2343\":1,\"2345\":1,\"2346\":2,\"2347\":1,\"2357\":1,\"2359\":1,\"2360\":1,\"2366\":1,\"2369\":1,\"2375\":1}}],[\"fastjson\",{\"1\":{\"340\":1,\"1762\":1,\"1966\":1,\"2246\":1}}],[\"fastjson和gson\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"fastjson和gson四种json库\",{\"1\":{\"80\":1,\"440\":1,\"626\":1,\"839\":1,\"961\":1,\"1354\":1,\"1468\":1,\"1847\":1}}],[\"false\",{\"1\":{\"29\":1,\"161\":1,\"174\":1,\"333\":1,\"375\":1,\"406\":1,\"459\":1,\"515\":2,\"516\":1,\"560\":1,\"591\":1,\"645\":1,\"700\":2,\"701\":1,\"748\":1,\"782\":1,\"825\":1,\"861\":1,\"924\":2,\"925\":1,\"943\":1,\"964\":1,\"970\":1,\"1082\":1,\"1084\":1,\"1095\":2,\"1096\":1,\"1146\":1,\"1186\":1,\"1281\":1,\"1312\":1,\"1373\":1,\"1429\":2,\"1430\":1,\"1502\":1,\"1604\":1,\"1755\":1,\"1796\":1,\"1959\":1,\"1999\":1,\"2012\":1}}],[\"fill\",{\"1\":{\"403\":1,\"406\":1,\"416\":1,\"588\":1,\"591\":1,\"601\":1,\"779\":1,\"782\":1,\"792\":1,\"1183\":1,\"1186\":1,\"1192\":1,\"1309\":1,\"1312\":1,\"1322\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"fileinputstream\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2190\":1,\"2231\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2336\":1,\"2362\":1}}],[\"filename=exported\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"file\",{\"1\":{\"333\":4,\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"1755\":4,\"1959\":4,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"files\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"filterchaindefinitionmap\",{\"1\":{\"422\":3,\"607\":4,\"800\":4,\"1200\":4,\"1328\":4}}],[\"filterchain\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"filters\",{\"1\":{\"228\":1}}],[\"filter\",{\"1\":{\"228\":3,\"334\":2,\"1756\":2,\"1960\":2}}],[\"fix\",{\"1\":{\"109\":1,\"299\":2,\"301\":5,\"302\":5,\"303\":1,\"304\":2,\"305\":1,\"308\":4,\"309\":2,\"310\":3,\"311\":2,\"312\":1,\"313\":3,\"314\":14,\"315\":2,\"316\":4,\"325\":1,\"329\":1,\"999\":4,\"1000\":2,\"1001\":2,\"1002\":1,\"1003\":2,\"1004\":1,\"1005\":3,\"1006\":14,\"1007\":2,\"1008\":4,\"1017\":1,\"1021\":1,\"1038\":1,\"1540\":1,\"1725\":5,\"1726\":1,\"1727\":2,\"1728\":1,\"1731\":4,\"1732\":2,\"1733\":3,\"1734\":2,\"1735\":1,\"1736\":3,\"1737\":14,\"1738\":2,\"1739\":4,\"1748\":1,\"1752\":1,\"1876\":1,\"1927\":5,\"1928\":5,\"1929\":1,\"1930\":2,\"1931\":1,\"1934\":4,\"1935\":2,\"1936\":3,\"1937\":2,\"1938\":1,\"1939\":3,\"1940\":14,\"1941\":2,\"1942\":4,\"1951\":1,\"1955\":1,\"2162\":5,\"2180\":5,\"2328\":5,\"2354\":5,\"2372\":5}}],[\"fieldlist\",{\"1\":{\"515\":4,\"516\":2,\"700\":4,\"701\":2,\"924\":4,\"925\":2,\"1095\":4,\"1096\":2,\"1429\":4,\"1430\":2}}],[\"field=\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"fields\",{\"1\":{\"29\":2,\"1082\":2,\"1502\":2,\"1796\":2}}],[\"field\",{\"1\":{\"29\":6,\"515\":7,\"516\":4,\"700\":7,\"701\":4,\"924\":7,\"925\":4,\"1082\":6,\"1095\":7,\"1096\":4,\"1429\":7,\"1430\":4,\"1502\":6,\"1796\":6}}],[\"find\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"final\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"24\":1,\"81\":1,\"228\":1,\"272\":1,\"286\":5,\"441\":1,\"448\":1,\"449\":1,\"450\":1,\"521\":1,\"627\":1,\"634\":1,\"635\":1,\"636\":1,\"706\":1,\"840\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":1,\"930\":1,\"962\":1,\"982\":5,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":1,\"1251\":1,\"1355\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1435\":1,\"1469\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":1,\"1698\":1,\"1710\":5,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":1,\"1848\":1,\"1912\":5,\"2106\":1}}],[\"finishlistener\",{\"1\":{\"272\":1,\"521\":1,\"706\":1,\"930\":1,\"1251\":1,\"1435\":1,\"1698\":1,\"2106\":1}}],[\"finish\",{\"1\":{\"10\":1,\"13\":1,\"16\":2,\"24\":1,\"443\":1,\"447\":1,\"629\":1,\"633\":1,\"843\":1,\"844\":1,\"848\":2,\"856\":1,\"1066\":1,\"1067\":1,\"1071\":2,\"1079\":1,\"1357\":1,\"1361\":1,\"1483\":1,\"1486\":1,\"1489\":2,\"1497\":1,\"1777\":1,\"1780\":1,\"1783\":2,\"1791\":1,\"2192\":1,\"2261\":1,\"2279\":1,\"2305\":1}}],[\"=>\",{\"1\":{\"333\":4,\"334\":8,\"335\":4,\"425\":1,\"426\":3,\"611\":1,\"612\":3,\"803\":1,\"804\":3,\"1203\":1,\"1204\":3,\"1331\":1,\"1332\":3,\"1755\":4,\"1756\":8,\"1757\":4,\"1959\":4,\"1960\":8,\"1961\":4,\"2240\":4}}],[\"===\",{\"1\":{\"335\":7,\"1757\":7,\"1961\":7,\"2240\":7}}],[\"==\",{\"1\":{\"64\":1,\"216\":1,\"306\":1,\"333\":2,\"335\":3,\"836\":1,\"948\":1,\"997\":1,\"1179\":1,\"1452\":1,\"1646\":1,\"1729\":1,\"1755\":2,\"1757\":3,\"1831\":1,\"1932\":1,\"1959\":2,\"1961\":3,\"2054\":1,\"2240\":3}}],[\"=\",{\"1\":{\"3\":5,\"4\":3,\"16\":4,\"17\":6,\"18\":6,\"19\":8,\"24\":1,\"25\":5,\"29\":4,\"38\":1,\"41\":7,\"46\":4,\"53\":2,\"56\":2,\"62\":1,\"63\":3,\"66\":4,\"67\":2,\"75\":1,\"81\":3,\"86\":1,\"92\":1,\"93\":3,\"217\":6,\"220\":4,\"228\":7,\"234\":12,\"272\":8,\"286\":7,\"291\":3,\"314\":1,\"333\":28,\"334\":8,\"335\":31,\"409\":4,\"410\":2,\"413\":4,\"422\":2,\"425\":3,\"426\":5,\"428\":1,\"433\":12,\"436\":6,\"441\":3,\"447\":5,\"448\":6,\"449\":6,\"450\":6,\"455\":5,\"462\":1,\"463\":6,\"464\":1,\"496\":1,\"499\":3,\"515\":9,\"516\":6,\"521\":8,\"527\":2,\"530\":2,\"531\":3,\"594\":4,\"595\":2,\"598\":4,\"607\":2,\"611\":3,\"612\":5,\"614\":1,\"619\":12,\"622\":6,\"627\":3,\"633\":5,\"634\":6,\"635\":6,\"636\":6,\"641\":5,\"648\":1,\"649\":6,\"650\":1,\"681\":1,\"684\":3,\"700\":9,\"701\":6,\"706\":8,\"712\":2,\"715\":2,\"716\":3,\"776\":6,\"785\":4,\"786\":2,\"789\":4,\"800\":2,\"803\":3,\"804\":5,\"806\":1,\"811\":12,\"819\":1,\"822\":6,\"828\":1,\"829\":3,\"831\":1,\"834\":1,\"835\":3,\"840\":3,\"848\":4,\"849\":6,\"850\":8,\"851\":6,\"856\":1,\"857\":5,\"864\":1,\"865\":6,\"866\":1,\"869\":7,\"904\":1,\"907\":3,\"924\":9,\"925\":6,\"930\":8,\"932\":4,\"938\":2,\"941\":2,\"946\":1,\"947\":3,\"950\":4,\"951\":2,\"959\":1,\"962\":3,\"967\":1,\"973\":1,\"974\":3,\"982\":7,\"987\":3,\"1006\":1,\"1071\":4,\"1072\":6,\"1073\":8,\"1074\":6,\"1079\":1,\"1080\":5,\"1082\":4,\"1087\":1,\"1088\":6,\"1089\":1,\"1092\":7,\"1095\":9,\"1096\":6,\"1102\":4,\"1108\":2,\"1111\":2,\"1180\":6,\"1189\":4,\"1200\":2,\"1203\":3,\"1204\":5,\"1206\":1,\"1211\":12,\"1233\":1,\"1236\":3,\"1251\":8,\"1315\":4,\"1316\":2,\"1319\":4,\"1328\":2,\"1331\":3,\"1332\":5,\"1334\":1,\"1339\":12,\"1347\":1,\"1350\":6,\"1355\":3,\"1361\":5,\"1362\":6,\"1363\":6,\"1364\":6,\"1369\":5,\"1376\":1,\"1377\":6,\"1378\":1,\"1410\":1,\"1413\":3,\"1429\":9,\"1430\":6,\"1435\":8,\"1441\":2,\"1444\":2,\"1445\":3,\"1450\":1,\"1451\":3,\"1454\":4,\"1455\":2,\"1463\":1,\"1469\":3,\"1474\":1,\"1480\":1,\"1481\":3,\"1489\":4,\"1490\":6,\"1491\":8,\"1492\":6,\"1497\":1,\"1498\":5,\"1502\":4,\"1505\":1,\"1508\":7,\"1513\":4,\"1520\":2,\"1523\":2,\"1647\":6,\"1650\":4,\"1660\":12,\"1698\":8,\"1710\":7,\"1715\":3,\"1737\":1,\"1755\":28,\"1756\":8,\"1757\":31,\"1770\":5,\"1771\":3,\"1783\":4,\"1784\":6,\"1785\":8,\"1786\":6,\"1791\":1,\"1792\":5,\"1796\":4,\"1805\":1,\"1808\":7,\"1813\":4,\"1820\":2,\"1823\":2,\"1829\":1,\"1830\":3,\"1833\":4,\"1834\":2,\"1842\":1,\"1848\":3,\"1853\":1,\"1859\":1,\"1860\":3,\"1912\":7,\"1917\":3,\"1940\":1,\"1959\":28,\"1960\":8,\"1961\":31,\"2055\":6,\"2058\":4,\"2068\":12,\"2106\":8,\"2149\":2,\"2150\":2,\"2170\":1,\"2173\":2,\"2190\":2,\"2196\":2,\"2208\":2,\"2209\":2,\"2231\":1,\"2234\":2,\"2240\":31,\"2259\":2,\"2265\":2,\"2269\":2,\"2270\":2,\"2277\":2,\"2283\":2,\"2295\":2,\"2296\":2,\"2303\":2,\"2309\":2,\"2336\":1,\"2339\":2,\"2362\":1,\"2365\":2}}],[\"img\",{\"1\":{\"2200\":1,\"2201\":1,\"2204\":2,\"2214\":1,\"2215\":1,\"2218\":2,\"2287\":1,\"2288\":1,\"2291\":2,\"2313\":1,\"2314\":1,\"2317\":2}}],[\"important\",{\"1\":{\"408\":1,\"412\":1,\"418\":1,\"440\":1,\"442\":1,\"443\":1,\"444\":1,\"457\":1,\"465\":1,\"483\":1,\"503\":1,\"514\":1,\"521\":1,\"593\":1,\"597\":1,\"603\":1,\"626\":1,\"628\":1,\"629\":1,\"630\":1,\"643\":1,\"651\":1,\"669\":1,\"688\":1,\"699\":1,\"706\":1,\"774\":1,\"784\":1,\"788\":1,\"794\":1,\"813\":1,\"824\":1,\"825\":1,\"839\":1,\"841\":1,\"842\":1,\"843\":1,\"859\":1,\"863\":1,\"867\":1,\"870\":1,\"894\":1,\"912\":1,\"923\":1,\"930\":1,\"931\":1,\"942\":1,\"943\":1,\"949\":1,\"953\":1,\"961\":1,\"963\":1,\"964\":1,\"969\":1,\"970\":1,\"991\":1,\"1042\":1,\"1050\":1,\"1064\":1,\"1065\":1,\"1066\":1,\"1082\":1,\"1086\":1,\"1090\":1,\"1094\":1,\"1101\":1,\"1172\":1,\"1178\":1,\"1188\":1,\"1194\":1,\"1213\":1,\"1223\":1,\"1241\":1,\"1251\":1,\"1314\":1,\"1318\":1,\"1324\":1,\"1354\":1,\"1356\":1,\"1357\":1,\"1358\":1,\"1371\":1,\"1379\":1,\"1397\":1,\"1417\":1,\"1428\":1,\"1435\":1,\"2120\":1,\"2121\":1,\"2122\":1,\"2126\":1,\"2188\":1,\"2257\":1,\"2275\":1,\"2301\":1}}],[\"importxml\",{\"1\":{\"333\":1,\"349\":1,\"496\":1,\"534\":1,\"681\":1,\"721\":1,\"904\":1,\"1117\":1,\"1233\":1,\"1255\":1,\"1410\":1,\"1755\":1,\"1959\":1,\"2170\":1,\"2190\":1,\"2231\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2336\":1,\"2362\":1}}],[\"import\",{\"1\":{\"291\":8,\"426\":3,\"612\":1,\"804\":3,\"987\":8,\"1204\":3,\"1332\":3,\"1715\":8,\"1917\":8}}],[\"importdefinition\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"importdef\",{\"1\":{\"138\":1,\"302\":1,\"1568\":1,\"1725\":1,\"1928\":1,\"1976\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"importjson\",{\"1\":{\"137\":1,\"302\":1,\"1567\":1,\"1725\":1,\"1928\":1,\"1975\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"importis\",{\"1\":{\"136\":1,\"302\":1,\"333\":1,\"1566\":1,\"1725\":1,\"1755\":1,\"1928\":1,\"1959\":1,\"1974\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"impl\",{\"1\":{\"19\":1,\"850\":1,\"1073\":1,\"1491\":1,\"1785\":1}}],[\"implements\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"24\":1,\"29\":1,\"41\":1,\"63\":1,\"81\":1,\"87\":1,\"93\":1,\"220\":1,\"228\":1,\"234\":1,\"272\":1,\"404\":1,\"413\":1,\"423\":1,\"433\":1,\"441\":1,\"448\":1,\"449\":1,\"450\":1,\"515\":1,\"516\":1,\"520\":1,\"521\":1,\"531\":1,\"589\":1,\"598\":1,\"608\":1,\"619\":1,\"627\":1,\"634\":1,\"635\":1,\"636\":1,\"700\":1,\"701\":1,\"705\":1,\"706\":1,\"716\":1,\"780\":1,\"789\":1,\"801\":1,\"811\":1,\"829\":1,\"832\":1,\"835\":1,\"840\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":1,\"869\":1,\"924\":1,\"925\":1,\"929\":1,\"930\":1,\"947\":1,\"962\":1,\"968\":1,\"974\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":1,\"1082\":1,\"1092\":1,\"1095\":1,\"1096\":1,\"1100\":1,\"1184\":1,\"1189\":1,\"1201\":1,\"1211\":1,\"1251\":1,\"1310\":1,\"1319\":1,\"1329\":1,\"1339\":1,\"1355\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1429\":1,\"1430\":1,\"1434\":1,\"1435\":1,\"1445\":1,\"1451\":1,\"1469\":1,\"1475\":1,\"1481\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":1,\"1502\":1,\"1508\":1,\"1650\":1,\"1660\":1,\"1698\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":1,\"1796\":1,\"1808\":1,\"1830\":1,\"1848\":1,\"1854\":1,\"1860\":1,\"2058\":1,\"2068\":1,\"2106\":1}}],[\"io\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"ioexception\",{\"1\":{\"81\":1,\"286\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"982\":1,\"1355\":1,\"1469\":1,\"1710\":1,\"1848\":1,\"1912\":1}}],[\"ibp3lk\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"ibp397\",{\"1\":{\"301\":1,\"1927\":1,\"2180\":1,\"2372\":1}}],[\"izbp18ilgi6s1lkbmmfo2jz\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"ignoretable\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"ignorewhite\",{\"1\":{\"228\":2}}],[\"ignorewhiteproperties\",{\"1\":{\"228\":2}}],[\"ignore为false\",{\"1\":{\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"375\":1,\"560\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1281\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1}}],[\"ignore\",{\"1\":{\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"228\":2,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"560\":1,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1}}],[\"it服务管理\",{\"1\":{\"116\":1,\"1045\":1,\"1546\":1,\"1883\":1}}],[\"item>\",{\"1\":{\"335\":2,\"1757\":2,\"1961\":2,\"2240\":2}}],[\"item\",{\"1\":{\"0\":2,\"280\":3,\"284\":4,\"335\":4,\"975\":3,\"980\":4,\"1703\":3,\"1708\":4,\"1757\":4,\"1905\":3,\"1910\":4,\"1961\":4,\"2240\":4}}],[\"ip\",{\"1\":{\"75\":1,\"226\":1,\"229\":1,\"424\":1,\"428\":1,\"802\":1,\"806\":1,\"819\":1,\"959\":1,\"1202\":1,\"1206\":1,\"1330\":1,\"1334\":1,\"1347\":1,\"1463\":1,\"1655\":1,\"1842\":1,\"2063\":1,\"2110\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2321\":1,\"2347\":1}}],[\"id>\",{\"1\":{\"2203\":5,\"2204\":1,\"2217\":5,\"2218\":1,\"2290\":5,\"2291\":1,\"2316\":5,\"2317\":1}}],[\"ideaprojects\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2202\":1,\"2203\":2,\"2216\":1,\"2217\":2,\"2231\":1,\"2289\":1,\"2290\":2,\"2315\":1,\"2316\":2,\"2336\":1,\"2362\":1}}],[\"id内存策略新增14\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"id生成器类型\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"id精度丢失\",{\"0\":{\"286\":1,\"982\":1,\"1710\":1,\"1912\":1}}],[\"id=1839683148936663047\",{\"1\":{\"428\":2,\"806\":2,\"1206\":2,\"1334\":2}}],[\"id=\",{\"1\":{\"428\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"id=$\",{\"1\":{\"226\":1,\"229\":1,\"338\":1,\"424\":1,\"425\":1,\"426\":1,\"428\":1,\"802\":1,\"803\":1,\"804\":1,\"806\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1206\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1334\":1,\"1655\":1,\"1760\":1,\"1964\":1,\"2063\":1,\"2110\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2243\":1,\"2321\":1,\"2347\":1}}],[\"id=xxx\",{\"1\":{\"75\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"idfill\",{\"1\":{\"220\":1,\"413\":1,\"598\":1,\"789\":1,\"1189\":1,\"1319\":1,\"1650\":1,\"2058\":1}}],[\"id设置正序排列\",{\"0\":{\"203\":1,\"395\":1,\"580\":1,\"768\":1,\"1166\":1,\"1301\":1,\"1633\":1,\"2041\":1},\"1\":{\"203\":1,\"395\":1,\"580\":1,\"768\":1,\"1166\":1,\"1301\":1,\"1633\":1,\"2041\":1}}],[\"ids\",{\"1\":{\"146\":1,\"188\":2,\"199\":2,\"354\":1,\"380\":2,\"391\":2,\"539\":1,\"565\":2,\"576\":2,\"726\":1,\"753\":2,\"764\":2,\"1122\":1,\"1151\":2,\"1162\":2,\"1260\":1,\"1286\":2,\"1297\":2,\"1576\":1,\"1618\":2,\"1629\":2,\"1984\":1,\"2026\":2,\"2037\":2}}],[\"idutils\",{\"1\":{\"66\":1,\"220\":1,\"272\":1,\"409\":1,\"413\":1,\"521\":1,\"594\":1,\"598\":1,\"706\":1,\"785\":1,\"789\":1,\"930\":1,\"950\":1,\"1189\":1,\"1251\":1,\"1315\":1,\"1319\":1,\"1435\":1,\"1454\":1,\"1650\":1,\"1698\":1,\"1833\":1,\"2058\":1,\"2106\":1}}],[\"id\",{\"1\":{\"66\":3,\"142\":1,\"143\":1,\"144\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"164\":1,\"165\":1,\"187\":2,\"197\":2,\"217\":1,\"228\":1,\"265\":2,\"266\":5,\"267\":4,\"268\":3,\"269\":3,\"270\":4,\"271\":2,\"272\":3,\"333\":6,\"350\":1,\"351\":2,\"352\":1,\"353\":1,\"355\":1,\"356\":1,\"357\":1,\"359\":1,\"360\":1,\"366\":1,\"367\":1,\"379\":2,\"389\":2,\"409\":3,\"436\":1,\"506\":2,\"507\":5,\"508\":4,\"509\":3,\"510\":3,\"511\":4,\"512\":2,\"515\":2,\"516\":1,\"521\":3,\"535\":1,\"536\":2,\"537\":1,\"538\":1,\"540\":1,\"541\":1,\"542\":1,\"544\":1,\"545\":1,\"551\":1,\"552\":1,\"564\":2,\"574\":2,\"594\":3,\"622\":1,\"691\":2,\"692\":5,\"693\":4,\"694\":3,\"695\":3,\"696\":4,\"697\":2,\"700\":2,\"701\":1,\"706\":3,\"722\":1,\"723\":2,\"724\":1,\"725\":1,\"727\":1,\"728\":1,\"729\":1,\"731\":1,\"732\":1,\"738\":1,\"739\":1,\"752\":2,\"762\":2,\"776\":1,\"785\":3,\"822\":1,\"915\":2,\"916\":5,\"917\":4,\"918\":3,\"919\":3,\"920\":4,\"921\":2,\"924\":2,\"925\":1,\"930\":3,\"950\":3,\"1095\":2,\"1096\":1,\"1118\":1,\"1119\":2,\"1120\":1,\"1121\":1,\"1123\":1,\"1124\":1,\"1125\":1,\"1127\":1,\"1128\":1,\"1129\":1,\"1130\":1,\"1136\":1,\"1137\":1,\"1150\":2,\"1160\":2,\"1180\":1,\"1244\":2,\"1245\":5,\"1246\":4,\"1247\":3,\"1248\":3,\"1249\":4,\"1250\":2,\"1251\":3,\"1256\":1,\"1257\":2,\"1258\":1,\"1259\":1,\"1261\":1,\"1262\":1,\"1263\":1,\"1265\":1,\"1266\":1,\"1272\":1,\"1273\":1,\"1285\":2,\"1295\":2,\"1315\":3,\"1350\":1,\"1420\":2,\"1421\":5,\"1422\":4,\"1423\":3,\"1424\":3,\"1425\":4,\"1426\":2,\"1429\":2,\"1430\":1,\"1435\":3,\"1454\":3,\"1572\":1,\"1573\":1,\"1574\":1,\"1577\":1,\"1578\":1,\"1579\":1,\"1580\":1,\"1581\":1,\"1594\":1,\"1595\":1,\"1617\":2,\"1627\":2,\"1647\":1,\"1691\":2,\"1692\":5,\"1693\":4,\"1694\":3,\"1695\":3,\"1696\":4,\"1697\":2,\"1698\":3,\"1755\":6,\"1833\":3,\"1959\":6,\"1980\":1,\"1981\":1,\"1982\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1989\":1,\"2002\":1,\"2003\":1,\"2025\":2,\"2035\":2,\"2055\":1,\"2099\":2,\"2100\":5,\"2101\":4,\"2102\":3,\"2103\":3,\"2104\":4,\"2105\":2,\"2106\":3}}],[\"illegalaccessexception\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"i++\",{\"1\":{\"18\":1,\"450\":1,\"636\":1,\"851\":1,\"1074\":1,\"1364\":1,\"1492\":1,\"1786\":1}}],[\"i\",{\"1\":{\"18\":4,\"133\":1,\"450\":4,\"636\":4,\"851\":4,\"1063\":1,\"1074\":4,\"1364\":4,\"1492\":4,\"1563\":1,\"1786\":4,\"1900\":1}}],[\"isolaction\",{\"1\":{\"406\":1,\"591\":1,\"782\":1,\"1186\":1,\"1312\":1}}],[\"isarray\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"issues\",{\"1\":{\"277\":1,\"1701\":1,\"1903\":1}}],[\"issue描述清楚问题\",{\"1\":{\"277\":1,\"1701\":1,\"1903\":1}}],[\"issue是社区的交流地\",{\"1\":{\"98\":1,\"1027\":1,\"1529\":1,\"1865\":1}}],[\"is\",{\"1\":{\"136\":1,\"265\":1,\"349\":1,\"506\":1,\"534\":1,\"691\":1,\"721\":1,\"915\":1,\"1117\":1,\"1244\":1,\"1255\":1,\"1420\":1,\"1566\":1,\"1691\":1,\"1974\":1,\"2099\":1}}],[\"isintercept\",{\"1\":{\"59\":1,\"62\":1,\"77\":1,\"83\":1,\"89\":1,\"825\":2,\"834\":1,\"943\":2,\"946\":1,\"964\":2,\"970\":2,\"1447\":1,\"1450\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1829\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"isnumeric\",{\"1\":{\"64\":1,\"836\":1,\"948\":1,\"1452\":1,\"1831\":1}}],[\"isnull\",{\"1\":{\"19\":2,\"63\":1,\"220\":1,\"413\":1,\"449\":1,\"598\":1,\"635\":1,\"789\":1,\"835\":1,\"850\":2,\"947\":1,\"1073\":2,\"1189\":1,\"1319\":1,\"1363\":1,\"1451\":1,\"1491\":2,\"1650\":1,\"1785\":2,\"1830\":1,\"2058\":1}}],[\"isnotnull\",{\"1\":{\"19\":2,\"93\":1,\"220\":5,\"413\":5,\"449\":2,\"531\":1,\"598\":5,\"635\":2,\"716\":1,\"789\":5,\"829\":1,\"850\":2,\"974\":1,\"1073\":2,\"1189\":5,\"1319\":5,\"1363\":2,\"1445\":1,\"1481\":1,\"1491\":2,\"1650\":5,\"1785\":2,\"1860\":1,\"2058\":5}}],[\"isnotempty\",{\"1\":{\"3\":1,\"4\":1,\"18\":1,\"25\":1,\"81\":2,\"441\":2,\"450\":1,\"455\":1,\"627\":2,\"636\":1,\"641\":1,\"840\":2,\"851\":1,\"857\":1,\"962\":2,\"1074\":1,\"1080\":1,\"1355\":2,\"1364\":1,\"1369\":1,\"1469\":2,\"1492\":1,\"1498\":1,\"1770\":1,\"1771\":1,\"1786\":1,\"1792\":1,\"1848\":2}}],[\"isnotblank\",{\"1\":{\"3\":1,\"1770\":1}}],[\"isempty\",{\"1\":{\"17\":1,\"63\":1,\"93\":3,\"448\":1,\"531\":3,\"634\":1,\"716\":3,\"829\":3,\"835\":1,\"849\":1,\"947\":1,\"974\":3,\"1072\":1,\"1362\":1,\"1445\":3,\"1451\":1,\"1481\":3,\"1490\":1,\"1784\":1,\"1830\":1,\"1860\":3}}],[\"inject\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"input\",{\"1\":{\"335\":4,\"1757\":4,\"1961\":4,\"2240\":4}}],[\"inner\",{\"1\":{\"291\":3,\"987\":3,\"1715\":3,\"1917\":3}}],[\"include\",{\"1\":{\"289\":1,\"985\":1,\"1713\":1,\"1915\":1}}],[\"invocationtargetexception\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"initialization\",{\"1\":{\"288\":2,\"984\":2,\"1712\":2,\"1914\":2}}],[\"initflow\",{\"0\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1},\"1\":{\"288\":1,\"984\":1,\"1712\":1,\"1914\":1}}],[\"init\",{\"1\":{\"109\":1,\"1038\":1,\"1540\":1,\"1876\":1}}],[\"index\",{\"1\":{\"75\":5,\"226\":1,\"229\":1,\"333\":2,\"334\":6,\"335\":2,\"338\":1,\"424\":1,\"425\":1,\"426\":1,\"428\":5,\"614\":1,\"802\":1,\"803\":1,\"804\":1,\"806\":5,\"819\":5,\"959\":5,\"1202\":1,\"1203\":1,\"1204\":1,\"1206\":5,\"1330\":1,\"1331\":1,\"1332\":1,\"1334\":5,\"1347\":5,\"1463\":5,\"1655\":1,\"1755\":2,\"1756\":6,\"1757\":2,\"1760\":1,\"1842\":5,\"1959\":2,\"1960\":6,\"1961\":2,\"1964\":1,\"2063\":1,\"2110\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2240\":2,\"2243\":1,\"2321\":1,\"2347\":1}}],[\"inf\",{\"1\":{\"74\":1,\"81\":1,\"441\":1,\"627\":1,\"818\":1,\"840\":1,\"958\":1,\"962\":1,\"1346\":1,\"1355\":1,\"1462\":1,\"1469\":1,\"1841\":1,\"1848\":1}}],[\"info\",{\"1\":{\"3\":2,\"17\":2,\"18\":2,\"19\":2,\"24\":8,\"25\":1,\"272\":2,\"448\":2,\"449\":2,\"450\":2,\"455\":1,\"521\":2,\"634\":2,\"635\":2,\"636\":2,\"641\":1,\"706\":2,\"849\":2,\"850\":2,\"851\":2,\"856\":8,\"857\":1,\"930\":2,\"1072\":2,\"1073\":2,\"1074\":2,\"1079\":8,\"1080\":1,\"1251\":2,\"1362\":2,\"1363\":2,\"1364\":2,\"1369\":1,\"1435\":2,\"1490\":2,\"1491\":2,\"1492\":2,\"1497\":8,\"1498\":1,\"1698\":2,\"1770\":2,\"1784\":2,\"1785\":2,\"1786\":2,\"1791\":8,\"1792\":1,\"2106\":2}}],[\"insertflow改为公共方法\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"insertfill\",{\"1\":{\"220\":1,\"413\":1,\"598\":1,\"789\":1,\"1189\":1,\"1319\":1,\"1650\":1,\"2058\":1}}],[\"inserttestleave\",{\"1\":{\"19\":1,\"66\":1,\"217\":1,\"272\":1,\"409\":1,\"436\":1,\"449\":1,\"521\":1,\"594\":1,\"622\":1,\"635\":1,\"706\":1,\"776\":1,\"785\":1,\"822\":1,\"850\":1,\"930\":1,\"950\":1,\"1073\":1,\"1180\":1,\"1251\":1,\"1315\":1,\"1350\":1,\"1363\":1,\"1435\":1,\"1454\":1,\"1491\":1,\"1647\":1,\"1698\":1,\"1785\":1,\"1833\":1,\"2055\":1,\"2106\":1}}],[\"insservice流程实例接口\",{\"0\":{\"361\":1,\"546\":1,\"733\":1,\"1131\":1,\"1267\":1}}],[\"insservice流程实例\",{\"0\":{\"159\":1,\"1589\":1,\"1997\":1}}],[\"insservice\",{\"1\":{\"53\":1,\"56\":1,\"66\":1,\"67\":1,\"217\":1,\"272\":1,\"321\":1,\"409\":1,\"410\":1,\"436\":1,\"498\":1,\"499\":3,\"521\":1,\"527\":1,\"530\":1,\"594\":1,\"595\":1,\"622\":1,\"683\":1,\"684\":3,\"706\":1,\"712\":1,\"715\":1,\"776\":1,\"785\":1,\"786\":1,\"822\":1,\"906\":1,\"907\":3,\"930\":1,\"938\":1,\"941\":1,\"950\":1,\"951\":1,\"1013\":1,\"1108\":1,\"1111\":1,\"1180\":1,\"1235\":1,\"1236\":3,\"1251\":1,\"1315\":1,\"1316\":1,\"1350\":1,\"1412\":1,\"1413\":3,\"1435\":1,\"1441\":1,\"1444\":1,\"1454\":1,\"1455\":1,\"1520\":1,\"1523\":1,\"1647\":1,\"1698\":1,\"1744\":1,\"1820\":1,\"1823\":1,\"1833\":1,\"1834\":1,\"1947\":1,\"2055\":1,\"2106\":1,\"2149\":1,\"2150\":1,\"2172\":1,\"2173\":2,\"2190\":2,\"2208\":1,\"2209\":1,\"2233\":1,\"2234\":2,\"2259\":2,\"2269\":1,\"2270\":1,\"2277\":2,\"2295\":1,\"2296\":1,\"2303\":2,\"2338\":1,\"2339\":2,\"2364\":1,\"2365\":2}}],[\"instance表的id\",{\"1\":{\"266\":1,\"270\":1,\"507\":1,\"511\":1,\"692\":1,\"696\":1,\"916\":1,\"920\":1,\"1245\":1,\"1249\":1,\"1421\":1,\"1425\":1,\"1692\":1,\"1696\":1,\"2100\":1,\"2104\":1}}],[\"instance\",{\"1\":{\"18\":3,\"19\":9,\"25\":2,\"29\":1,\"53\":2,\"56\":2,\"66\":2,\"67\":4,\"217\":3,\"263\":1,\"266\":1,\"270\":1,\"272\":4,\"286\":7,\"409\":2,\"410\":4,\"436\":3,\"449\":8,\"450\":3,\"455\":2,\"499\":9,\"504\":1,\"507\":1,\"511\":1,\"515\":1,\"521\":4,\"527\":2,\"530\":2,\"594\":2,\"595\":4,\"622\":3,\"635\":8,\"636\":3,\"641\":2,\"684\":9,\"689\":1,\"692\":1,\"696\":1,\"700\":1,\"706\":4,\"712\":2,\"715\":2,\"776\":3,\"785\":2,\"786\":4,\"822\":3,\"850\":9,\"851\":3,\"857\":2,\"907\":9,\"913\":1,\"916\":1,\"920\":1,\"924\":1,\"930\":4,\"938\":2,\"941\":2,\"950\":2,\"951\":4,\"982\":7,\"1073\":9,\"1074\":3,\"1080\":2,\"1082\":1,\"1095\":1,\"1108\":2,\"1111\":2,\"1180\":3,\"1236\":9,\"1242\":1,\"1245\":1,\"1249\":1,\"1251\":4,\"1315\":2,\"1316\":4,\"1350\":3,\"1363\":8,\"1364\":3,\"1369\":2,\"1413\":9,\"1418\":1,\"1421\":1,\"1425\":1,\"1429\":1,\"1435\":4,\"1441\":2,\"1444\":2,\"1454\":2,\"1455\":4,\"1491\":9,\"1492\":3,\"1498\":2,\"1502\":1,\"1520\":2,\"1523\":2,\"1647\":3,\"1689\":1,\"1692\":1,\"1696\":1,\"1698\":4,\"1710\":7,\"1785\":9,\"1786\":3,\"1792\":2,\"1796\":1,\"1820\":2,\"1823\":2,\"1833\":2,\"1834\":4,\"1912\":7,\"2055\":3,\"2097\":1,\"2100\":1,\"2104\":1,\"2106\":4,\"2149\":2,\"2150\":2,\"2173\":6,\"2190\":4,\"2208\":2,\"2209\":2,\"2234\":6,\"2259\":4,\"2269\":2,\"2270\":2,\"2277\":4,\"2295\":2,\"2296\":2,\"2303\":4,\"2339\":6,\"2365\":6}}],[\"instanceof\",{\"1\":{\"4\":1,\"449\":1,\"635\":1,\"1363\":1,\"1771\":1}}],[\"instanceids\",{\"1\":{\"163\":1,\"185\":1,\"365\":1,\"550\":1,\"737\":1,\"1135\":1,\"1271\":1,\"1593\":1,\"1615\":1,\"2001\":1,\"2023\":1}}],[\"instanceid\",{\"1\":{\"4\":5,\"153\":2,\"155\":2,\"156\":1,\"157\":2,\"161\":1,\"162\":1,\"184\":2,\"358\":1,\"363\":1,\"364\":1,\"543\":1,\"548\":1,\"549\":1,\"730\":1,\"735\":1,\"736\":1,\"1126\":1,\"1133\":1,\"1134\":1,\"1264\":1,\"1269\":1,\"1270\":1,\"1583\":2,\"1585\":2,\"1586\":1,\"1587\":2,\"1591\":1,\"1592\":1,\"1614\":2,\"1771\":5,\"1991\":2,\"1993\":2,\"1994\":1,\"1995\":2,\"1999\":1,\"2000\":1,\"2022\":2}}],[\"introduction\",{\"0\":{\"2381\":1,\"2393\":1,\"2401\":1,\"2407\":1}}],[\"integer\",{\"1\":{\"66\":1,\"183\":1,\"272\":1,\"286\":6,\"409\":1,\"521\":1,\"594\":1,\"706\":1,\"785\":1,\"930\":1,\"950\":1,\"982\":6,\"1251\":1,\"1315\":1,\"1435\":1,\"1454\":1,\"1613\":1,\"1698\":1,\"1710\":6,\"1833\":1,\"1912\":6,\"2021\":1,\"2106\":1}}],[\"interceptorregistry\",{\"1\":{\"423\":1,\"608\":1,\"801\":1,\"1201\":1,\"1329\":1}}],[\"interceptor\",{\"1\":{\"291\":8,\"515\":3,\"516\":3,\"700\":3,\"701\":3,\"924\":3,\"925\":3,\"987\":8,\"1095\":3,\"1096\":3,\"1429\":3,\"1430\":3,\"1715\":8,\"1917\":8}}],[\"interceptstr\",{\"1\":{\"59\":1,\"77\":1,\"83\":1,\"89\":1,\"1447\":1,\"1465\":1,\"1471\":1,\"1477\":1,\"1826\":1,\"1844\":1,\"1850\":1,\"1856\":1}}],[\"interface\",{\"1\":{\"16\":1,\"32\":1,\"40\":1,\"59\":1,\"62\":1,\"77\":1,\"83\":1,\"86\":1,\"89\":1,\"92\":1,\"233\":1,\"432\":1,\"447\":1,\"531\":1,\"618\":1,\"633\":1,\"716\":1,\"810\":1,\"825\":1,\"828\":1,\"831\":1,\"834\":1,\"848\":1,\"868\":1,\"943\":1,\"946\":1,\"964\":1,\"967\":1,\"970\":1,\"973\":1,\"1071\":1,\"1091\":1,\"1210\":1,\"1338\":1,\"1361\":1,\"1445\":1,\"1447\":1,\"1450\":1,\"1465\":1,\"1471\":1,\"1474\":1,\"1477\":1,\"1480\":1,\"1489\":1,\"1507\":1,\"1659\":1,\"1783\":1,\"1799\":1,\"1807\":1,\"1826\":1,\"1829\":1,\"1844\":1,\"1850\":1,\"1853\":1,\"1856\":1,\"1859\":1,\"2067\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"int\",{\"1\":{\"18\":1,\"217\":1,\"436\":1,\"450\":1,\"622\":1,\"636\":1,\"776\":1,\"822\":1,\"851\":1,\"1074\":1,\"1180\":1,\"1350\":1,\"1364\":1,\"1492\":1,\"1647\":1,\"1786\":1,\"2055\":1}}],[\"iframe>\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"iframeurl\",{\"1\":{\"426\":2,\"612\":2,\"804\":2,\"1204\":2,\"1332\":2}}],[\"iframe\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"iframe监听组件内设计器保存事件\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"iframeloaded\",{\"1\":{\"425\":2,\"426\":2,\"611\":2,\"612\":2,\"803\":2,\"804\":2,\"1203\":2,\"1204\":2,\"1331\":2,\"1332\":2}}],[\"iframe中访问设计器接口由\",{\"1\":{\"338\":1,\"1760\":1,\"1964\":1,\"2243\":1}}],[\"if=\",{\"1\":{\"335\":4,\"1757\":4,\"1961\":4,\"2240\":4}}],[\"if\",{\"1\":{\"3\":3,\"4\":2,\"17\":2,\"18\":1,\"19\":5,\"25\":1,\"29\":2,\"41\":3,\"64\":1,\"66\":1,\"67\":2,\"81\":2,\"93\":3,\"220\":4,\"228\":1,\"234\":3,\"286\":1,\"333\":10,\"334\":2,\"335\":11,\"409\":1,\"410\":2,\"413\":4,\"433\":3,\"441\":2,\"448\":2,\"449\":4,\"450\":1,\"455\":1,\"515\":3,\"516\":1,\"531\":3,\"594\":1,\"595\":2,\"598\":4,\"619\":3,\"627\":2,\"634\":2,\"635\":4,\"636\":1,\"641\":1,\"700\":3,\"701\":1,\"716\":3,\"785\":1,\"786\":2,\"789\":4,\"811\":3,\"829\":3,\"836\":1,\"840\":2,\"849\":2,\"850\":5,\"851\":1,\"857\":1,\"869\":3,\"924\":3,\"925\":1,\"948\":1,\"950\":1,\"951\":2,\"962\":2,\"974\":3,\"982\":1,\"1072\":2,\"1073\":5,\"1074\":1,\"1080\":1,\"1082\":2,\"1092\":3,\"1095\":3,\"1096\":1,\"1189\":4,\"1211\":3,\"1315\":1,\"1316\":2,\"1319\":4,\"1339\":3,\"1355\":2,\"1362\":2,\"1363\":4,\"1364\":1,\"1369\":1,\"1429\":3,\"1430\":1,\"1445\":3,\"1452\":1,\"1454\":1,\"1455\":2,\"1469\":2,\"1481\":3,\"1490\":2,\"1491\":5,\"1492\":1,\"1498\":1,\"1502\":2,\"1508\":3,\"1650\":4,\"1660\":3,\"1710\":1,\"1755\":10,\"1756\":2,\"1757\":11,\"1770\":3,\"1771\":2,\"1784\":2,\"1785\":5,\"1786\":1,\"1792\":1,\"1796\":2,\"1808\":3,\"1831\":1,\"1833\":1,\"1834\":2,\"1848\":2,\"1860\":3,\"1912\":1,\"1959\":10,\"1960\":2,\"1961\":11,\"2058\":4,\"2068\":3,\"2240\":11}}],[\"lf\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"label=\",{\"1\":{\"335\":21,\"1757\":21,\"1961\":21,\"2240\":21}}],[\"lazy\",{\"1\":{\"288\":2,\"984\":2,\"1712\":2,\"1914\":2}}],[\"lang=zh\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"lang=zh是否包含中文字符集\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"lang\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"language\",{\"0\":{\"436\":1,\"622\":1,\"822\":1,\"1350\":1},\"1\":{\"217\":1,\"776\":1,\"1180\":1,\"1647\":1,\"2055\":1}}],[\"ll\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"lb\",{\"1\":{\"228\":1}}],[\"le|flag|4\",{\"1\":{\"1179\":1}}],[\"leaveflow\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2190\":1,\"2231\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2336\":1,\"2362\":1}}],[\"left\",{\"1\":{\"335\":4,\"1757\":4,\"1961\":4,\"2240\":4}}],[\"length\",{\"1\":{\"333\":10,\"335\":11,\"1755\":10,\"1757\":11,\"1959\":10,\"1961\":11,\"2240\":11}}],[\"let\",{\"1\":{\"333\":5,\"335\":9,\"1755\":5,\"1757\":9,\"1959\":5,\"1961\":9,\"2240\":9}}],[\"le\",{\"1\":{\"216\":1,\"335\":2,\"775\":2,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"lt|flag|4\",{\"1\":{\"1179\":1}}],[\"lt\",{\"1\":{\"216\":1,\"335\":2,\"775\":2,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2240\":2}}],[\"lyq\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"liutao\",{\"1\":{\"316\":3,\"1008\":3,\"1739\":3,\"1942\":3}}],[\"liangli\",{\"1\":{\"314\":1,\"316\":1,\"1006\":1,\"1008\":1,\"1737\":1,\"1739\":1,\"1940\":1,\"1942\":1}}],[\"linux环境\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"linkedhashmap<>\",{\"1\":{\"422\":1,\"607\":1,\"800\":1,\"1200\":1,\"1328\":1}}],[\"linkedhashmap<string\",{\"1\":{\"422\":1,\"607\":1,\"800\":1,\"1200\":1,\"1328\":1}}],[\"link2fun\",{\"1\":{\"256\":1,\"314\":1,\"1006\":1,\"1682\":1,\"1737\":1,\"1940\":1,\"2090\":1}}],[\"link\",{\"1\":{\"19\":1,\"40\":1,\"850\":1,\"868\":1,\"1073\":1,\"1091\":1,\"1491\":1,\"1507\":1,\"1785\":1,\"1807\":1}}],[\"like|flag|4\",{\"1\":{\"1179\":1}}],[\"like\",{\"1\":{\"216\":1,\"335\":2,\"775\":2,\"1646\":1,\"1757\":2,\"1961\":2,\"2054\":1,\"2196\":2,\"2240\":2,\"2265\":2,\"2283\":2,\"2309\":2}}],[\"license\",{\"1\":{\"119\":1,\"1044\":1,\"1549\":1,\"1886\":1}}],[\"list\",{\"1\":{\"190\":1,\"191\":1,\"200\":2,\"201\":2,\"202\":2,\"287\":2,\"382\":1,\"383\":1,\"392\":2,\"393\":2,\"394\":2,\"567\":1,\"568\":1,\"577\":2,\"578\":2,\"579\":2,\"755\":1,\"756\":1,\"765\":2,\"766\":2,\"767\":2,\"983\":2,\"1153\":1,\"1154\":1,\"1163\":2,\"1164\":2,\"1165\":2,\"1288\":1,\"1289\":1,\"1298\":2,\"1299\":2,\"1300\":2,\"1620\":1,\"1621\":1,\"1630\":2,\"1631\":2,\"1632\":2,\"1711\":2,\"1913\":2,\"2028\":1,\"2029\":1,\"2038\":2,\"2039\":2,\"2040\":2}}],[\"listbytaskidandcooperatetypes\",{\"1\":{\"183\":1,\"1613\":1,\"2021\":1}}],[\"listbydefids\",{\"1\":{\"166\":1,\"740\":1,\"1138\":1,\"1596\":1,\"2004\":1}}],[\"listen\",{\"1\":{\"75\":1,\"610\":1,\"819\":1,\"959\":1,\"1347\":1,\"1463\":1,\"1842\":1,\"2121\":1}}],[\"listenerrows\",{\"1\":{\"334\":2,\"1756\":2,\"1960\":2}}],[\"listenerpath\",{\"1\":{\"334\":4,\"1756\":4,\"1960\":4}}],[\"listenerpaths\",{\"1\":{\"334\":4,\"1756\":4,\"1960\":4}}],[\"listenertypes\",{\"1\":{\"334\":4,\"1756\":4,\"1960\":4}}],[\"listenertype\",{\"1\":{\"334\":6,\"1756\":6,\"1960\":6}}],[\"listenerstrategyspel\",{\"1\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"listenerstrategy\",{\"1\":{\"86\":1,\"87\":1,\"831\":1,\"832\":1,\"967\":1,\"968\":1,\"1474\":1,\"1475\":1,\"1853\":1,\"1854\":1}}],[\"listener\",{\"1\":{\"13\":2,\"16\":5,\"17\":1,\"18\":1,\"19\":1,\"25\":1,\"265\":2,\"268\":2,\"272\":1,\"447\":6,\"448\":1,\"449\":1,\"450\":1,\"455\":1,\"506\":2,\"509\":2,\"521\":1,\"633\":6,\"634\":1,\"635\":1,\"636\":1,\"641\":1,\"691\":2,\"694\":2,\"706\":1,\"844\":2,\"848\":5,\"849\":1,\"850\":1,\"851\":1,\"857\":1,\"915\":2,\"918\":2,\"930\":1,\"1067\":2,\"1071\":5,\"1072\":1,\"1073\":1,\"1074\":1,\"1080\":1,\"1244\":2,\"1247\":2,\"1251\":1,\"1361\":6,\"1362\":1,\"1363\":1,\"1364\":1,\"1369\":1,\"1420\":2,\"1423\":2,\"1435\":1,\"1486\":2,\"1489\":5,\"1490\":1,\"1491\":1,\"1492\":1,\"1498\":1,\"1691\":2,\"1694\":2,\"1698\":1,\"1780\":2,\"1783\":5,\"1784\":1,\"1785\":1,\"1786\":1,\"1792\":1,\"2099\":2,\"2102\":2,\"2106\":1}}],[\"listenervariable监听器变量新增flowparams字段\",{\"1\":{\"311\":1,\"1003\":1,\"1734\":1,\"1937\":1}}],[\"listenervariable\",{\"1\":{\"3\":7,\"13\":1,\"16\":1,\"17\":4,\"18\":1,\"19\":5,\"24\":12,\"25\":1,\"272\":1,\"447\":1,\"448\":4,\"449\":5,\"450\":1,\"455\":1,\"521\":1,\"633\":1,\"634\":4,\"635\":5,\"636\":1,\"641\":1,\"706\":1,\"844\":1,\"848\":1,\"849\":4,\"850\":5,\"851\":1,\"856\":12,\"857\":1,\"930\":1,\"1067\":1,\"1071\":1,\"1072\":4,\"1073\":5,\"1074\":1,\"1079\":12,\"1080\":1,\"1251\":1,\"1361\":1,\"1362\":4,\"1363\":5,\"1364\":1,\"1369\":1,\"1435\":1,\"1486\":1,\"1489\":1,\"1490\":4,\"1491\":5,\"1492\":1,\"1497\":12,\"1498\":1,\"1698\":1,\"1770\":7,\"1780\":1,\"1783\":1,\"1784\":4,\"1785\":5,\"1786\":1,\"1791\":12,\"1792\":1,\"2106\":1}}],[\"list<tablefieldinfo>\",{\"1\":{\"515\":2,\"516\":1,\"700\":2,\"701\":1,\"924\":2,\"925\":1,\"1095\":2,\"1096\":1,\"1429\":2,\"1430\":1}}],[\"list<task>\",{\"1\":{\"18\":1,\"46\":1,\"450\":1,\"636\":1,\"851\":1,\"932\":1,\"1074\":1,\"1102\":1,\"1364\":1,\"1492\":1,\"1513\":1,\"1786\":1,\"1813\":1}}],[\"list<handlerselectvo>\",{\"1\":{\"233\":1,\"432\":1,\"618\":1,\"810\":1,\"1210\":1,\"1338\":1,\"1659\":1,\"2067\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"list<expressionstrategy<list<string>>>\",{\"1\":{\"92\":1,\"828\":1,\"973\":1,\"1480\":1,\"1859\":1}}],[\"list<expressionstrategy<boolean>>\",{\"1\":{\"86\":1,\"831\":1,\"967\":1,\"1474\":1,\"1853\":1}}],[\"list<nodeext>\",{\"1\":{\"32\":1,\"1799\":1}}],[\"list<user>\",{\"1\":{\"19\":1,\"449\":1,\"635\":1,\"850\":1,\"1073\":1,\"1363\":1,\"1491\":1,\"1785\":1}}],[\"list<sysuser>\",{\"1\":{\"234\":1,\"433\":1,\"619\":1,\"811\":1,\"1211\":1,\"1339\":1,\"1660\":1,\"2068\":1}}],[\"list<sysdept>\",{\"1\":{\"234\":2,\"433\":2,\"619\":2,\"811\":2,\"1211\":2,\"1339\":2,\"1660\":2,\"2068\":2}}],[\"list<sysrole>\",{\"1\":{\"17\":1,\"41\":1,\"234\":1,\"433\":1,\"448\":1,\"619\":1,\"634\":1,\"811\":1,\"849\":1,\"869\":1,\"1072\":1,\"1092\":1,\"1211\":1,\"1339\":1,\"1362\":1,\"1490\":1,\"1508\":1,\"1660\":1,\"1784\":1,\"1808\":1,\"2068\":1}}],[\"list<string>\",{\"1\":{\"17\":1,\"18\":1,\"29\":1,\"40\":1,\"41\":2,\"228\":3,\"233\":1,\"234\":1,\"432\":1,\"433\":1,\"448\":1,\"450\":1,\"515\":1,\"618\":1,\"619\":1,\"634\":1,\"636\":1,\"700\":1,\"810\":1,\"811\":1,\"849\":1,\"851\":1,\"868\":1,\"869\":2,\"924\":1,\"1072\":1,\"1074\":1,\"1082\":1,\"1091\":1,\"1092\":2,\"1095\":1,\"1210\":1,\"1211\":1,\"1338\":1,\"1339\":1,\"1362\":1,\"1364\":1,\"1429\":1,\"1490\":1,\"1492\":1,\"1502\":1,\"1507\":1,\"1508\":2,\"1659\":1,\"1660\":1,\"1784\":1,\"1786\":1,\"1796\":1,\"1807\":1,\"1808\":2,\"2067\":1,\"2068\":1,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"list<flowchart>\",{\"1\":{\"4\":1,\"1771\":1}}],[\"locker\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"location\",{\"1\":{\"75\":3,\"610\":1,\"819\":3,\"959\":3,\"1347\":3,\"1463\":3,\"1842\":3,\"2121\":1}}],[\"local\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"localcontainerentitymanagerfactorybean\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"localhost\",{\"1\":{\"75\":3,\"610\":2,\"611\":1,\"612\":1,\"819\":3,\"959\":3,\"1347\":3,\"1463\":3,\"1842\":3,\"2121\":2}}],[\"localdatetime\",{\"1\":{\"3\":1,\"1770\":1}}],[\"longvalue\",{\"1\":{\"286\":2,\"515\":2,\"516\":2,\"700\":2,\"701\":2,\"924\":2,\"925\":2,\"982\":2,\"1095\":2,\"1096\":2,\"1429\":2,\"1430\":2,\"1710\":2,\"1912\":2}}],[\"long\",{\"1\":{\"3\":2,\"4\":1,\"164\":1,\"165\":1,\"234\":3,\"286\":8,\"333\":2,\"359\":1,\"360\":1,\"366\":1,\"367\":1,\"433\":3,\"544\":1,\"545\":1,\"551\":1,\"552\":1,\"619\":3,\"731\":1,\"732\":1,\"738\":1,\"739\":1,\"811\":3,\"982\":8,\"1127\":1,\"1128\":1,\"1129\":1,\"1130\":1,\"1136\":1,\"1137\":1,\"1211\":3,\"1265\":1,\"1266\":1,\"1272\":1,\"1273\":1,\"1339\":3,\"1594\":1,\"1595\":1,\"1660\":3,\"1710\":8,\"1755\":2,\"1770\":2,\"1771\":1,\"1912\":8,\"1959\":2,\"2002\":1,\"2003\":1,\"2068\":3}}],[\"logging<\",{\"1\":{\"491\":1,\"677\":1,\"902\":1,\"1231\":1,\"1405\":1}}],[\"loggerfactory\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"24\":1,\"81\":1,\"228\":1,\"272\":1,\"441\":1,\"448\":1,\"449\":1,\"450\":1,\"521\":1,\"627\":1,\"634\":1,\"635\":1,\"636\":1,\"706\":1,\"840\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":1,\"930\":1,\"962\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":1,\"1251\":1,\"1355\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1435\":1,\"1469\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":1,\"1698\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":1,\"1848\":1,\"2106\":1}}],[\"logger\",{\"1\":{\"17\":1,\"18\":1,\"19\":1,\"24\":1,\"81\":1,\"228\":1,\"272\":1,\"441\":1,\"448\":1,\"449\":1,\"450\":1,\"521\":1,\"627\":1,\"634\":1,\"635\":1,\"636\":1,\"706\":1,\"840\":1,\"849\":1,\"850\":1,\"851\":1,\"856\":1,\"930\":1,\"962\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1079\":1,\"1251\":1,\"1355\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1435\":1,\"1469\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1497\":1,\"1698\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1791\":1,\"1848\":1,\"2106\":1}}],[\"logout\",{\"1\":{\"228\":1}}],[\"logo\",{\"1\":{\"94\":1,\"1023\":1,\"1525\":1,\"1861\":1}}],[\"login\",{\"1\":{\"228\":1}}],[\"loginuser\",{\"1\":{\"17\":1,\"66\":1,\"272\":1,\"409\":1,\"448\":1,\"521\":1,\"594\":1,\"634\":1,\"706\":1,\"785\":1,\"849\":1,\"930\":1,\"950\":1,\"1072\":1,\"1251\":1,\"1315\":1,\"1362\":1,\"1435\":1,\"1454\":1,\"1490\":1,\"1698\":1,\"1784\":1,\"1833\":1,\"2106\":1}}],[\"logicnotdeletevalue\",{\"1\":{\"459\":1,\"645\":1,\"861\":1,\"1084\":1,\"1373\":1}}],[\"logicdeletevalue\",{\"1\":{\"459\":1,\"645\":1,\"861\":1,\"1084\":1,\"1373\":1}}],[\"logic\",{\"1\":{\"30\":3,\"403\":3,\"406\":3,\"458\":2,\"460\":3,\"588\":3,\"591\":3,\"644\":2,\"646\":3,\"779\":3,\"782\":3,\"860\":2,\"862\":3,\"1083\":2,\"1085\":3,\"1183\":3,\"1186\":3,\"1309\":3,\"1312\":3,\"1372\":2,\"1374\":3,\"1503\":3,\"1797\":3,\"2193\":3,\"2262\":3,\"2280\":3,\"2306\":3}}],[\"log\",{\"1\":{\"3\":2,\"17\":3,\"18\":3,\"19\":3,\"24\":9,\"25\":1,\"81\":3,\"228\":1,\"272\":3,\"425\":1,\"441\":3,\"448\":3,\"449\":3,\"450\":3,\"455\":1,\"521\":3,\"611\":1,\"627\":3,\"634\":3,\"635\":3,\"636\":3,\"641\":1,\"706\":3,\"803\":1,\"840\":3,\"849\":3,\"850\":3,\"851\":3,\"856\":9,\"857\":1,\"930\":3,\"962\":3,\"1072\":3,\"1073\":3,\"1074\":3,\"1079\":9,\"1080\":1,\"1203\":1,\"1251\":3,\"1331\":1,\"1355\":3,\"1362\":3,\"1363\":3,\"1364\":3,\"1369\":1,\"1435\":3,\"1469\":3,\"1490\":3,\"1491\":3,\"1492\":3,\"1497\":9,\"1498\":1,\"1698\":3,\"1770\":2,\"1784\":3,\"1785\":3,\"1786\":3,\"1791\":9,\"1792\":1,\"1848\":3,\"2106\":3}}],[\"px\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"placeholder=\",{\"1\":{\"335\":6,\"1757\":6,\"1961\":6,\"2240\":6}}],[\"plain\",{\"1\":{\"333\":1,\"1755\":1,\"1959\":1}}],[\"plugin>\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"plugin<\",{\"1\":{\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"491\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1404\":1,\"1405\":1,\"2167\":1,\"2203\":2,\"2217\":2,\"2228\":1,\"2290\":2,\"2316\":2,\"2333\":1,\"2359\":1}}],[\"plugins>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"plugins<\",{\"1\":{\"2203\":2,\"2217\":2,\"2290\":2,\"2316\":2}}],[\"plugins\",{\"1\":{\"291\":4,\"987\":4,\"1715\":4,\"1917\":4}}],[\"plugin\",{\"1\":{\"73\":2,\"81\":2,\"419\":1,\"441\":2,\"604\":1,\"627\":2,\"796\":1,\"797\":1,\"817\":2,\"840\":2,\"957\":2,\"962\":2,\"1196\":1,\"1197\":1,\"1325\":1,\"1345\":2,\"1355\":2,\"1461\":2,\"1469\":2,\"1840\":2,\"1848\":2,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2174\":1,\"2203\":2,\"2217\":2,\"2220\":1,\"2235\":1,\"2290\":2,\"2316\":2,\"2319\":1,\"2340\":1,\"2345\":1,\"2366\":1}}],[\"plus优秀开源集成案例\",{\"0\":{\"2161\":1,\"2327\":1,\"2353\":1},\"1\":{\"2161\":1,\"2327\":1,\"2353\":1}}],[\"plus配置\",{\"1\":{\"458\":1,\"644\":1,\"860\":1,\"1083\":1,\"1372\":1}}],[\"plus的自带的方式实现\",{\"1\":{\"342\":1,\"1764\":1,\"1968\":1,\"2249\":1}}],[\"plus的自带方法\",{\"1\":{\"38\":1,\"462\":1,\"648\":1,\"864\":1,\"1087\":1,\"1376\":1,\"1505\":1,\"1805\":1}}],[\"plus扩展\",{\"1\":{\"318\":1,\"1010\":1,\"1741\":1,\"1944\":1}}],[\"plus扩展包\",{\"1\":{\"310\":1,\"342\":1,\"1002\":1,\"1733\":1,\"1764\":1,\"1936\":1,\"1968\":1,\"2249\":1}}],[\"plus多租户和软件删除处理\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"plus多租户和逻辑删除使用方式\",{\"1\":{\"314\":1,\"1006\":1,\"1737\":1,\"1940\":1}}],[\"plus关闭逻辑删除案例\",{\"1\":{\"306\":1,\"997\":1,\"1729\":1,\"1932\":1}}],[\"plus只支持自身的多租户方式\",{\"1\":{\"43\":1,\"514\":1,\"699\":1,\"923\":1,\"1094\":1,\"1428\":1,\"1510\":1,\"1810\":1}}],[\"plus只支持自身的逻辑删除方式\",{\"1\":{\"27\":1,\"457\":1,\"643\":1,\"859\":1,\"1082\":1,\"1371\":1,\"1500\":1,\"1794\":1}}],[\"pluspostinittableinfohandler\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"plus\",{\"0\":{\"27\":1,\"38\":1,\"43\":1,\"253\":1,\"291\":1,\"457\":1,\"462\":1,\"488\":1,\"514\":1,\"643\":1,\"648\":1,\"674\":1,\"699\":1,\"859\":1,\"864\":1,\"899\":1,\"923\":1,\"987\":1,\"1082\":1,\"1087\":1,\"1094\":1,\"1228\":1,\"1371\":1,\"1376\":1,\"1402\":1,\"1428\":1,\"1500\":1,\"1505\":1,\"1510\":1,\"1679\":1,\"1715\":1,\"1794\":1,\"1805\":1,\"1810\":1,\"1917\":1,\"2087\":1},\"1\":{\"113\":1,\"117\":1,\"118\":1,\"131\":5,\"287\":1,\"291\":5,\"458\":1,\"488\":3,\"489\":1,\"493\":1,\"644\":1,\"674\":2,\"675\":1,\"679\":1,\"860\":1,\"899\":3,\"900\":1,\"983\":1,\"987\":5,\"1042\":1,\"1047\":1,\"1061\":1,\"1083\":1,\"1228\":3,\"1229\":1,\"1372\":1,\"1402\":3,\"1403\":1,\"1407\":1,\"1544\":1,\"1547\":1,\"1548\":1,\"1561\":5,\"1711\":1,\"1715\":5,\"1880\":1,\"1884\":1,\"1885\":1,\"1898\":5,\"1913\":1,\"1917\":5,\"2115\":1,\"2126\":1,\"2132\":1,\"2143\":1,\"2167\":1,\"2175\":1,\"2188\":1,\"2228\":1,\"2236\":1,\"2257\":1,\"2275\":1,\"2301\":1,\"2333\":1,\"2341\":1,\"2359\":1,\"2367\":1}}],[\"pg适配\",{\"1\":{\"317\":1,\"1009\":1,\"1740\":1,\"1943\":1}}],[\"port\",{\"1\":{\"226\":1,\"229\":1,\"424\":1,\"428\":1,\"802\":1,\"806\":1,\"1202\":1,\"1206\":1,\"1330\":1,\"1334\":1,\"1655\":1,\"2063\":1,\"2110\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2321\":1,\"2347\":1}}],[\"postgresql\",{\"1\":{\"115\":1,\"117\":1,\"492\":1,\"678\":1,\"1046\":1,\"1406\":1,\"1547\":1,\"1882\":1,\"1884\":1}}],[\"postgresql和sql\",{\"1\":{\"113\":1,\"117\":1,\"1544\":1,\"1547\":1,\"1880\":1,\"1884\":1}}],[\"posttableinfo\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"postinittableinfohandler\",{\"1\":{\"29\":1,\"1082\":1,\"1502\":1,\"1796\":1}}],[\"persist\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"persistencecontext\",{\"1\":{\"463\":2,\"649\":2,\"865\":2,\"1088\":2,\"1377\":2}}],[\"persistence\",{\"1\":{\"403\":1,\"463\":1,\"489\":1,\"588\":1,\"649\":1,\"675\":1,\"779\":1,\"865\":1,\"900\":1,\"1088\":1,\"1183\":1,\"1229\":1,\"1309\":1,\"1377\":1,\"1403\":1,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"permitall\",{\"1\":{\"421\":1,\"606\":1,\"799\":1,\"1199\":1,\"1327\":1,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"permissionflag\",{\"1\":{\"161\":1,\"162\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"334\":10,\"363\":1,\"364\":1,\"369\":1,\"370\":1,\"371\":1,\"372\":1,\"373\":1,\"374\":1,\"375\":1,\"499\":3,\"548\":1,\"549\":1,\"554\":1,\"555\":1,\"556\":2,\"557\":2,\"558\":2,\"559\":2,\"560\":1,\"684\":3,\"735\":1,\"736\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"907\":3,\"1133\":1,\"1134\":1,\"1140\":1,\"1141\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":1,\"1146\":1,\"1216\":4,\"1236\":3,\"1269\":1,\"1270\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1413\":3,\"1591\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1756\":10,\"1960\":10,\"1999\":1,\"2000\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2173\":2,\"2190\":2,\"2234\":2,\"2259\":2,\"2277\":2,\"2303\":2,\"2339\":2,\"2365\":2}}],[\"permissions\",{\"1\":{\"40\":1,\"41\":1,\"868\":1,\"869\":1,\"1091\":1,\"1092\":1,\"1507\":1,\"1508\":1,\"1807\":1,\"1808\":1}}],[\"permissionhandler\",{\"1\":{\"40\":1,\"41\":1,\"868\":1,\"869\":1,\"1091\":1,\"1092\":1,\"1507\":1,\"1508\":1,\"1807\":1,\"1808\":1}}],[\"permissionhandler接口\",{\"0\":{\"40\":1,\"868\":1,\"1091\":1,\"1507\":1,\"1807\":1}}],[\"permission\",{\"1\":{\"18\":4,\"268\":1,\"443\":1,\"447\":2,\"450\":4,\"509\":1,\"629\":1,\"633\":2,\"636\":4,\"694\":1,\"851\":4,\"918\":1,\"1074\":4,\"1247\":1,\"1357\":1,\"1361\":2,\"1364\":4,\"1423\":1,\"1492\":4,\"1694\":1,\"1786\":4,\"2102\":1}}],[\"permissionlist\",{\"1\":{\"17\":7,\"18\":4,\"41\":4,\"448\":7,\"450\":4,\"634\":7,\"636\":4,\"849\":7,\"851\":4,\"869\":4,\"1072\":7,\"1074\":4,\"1092\":4,\"1362\":7,\"1364\":4,\"1490\":7,\"1492\":4,\"1508\":4,\"1784\":7,\"1786\":4,\"1808\":4}}],[\"perf\",{\"1\":{\"109\":1,\"309\":1,\"1000\":1,\"1038\":1,\"1540\":1,\"1732\":1,\"1876\":1,\"1935\":1}}],[\"profiles>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"profile>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"process\",{\"1\":{\"425\":2,\"803\":2,\"1203\":2,\"1331\":2}}],[\"processed\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"protected\",{\"1\":{\"421\":1,\"463\":2,\"606\":1,\"649\":2,\"799\":1,\"865\":2,\"1088\":2,\"1199\":1,\"1327\":1,\"1377\":2,\"2109\":1,\"2120\":1,\"2137\":1,\"2154\":1,\"2221\":1,\"2320\":1,\"2346\":1}}],[\"props\",{\"1\":{\"334\":2,\"335\":3,\"1756\":2,\"1757\":3,\"1960\":2,\"1961\":3,\"2240\":3}}],[\"propertysetting\",{\"1\":{\"333\":2,\"334\":2,\"335\":2,\"1755\":2,\"1756\":2,\"1757\":2,\"1959\":2,\"1960\":2,\"1961\":2,\"2240\":2}}],[\"properties\",{\"1\":{\"289\":1,\"335\":2,\"406\":1,\"591\":1,\"782\":1,\"985\":1,\"1186\":1,\"1312\":1,\"1713\":1,\"1757\":2,\"1915\":1,\"1961\":2,\"2240\":2}}],[\"provider\",{\"1\":{\"286\":2,\"403\":1,\"489\":1,\"588\":1,\"675\":1,\"779\":1,\"900\":1,\"982\":2,\"1183\":1,\"1229\":1,\"1309\":1,\"1403\":1,\"1710\":2,\"1912\":2,\"2193\":1,\"2262\":1,\"2280\":1,\"2306\":1}}],[\"proxytargetclass\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"proxy\",{\"1\":{\"75\":5,\"426\":2,\"610\":1,\"612\":2,\"804\":2,\"819\":5,\"959\":5,\"1204\":2,\"1332\":2,\"1347\":5,\"1463\":5,\"1842\":5,\"2121\":1}}],[\"predicates\",{\"1\":{\"228\":1}}],[\"prefix\",{\"1\":{\"228\":1,\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"previousnodelist\",{\"1\":{\"177\":1,\"178\":1,\"302\":1,\"1148\":2,\"1607\":1,\"1608\":1,\"1725\":1,\"1928\":1,\"2015\":1,\"2016\":1,\"2162\":1,\"2328\":1,\"2354\":1}}],[\"preeval\",{\"1\":{\"63\":2,\"835\":2,\"947\":2,\"1451\":2,\"1830\":2}}],[\"primary\",{\"0\":{\"2382\":1,\"2395\":1,\"2402\":1,\"2409\":1}}],[\"println\",{\"1\":{\"46\":1,\"496\":1,\"498\":1,\"499\":3,\"681\":1,\"683\":1,\"684\":3,\"904\":1,\"906\":1,\"907\":3,\"932\":1,\"1102\":1,\"1233\":1,\"1235\":1,\"1236\":3,\"1410\":1,\"1412\":1,\"1413\":3,\"1513\":1,\"1813\":1,\"2170\":1,\"2172\":1,\"2173\":2,\"2231\":1,\"2233\":1,\"2234\":2,\"2336\":1,\"2338\":1,\"2339\":2,\"2362\":1,\"2364\":1,\"2365\":2}}],[\"private\",{\"1\":{\"17\":1,\"18\":1,\"19\":2,\"24\":1,\"38\":1,\"81\":1,\"228\":3,\"234\":6,\"272\":1,\"286\":2,\"433\":6,\"441\":1,\"448\":1,\"449\":2,\"450\":1,\"461\":1,\"462\":1,\"464\":1,\"515\":1,\"521\":1,\"619\":6,\"627\":1,\"634\":1,\"635\":2,\"636\":1,\"647\":1,\"648\":1,\"650\":1,\"700\":1,\"706\":1,\"811\":6,\"840\":1,\"849\":1,\"850\":2,\"851\":1,\"856\":1,\"864\":1,\"866\":1,\"924\":1,\"930\":1,\"962\":1,\"982\":2,\"1072\":1,\"1073\":2,\"1074\":1,\"1079\":1,\"1087\":1,\"1089\":1,\"1095\":1,\"1211\":6,\"1251\":1,\"1339\":6,\"1355\":1,\"1362\":1,\"1363\":2,\"1364\":1,\"1375\":1,\"1376\":1,\"1378\":1,\"1429\":1,\"1435\":1,\"1469\":1,\"1490\":1,\"1491\":2,\"1492\":1,\"1497\":1,\"1505\":1,\"1660\":6,\"1698\":1,\"1710\":2,\"1784\":1,\"1785\":2,\"1786\":1,\"1791\":1,\"1805\":1,\"1848\":1,\"1912\":2,\"2068\":6,\"2106\":1}}],[\"p\",{\"1\":{\"46\":2,\"932\":2,\"1102\":2,\"1513\":2,\"1813\":2,\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"pagination\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"paginationinnerinterceptor\",{\"1\":{\"291\":10,\"987\":10,\"1715\":10,\"1917\":10}}],[\"pagenum=1\",{\"1\":{\"614\":1}}],[\"pageinfo<>\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"page\",{\"1\":{\"75\":1,\"189\":2,\"381\":2,\"566\":2,\"754\":2,\"819\":1,\"959\":1,\"1152\":2,\"1287\":2,\"1347\":1,\"1463\":1,\"1619\":2,\"1842\":1,\"2027\":2}}],[\"package\",{\"1\":{\"291\":1,\"987\":1,\"1715\":1,\"1917\":1}}],[\"pass通过\",{\"1\":{\"266\":1,\"507\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"pass审批通过\",{\"1\":{\"161\":1,\"168\":1,\"181\":1,\"269\":1,\"363\":1,\"369\":1,\"377\":1,\"510\":1,\"548\":1,\"554\":1,\"562\":1,\"695\":1,\"735\":1,\"742\":1,\"750\":1,\"919\":1,\"1133\":1,\"1140\":1,\"1148\":1,\"1248\":1,\"1269\":1,\"1275\":1,\"1283\":1,\"1424\":1,\"1591\":1,\"1598\":1,\"1611\":1,\"1695\":1,\"1999\":1,\"2006\":1,\"2019\":1,\"2103\":1}}],[\"pass\",{\"1\":{\"75\":1,\"241\":1,\"314\":1,\"476\":1,\"499\":3,\"610\":1,\"662\":1,\"684\":3,\"819\":1,\"881\":1,\"888\":1,\"907\":3,\"959\":1,\"1006\":1,\"1218\":1,\"1236\":3,\"1347\":1,\"1390\":1,\"1413\":3,\"1463\":1,\"1667\":1,\"1737\":1,\"1842\":1,\"1940\":1,\"2075\":1,\"2121\":1,\"2173\":2,\"2190\":2,\"2234\":2,\"2259\":2,\"2277\":2,\"2303\":2,\"2339\":2,\"2365\":2}}],[\"parsedatetostr\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"parseexpression\",{\"1\":{\"87\":1,\"832\":1,\"968\":1,\"1475\":1,\"1854\":1}}],[\"parseobject\",{\"1\":{\"25\":1,\"455\":1,\"641\":1,\"857\":1,\"1080\":1,\"1369\":1,\"1498\":1,\"1792\":1}}],[\"param\",{\"1\":{\"3\":1,\"4\":1,\"17\":1,\"19\":1,\"24\":4,\"25\":1,\"56\":1,\"59\":3,\"63\":6,\"77\":3,\"81\":2,\"83\":3,\"89\":3,\"217\":2,\"233\":1,\"234\":4,\"432\":1,\"433\":4,\"436\":2,\"441\":2,\"448\":1,\"449\":1,\"455\":1,\"515\":2,\"516\":1,\"530\":1,\"531\":2,\"618\":1,\"619\":4,\"622\":2,\"627\":2,\"634\":1,\"635\":1,\"641\":1,\"700\":2,\"701\":1,\"715\":1,\"716\":2,\"776\":2,\"810\":1,\"811\":4,\"822\":2,\"825\":3,\"835\":6,\"840\":2,\"849\":1,\"850\":1,\"856\":4,\"857\":1,\"924\":2,\"925\":1,\"941\":1,\"943\":3,\"947\":6,\"962\":2,\"964\":3,\"970\":3,\"1072\":1,\"1073\":1,\"1079\":4,\"1080\":1,\"1095\":2,\"1096\":1,\"1111\":1,\"1180\":2,\"1210\":1,\"1211\":4,\"1338\":1,\"1339\":4,\"1350\":2,\"1355\":2,\"1362\":1,\"1363\":1,\"1369\":1,\"1429\":2,\"1430\":1,\"1444\":1,\"1445\":2,\"1447\":3,\"1451\":6,\"1465\":3,\"1469\":2,\"1471\":3,\"1477\":3,\"1490\":1,\"1491\":1,\"1497\":4,\"1498\":1,\"1523\":1,\"1647\":2,\"1659\":1,\"1660\":4,\"1770\":1,\"1771\":1,\"1784\":1,\"1785\":1,\"1791\":4,\"1792\":1,\"1823\":1,\"1826\":3,\"1830\":6,\"1844\":3,\"1848\":2,\"1850\":3,\"1856\":3,\"2055\":2,\"2067\":1,\"2068\":4,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2226\":1,\"2325\":1,\"2351\":1}}],[\"pathrewrite\",{\"1\":{\"611\":1,\"612\":1}}],[\"path改为form\",{\"1\":{\"314\":1,\"342\":1,\"1006\":1,\"1737\":1,\"1764\":1,\"1940\":1,\"1968\":1,\"2249\":1}}],[\"path=\",{\"1\":{\"228\":1}}],[\"path\",{\"1\":{\"13\":1,\"265\":2,\"266\":1,\"268\":3,\"270\":1,\"314\":1,\"342\":1,\"403\":2,\"406\":2,\"416\":1,\"425\":1,\"426\":1,\"496\":2,\"506\":2,\"507\":1,\"509\":3,\"511\":1,\"518\":1,\"588\":2,\"591\":2,\"601\":1,\"611\":1,\"612\":1,\"681\":2,\"691\":2,\"692\":1,\"694\":3,\"696\":1,\"703\":1,\"779\":2,\"782\":2,\"792\":1,\"803\":1,\"804\":1,\"844\":1,\"904\":2,\"915\":2,\"916\":1,\"918\":3,\"920\":1,\"927\":1,\"1006\":1,\"1067\":1,\"1098\":1,\"1183\":2,\"1186\":2,\"1192\":1,\"1203\":1,\"1204\":1,\"1233\":2,\"1244\":2,\"1245\":1,\"1247\":3,\"1249\":1,\"1309\":2,\"1312\":2,\"1322\":1,\"1331\":1,\"1332\":1,\"1410\":2,\"1420\":2,\"1421\":1,\"1423\":3,\"1425\":1,\"1432\":1,\"1486\":1,\"1691\":2,\"1692\":1,\"1694\":3,\"1696\":1,\"1737\":1,\"1764\":1,\"1780\":1,\"1940\":1,\"1968\":1,\"2099\":2,\"2100\":1,\"2102\":3,\"2104\":1,\"2170\":2,\"2193\":2,\"2231\":2,\"2249\":1,\"2262\":2,\"2280\":2,\"2306\":2,\"2336\":2,\"2362\":2}}],[\"path字段\",{\"1\":{\"13\":1,\"342\":1,\"844\":1,\"1067\":1,\"1486\":1,\"1764\":1,\"1780\":1,\"1968\":1,\"2249\":1}}],[\"pathvariable\",{\"1\":{\"4\":1,\"333\":2,\"1755\":2,\"1771\":1,\"1959\":2}}],[\"pushtime\",{\"1\":{\"280\":1,\"975\":1,\"1703\":1,\"1905\":1}}],[\"publish\",{\"1\":{\"147\":1,\"265\":1,\"355\":1,\"497\":2,\"506\":1,\"540\":1,\"682\":2,\"691\":1,\"727\":1,\"905\":2,\"915\":1,\"1123\":1,\"1234\":2,\"1244\":1,\"1261\":1,\"1411\":2,\"1420\":1,\"1577\":1,\"1691\":1,\"1985\":1,\"2099\":1,\"2171\":2,\"2190\":2,\"2232\":2,\"2259\":2,\"2277\":2,\"2303\":2,\"2337\":2,\"2363\":2}}],[\"publishstatus\",{\"1\":{\"145\":2,\"1575\":2,\"1983\":2}}],[\"public\",{\"1\":{\"3\":1,\"4\":1,\"16\":1,\"17\":2,\"18\":2,\"19\":2,\"24\":5,\"25\":1,\"29\":2,\"32\":1,\"40\":1,\"41\":3,\"46\":2,\"56\":2,\"59\":1,\"62\":1,\"63\":4,\"64\":3,\"66\":1,\"77\":1,\"81\":3,\"83\":1,\"86\":1,\"87\":3,\"89\":1,\"92\":1,\"93\":3,\"217\":3,\"220\":4,\"228\":5,\"233\":1,\"234\":3,\"272\":3,\"286\":7,\"291\":5,\"333\":4,\"404\":5,\"407\":3,\"409\":1,\"413\":4,\"417\":2,\"422\":2,\"423\":2,\"428\":2,\"432\":1,\"433\":3,\"436\":3,\"441\":3,\"447\":1,\"448\":2,\"449\":2,\"450\":2,\"455\":1,\"496\":1,\"497\":1,\"498\":1,\"499\":2,\"515\":7,\"516\":8,\"519\":2,\"520\":2,\"521\":3,\"530\":2,\"531\":4,\"589\":5,\"592\":3,\"594\":1,\"598\":4,\"602\":2,\"607\":2,\"608\":2,\"614\":2,\"618\":1,\"619\":3,\"622\":3,\"627\":3,\"633\":1,\"634\":2,\"635\":2,\"636\":2,\"641\":1,\"681\":1,\"682\":1,\"683\":1,\"684\":2,\"700\":7,\"701\":8,\"704\":2,\"705\":2,\"706\":3,\"715\":2,\"716\":4,\"776\":3,\"780\":5,\"783\":3,\"785\":1,\"789\":4,\"793\":2,\"800\":2,\"801\":2,\"806\":2,\"810\":1,\"811\":3,\"822\":3,\"825\":1,\"828\":1,\"829\":3,\"831\":1,\"832\":3,\"834\":1,\"835\":4,\"836\":3,\"840\":3,\"848\":1,\"849\":2,\"850\":2,\"851\":2,\"856\":5,\"857\":1,\"868\":1,\"869\":3,\"904\":1,\"905\":1,\"906\":1,\"907\":2,\"924\":7,\"925\":8,\"928\":2,\"929\":2,\"930\":3,\"932\":2,\"941\":2,\"943\":1,\"946\":1,\"947\":4,\"948\":3,\"950\":1,\"962\":3,\"964\":1,\"967\":1,\"968\":3,\"970\":1,\"973\":1,\"974\":3,\"982\":7,\"987\":5,\"1071\":1,\"1072\":2,\"1073\":2,\"1074\":2,\"1079\":5,\"1080\":1,\"1082\":2,\"1091\":1,\"1092\":3,\"1095\":7,\"1096\":8,\"1099\":2,\"1100\":2,\"1102\":2,\"1111\":2,\"1180\":3,\"1184\":5,\"1187\":3,\"1189\":4,\"1193\":2,\"1200\":2,\"1201\":2,\"1206\":2,\"1210\":1,\"1211\":3,\"1216\":4,\"1233\":1,\"1234\":1,\"1235\":1,\"1236\":2,\"1251\":3,\"1310\":5,\"1313\":3,\"1315\":1,\"1319\":4,\"1323\":2,\"1328\":2,\"1329\":2,\"1334\":2,\"1338\":1,\"1339\":3,\"1350\":3,\"1355\":3,\"1361\":1,\"1362\":2,\"1363\":2,\"1364\":2,\"1369\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":2,\"1429\":7,\"1430\":8,\"1433\":2,\"1434\":2,\"1435\":3,\"1444\":2,\"1445\":4,\"1447\":1,\"1450\":1,\"1451\":4,\"1452\":3,\"1454\":1,\"1465\":1,\"1469\":3,\"1471\":1,\"1474\":1,\"1475\":3,\"1477\":1,\"1480\":1,\"1481\":3,\"1489\":1,\"1490\":2,\"1491\":2,\"1492\":2,\"1497\":5,\"1498\":1,\"1502\":2,\"1507\":1,\"1508\":3,\"1513\":2,\"1523\":2,\"1647\":3,\"1650\":4,\"1659\":1,\"1660\":3,\"1698\":3,\"1710\":7,\"1715\":5,\"1755\":4,\"1770\":1,\"1771\":1,\"1783\":1,\"1784\":2,\"1785\":2,\"1786\":2,\"1791\":5,\"1792\":1,\"1796\":2,\"1799\":1,\"1807\":1,\"1808\":3,\"1813\":2,\"1823\":2,\"1826\":1,\"1829\":1,\"1830\":4,\"1831\":3,\"1833\":1,\"1844\":1,\"1848\":3,\"1850\":1,\"1853\":1,\"1854\":3,\"1856\":1,\"1859\":1,\"1860\":3,\"1912\":7,\"1917\":5,\"1959\":4,\"2055\":3,\"2058\":4,\"2067\":1,\"2068\":3,\"2106\":3,\"2114\":1,\"2125\":1,\"2142\":1,\"2159\":1,\"2170\":1,\"2171\":1,\"2172\":1,\"2173\":2,\"2190\":6,\"2193\":3,\"2226\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":2,\"2259\":6,\"2262\":3,\"2277\":6,\"2280\":3,\"2303\":6,\"2306\":3,\"2325\":1,\"2336\":1,\"2337\":1,\"2338\":1,\"2339\":2,\"2351\":1,\"2362\":1,\"2363\":1,\"2364\":1,\"2365\":2}}],[\"put\",{\"1\":{\"3\":2,\"46\":5,\"53\":1,\"56\":1,\"62\":1,\"217\":1,\"272\":2,\"422\":1,\"436\":1,\"521\":2,\"527\":1,\"530\":1,\"607\":2,\"622\":1,\"706\":2,\"712\":1,\"715\":1,\"776\":1,\"800\":2,\"822\":1,\"834\":1,\"930\":2,\"932\":5,\"938\":1,\"941\":1,\"946\":1,\"1102\":5,\"1108\":1,\"1111\":1,\"1180\":1,\"1200\":2,\"1251\":2,\"1328\":2,\"1350\":1,\"1435\":2,\"1441\":1,\"1444\":1,\"1450\":1,\"1513\":5,\"1520\":1,\"1523\":1,\"1647\":1,\"1698\":2,\"1770\":2,\"1813\":5,\"1820\":1,\"1823\":1,\"1829\":1,\"2055\":1,\"2106\":2,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"1增量sql\",{\"1\":{\"316\":1,\"1008\":1,\"1739\":1,\"1942\":1}}],[\"1l\",{\"1\":{\"291\":1,\"463\":1,\"649\":1,\"865\":1,\"987\":1,\"1088\":1,\"1377\":1,\"1715\":1,\"1917\":1}}],[\"1<\",{\"1\":{\"291\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"987\":1,\"1715\":1,\"1917\":1,\"2108\":1,\"2136\":1,\"2153\":1,\"2203\":1,\"2217\":1,\"2220\":1,\"2290\":1,\"2316\":1,\"2319\":1,\"2345\":1}}],[\"1待办任务的审批人权限\",{\"1\":{\"271\":1,\"512\":1,\"697\":1,\"921\":1,\"1250\":1,\"1426\":1,\"1697\":1,\"2105\":1}}],[\"19位\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"19\",{\"0\":{\"398\":1,\"583\":1,\"771\":1,\"1169\":1,\"1304\":1},\"1\":{\"266\":1,\"268\":1,\"507\":1,\"509\":1,\"692\":1,\"694\":1,\"916\":1,\"918\":1,\"1245\":1,\"1247\":1,\"1421\":1,\"1423\":1,\"1692\":1,\"1694\":1,\"2100\":1,\"2102\":1}}],[\"1839683148936663047\",{\"1\":{\"614\":3}}],[\"18\",{\"0\":{\"397\":1,\"582\":1,\"770\":1,\"1168\":1,\"1303\":1},\"1\":{\"266\":1,\"268\":1,\"335\":1,\"507\":1,\"509\":1,\"692\":1,\"694\":1,\"916\":1,\"918\":1,\"1245\":1,\"1247\":1,\"1421\":1,\"1423\":1,\"1692\":1,\"1694\":1,\"1757\":1,\"1961\":1,\"2100\":1,\"2102\":1,\"2240\":1}}],[\"1审批中\",{\"1\":{\"266\":1,\"267\":1,\"507\":1,\"508\":1,\"692\":1,\"693\":1,\"916\":1,\"917\":1,\"1245\":1,\"1246\":1,\"1421\":1,\"1422\":1,\"1692\":1,\"1693\":1,\"2100\":1,\"2101\":1}}],[\"1审批\",{\"1\":{\"266\":1,\"507\":1,\"560\":1,\"692\":1,\"916\":1,\"1245\":1,\"1421\":1,\"1692\":1,\"2100\":1}}],[\"1中间节点\",{\"1\":{\"266\":1,\"267\":1,\"268\":1,\"269\":2,\"270\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":2,\"511\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":2,\"696\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":2,\"920\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":2,\"1249\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":2,\"1425\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":2,\"1696\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":2,\"2104\":1}}],[\"1激活\",{\"1\":{\"265\":1,\"267\":1,\"506\":1,\"508\":1,\"691\":1,\"693\":1,\"915\":1,\"917\":1,\"1244\":1,\"1246\":1,\"1420\":1,\"1422\":1,\"1691\":1,\"1693\":1,\"2099\":1,\"2101\":1}}],[\"1已发布\",{\"1\":{\"265\":1,\"506\":1,\"691\":1,\"915\":1,\"1244\":1,\"1420\":1,\"1691\":1,\"2099\":1}}],[\"14位\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"14\",{\"0\":{\"314\":1,\"393\":1,\"578\":1,\"732\":1,\"766\":1,\"1006\":1,\"1128\":1,\"1164\":1,\"1299\":1,\"1737\":1,\"1940\":1,\"2249\":1},\"1\":{\"240\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"332\":1,\"482\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"668\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"887\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"1217\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1396\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1666\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1958\":1,\"2074\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1}}],[\"13\",{\"0\":{\"317\":1,\"392\":1,\"577\":1,\"731\":1,\"765\":1,\"1009\":1,\"1127\":1,\"1163\":1,\"1298\":1,\"1740\":1,\"1943\":1,\"2252\":1},\"1\":{\"240\":2,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"482\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"668\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"887\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"1217\":2,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1396\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1666\":2,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"2074\":2,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1}}],[\"1节点设置\",{\"0\":{\"125\":1,\"469\":1,\"655\":1,\"874\":1,\"1055\":1,\"1383\":1,\"1555\":1,\"1892\":1}}],[\"16\",{\"0\":{\"395\":1,\"580\":1,\"768\":1,\"1130\":1,\"1166\":1,\"1301\":1},\"1\":{\"75\":1,\"133\":1,\"266\":1,\"268\":1,\"507\":1,\"509\":1,\"692\":1,\"694\":1,\"819\":1,\"916\":1,\"918\":1,\"959\":1,\"1063\":1,\"1245\":1,\"1247\":1,\"1347\":1,\"1421\":1,\"1423\":1,\"1463\":1,\"1563\":1,\"1692\":1,\"1694\":1,\"1842\":1,\"1900\":1,\"2100\":1,\"2102\":1}}],[\"15位雪花算法支持\",{\"1\":{\"313\":1,\"1005\":1,\"1736\":1,\"1939\":1}}],[\"15位\",{\"1\":{\"286\":1,\"403\":1,\"588\":1,\"779\":1,\"982\":1,\"1183\":1,\"1309\":1,\"1710\":1,\"1912\":1}}],[\"15\",{\"0\":{\"394\":1,\"579\":1,\"767\":1,\"1129\":1,\"1165\":1,\"1300\":1},\"1\":{\"46\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"932\":1,\"1102\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1513\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1813\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1}}],[\"157\",{\"1\":{\"7\":1,\"1774\":1}}],[\"10失效\",{\"1\":{\"266\":1,\"267\":1,\"507\":1,\"508\":1,\"692\":1,\"693\":1,\"916\":1,\"917\":1,\"1245\":1,\"1246\":1,\"1421\":1,\"1422\":1,\"1692\":1,\"1693\":1,\"2100\":1,\"2101\":1}}],[\"101\",{\"1\":{\"56\":1,\"530\":1,\"715\":1,\"941\":1,\"1111\":1,\"1444\":1,\"1523\":1,\"1823\":1}}],[\"100vh\",{\"1\":{\"426\":1,\"612\":1,\"804\":1,\"1204\":1,\"1332\":1}}],[\"100\",{\"1\":{\"53\":1,\"133\":4,\"265\":3,\"266\":5,\"267\":1,\"268\":7,\"269\":4,\"270\":3,\"425\":2,\"426\":3,\"506\":3,\"507\":5,\"508\":1,\"509\":7,\"510\":4,\"511\":3,\"527\":1,\"611\":2,\"612\":3,\"691\":3,\"692\":5,\"693\":1,\"694\":7,\"695\":4,\"696\":3,\"712\":1,\"803\":2,\"804\":3,\"915\":3,\"916\":5,\"917\":1,\"918\":7,\"919\":4,\"920\":3,\"938\":1,\"1063\":3,\"1108\":1,\"1203\":2,\"1204\":3,\"1244\":3,\"1245\":5,\"1246\":1,\"1247\":7,\"1248\":4,\"1249\":3,\"1331\":2,\"1332\":3,\"1420\":3,\"1421\":5,\"1422\":1,\"1423\":7,\"1424\":4,\"1425\":3,\"1441\":1,\"1520\":1,\"1563\":4,\"1691\":3,\"1692\":5,\"1693\":1,\"1694\":7,\"1695\":4,\"1696\":3,\"1820\":1,\"1900\":4,\"2099\":3,\"2100\":5,\"2101\":1,\"2102\":7,\"2103\":4,\"2104\":3,\"2149\":1,\"2150\":1,\"2208\":1,\"2209\":1,\"2269\":1,\"2270\":1,\"2295\":1,\"2296\":1}}],[\"100l\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1,\"2150\":2,\"2209\":2,\"2270\":2,\"2296\":2}}],[\"102l\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"10\",{\"0\":{\"310\":1,\"358\":1,\"389\":1,\"543\":1,\"574\":1,\"684\":1,\"728\":1,\"762\":1,\"1001\":1,\"1002\":1,\"1124\":1,\"1160\":1,\"1264\":1,\"1295\":1,\"1733\":1,\"1936\":1,\"2244\":1,\"2245\":1},\"1\":{\"46\":1,\"133\":2,\"216\":1,\"240\":1,\"265\":1,\"266\":2,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"435\":1,\"482\":1,\"506\":1,\"507\":2,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"621\":1,\"668\":1,\"691\":1,\"692\":2,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"775\":1,\"821\":1,\"887\":1,\"915\":1,\"916\":2,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"932\":1,\"1063\":2,\"1102\":1,\"1179\":1,\"1217\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1349\":1,\"1396\":1,\"1420\":1,\"1421\":2,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1513\":1,\"1563\":2,\"1646\":1,\"1666\":1,\"1691\":1,\"1692\":2,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1813\":1,\"1900\":2,\"2054\":1,\"2074\":1,\"2099\":1,\"2100\":2,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"17\",{\"0\":{\"321\":1,\"396\":1,\"581\":1,\"769\":1,\"1013\":1,\"1167\":1,\"1302\":1,\"1744\":1,\"1947\":1},\"1\":{\"24\":1,\"266\":1,\"268\":1,\"287\":2,\"507\":1,\"509\":1,\"692\":1,\"694\":1,\"856\":1,\"916\":1,\"918\":1,\"983\":2,\"1079\":1,\"1245\":1,\"1247\":1,\"1421\":1,\"1423\":1,\"1497\":1,\"1692\":1,\"1694\":1,\"1711\":2,\"1791\":1,\"1913\":2,\"2100\":1,\"2102\":1}}],[\"11\",{\"0\":{\"307\":1,\"308\":1,\"309\":1,\"359\":1,\"390\":1,\"544\":1,\"575\":1,\"685\":1,\"686\":1,\"687\":1,\"729\":1,\"763\":1,\"998\":1,\"999\":1,\"1000\":1,\"1125\":1,\"1161\":1,\"1265\":1,\"1296\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1933\":1,\"1934\":1,\"1935\":1,\"2241\":1,\"2242\":1,\"2243\":1},\"1\":{\"24\":1,\"133\":2,\"216\":1,\"240\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"287\":1,\"332\":1,\"482\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"668\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"856\":1,\"887\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"983\":1,\"1063\":2,\"1079\":1,\"1179\":1,\"1217\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1396\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1497\":1,\"1563\":2,\"1646\":1,\"1666\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1711\":1,\"1791\":1,\"1900\":2,\"1913\":1,\"1958\":1,\"2054\":1,\"2074\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1}}],[\"1232001396254052352l\",{\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"1232001238795685888l\",{\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"1219285650587652096l\",{\"1\":{\"2190\":1,\"2259\":1,\"2277\":1,\"2303\":1}}],[\"1219286332145274880l\",{\"1\":{\"499\":2,\"684\":2,\"907\":2,\"1236\":2,\"1413\":2,\"2173\":1,\"2190\":1,\"2234\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2339\":1,\"2365\":1}}],[\"1219286332141080576l\",{\"1\":{\"499\":1,\"684\":1,\"907\":1,\"1236\":1,\"1413\":1,\"2173\":1,\"2234\":1,\"2339\":1,\"2365\":1}}],[\"1212437969554771968l\",{\"1\":{\"497\":1,\"682\":1,\"905\":1,\"1234\":1,\"1411\":1,\"2171\":1,\"2232\":1,\"2337\":1,\"2363\":1}}],[\"12l\",{\"1\":{\"46\":1,\"932\":1,\"1102\":1,\"1513\":1,\"1813\":1}}],[\"12\",{\"0\":{\"304\":1,\"305\":1,\"306\":1,\"308\":1,\"329\":1,\"330\":1,\"360\":1,\"391\":1,\"545\":1,\"576\":1,\"730\":1,\"764\":1,\"997\":1,\"999\":1,\"1021\":1,\"1022\":1,\"1126\":1,\"1162\":1,\"1266\":1,\"1297\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1731\":1,\"1752\":1,\"1753\":1,\"1930\":1,\"1931\":1,\"1932\":1,\"1934\":1,\"1955\":1,\"1956\":1,\"2240\":1,\"2242\":1},\"1\":{\"4\":3,\"240\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"482\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"668\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"887\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"1217\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1396\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1666\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1771\":3,\"2074\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1}}],[\"1\",{\"0\":{\"2\":1,\"3\":2,\"4\":1,\"5\":1,\"7\":1,\"10\":1,\"16\":1,\"22\":1,\"23\":1,\"27\":1,\"28\":2,\"29\":1,\"32\":1,\"38\":1,\"40\":1,\"43\":1,\"46\":1,\"59\":1,\"62\":1,\"66\":1,\"70\":1,\"73\":1,\"77\":1,\"83\":1,\"86\":1,\"89\":1,\"92\":1,\"113\":1,\"123\":1,\"210\":1,\"212\":1,\"216\":1,\"220\":1,\"223\":1,\"225\":1,\"228\":1,\"231\":1,\"233\":1,\"237\":1,\"241\":1,\"248\":1,\"251\":1,\"260\":1,\"263\":2,\"264\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"276\":1,\"286\":1,\"309\":1,\"316\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":2,\"326\":1,\"338\":1,\"343\":1,\"345\":1,\"347\":1,\"348\":2,\"349\":2,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"362\":1,\"369\":1,\"377\":1,\"379\":1,\"402\":1,\"403\":2,\"404\":1,\"406\":1,\"407\":1,\"409\":1,\"413\":1,\"415\":1,\"419\":1,\"421\":1,\"430\":1,\"432\":1,\"435\":1,\"443\":1,\"447\":1,\"453\":1,\"454\":1,\"457\":1,\"458\":2,\"459\":1,\"462\":1,\"467\":1,\"476\":1,\"484\":1,\"487\":1,\"496\":1,\"501\":1,\"514\":1,\"515\":2,\"516\":1,\"518\":1,\"523\":1,\"533\":1,\"534\":2,\"535\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"540\":1,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"547\":1,\"554\":1,\"562\":1,\"564\":1,\"587\":1,\"588\":2,\"589\":1,\"591\":1,\"592\":1,\"594\":1,\"598\":1,\"600\":1,\"604\":1,\"606\":1,\"610\":1,\"616\":1,\"618\":1,\"621\":1,\"629\":1,\"633\":1,\"639\":1,\"640\":1,\"643\":1,\"644\":2,\"645\":1,\"648\":1,\"653\":1,\"662\":1,\"670\":1,\"673\":1,\"686\":1,\"699\":1,\"700\":2,\"701\":1,\"703\":1,\"708\":1,\"718\":1,\"719\":2,\"720\":1,\"721\":1,\"722\":1,\"723\":1,\"724\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"734\":1,\"742\":1,\"750\":1,\"752\":1,\"775\":1,\"778\":1,\"779\":2,\"780\":1,\"782\":1,\"783\":1,\"785\":1,\"789\":1,\"791\":1,\"795\":1,\"799\":1,\"808\":1,\"810\":1,\"814\":1,\"817\":1,\"821\":1,\"825\":1,\"828\":1,\"831\":1,\"834\":1,\"842\":1,\"848\":1,\"854\":1,\"855\":1,\"859\":1,\"860\":2,\"861\":1,\"864\":1,\"868\":1,\"872\":1,\"881\":1,\"888\":1,\"895\":1,\"898\":1,\"904\":1,\"910\":1,\"923\":1,\"924\":2,\"925\":1,\"927\":1,\"932\":1,\"943\":1,\"946\":1,\"950\":1,\"954\":1,\"957\":1,\"964\":1,\"967\":1,\"970\":1,\"973\":1,\"982\":1,\"1000\":1,\"1008\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1017\":2,\"1018\":1,\"1042\":1,\"1053\":1,\"1065\":1,\"1071\":1,\"1077\":1,\"1078\":1,\"1082\":1,\"1083\":2,\"1084\":1,\"1087\":1,\"1091\":1,\"1094\":1,\"1095\":2,\"1096\":1,\"1098\":1,\"1102\":1,\"1114\":1,\"1115\":2,\"1116\":1,\"1117\":1,\"1118\":1,\"1119\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1125\":1,\"1126\":1,\"1127\":1,\"1128\":1,\"1129\":1,\"1130\":1,\"1132\":1,\"1140\":1,\"1148\":1,\"1150\":1,\"1173\":1,\"1175\":1,\"1179\":1,\"1182\":1,\"1183\":2,\"1184\":1,\"1186\":1,\"1187\":1,\"1189\":1,\"1191\":1,\"1195\":1,\"1199\":1,\"1208\":1,\"1210\":1,\"1214\":1,\"1218\":1,\"1224\":1,\"1227\":1,\"1233\":1,\"1239\":1,\"1242\":2,\"1243\":1,\"1244\":2,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1253\":1,\"1254\":2,\"1255\":2,\"1256\":1,\"1257\":1,\"1258\":1,\"1259\":1,\"1260\":1,\"1261\":1,\"1262\":1,\"1263\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1268\":1,\"1275\":1,\"1283\":1,\"1285\":1,\"1308\":1,\"1309\":2,\"1310\":1,\"1312\":1,\"1313\":1,\"1315\":1,\"1319\":1,\"1321\":1,\"1325\":1,\"1327\":1,\"1336\":1,\"1338\":1,\"1342\":1,\"1345\":1,\"1349\":1,\"1357\":1,\"1361\":1,\"1367\":1,\"1368\":1,\"1371\":1,\"1372\":2,\"1373\":1,\"1376\":1,\"1381\":1,\"1390\":1,\"1398\":1,\"1401\":1,\"1410\":1,\"1415\":1,\"1428\":1,\"1429\":2,\"1430\":1,\"1432\":1,\"1437\":1,\"1447\":1,\"1450\":1,\"1454\":1,\"1458\":1,\"1461\":1,\"1465\":1,\"1471\":1,\"1474\":1,\"1477\":1,\"1480\":1,\"1483\":1,\"1489\":1,\"1495\":1,\"1496\":1,\"1500\":1,\"1501\":2,\"1502\":1,\"1505\":1,\"1507\":1,\"1510\":1,\"1513\":1,\"1544\":1,\"1553\":1,\"1640\":1,\"1642\":1,\"1646\":1,\"1650\":1,\"1653\":1,\"1657\":1,\"1659\":1,\"1663\":1,\"1667\":1,\"1674\":1,\"1677\":1,\"1686\":1,\"1689\":2,\"1690\":1,\"1691\":2,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1700\":1,\"1710\":1,\"1732\":1,\"1739\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":2,\"1749\":1,\"1760\":1,\"1765\":1,\"1767\":1,\"1769\":1,\"1770\":2,\"1771\":1,\"1772\":1,\"1774\":1,\"1777\":1,\"1783\":1,\"1789\":1,\"1790\":1,\"1794\":1,\"1795\":2,\"1796\":1,\"1799\":1,\"1805\":1,\"1807\":1,\"1810\":1,\"1813\":1,\"1826\":1,\"1829\":1,\"1833\":1,\"1837\":1,\"1840\":1,\"1844\":1,\"1850\":1,\"1853\":1,\"1856\":1,\"1859\":1,\"1880\":1,\"1890\":1,\"1902\":1,\"1912\":1,\"1935\":1,\"1942\":1,\"1944\":1,\"1945\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1949\":1,\"1950\":1,\"1951\":2,\"1952\":1,\"1964\":1,\"1969\":1,\"1971\":1,\"2048\":1,\"2050\":1,\"2054\":1,\"2058\":1,\"2061\":1,\"2065\":1,\"2067\":1,\"2071\":1,\"2075\":1,\"2082\":1,\"2085\":1,\"2094\":1,\"2097\":2,\"2098\":1,\"2099\":2,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2108\":1,\"2112\":1,\"2114\":1,\"2119\":1,\"2123\":1,\"2125\":1,\"2130\":1,\"2136\":1,\"2140\":1,\"2142\":1,\"2153\":1,\"2157\":1,\"2159\":1,\"2168\":1,\"2170\":1,\"2198\":1,\"2200\":1,\"2212\":1,\"2214\":1,\"2220\":1,\"2224\":1,\"2226\":1,\"2229\":1,\"2231\":1,\"2243\":1,\"2251\":1,\"2253\":1,\"2285\":1,\"2287\":1,\"2311\":1,\"2313\":1,\"2319\":1,\"2323\":1,\"2325\":1,\"2334\":1,\"2336\":1,\"2345\":1,\"2349\":1,\"2351\":1,\"2360\":1,\"2362\":1,\"2385\":1},\"1\":{\"27\":1,\"35\":2,\"46\":3,\"47\":1,\"48\":1,\"49\":1,\"59\":1,\"75\":2,\"77\":1,\"83\":1,\"89\":1,\"101\":1,\"102\":1,\"133\":2,\"216\":1,\"217\":2,\"226\":1,\"240\":1,\"241\":5,\"242\":5,\"246\":1,\"262\":1,\"263\":1,\"265\":6,\"266\":5,\"267\":5,\"268\":4,\"269\":4,\"270\":4,\"271\":3,\"291\":2,\"314\":1,\"332\":2,\"333\":10,\"335\":11,\"408\":1,\"412\":1,\"418\":1,\"424\":1,\"435\":1,\"436\":1,\"437\":1,\"440\":1,\"442\":1,\"447\":1,\"457\":2,\"476\":5,\"477\":5,\"481\":1,\"482\":1,\"483\":1,\"498\":1,\"499\":3,\"503\":1,\"504\":1,\"506\":6,\"507\":5,\"508\":5,\"509\":4,\"510\":4,\"511\":4,\"512\":3,\"514\":1,\"521\":1,\"523\":1,\"524\":1,\"593\":1,\"597\":1,\"603\":1,\"609\":1,\"621\":1,\"622\":1,\"623\":1,\"626\":1,\"628\":1,\"633\":1,\"643\":2,\"662\":5,\"663\":5,\"667\":1,\"668\":1,\"669\":1,\"683\":1,\"684\":3,\"688\":1,\"689\":1,\"691\":6,\"692\":5,\"693\":5,\"694\":4,\"695\":4,\"696\":4,\"697\":3,\"699\":1,\"706\":1,\"708\":1,\"709\":1,\"775\":1,\"776\":2,\"784\":1,\"788\":1,\"794\":1,\"802\":1,\"813\":1,\"819\":2,\"821\":1,\"822\":1,\"823\":1,\"825\":1,\"839\":1,\"859\":2,\"863\":1,\"867\":1,\"881\":5,\"882\":5,\"886\":1,\"887\":1,\"888\":5,\"889\":5,\"893\":1,\"894\":1,\"906\":1,\"907\":3,\"912\":1,\"913\":1,\"915\":6,\"916\":5,\"917\":5,\"918\":4,\"919\":4,\"920\":4,\"921\":3,\"923\":1,\"930\":1,\"931\":1,\"932\":3,\"933\":1,\"934\":1,\"935\":1,\"943\":1,\"949\":1,\"953\":1,\"959\":2,\"961\":1,\"964\":1,\"970\":1,\"987\":2,\"1006\":1,\"1030\":1,\"1031\":1,\"1063\":2,\"1082\":2,\"1086\":1,\"1090\":1,\"1094\":1,\"1101\":1,\"1102\":3,\"1103\":1,\"1104\":1,\"1105\":1,\"1179\":1,\"1180\":2,\"1188\":1,\"1194\":1,\"1202\":1,\"1214\":1,\"1216\":16,\"1217\":1,\"1218\":5,\"1219\":5,\"1223\":1,\"1235\":1,\"1236\":3,\"1241\":1,\"1242\":1,\"1244\":6,\"1245\":5,\"1246\":5,\"1247\":4,\"1248\":4,\"1249\":4,\"1250\":3,\"1251\":1,\"1314\":1,\"1318\":1,\"1324\":1,\"1330\":1,\"1347\":2,\"1349\":1,\"1350\":1,\"1351\":1,\"1354\":1,\"1356\":1,\"1361\":1,\"1371\":2,\"1390\":5,\"1391\":5,\"1395\":1,\"1396\":1,\"1397\":1,\"1412\":1,\"1413\":3,\"1417\":1,\"1418\":1,\"1420\":6,\"1421\":5,\"1422\":5,\"1423\":4,\"1424\":4,\"1425\":4,\"1426\":3,\"1428\":1,\"1435\":1,\"1437\":1,\"1438\":1,\"1447\":1,\"1463\":2,\"1465\":1,\"1471\":1,\"1477\":1,\"1500\":1,\"1513\":3,\"1514\":1,\"1515\":1,\"1516\":1,\"1532\":1,\"1533\":1,\"1563\":2,\"1646\":1,\"1647\":2,\"1655\":1,\"1666\":1,\"1667\":5,\"1668\":5,\"1672\":1,\"1688\":1,\"1689\":1,\"1691\":6,\"1692\":5,\"1693\":5,\"1694\":4,\"1695\":4,\"1696\":4,\"1697\":3,\"1715\":2,\"1737\":1,\"1755\":10,\"1757\":11,\"1794\":1,\"1802\":2,\"1813\":3,\"1814\":1,\"1815\":1,\"1816\":1,\"1826\":1,\"1842\":2,\"1844\":1,\"1850\":1,\"1856\":1,\"1868\":1,\"1869\":1,\"1900\":2,\"1917\":2,\"1940\":1,\"1958\":2,\"1959\":10,\"1961\":11,\"2054\":1,\"2055\":2,\"2063\":1,\"2074\":1,\"2075\":5,\"2076\":5,\"2080\":1,\"2096\":1,\"2097\":1,\"2099\":6,\"2100\":5,\"2101\":5,\"2102\":4,\"2103\":4,\"2104\":4,\"2105\":3,\"2107\":1,\"2109\":1,\"2110\":1,\"2120\":1,\"2121\":1,\"2135\":1,\"2137\":1,\"2138\":1,\"2149\":1,\"2152\":1,\"2154\":1,\"2155\":1,\"2172\":1,\"2173\":2,\"2190\":2,\"2208\":1,\"2219\":1,\"2221\":1,\"2222\":1,\"2233\":1,\"2234\":2,\"2240\":11,\"2244\":1,\"2248\":1,\"2249\":1,\"2251\":2,\"2252\":1,\"2253\":2,\"2259\":2,\"2269\":1,\"2277\":2,\"2295\":1,\"2303\":2,\"2318\":1,\"2320\":1,\"2321\":1,\"2338\":1,\"2339\":2,\"2344\":1,\"2346\":1,\"2347\":1,\"2364\":1,\"2365\":2}}],[\"成员项目\",{\"1\":{\"0\":1}}],[\"ds\",{\"1\":{\"516\":2,\"701\":2,\"925\":2,\"1096\":2,\"1430\":2}}],[\"dao\",{\"1\":{\"463\":1,\"649\":1,\"865\":1,\"1088\":1,\"1377\":1}}],[\"data<\",{\"1\":{\"491\":1,\"677\":1,\"902\":1,\"1231\":1,\"1405\":1}}],[\"datasource\",{\"1\":{\"406\":1,\"459\":1,\"516\":1,\"591\":1,\"645\":1,\"701\":1,\"782\":1,\"861\":1,\"925\":1,\"1084\":1,\"1096\":1,\"1186\":1,\"1312\":1,\"1373\":1,\"1430\":1}}],[\"data\",{\"1\":{\"403\":2,\"406\":1,\"416\":1,\"425\":2,\"426\":1,\"588\":2,\"591\":1,\"601\":1,\"611\":2,\"612\":1,\"779\":2,\"782\":1,\"792\":1,\"803\":2,\"804\":1,\"1183\":2,\"1186\":1,\"1192\":1,\"1203\":2,\"1204\":1,\"1309\":2,\"1312\":1,\"1322\":1,\"1331\":2,\"1332\":1,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"datafillhandler\",{\"1\":{\"220\":1,\"404\":2,\"407\":2,\"413\":1,\"417\":2,\"589\":2,\"592\":2,\"598\":1,\"602\":2,\"780\":2,\"783\":2,\"789\":1,\"793\":2,\"1184\":2,\"1187\":2,\"1189\":1,\"1193\":2,\"1310\":2,\"1313\":2,\"1319\":1,\"1323\":2,\"1650\":1,\"2058\":1,\"2193\":2,\"2262\":2,\"2280\":2,\"2306\":2}}],[\"datetime\",{\"1\":{\"265\":2,\"266\":2,\"267\":2,\"268\":2,\"269\":2,\"270\":2,\"271\":2,\"506\":2,\"507\":2,\"508\":2,\"509\":2,\"510\":2,\"511\":2,\"512\":2,\"691\":2,\"692\":2,\"693\":2,\"694\":2,\"695\":2,\"696\":2,\"697\":2,\"915\":2,\"916\":2,\"917\":2,\"918\":2,\"919\":2,\"920\":2,\"921\":2,\"1244\":2,\"1245\":2,\"1246\":2,\"1247\":2,\"1248\":2,\"1249\":2,\"1250\":2,\"1420\":2,\"1421\":2,\"1422\":2,\"1423\":2,\"1424\":2,\"1425\":2,\"1426\":2,\"1691\":2,\"1692\":2,\"1693\":2,\"1694\":2,\"1695\":2,\"1696\":2,\"1697\":2,\"2099\":2,\"2100\":2,\"2101\":2,\"2102\":2,\"2103\":2,\"2104\":2,\"2105\":2}}],[\"datetimeformatter\",{\"1\":{\"3\":1,\"1770\":1}}],[\"date\",{\"1\":{\"220\":6,\"413\":6,\"598\":6,\"789\":6,\"1189\":6,\"1319\":6,\"1650\":6,\"2058\":6}}],[\"dateutils\",{\"1\":{\"19\":2,\"234\":6,\"433\":6,\"449\":2,\"619\":6,\"635\":2,\"811\":6,\"850\":2,\"1073\":2,\"1211\":6,\"1339\":6,\"1363\":2,\"1491\":2,\"1660\":6,\"1785\":2,\"2068\":6}}],[\"dictid\",{\"1\":{\"428\":2,\"614\":2,\"806\":2,\"1206\":2,\"1334\":2}}],[\"div>\",{\"1\":{\"425\":1,\"426\":1,\"611\":1,\"612\":1,\"803\":1,\"804\":1,\"1203\":1,\"1204\":1,\"1331\":1,\"1332\":1}}],[\"dialect\",{\"1\":{\"406\":2,\"591\":2,\"782\":2,\"1186\":2,\"1312\":2}}],[\"distributionmanagement>\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"distributionmanagement\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"disposition\",{\"1\":{\"333\":2,\"1755\":2,\"1959\":2}}],[\"disabled为是否可编辑\",{\"1\":{\"611\":1,\"612\":1}}],[\"disabled\",{\"1\":{\"226\":1,\"229\":1,\"338\":2,\"424\":1,\"425\":2,\"426\":2,\"428\":3,\"609\":1,\"611\":1,\"612\":1,\"614\":2,\"802\":1,\"803\":2,\"804\":2,\"806\":3,\"1202\":1,\"1203\":2,\"1204\":2,\"1206\":3,\"1330\":1,\"1331\":2,\"1332\":2,\"1334\":3,\"1655\":1,\"1760\":2,\"1964\":2,\"2063\":1,\"2110\":1,\"2121\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2243\":2,\"2321\":1,\"2347\":1}}],[\"disabled=\",{\"1\":{\"428\":1,\"614\":1,\"806\":1,\"1206\":1,\"1334\":1}}],[\"disabled=$\",{\"1\":{\"226\":1,\"229\":1,\"338\":2,\"424\":1,\"425\":1,\"426\":1,\"428\":1,\"609\":1,\"611\":1,\"612\":1,\"802\":1,\"803\":1,\"804\":1,\"806\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1206\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1334\":1,\"1655\":1,\"1760\":2,\"1964\":2,\"2063\":1,\"2110\":1,\"2121\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2243\":2,\"2321\":1,\"2347\":1}}],[\"disabled=false\",{\"1\":{\"75\":1,\"428\":2,\"614\":3,\"806\":2,\"819\":1,\"959\":1,\"1206\":2,\"1334\":2,\"1347\":1,\"1463\":1,\"1842\":1}}],[\"db\",{\"1\":{\"458\":1,\"516\":2,\"644\":1,\"701\":2,\"860\":1,\"925\":2,\"1083\":1,\"1096\":2,\"1372\":1,\"1430\":2}}],[\"db1\",{\"1\":{\"406\":1,\"459\":1,\"516\":6,\"591\":1,\"645\":1,\"701\":6,\"782\":1,\"861\":1,\"925\":6,\"1084\":1,\"1096\":6,\"1186\":1,\"1312\":1,\"1373\":1,\"1430\":6}}],[\"dbtype\",{\"1\":{\"291\":2,\"987\":2,\"1715\":2,\"1917\":2}}],[\"dto\",{\"1\":{\"299\":1}}],[\"drwxr\",{\"1\":{\"287\":2,\"983\":2,\"1711\":2,\"1913\":2}}],[\"dromara<\",{\"1\":{\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"1325\":1,\"1345\":2,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2,\"2108\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2220\":1,\"2228\":1,\"2319\":1,\"2333\":1,\"2345\":1,\"2359\":1}}],[\"dromara\",{\"0\":{\"2147\":1,\"2206\":1,\"2267\":1,\"2293\":1},\"1\":{\"0\":1,\"73\":2,\"81\":2,\"113\":1,\"115\":1,\"116\":2,\"119\":2,\"133\":1,\"277\":1,\"286\":1,\"289\":1,\"336\":4,\"338\":2,\"406\":2,\"441\":2,\"463\":7,\"518\":1,\"782\":2,\"796\":1,\"797\":1,\"817\":2,\"840\":2,\"865\":7,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"927\":1,\"957\":2,\"962\":2,\"982\":1,\"985\":1,\"1042\":1,\"1044\":2,\"1045\":3,\"1063\":1,\"1088\":7,\"1098\":1,\"1186\":2,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":2,\"1312\":2,\"1355\":2,\"1377\":7,\"1432\":1,\"1461\":2,\"1469\":2,\"1544\":1,\"1546\":3,\"1549\":2,\"1563\":1,\"1701\":1,\"1710\":1,\"1713\":1,\"1758\":4,\"1760\":2,\"1840\":2,\"1848\":2,\"1880\":1,\"1882\":1,\"1883\":2,\"1886\":2,\"1900\":1,\"1903\":1,\"1912\":1,\"1915\":1,\"1962\":4,\"1964\":2,\"2117\":1,\"2128\":1,\"2134\":1,\"2145\":1,\"2163\":1,\"2165\":1,\"2168\":1,\"2174\":1,\"2177\":1,\"2181\":1,\"2183\":1,\"2186\":2,\"2229\":1,\"2235\":1,\"2238\":1,\"2241\":4,\"2243\":2,\"2255\":2,\"2273\":2,\"2299\":2,\"2329\":1,\"2331\":1,\"2334\":1,\"2340\":1,\"2343\":1,\"2355\":1,\"2357\":1,\"2360\":1,\"2366\":1,\"2369\":1,\"2373\":1,\"2375\":1}}],[\"docencoding><\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"documentelement\",{\"1\":{\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1}}],[\"document\",{\"1\":{\"333\":3,\"425\":1,\"611\":1,\"803\":1,\"1203\":1,\"1331\":1,\"1755\":3,\"1959\":3}}],[\"docker环境\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"docs\",{\"1\":{\"228\":2}}],[\"dotor\",{\"1\":{\"133\":1,\"1063\":1,\"1563\":1,\"1900\":1}}],[\"d\",{\"1\":{\"75\":1,\"133\":1,\"819\":1,\"959\":1,\"1063\":1,\"1347\":1,\"1463\":1,\"1563\":1,\"1842\":1,\"1900\":1,\"2202\":1,\"2203\":2,\"2216\":1,\"2217\":2,\"2289\":1,\"2290\":2,\"2315\":1,\"2316\":2}}],[\"dd\",{\"1\":{\"3\":1,\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"1770\":1,\"2068\":3}}],[\"demo\",{\"1\":{\"516\":1,\"701\":1,\"925\":1,\"1096\":1,\"1430\":1}}],[\"detail\",{\"1\":{\"428\":2,\"614\":2,\"806\":2,\"1206\":2,\"1334\":2}}],[\"determinesize\",{\"1\":{\"64\":1,\"836\":1,\"948\":1,\"1452\":1,\"1831\":1}}],[\"deep\",{\"1\":{\"333\":2,\"334\":2,\"335\":2,\"1755\":2,\"1756\":2,\"1757\":2,\"1959\":2,\"1960\":2,\"1961\":2,\"2240\":2}}],[\"devtools\",{\"1\":{\"289\":2,\"985\":2,\"1713\":2,\"1915\":2}}],[\"dejavu\",{\"1\":{\"287\":1,\"983\":1,\"1711\":1,\"1913\":1}}],[\"decimal\",{\"1\":{\"268\":1,\"509\":1,\"694\":1,\"918\":1,\"1247\":1,\"1423\":1,\"1694\":1,\"2102\":1}}],[\"del\",{\"1\":{\"265\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1}}],[\"deletebyinsids\",{\"1\":{\"185\":1,\"1615\":1,\"2023\":1}}],[\"delete\",{\"1\":{\"30\":3,\"403\":3,\"406\":3,\"458\":2,\"460\":3,\"588\":3,\"591\":3,\"644\":2,\"646\":3,\"779\":3,\"782\":3,\"860\":2,\"862\":3,\"1083\":2,\"1085\":3,\"1183\":3,\"1186\":3,\"1309\":3,\"1312\":3,\"1372\":2,\"1374\":3,\"1503\":3,\"1797\":3,\"2193\":3,\"2262\":3,\"2280\":3,\"2306\":3}}],[\"desktop\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2231\":1,\"2336\":1,\"2362\":1}}],[\"design\",{\"1\":{\"131\":1,\"1561\":1,\"1898\":1}}],[\"description\",{\"1\":{\"0\":1}}],[\"deploy\",{\"1\":{\"2203\":1,\"2217\":1,\"2290\":1,\"2316\":1}}],[\"deployflow\",{\"1\":{\"496\":1,\"681\":1,\"904\":1,\"1233\":1,\"1410\":1,\"2170\":1,\"2190\":1,\"2231\":1,\"2259\":1,\"2277\":1,\"2303\":1,\"2336\":1,\"2362\":1}}],[\"depute\",{\"1\":{\"171\":1,\"241\":1,\"372\":1,\"476\":1,\"557\":1,\"662\":1,\"745\":1,\"881\":1,\"888\":1,\"1143\":1,\"1216\":1,\"1218\":1,\"1278\":1,\"1390\":1,\"1601\":1,\"1667\":1,\"2009\":1,\"2075\":1}}],[\"dependency>\",{\"1\":{\"73\":1,\"291\":1,\"340\":1,\"419\":1,\"487\":3,\"488\":3,\"489\":3,\"490\":3,\"491\":2,\"604\":1,\"673\":2,\"674\":2,\"675\":2,\"676\":2,\"677\":2,\"796\":1,\"797\":1,\"817\":1,\"898\":3,\"899\":3,\"900\":2,\"901\":3,\"902\":2,\"957\":1,\"987\":1,\"1196\":1,\"1197\":1,\"1227\":3,\"1228\":3,\"1229\":2,\"1230\":3,\"1231\":2,\"1325\":1,\"1345\":1,\"1401\":3,\"1402\":3,\"1403\":2,\"1404\":3,\"1405\":2,\"1461\":1,\"1715\":1,\"1762\":1,\"1840\":1,\"1917\":1,\"1966\":1,\"2108\":1,\"2119\":1,\"2136\":1,\"2153\":1,\"2167\":1,\"2174\":1,\"2220\":1,\"2228\":1,\"2235\":1,\"2246\":1,\"2319\":1,\"2333\":1,\"2340\":1,\"2345\":1,\"2359\":1,\"2366\":1}}],[\"deptlist\",{\"1\":{\"234\":5,\"433\":5,\"619\":5,\"811\":5,\"1211\":5,\"1339\":5,\"1660\":5,\"2068\":5}}],[\"deptmapper\",{\"1\":{\"234\":3,\"433\":3,\"619\":3,\"811\":3,\"1211\":3,\"1339\":3,\"1660\":3,\"2068\":3}}],[\"dept\",{\"1\":{\"17\":1,\"41\":1,\"234\":9,\"241\":1,\"242\":1,\"433\":9,\"448\":1,\"476\":1,\"477\":1,\"619\":9,\"634\":1,\"662\":1,\"663\":1,\"811\":9,\"849\":1,\"869\":1,\"881\":1,\"882\":1,\"888\":1,\"889\":1,\"1072\":1,\"1092\":1,\"1211\":9,\"1218\":1,\"1219\":1,\"1339\":9,\"1362\":1,\"1390\":1,\"1391\":1,\"1490\":1,\"1508\":1,\"1660\":9,\"1667\":1,\"1668\":1,\"1784\":1,\"1808\":1,\"2068\":9,\"2075\":1,\"2076\":1}}],[\"def包含如下字段\",{\"1\":{\"535\":1}}],[\"def\",{\"1\":{\"350\":1,\"535\":1,\"722\":1,\"1118\":1,\"1256\":1}}],[\"defids\",{\"1\":{\"145\":2,\"166\":1,\"740\":1,\"1138\":1,\"1575\":2,\"1596\":1,\"1983\":2,\"2004\":1}}],[\"definitionmapper\",{\"1\":{\"464\":1,\"650\":1,\"866\":1,\"1089\":1,\"1378\":1}}],[\"definition表的id\",{\"1\":{\"266\":1,\"267\":1,\"270\":1,\"507\":1,\"508\":1,\"511\":1,\"692\":1,\"693\":1,\"696\":1,\"916\":1,\"917\":1,\"920\":1,\"1245\":1,\"1246\":1,\"1249\":1,\"1421\":1,\"1422\":1,\"1425\":1,\"1692\":1,\"1693\":1,\"1696\":1,\"2100\":1,\"2101\":1,\"2104\":1}}],[\"definitionid为需要查询的流程定义id\",{\"1\":{\"611\":1,\"612\":1}}],[\"definitionid\",{\"1\":{\"154\":1,\"156\":1,\"158\":1,\"178\":2,\"180\":2,\"181\":2,\"226\":1,\"229\":1,\"338\":2,\"377\":2,\"424\":1,\"425\":2,\"426\":2,\"428\":3,\"562\":2,\"609\":1,\"611\":1,\"612\":1,\"614\":2,\"750\":2,\"802\":1,\"803\":2,\"804\":2,\"806\":3,\"1148\":4,\"1202\":1,\"1203\":2,\"1204\":2,\"1206\":3,\"1283\":2,\"1330\":1,\"1331\":2,\"1332\":2,\"1334\":3,\"1584\":1,\"1586\":1,\"1588\":1,\"1608\":2,\"1610\":2,\"1611\":2,\"1655\":1,\"1760\":2,\"1964\":2,\"1992\":1,\"1994\":1,\"1996\":1,\"2016\":2,\"2018\":2,\"2019\":2,\"2063\":1,\"2110\":1,\"2121\":1,\"2138\":1,\"2155\":1,\"2222\":1,\"2243\":2,\"2321\":1,\"2347\":1}}],[\"definition\",{\"1\":{\"29\":1,\"139\":1,\"140\":1,\"263\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"288\":1,\"348\":1,\"425\":1,\"426\":1,\"504\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"515\":1,\"611\":1,\"612\":1,\"689\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"700\":1,\"719\":1,\"720\":1,\"803\":1,\"804\":1,\"913\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"924\":1,\"984\":1,\"1082\":1,\"1095\":1,\"1115\":1,\"1116\":1,\"1203\":1,\"1204\":1,\"1242\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1254\":1,\"1331\":1,\"1332\":1,\"1418\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1429\":1,\"1502\":1,\"1569\":1,\"1570\":1,\"1689\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1712\":1,\"1796\":1,\"1914\":1,\"1977\":1,\"1978\":1,\"2097\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1}}],[\"defservice\",{\"1\":{\"333\":4,\"461\":3,\"496\":1,\"497\":1,\"647\":3,\"681\":1,\"682\":1,\"904\":1,\"905\":1,\"1233\":1,\"1234\":1,\"1375\":3,\"1410\":1,\"1411\":1,\"1755\":4,\"1959\":4,\"2170\":1,\"2171\":1,\"2190\":2,\"2231\":1,\"2232\":1,\"2259\":2,\"2277\":2,\"2303\":2,\"2336\":1,\"2337\":1,\"2362\":1,\"2363\":1}}],[\"defservice流程定义接口\",{\"0\":{\"347\":1,\"533\":1,\"718\":1,\"1114\":1,\"1253\":1}}],[\"defservice流程定义\",{\"0\":{\"135\":1,\"1565\":1,\"1973\":1}}],[\"defstr\",{\"1\":{\"137\":1,\"1567\":1,\"1975\":1}}],[\"defstartlistener\",{\"1\":{\"17\":2,\"448\":2,\"634\":2,\"849\":2,\"1072\":2,\"1362\":2,\"1490\":2,\"1784\":2}}],[\"default|$\",{\"1\":{\"333\":1,\"1179\":1,\"1755\":1,\"1959\":1}}],[\"defaultvariablestrategy\",{\"1\":{\"93\":1,\"531\":1,\"716\":1,\"829\":1,\"974\":1,\"1445\":1,\"1481\":1,\"1860\":1}}],[\"defaultinstance\",{\"1\":{\"81\":1,\"441\":1,\"627\":1,\"840\":1,\"962\":1,\"1355\":1,\"1469\":1,\"1848\":1}}],[\"default\",{\"1\":{\"59\":1,\"62\":2,\"77\":1,\"83\":1,\"86\":1,\"89\":1,\"92\":1,\"216\":1,\"335\":3,\"425\":1,\"523\":1,\"524\":1,\"526\":3,\"531\":2,\"611\":1,\"708\":1,\"709\":1,\"711\":3,\"716\":2,\"803\":1,\"825\":1,\"828\":1,\"831\":1,\"834\":2,\"943\":1,\"946\":2,\"964\":1,\"967\":1,\"970\":1,\"973\":1,\"1203\":1,\"1331\":1,\"1437\":1,\"1438\":1,\"1440\":3,\"1445\":2,\"1447\":1,\"1450\":2,\"1465\":1,\"1471\":1,\"1474\":1,\"1477\":1,\"1480\":1,\"1646\":1,\"1757\":3,\"1826\":1,\"1829\":2,\"1844\":1,\"1850\":1,\"1853\":1,\"1856\":1,\"1859\":1,\"1961\":3,\"2054\":1,\"2240\":3}}],[\"deffinishlistener\",{\"1\":{\"19\":2,\"449\":2,\"635\":2,\"850\":2,\"1073\":2,\"1363\":2,\"1491\":2,\"1785\":2}}],[\"defjson\",{\"1\":{\"3\":5,\"138\":1,\"141\":1,\"1568\":1,\"1571\":1,\"1770\":5,\"1976\":1,\"1979\":1}}],[\"defjsonstr\",{\"1\":{\"3\":3,\"1770\":3}}],[\"个人详情\",{\"1\":{\"0\":1}}],[\"个人\",{\"1\":{\"0\":1,\"94\":2,\"1023\":2,\"1525\":2,\"1861\":2}}],[\"正在使用\",{\"1\":{\"0\":1}}],[\"❤️特别赞助\",{\"1\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
