const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":1774,\"nextId\":1774,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1#_1、监听器大类\",\"3\":\"1#_2、监听器小类\",\"4\":\"1#_3、监听器设置\",\"5\":\"1#_4、匹配规则\",\"6\":\"1#_5、监听器生命周期图\",\"7\":\"1#_5、节点和流程监听器\",\"8\":\"1#_5-1、实现以下接口\",\"9\":\"1#_5-2、开始监听器实现类例子\",\"10\":\"1#_5-3、完成监听器实现类例子\",\"11\":\"1#_5-4、分派监听器实现类例子\",\"12\":\"1#_5-5、创建监听器\",\"13\":\"1#_5-6、页面配置全局或节点监听器\",\"14\":\"1#_5-6-1、节点监听器-流程节点配置\",\"15\":\"1#_5-6-1、流程监听器-流程定义配置\",\"16\":\"1#_6、全局监听器\",\"17\":\"1#_7、监听器参数使用\",\"18\":\"2\",\"19\":\"2#_1、mybatis-plus\",\"20\":\"2#_1-1、spring\",\"21\":\"2#_1-2、solon\",\"22\":\"2#_2、通用逻辑删除\",\"23\":\"3\",\"24\":\"3#_1、mybatis-plus\",\"25\":\"3#_2、jpa\",\"26\":\"3#_3、mybatis-flex\",\"27\":\"4\",\"28\":\"4#_1、permissionhandler接口\",\"29\":\"4#_2、编写permissionhandler实现类\",\"30\":\"5\",\"31\":\"5#_1、mybatis-plus\",\"32\":\"5#_1-1、spring\",\"33\":\"5#_1-2、solon\",\"34\":\"5#_2、通用多租户\",\"35\":\"5#_2-1、yaml配置方式\",\"36\":\"5#_2-2、bean配置方式\",\"37\":\"5#_2-3、-component配置方式\",\"38\":\"6\",\"39\":\"6#_1、特点\",\"40\":\"6#_2、内置表达式\",\"41\":\"6#_3、匹配规则\",\"42\":\"6#_4、变量替换时机\",\"43\":\"6#_5、默认办理人变量策略\",\"44\":\"6#前端页面设置变量\",\"45\":\"6#后端代码设置变量\",\"46\":\"6#_6、spel办理人变量策略\",\"47\":\"6#前端页面设置变量-1\",\"48\":\"6#后端代码设置变量-1\",\"49\":\"6#_7、办理人选择项接口\",\"50\":\"7\",\"51\":\"7#_1、表达式公共接口\",\"52\":\"7#_2、注册表达式实现类\",\"53\":\"7#_3、条件表达式\",\"54\":\"7#_3-1、条件表达式接口\",\"55\":\"7#_3-2、条件表达式抽象类\",\"56\":\"7#_3-3、条件表达式实现类\",\"57\":\"8\",\"58\":\"8#_1、开启流程\",\"59\":\"8#_2、流程跳转\",\"60\":\"8#_3、其他请查阅核心api\",\"61\":\"9\",\"62\":\"9#_1-下载设计器源码-改造\",\"63\":\"9#_2-源码调试\",\"64\":\"9#_3-部署\",\"65\":\"9#_3-1-先排除原依赖的前端代码\",\"66\":\"9#_3-2-设计器不分离部署-部署方案一\",\"67\":\"9#_3-3-设计器独立部署-分离部署-部署方案二\",\"68\":\"10\",\"69\":\"11\",\"70\":\"11#json库扩展-1\",\"71\":\"12\",\"72\":\"12#_1、表达式公共接口\",\"73\":\"12#_2、注册表达式实现类\",\"74\":\"12#_3-监听器表达式\",\"75\":\"12#_3-1、监听器表达式接口\",\"76\":\"12#_3-2、监听器表达式实现类\",\"77\":\"13\",\"78\":\"13#_1、表达式公共接口\",\"79\":\"13#_2、注册表达式实现类\",\"80\":\"13#_3、办理人变量表达式\",\"81\":\"13#_3-1、办理人变量表达式接口\",\"82\":\"13#_3-2、办理人变量表达式实现类\",\"83\":\"14\",\"84\":\"15\",\"85\":\"15#参与贡献\",\"86\":\"15#为开源项目点一个star\",\"87\":\"15#为社区处理问题\",\"88\":\"15#改进社区文档-文档仓库\",\"89\":\"15#贡献代码\",\"90\":\"15#如何成为项目贡献者\",\"91\":\"15#项目贡献者待遇\",\"92\":\"15#提交pr\",\"93\":\"15#步骤一-fork项目到自己仓库\",\"94\":\"15#步骤二-基于dev分支-新建一个此pr功能点的专属分支\",\"95\":\"15#步骤三-使用git工具-将自己仓库的项目拉去到本地做代码编写\",\"96\":\"15#步骤四-使用idea打开项目-切换到新建的功能分支\",\"97\":\"15#步骤五-设置创建类的模板\",\"98\":\"15#步骤六-将编写好的代码-提交到自己的远程仓库\",\"99\":\"15#步骤七-创建pr申请-此操作在自己仓库或者要pr的仓库都可以\",\"100\":\"15#步骤八-等待作者评审-按要求更改-直到没有问题后被作者合并\",\"101\":\"16\",\"102\":\"16#_1、项目介绍\",\"103\":\"16#_2、演示地址\",\"104\":\"16#_3、开源协议\",\"105\":\"16#_4、应用场景\",\"106\":\"16#_5、支持数据库类型\",\"107\":\"16#_6、支持orm框架类型\",\"108\":\"16#_7、特别赞助\",\"109\":\"16#_8、你可以请作者喝杯咖啡表示鼓励\",\"110\":\"17\",\"111\":\"17#演示地址\",\"112\":\"17#演示图\",\"113\":\"17#_1、新增定义\",\"114\":\"17#_2、流程设计\",\"115\":\"17#_2、1节点设置\",\"116\":\"17#_2、2跳转线设置\",\"117\":\"17#_3、开启流程实例\",\"118\":\"17#_4、提交流程\",\"119\":\"17#_5、办理流程\",\"120\":\"17#_6、驳回流程\",\"121\":\"18\",\"122\":\"19\",\"123\":\"19#捐赠列表\",\"124\":\"20\",\"125\":\"21\",\"126\":\"21#vip群\",\"127\":\"21#私人服务\",\"128\":\"21#特别赞助\",\"129\":\"22\",\"130\":\"23\",\"131\":\"23#_1、id精度丢失\",\"132\":\"23#_2、流程图片中文乱码\",\"133\":\"23#_3、initflow-未加载\",\"134\":\"23#_4、监听器等对象获取不到\",\"135\":\"23#_5、类型转换异常\",\"136\":\"23#_6、hh-vue切换mybaits-plus\",\"137\":\"23#_7、导入依赖包失败\",\"138\":\"23#_8、-stackoverflowerror-错误\",\"139\":\"23#_9、-后端接收流程xml部分丢失\",\"140\":\"24\",\"141\":\"24#未来发布计划\",\"142\":\"24#vx-x-x\",\"143\":\"24#开发中计划\",\"144\":\"24#v1-3-6\",\"145\":\"24#v1-3-5\",\"146\":\"24#更新日志-1\",\"147\":\"24#v1-3-4-2024-11-25\",\"148\":\"24#v1-3-3-2024-11-12\",\"149\":\"24#v1-3-1-2024-11-01\",\"150\":\"24#v1-3-0-2024-10-23\",\"151\":\"24#v1-2-10-2024-09-26\",\"152\":\"24#v1-2-8-2024-09-25\",\"153\":\"24#v1-2-7-2024-09-03\",\"154\":\"24#v1-2-6-2024-08-28\",\"155\":\"24#v1-2-4-2024-08-14\",\"156\":\"24#v1-2-3-2024-06-28\",\"157\":\"24#v1-2-1-2024-06-28\",\"158\":\"24#v1-2-0-2024-06-13\",\"159\":\"24#v1-1-9-2024-05-08\",\"160\":\"24#v1-1-7-2024-04-27\",\"161\":\"24#v1-1-6-2024-04-23\",\"162\":\"24#v1-1-5-2024-04-17\",\"163\":\"24#v1-1-4-2024-04-07\",\"164\":\"24#v1-1-3-2024-04-02\",\"165\":\"24#v1-1-2-2024-03-27\",\"166\":\"24#v1-1-1-2024-03-22\",\"167\":\"24#v1-1-0-2024-03-21\",\"168\":\"24#v1-0-4-2024-03-06\",\"169\":\"24#v1-0-3-2024-03-05\",\"170\":\"24#v1-0-2-2023-12-31\",\"171\":\"24#v1-0-0-2023-12-28\",\"172\":\"25\",\"173\":\"25#_1、defservice流程定义接口\",\"174\":\"25#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"175\":\"25#_1-2、新增流程定义-并初始化流程节点和流程跳转数据\",\"176\":\"25#_1-3、导入流程定义、流程节点和流程跳转数据\",\"177\":\"25#_1-4、保存流程节点和流程跳转数据\",\"178\":\"25#_1-5、保存流程节点和流程跳转数据\",\"179\":\"25#_1-6、导出流程定义\",\"180\":\"25#_1-7、获取流程定义\",\"181\":\"25#_1-8、删除\",\"182\":\"25#_1-9、发布\",\"183\":\"25#_1-10、取消发布\",\"184\":\"25#_1-11、复制流程\",\"185\":\"25#_1-12、获取流程图\",\"186\":\"25#_1-13、激活流程\",\"187\":\"25#_1-14、挂起流程\",\"188\":\"25#_1-15、获取流程定义\",\"189\":\"25#_1-16、查询流程设计所需的数据-比如流程图渲染-导出流程定义\",\"190\":\"25#_2、insservice流程实例接口\",\"191\":\"25#_2-1、开启流程\",\"192\":\"25#_2-2、流程跳转\",\"193\":\"25#_2-3、终止流程\",\"194\":\"25#_2-4、删除流程实例\",\"195\":\"25#_2-5、激活实例\",\"196\":\"25#_2-6、挂起实例\",\"197\":\"25#_2-7、根据流程定义id集合-查询流程实例集合\",\"198\":\"25#_3、taskservice待办任务接口\",\"199\":\"25#_3-1、流程跳转\",\"200\":\"25#_3-2、终止流程\",\"201\":\"25#_3-3、转办\",\"202\":\"25#_3-4、委派\",\"203\":\"25#_3-5、加签\",\"204\":\"25#_3-6、减签\",\"205\":\"25#_3-7、修改办理人\",\"206\":\"25#_4、nodeservice节点接口\",\"207\":\"25#_4-1、获取下一个节点列表\",\"208\":\"25#_5、公共api接口\",\"209\":\"25#_5-1、根据id查询\",\"210\":\"25#_5-2、根据ids主键集合查询\",\"211\":\"25#_5-3、分页查询\",\"212\":\"25#_5-4、查询列表\",\"213\":\"25#_5-5、查询列表-可排序\",\"214\":\"25#_5-6、查询一条记录\",\"215\":\"25#_5-7、获取总数量\",\"216\":\"25#_5-8、判断是否存在\",\"217\":\"25#_5-8、新增\",\"218\":\"25#_5-9、根据id修改\",\"219\":\"25#_5-10、根据id删除\",\"220\":\"25#_5-11、根据entity删除\",\"221\":\"25#_5-12、根据ids批量删除\",\"222\":\"25#_5-13、批量新增\",\"223\":\"25#_5-14、批量新增\",\"224\":\"25#_5-15、批量更新\",\"225\":\"25#_5-16、id设置正序排列\",\"226\":\"25#_5-17、创建时间设置正序排列\",\"227\":\"25#_5-18、更新时间设置正序排列\",\"228\":\"25#_5-19、设置正序排列\",\"229\":\"25#_5-20、设置倒序排列\",\"230\":\"25#_5-21、用户自定义排序方案\",\"231\":\"26\",\"232\":\"26#_1、流程协作规则\",\"233\":\"26#_2、使用演示\",\"234\":\"26#_2-1、或签\",\"235\":\"26#_2-2、票签签\",\"236\":\"26#_2-3、会签\",\"237\":\"27\",\"238\":\"27#_1、内置表达式\",\"239\":\"27#_2、匹配规则\",\"240\":\"28\",\"241\":\"28#_1、spring\",\"242\":\"28#_1-1、yaml配置方式\",\"243\":\"28#_1-2、bean配置方式\",\"244\":\"28#_2、solon\",\"245\":\"28#_2-1、yaml配置方式\",\"246\":\"28#_2-1、bean配置方式\",\"247\":\"29\",\"248\":\"29#_1、自定义填充器-并继承datafillhandler\",\"249\":\"29#_2、注入bean\",\"250\":\"29#_2-1、通过-component方式注入\",\"251\":\"29#_2-2、yaml配置方式\",\"252\":\"29#_2-3、-configuration-bean配置方式\",\"253\":\"30\",\"254\":\"30#_1-引入依赖\",\"255\":\"30#springboot\",\"256\":\"30#solon\",\"257\":\"30#_2-后端放行部分路径\",\"258\":\"30#_2-1-spring-security-放行配置\",\"259\":\"30#_2-2-shiro-放行配置\",\"260\":\"30#_2-3-sa-token-放行配置\",\"261\":\"30#_3-前端加载设计器\",\"262\":\"30#_3-2-vue2-引入\",\"263\":\"30#_3-3-vue3-引入\",\"264\":\"30#_3-4-react版本-引入\",\"265\":\"30#_3-5-前后端不分离版本\",\"266\":\"30#_4-设计器办理人权限数据接入\",\"267\":\"30#_4-1-办理人权限选择弹框页面\",\"268\":\"30#_4-2-实现接口获取以上页面办理人权限数据\",\"269\":\"30#_4-2-1-handlerselectservice接口\",\"270\":\"30#_4-2-2-handlerselectserviceimpl实现类\",\"271\":\"30#_5-共享后端权限-如token\",\"272\":\"31\",\"273\":\"31#_1、变更支持的类型\",\"274\":\"31#_2、接口描述\",\"275\":\"31#_3、代码示例\",\"276\":\"32\",\"277\":\"32#_1、术语\",\"278\":\"32#_2、通用规则\",\"279\":\"32#_3、流程状态\",\"280\":\"32#_4、串行网关规则\",\"281\":\"32#_5、并行网关规则\",\"282\":\"33\",\"283\":\"33#_1、导入sql-按需求执行\",\"284\":\"33#_2、官网流程定义案例xml\",\"285\":\"33#_3、maven依赖\",\"286\":\"33#_3-1、mybatis\",\"287\":\"33#_3-2、mybatis-plus\",\"288\":\"33#_3-3、jpa\",\"289\":\"33#_3-4、mybatis-flex\",\"290\":\"33#_3-5、easy-query\",\"291\":\"33#_4、代码示例\",\"292\":\"33#_4-1、部署流程\",\"293\":\"33#_4-2、发布流程\",\"294\":\"33#_4-3、开启流程\",\"295\":\"33#_4-4、流程流转\",\"296\":\"33#_5、设计器引入\",\"297\":\"33#_6、初学者推荐学习路线\",\"298\":\"33#_6-1、推荐集成案例hh-vue\",\"299\":\"33#_6-2、推荐学习视频\",\"300\":\"34\",\"301\":\"34#表清单\",\"302\":\"34#表字段明细\",\"303\":\"34#flow-definition-流程定义表\",\"304\":\"34#flow-his-task-历史任务记录表\",\"305\":\"34#flow-instance-流程实例表\",\"306\":\"34#flow-node-流程节点表\",\"307\":\"34#flow-skip-节点跳转关联表\",\"308\":\"34#flow-task-待办任务表\",\"309\":\"34#flow-user-流程用户表\",\"310\":\"35\",\"311\":\"36\",\"312\":\"36#_1、defservice流程定义接口\",\"313\":\"36#_1-1、导入流程定义\",\"314\":\"36#_1-2、保存流程定义\",\"315\":\"36#_1-3、导出流程定义\",\"316\":\"36#_1-4、获取流程定义\",\"317\":\"36#_1-5、删除\",\"318\":\"36#_1-6、发布\",\"319\":\"36#_1-7、取消发布\",\"320\":\"36#_1-8、复制流程\",\"321\":\"36#_1-9、获取流程图\",\"322\":\"36#_1-10、激活流程\",\"323\":\"36#_1-11、挂起流程\",\"324\":\"36#_2、insservice流程实例接口\",\"325\":\"36#_2-1、开启流程\",\"326\":\"36#_2-2、流程跳转\",\"327\":\"36#_2-3、终止流程\",\"328\":\"36#_2-4、删除流程实例\",\"329\":\"36#_2-5、激活实例\",\"330\":\"36#_2-6、挂起实例\",\"331\":\"36#_3、taskservice待办任务接口\",\"332\":\"36#_3-1、流程跳转\",\"333\":\"36#_3-2、终止流程\",\"334\":\"36#_3-3、转办\",\"335\":\"36#_3-4、委派\",\"336\":\"36#_3-5、加签\",\"337\":\"36#_3-6、减签\",\"338\":\"36#_3-7、修改办理人\",\"339\":\"36#_4、nodeservice节点接口\",\"340\":\"36#_4-1、获取下一个节点列表\",\"341\":\"36#_5、公共api接口\",\"342\":\"36#_5-1、根据id查询\",\"343\":\"36#_5-2、根据ids主键集合查询\",\"344\":\"36#_5-3、分页查询\",\"345\":\"36#_5-4、查询列表\",\"346\":\"36#_5-5、查询列表-可排序\",\"347\":\"36#_5-6、查询一条记录\",\"348\":\"36#_5-7、获取总数量\",\"349\":\"36#_5-8、判断是否存在\",\"350\":\"36#_5-8、新增\",\"351\":\"36#_5-9、根据id修改\",\"352\":\"36#_5-10、根据id删除\",\"353\":\"36#_5-11、根据entity删除\",\"354\":\"36#_5-12、根据ids批量删除\",\"355\":\"36#_5-13、批量新增\",\"356\":\"36#_5-14、批量新增\",\"357\":\"36#_5-15、批量更新\",\"358\":\"36#_5-16、id设置正序排列\",\"359\":\"36#_5-17、创建时间设置正序排列\",\"360\":\"36#_5-18、更新时间设置正序排列\",\"361\":\"36#_5-19、设置正序排列\",\"362\":\"36#_5-20、设置倒序排列\",\"363\":\"36#_5-21、用户自定义排序方案\",\"364\":\"37\",\"365\":\"37#_1、spring\",\"366\":\"37#_1-1、yaml配置方式\",\"367\":\"37#_1-2、bean配置方式\",\"368\":\"37#_2、solon\",\"369\":\"37#_2-1、yaml配置方式\",\"370\":\"37#_2-1、bean配置方式\",\"371\":\"38\",\"372\":\"38#_1、开启流程\",\"373\":\"38#_2、流程跳转\",\"374\":\"38#_3、其他请查阅核心api\",\"375\":\"39\",\"376\":\"39#_1、自定义填充器-并继承datafillhandler\",\"377\":\"39#_2、注入bean\",\"378\":\"39#_2-1、通过-component方式注入\",\"379\":\"39#_2-2、yaml配置方式\",\"380\":\"39#_2-3、-configuration-bean配置方式\",\"381\":\"40\",\"382\":\"40#_1、内置表达式\",\"383\":\"40#_2、spring-expression-language-spel\",\"384\":\"40#_3、自定义表达式\",\"385\":\"41\",\"386\":\"42\",\"387\":\"43\",\"388\":\"43#json库扩展-1\",\"389\":\"44\",\"390\":\"44#_1、监听器类型\",\"391\":\"44#_2、流程监听器和节点监听器\",\"392\":\"44#_2、监听器生命周期图\",\"393\":\"44#_3、监听器使用\",\"394\":\"44#_3-1、实现以下接口\",\"395\":\"44#_3-2、开始监听器实现类例子\",\"396\":\"44#_3-3、完成监听器实现类例子\",\"397\":\"44#_3-4、分派监听器实现类例子\",\"398\":\"44#_3-5、创建监听器\",\"399\":\"44#_3-6、页面配置全局或节点监听器\",\"400\":\"44#_3-6-1、节点监听器-流程节点配置\",\"401\":\"44#_3-6-1、流程监听器-流程定义配置\",\"402\":\"44#_4、监听器参数使用\",\"403\":\"45\",\"404\":\"45#_1、mybatis-plus\",\"405\":\"45#_1-1、spring\",\"406\":\"45#_1-2、solon\",\"407\":\"45#_2、通用逻辑删除\",\"408\":\"46\",\"409\":\"46#_1、mybatis-plus\",\"410\":\"46#_2、jpa\",\"411\":\"46#_3、mybatis-flex\",\"412\":\"47\",\"413\":\"47#演示图\",\"414\":\"47#_1、新增定义\",\"415\":\"47#_2、流程设计\",\"416\":\"47#_2、1节点设置\",\"417\":\"47#_2、2跳转线设置\",\"418\":\"47#_3、开启流程实例\",\"419\":\"47#_4、提交流程\",\"420\":\"47#_5、办理流程\",\"421\":\"47#_6、驳回流程\",\"422\":\"48\",\"423\":\"48#_1、术语\",\"424\":\"48#_2、通用规则\",\"425\":\"48#_3、流程状态\",\"426\":\"48#_4、串行网关规则\",\"427\":\"48#_5、并行网关规则\",\"428\":\"48#_6、流程协作规则\",\"429\":\"49\",\"430\":\"50\",\"431\":\"50#_1、导入sql-按需求执行\",\"432\":\"50#_2、官网流程定义案例xml\",\"433\":\"50#_3、maven依赖\",\"434\":\"50#_3-1、mybatis\",\"435\":\"50#_3-2、mybatis-plus\",\"436\":\"50#_3-3、jpa\",\"437\":\"50#_3-4、mybatis-flex\",\"438\":\"50#_3-5、easy-query\",\"439\":\"50#_4、支持数据库类型\",\"440\":\"50#_5、支持orm框架类型\",\"441\":\"50#_6、代码示例\",\"442\":\"50#_7、部署流程\",\"443\":\"50#_8、发布流程\",\"444\":\"50#_9、开启流程\",\"445\":\"50#_10、流程流转\",\"446\":\"50#_11、初学者推荐学习路线\",\"447\":\"50#_11-1、推荐集成案例hh-vue\",\"448\":\"50#_11-2、推荐学习视频\",\"449\":\"51\",\"450\":\"51#表清单\",\"451\":\"51#表字段明细\",\"452\":\"51#flow-definition-流程定义表\",\"453\":\"51#flow-his-task-历史任务记录表\",\"454\":\"51#flow-instance-流程实例表\",\"455\":\"51#flow-node-流程节点表\",\"456\":\"51#flow-skip-节点跳转关联表\",\"457\":\"51#flow-task-待办任务表\",\"458\":\"51#flow-user-流程用户表\",\"459\":\"52\",\"460\":\"52#_1、mybatis-plus\",\"461\":\"52#_1-1、spring\",\"462\":\"52#_1-2、solon\",\"463\":\"52#_2、通用多租户\",\"464\":\"52#_2-1、yaml配置方式\",\"465\":\"52#_2-2、bean配置方式\",\"466\":\"52#_2-3、-component配置方式\",\"467\":\"53\",\"468\":\"54\",\"469\":\"54#_1、内置表达式\",\"470\":\"54#_2、变量替换时机\",\"471\":\"54#_3、默认办理人变量策略\",\"472\":\"54#前端页面设置变量\",\"473\":\"54#后端代码设置变量\",\"474\":\"54#_4、spel办理人变量策略\",\"475\":\"54#前端页面设置变量-1\",\"476\":\"54#后端代码设置变量-1\",\"477\":\"54#_5、扩展\",\"478\":\"55\",\"479\":\"55#_1、defservice流程定义接口\",\"480\":\"55#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"481\":\"55#_1-1、新增流程定义、流程节点和流程跳转数据\",\"482\":\"55#_1-2、保存流程节点和流程跳转数据\",\"483\":\"55#_1-3、保存流程节点和流程跳转数据\",\"484\":\"55#_1-4、导出流程定义\",\"485\":\"55#_1-5、获取流程定义\",\"486\":\"55#_1-6、删除\",\"487\":\"55#_1-7、发布\",\"488\":\"55#_1-8、取消发布\",\"489\":\"55#_1-9、复制流程\",\"490\":\"55#_1-10、获取流程图\",\"491\":\"55#_1-11、激活流程\",\"492\":\"55#_1-12、挂起流程\",\"493\":\"55#_2、insservice流程实例接口\",\"494\":\"55#_2-1、开启流程\",\"495\":\"55#_2-2、流程跳转\",\"496\":\"55#_2-3、终止流程\",\"497\":\"55#_2-4、删除流程实例\",\"498\":\"55#_2-5、激活实例\",\"499\":\"55#_2-6、挂起实例\",\"500\":\"55#_3、taskservice待办任务接口\",\"501\":\"55#_3-1、流程跳转\",\"502\":\"55#_3-2、终止流程\",\"503\":\"55#_3-3、转办\",\"504\":\"55#_3-4、委派\",\"505\":\"55#_3-5、加签\",\"506\":\"55#_3-6、减签\",\"507\":\"55#_3-7、修改办理人\",\"508\":\"55#_4、nodeservice节点接口\",\"509\":\"55#_4-1、获取下一个节点列表\",\"510\":\"55#_5、公共api接口\",\"511\":\"55#_5-1、根据id查询\",\"512\":\"55#_5-2、根据ids主键集合查询\",\"513\":\"55#_5-3、分页查询\",\"514\":\"55#_5-4、查询列表\",\"515\":\"55#_5-5、查询列表-可排序\",\"516\":\"55#_5-6、查询一条记录\",\"517\":\"55#_5-7、获取总数量\",\"518\":\"55#_5-8、判断是否存在\",\"519\":\"55#_5-8、新增\",\"520\":\"55#_5-9、根据id修改\",\"521\":\"55#_5-10、根据id删除\",\"522\":\"55#_5-11、根据entity删除\",\"523\":\"55#_5-12、根据ids批量删除\",\"524\":\"55#_5-13、批量新增\",\"525\":\"55#_5-14、批量新增\",\"526\":\"55#_5-15、批量更新\",\"527\":\"55#_5-16、id设置正序排列\",\"528\":\"55#_5-17、创建时间设置正序排列\",\"529\":\"55#_5-18、更新时间设置正序排列\",\"530\":\"55#_5-19、设置正序排列\",\"531\":\"55#_5-20、设置倒序排列\",\"532\":\"55#_5-21、用户自定义排序方案\",\"533\":\"56\",\"534\":\"56#_1、spring\",\"535\":\"56#_1-1、yaml配置方式\",\"536\":\"56#_1-2、bean配置方式\",\"537\":\"56#_2、solon\",\"538\":\"56#_2-1、yaml配置方式\",\"539\":\"56#_2-1、bean配置方式\",\"540\":\"57\",\"541\":\"57#_1、开启流程\",\"542\":\"57#_2、流程跳转\",\"543\":\"57#_3、其他请查阅核心api\",\"544\":\"58\",\"545\":\"58#_1、自定义填充器-并继承datafillhandler\",\"546\":\"58#_2、注入bean\",\"547\":\"58#_2-1、通过-component方式注入\",\"548\":\"58#_2-2、yaml配置方式\",\"549\":\"58#_2-3、-configuration-bean配置方式\",\"550\":\"59\",\"551\":\"59#_1-引入依赖\",\"552\":\"59#_2-后端放行部分路径\",\"553\":\"59#_2-1-spring-security-放行配置\",\"554\":\"59#_2-2-shiro-放行配置\",\"555\":\"59#_2-3-sa-token-放行配置\",\"556\":\"59#_3-前端加载设计器\",\"557\":\"59#_3-2-vue2-引入\",\"558\":\"59#_3-3-vue3-引入\",\"559\":\"59#_3-4-react版本-引入\",\"560\":\"59#_3-5-前后端不分离版本\",\"561\":\"59#_4-设计器办理人权限数据接入\",\"562\":\"59#_4-1-办理人权限选择弹框页面\",\"563\":\"59#_4-2-实现接口获取以上页面办理人权限数据\",\"564\":\"59#_4-2-1-handlerselectservice接口\",\"565\":\"59#_4-2-2-handlerselectserviceimpl实现类\",\"566\":\"60\",\"567\":\"60#_1、内置表达式\",\"568\":\"60#_2、spring-expression-language-spel\",\"569\":\"60#_3、自定义表达式\",\"570\":\"61\",\"571\":\"62\",\"572\":\"63\",\"573\":\"63#json库扩展-1\",\"574\":\"64\",\"575\":\"64#_1、监听器类型\",\"576\":\"64#_2、流程监听器和节点监听器\",\"577\":\"64#_2、监听器生命周期图\",\"578\":\"64#_3、监听器使用\",\"579\":\"64#_3-1、实现以下接口\",\"580\":\"64#_3-2、开始监听器实现类例子\",\"581\":\"64#_3-3、完成监听器实现类例子\",\"582\":\"64#_3-4、分派监听器实现类例子\",\"583\":\"64#_3-5、创建监听器\",\"584\":\"64#_3-6、页面配置全局或节点监听器\",\"585\":\"64#_3-6-1、节点监听器-流程节点配置\",\"586\":\"64#_3-6-1、流程监听器-流程定义配置\",\"587\":\"64#_4、监听器参数使用\",\"588\":\"65\",\"589\":\"65#_1、mybatis-plus\",\"590\":\"65#_1-1、spring\",\"591\":\"65#_1-2、solon\",\"592\":\"65#_2、通用逻辑删除\",\"593\":\"66\",\"594\":\"66#_1、mybatis-plus\",\"595\":\"66#_2、jpa\",\"596\":\"66#_3、mybatis-flex\",\"597\":\"67\",\"598\":\"67#演示图\",\"599\":\"67#_1、新增定义\",\"600\":\"67#_2、流程设计\",\"601\":\"67#_2、1节点设置\",\"602\":\"67#_2、2跳转线设置\",\"603\":\"67#_3、开启流程实例\",\"604\":\"67#_4、提交流程\",\"605\":\"67#_5、办理流程\",\"606\":\"67#_6、驳回流程\",\"607\":\"68\",\"608\":\"68#_1、术语\",\"609\":\"68#_2、通用规则\",\"610\":\"68#_3、流程状态\",\"611\":\"68#_4、串行网关规则\",\"612\":\"68#_5、并行网关规则\",\"613\":\"68#_6、流程协作规则\",\"614\":\"69\",\"615\":\"70\",\"616\":\"70#_1、导入sql-按需求执行\",\"617\":\"70#_2、官网流程定义案例xml\",\"618\":\"70#_3、maven依赖\",\"619\":\"70#_3-1、mybatis\",\"620\":\"70#_3-2、mybatis-plus\",\"621\":\"70#_3-3、jpa\",\"622\":\"70#_3-4、mybatis-flex\",\"623\":\"70#_3-5、easy-query\",\"624\":\"70#_4、支持数据库类型\",\"625\":\"70#_5、支持orm框架类型\",\"626\":\"70#_6、设计器引入\",\"627\":\"70#_7、代码示例\",\"628\":\"70#_7-1、部署流程\",\"629\":\"70#_7-2、发布流程\",\"630\":\"70#_7-3、开启流程\",\"631\":\"70#_7-4、流程流转\",\"632\":\"70#_8、初学者推荐学习路线\",\"633\":\"70#_8-1、推荐集成案例hh-vue\",\"634\":\"70#_8-2、推荐学习视频\",\"635\":\"71\",\"636\":\"71#表清单\",\"637\":\"71#表字段明细\",\"638\":\"71#flow-definition-流程定义表\",\"639\":\"71#flow-his-task-历史任务记录表\",\"640\":\"71#flow-instance-流程实例表\",\"641\":\"71#flow-node-流程节点表\",\"642\":\"71#flow-skip-节点跳转关联表\",\"643\":\"71#flow-task-待办任务表\",\"644\":\"71#flow-user-流程用户表\",\"645\":\"72\",\"646\":\"72#_1、mybatis-plus\",\"647\":\"72#_1-1、spring\",\"648\":\"72#_1-2、solon\",\"649\":\"72#_2、通用多租户\",\"650\":\"72#_2-1、yaml配置方式\",\"651\":\"72#_2-2、bean配置方式\",\"652\":\"72#_2-3、-component配置方式\",\"653\":\"73\",\"654\":\"74\",\"655\":\"74#_1、内置表达式\",\"656\":\"74#_2、变量替换时机\",\"657\":\"74#_3、默认办理人变量策略\",\"658\":\"74#前端页面设置变量\",\"659\":\"74#后端代码设置变量\",\"660\":\"74#_4、spel办理人变量策略\",\"661\":\"74#前端页面设置变量-1\",\"662\":\"74#后端代码设置变量-1\",\"663\":\"74#_5、扩展\",\"664\":\"75\",\"665\":\"75#_1、defservice流程定义接口\",\"666\":\"75#_1-1、导入流程定义\",\"667\":\"75#_1-2、保存流程定义\",\"668\":\"75#_1-3、保存流程定义\",\"669\":\"75#_1-4、导出流程定义\",\"670\":\"75#_1-5、获取流程定义\",\"671\":\"75#_1-6、删除\",\"672\":\"75#_1-7、发布\",\"673\":\"75#_1-8、取消发布\",\"674\":\"75#_1-9、复制流程\",\"675\":\"75#_1-10、获取流程图\",\"676\":\"75#_1-11、激活流程\",\"677\":\"75#_1-12、挂起流程\",\"678\":\"75#_2、insservice流程实例接口\",\"679\":\"75#_2-1、开启流程\",\"680\":\"75#_2-2、流程跳转\",\"681\":\"75#_2-3、终止流程\",\"682\":\"75#_2-4、删除流程实例\",\"683\":\"75#_2-5、激活实例\",\"684\":\"75#_2-6、挂起实例\",\"685\":\"75#_3、taskservice待办任务接口\",\"686\":\"75#_3-1、流程跳转\",\"687\":\"75#_3-2、终止流程\",\"688\":\"75#_3-3、转办\",\"689\":\"75#_3-4、委派\",\"690\":\"75#_3-5、加签\",\"691\":\"75#_3-6、减签\",\"692\":\"75#_3-7、修改办理人\",\"693\":\"75#_4、nodeservice节点接口\",\"694\":\"75#_4-1、获取下一个节点列表\",\"695\":\"75#_5、公共api接口\",\"696\":\"75#_5-1、根据id查询\",\"697\":\"75#_5-2、根据ids主键集合查询\",\"698\":\"75#_5-3、分页查询\",\"699\":\"75#_5-4、查询列表\",\"700\":\"75#_5-5、查询列表-可排序\",\"701\":\"75#_5-6、查询一条记录\",\"702\":\"75#_5-7、获取总数量\",\"703\":\"75#_5-8、判断是否存在\",\"704\":\"75#_5-8、新增\",\"705\":\"75#_5-9、根据id修改\",\"706\":\"75#_5-10、根据id删除\",\"707\":\"75#_5-11、根据entity删除\",\"708\":\"75#_5-12、根据ids批量删除\",\"709\":\"75#_5-13、批量新增\",\"710\":\"75#_5-14、批量新增\",\"711\":\"75#_5-15、批量更新\",\"712\":\"75#_5-16、id设置正序排列\",\"713\":\"75#_5-17、创建时间设置正序排列\",\"714\":\"75#_5-18、更新时间设置正序排列\",\"715\":\"75#_5-19、设置正序排列\",\"716\":\"75#_5-20、设置倒序排列\",\"717\":\"75#_5-21、用户自定义排序方案\",\"718\":\"76\",\"719\":\"76#_1、spring\",\"720\":\"76#_1-1、yaml配置方式\",\"721\":\"76#_1-2、bean配置方式\",\"722\":\"76#_2、solon\",\"723\":\"76#_2-1、yaml配置方式\",\"724\":\"76#_2-1、bean配置方式\",\"725\":\"77\",\"726\":\"77#_1、开启流程\",\"727\":\"77#_2、流程跳转\",\"728\":\"77#_3、其他请查阅核心api\",\"729\":\"78\",\"730\":\"78#_1、自定义填充器-并继承datafillhandler\",\"731\":\"78#_2、注入bean\",\"732\":\"78#_2-1、通过-component方式注入\",\"733\":\"78#_2-2、yaml配置方式\",\"734\":\"78#_2-3、-configuration-bean配置方式\",\"735\":\"79\",\"736\":\"79#_1-引入依赖\",\"737\":\"79#_2-后端放行部分路径\",\"738\":\"79#_2-1-spring-security-放行配置\",\"739\":\"79#_2-2-shiro-放行配置\",\"740\":\"79#_2-3-sa-token-放行配置\",\"741\":\"79#_3-前端加载设计器\",\"742\":\"79#_3-1-nginx-代理配置\",\"743\":\"79#_3-2-vue2-引入\",\"744\":\"79#_3-3-vue3-引入\",\"745\":\"79#_3-4-react版本-引入\",\"746\":\"79#_3-5-前后端不分离版本\",\"747\":\"79#_4-设计器办理人权限数据接入\",\"748\":\"79#_4-1-办理人权限选择弹框页面\",\"749\":\"79#_4-2-实现接口获取以上页面办理人权限数据\",\"750\":\"79#_4-2-1-handlerselectservice接口\",\"751\":\"79#_4-2-2-handlerselectserviceimpl实现类\",\"752\":\"80\",\"753\":\"80#_1、内置表达式\",\"754\":\"80#_2、spring-expression-language-spel\",\"755\":\"80#_3、自定义表达式\",\"756\":\"81\",\"757\":\"82\",\"758\":\"83\",\"759\":\"83#json库扩展-1\",\"760\":\"84\",\"761\":\"84#_1、监听器类型\",\"762\":\"84#_2、流程监听器和节点监听器\",\"763\":\"84#_2、监听器生命周期图\",\"764\":\"84#_3、监听器使用\",\"765\":\"84#_3-1、实现以下接口\",\"766\":\"84#_3-2、开始监听器实现类例子\",\"767\":\"84#_3-3、完成监听器实现类例子\",\"768\":\"84#_3-4、分派监听器实现类例子\",\"769\":\"84#_3-5、创建监听器\",\"770\":\"84#_3-6、页面配置全局或节点监听器\",\"771\":\"84#_3-6-1、节点监听器-流程节点配置\",\"772\":\"84#_3-6-1、流程监听器-流程定义配置\",\"773\":\"84#_4、监听器参数使用\",\"774\":\"85\",\"775\":\"85#_1、mybatis-plus\",\"776\":\"85#_1-1、spring\",\"777\":\"85#_1-2、solon\",\"778\":\"85#_2、通用逻辑删除\",\"779\":\"86\",\"780\":\"86#_1、mybatis-plus\",\"781\":\"86#_2、jpa\",\"782\":\"86#_3、mybatis-flex\",\"783\":\"87\",\"784\":\"87#演示图\",\"785\":\"87#_1、新增定义\",\"786\":\"87#_2、流程设计\",\"787\":\"87#_2、1节点设置\",\"788\":\"87#_2、2跳转线设置\",\"789\":\"87#_3、开启流程实例\",\"790\":\"87#_4、提交流程\",\"791\":\"87#_5、办理流程\",\"792\":\"87#_6、驳回流程\",\"793\":\"88\",\"794\":\"88#_1、术语\",\"795\":\"88#_2、通用规则\",\"796\":\"88#_3、流程状态\",\"797\":\"88#_4、串行网关规则\",\"798\":\"88#_5、并行网关规则\",\"799\":\"88#_6、流程协作规则\",\"800\":\"89\",\"801\":\"90\",\"802\":\"90#_1、导入sql-按需求执行\",\"803\":\"90#_2、官网流程定义案例xml\",\"804\":\"90#_3、maven依赖\",\"805\":\"90#_3-1、mybatis\",\"806\":\"90#_3-2、mybatis-plus\",\"807\":\"90#_3-3、jpa\",\"808\":\"90#_3-4、mybatis-flex\",\"809\":\"90#_3-5、easy-query\",\"810\":\"90#_4、支持数据库类型\",\"811\":\"90#_5、支持orm框架类型\",\"812\":\"90#_6、代码示例\",\"813\":\"90#_7、部署流程\",\"814\":\"90#_8、发布流程\",\"815\":\"90#_9、开启流程\",\"816\":\"90#_10、流程流转\",\"817\":\"90#_11、初学者推荐学习路线\",\"818\":\"90#_11-1、推荐集成案例hh-vue\",\"819\":\"90#_11-2、推荐学习视频\",\"820\":\"91\",\"821\":\"91#表清单\",\"822\":\"91#表字段明细\",\"823\":\"91#flow-definition-流程定义表\",\"824\":\"91#flow-his-task-历史任务记录表\",\"825\":\"91#flow-instance-流程实例表\",\"826\":\"91#flow-node-流程节点表\",\"827\":\"91#flow-skip-节点跳转关联表\",\"828\":\"91#flow-task-待办任务表\",\"829\":\"91#flow-user-流程用户表\",\"830\":\"92\",\"831\":\"92#_1、mybatis-plus\",\"832\":\"92#_1-1、spring\",\"833\":\"92#_1-2、solon\",\"834\":\"92#_2、通用多租户\",\"835\":\"92#_2-1、yaml配置方式\",\"836\":\"92#_2-2、bean配置方式\",\"837\":\"92#_2-3、-component配置方式\",\"838\":\"93\",\"839\":\"94\",\"840\":\"94#_1、内置表达式\",\"841\":\"94#_2、变量替换时机\",\"842\":\"94#_3、默认办理人变量策略\",\"843\":\"94#前端页面设置变量\",\"844\":\"94#后端代码设置变量\",\"845\":\"94#_4、spel办理人变量策略\",\"846\":\"94#前端页面设置变量-1\",\"847\":\"94#后端代码设置变量-1\",\"848\":\"94#_5、扩展\",\"849\":\"95\",\"850\":\"95#_1、defservice流程定义接口\",\"851\":\"95#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"852\":\"95#_1-1、导入流程定义、流程节点和流程跳转数据\",\"853\":\"95#_1-2、保存流程节点和流程跳转数据\",\"854\":\"95#_1-3、保存流程节点和流程跳转数据\",\"855\":\"95#_1-4、导出流程定义\",\"856\":\"95#_1-5、获取流程定义\",\"857\":\"95#_1-6、删除\",\"858\":\"95#_1-7、发布\",\"859\":\"95#_1-8、取消发布\",\"860\":\"95#_1-9、复制流程\",\"861\":\"95#_1-10、获取流程图\",\"862\":\"95#_1-11、激活流程\",\"863\":\"95#_1-12、挂起流程\",\"864\":\"95#_2、insservice流程实例接口\",\"865\":\"95#_2-1、开启流程\",\"866\":\"95#_2-2、流程跳转\",\"867\":\"95#_2-3、终止流程\",\"868\":\"95#_2-4、删除流程实例\",\"869\":\"95#_2-5、激活实例\",\"870\":\"95#_2-6、挂起实例\",\"871\":\"95#_3、taskservice待办任务接口\",\"872\":\"95#_3-1、流程跳转\",\"873\":\"95#_3-2、终止流程\",\"874\":\"95#_3-3、转办\",\"875\":\"95#_3-4、委派\",\"876\":\"95#_3-5、加签\",\"877\":\"95#_3-6、减签\",\"878\":\"95#_3-7、修改办理人\",\"879\":\"95#_4、nodeservice节点接口\",\"880\":\"95#_4-1、获取下一个节点列表\",\"881\":\"95#_5、公共api接口\",\"882\":\"95#_5-1、根据id查询\",\"883\":\"95#_5-2、根据ids主键集合查询\",\"884\":\"95#_5-3、分页查询\",\"885\":\"95#_5-4、查询列表\",\"886\":\"95#_5-5、查询列表-可排序\",\"887\":\"95#_5-6、查询一条记录\",\"888\":\"95#_5-7、获取总数量\",\"889\":\"95#_5-8、判断是否存在\",\"890\":\"95#_5-8、新增\",\"891\":\"95#_5-9、根据id修改\",\"892\":\"95#_5-10、根据id删除\",\"893\":\"95#_5-11、根据entity删除\",\"894\":\"95#_5-12、根据ids批量删除\",\"895\":\"95#_5-13、批量新增\",\"896\":\"95#_5-14、批量新增\",\"897\":\"95#_5-15、批量更新\",\"898\":\"95#_5-16、id设置正序排列\",\"899\":\"95#_5-17、创建时间设置正序排列\",\"900\":\"95#_5-18、更新时间设置正序排列\",\"901\":\"95#_5-19、设置正序排列\",\"902\":\"95#_5-20、设置倒序排列\",\"903\":\"95#_5-21、用户自定义排序方案\",\"904\":\"96\",\"905\":\"96#_1、spring\",\"906\":\"96#_1-1、yaml配置方式\",\"907\":\"96#_1-2、bean配置方式\",\"908\":\"96#_2、solon\",\"909\":\"96#_2-1、yaml配置方式\",\"910\":\"96#_2-1、bean配置方式\",\"911\":\"97\",\"912\":\"97#_1、开启流程\",\"913\":\"97#_2、流程跳转\",\"914\":\"97#_3、其他请查阅核心api\",\"915\":\"98\",\"916\":\"98#_1、自定义填充器-并继承datafillhandler\",\"917\":\"98#_2、注入bean\",\"918\":\"98#_2-1、通过-component方式注入\",\"919\":\"98#_2-2、yaml配置方式\",\"920\":\"98#_2-3、-configuration-bean配置方式\",\"921\":\"99\",\"922\":\"99#_1-引入依赖\",\"923\":\"99#_2-后端放行部分路径\",\"924\":\"99#_2-1-spring-security-放行配置\",\"925\":\"99#_2-2-shiro-放行配置\",\"926\":\"99#_2-3-sa-token-放行配置\",\"927\":\"99#_3-前端加载设计器\",\"928\":\"99#_3-2-vue2-引入\",\"929\":\"99#_3-3-vue3-引入\",\"930\":\"99#_3-4-react版本-引入\",\"931\":\"99#_3-5-前后端不分离版本\",\"932\":\"99#_4-设计器办理人权限数据接入\",\"933\":\"99#_4-1-办理人权限选择弹框页面\",\"934\":\"99#_4-2-实现接口获取以上页面办理人权限数据\",\"935\":\"99#_4-2-1-handlerselectservice接口\",\"936\":\"99#_4-2-2-handlerselectserviceimpl实现类\",\"937\":\"99#_5-共享后端权限-如token\",\"938\":\"99#_6-设计器二开\",\"939\":\"99#_6-1-下载设计器源码-改造\",\"940\":\"99#_6-2-源码调试\",\"941\":\"99#_6-3-部署\",\"942\":\"99#_6-3-1-先排除原依赖的前端代码\",\"943\":\"99#_6-3-2-设计器不分离部署-部署方案一\",\"944\":\"99#_6-3-2-设计器独立部署-分离部署-部署方案二\",\"945\":\"100\",\"946\":\"100#_1、内置表达式\",\"947\":\"100#_2、spring-expression-language-spel\",\"948\":\"100#_3、自定义表达式\",\"949\":\"101\",\"950\":\"102\",\"951\":\"103\",\"952\":\"103#json库扩展-1\",\"953\":\"104\",\"954\":\"104#_1、监听器类型\",\"955\":\"104#_2、流程监听器和节点监听器\",\"956\":\"104#_2、监听器生命周期图\",\"957\":\"104#_3、监听器使用\",\"958\":\"104#_3-1、实现以下接口\",\"959\":\"104#_3-2、开始监听器实现类例子\",\"960\":\"104#_3-3、完成监听器实现类例子\",\"961\":\"104#_3-4、分派监听器实现类例子\",\"962\":\"104#_3-5、创建监听器\",\"963\":\"104#_3-6、页面配置全局或节点监听器\",\"964\":\"104#_3-6-1、节点监听器-流程节点配置\",\"965\":\"104#_3-6-1、流程监听器-流程定义配置\",\"966\":\"104#_4、监听器参数使用\",\"967\":\"105\",\"968\":\"105#_1、mybatis-plus\",\"969\":\"105#_1-1、spring\",\"970\":\"105#_1-2、solon\",\"971\":\"105#_2、通用逻辑删除\",\"972\":\"106\",\"973\":\"106#_1、mybatis-plus\",\"974\":\"106#_2、jpa\",\"975\":\"106#_3、mybatis-flex\",\"976\":\"107\",\"977\":\"107#演示图\",\"978\":\"107#_1、新增定义\",\"979\":\"107#_2、流程设计\",\"980\":\"107#_2、1节点设置\",\"981\":\"107#_2、2跳转线设置\",\"982\":\"107#_3、开启流程实例\",\"983\":\"107#_4、提交流程\",\"984\":\"107#_5、办理流程\",\"985\":\"107#_6、驳回流程\",\"986\":\"108\",\"987\":\"108#_1、术语\",\"988\":\"108#_2、通用规则\",\"989\":\"108#_3、流程状态\",\"990\":\"108#_4、串行网关规则\",\"991\":\"108#_5、并行网关规则\",\"992\":\"108#_6、流程协作规则\",\"993\":\"109\",\"994\":\"110\",\"995\":\"110#_1、导入sql-按需求执行\",\"996\":\"110#_2、官网流程定义案例xml\",\"997\":\"110#_3、maven依赖\",\"998\":\"110#_3-1、mybatis\",\"999\":\"110#_3-2、mybatis-plus\",\"1000\":\"110#_3-3、jpa\",\"1001\":\"110#_3-4、mybatis-flex\",\"1002\":\"110#_3-5、easy-query\",\"1003\":\"110#_4、支持数据库类型\",\"1004\":\"110#_5、支持orm框架类型\",\"1005\":\"110#_6、设计器引入\",\"1006\":\"110#_7、代码示例\",\"1007\":\"110#_7-1、部署流程\",\"1008\":\"110#_7-2、发布流程\",\"1009\":\"110#_7-3、开启流程\",\"1010\":\"110#_7-4、流程流转\",\"1011\":\"110#_8、初学者推荐学习路线\",\"1012\":\"110#_8-1、推荐集成案例hh-vue\",\"1013\":\"110#_8-2、推荐学习视频\",\"1014\":\"111\",\"1015\":\"111#表清单\",\"1016\":\"111#表字段明细\",\"1017\":\"111#flow-definition-流程定义表\",\"1018\":\"111#flow-his-task-历史任务记录表\",\"1019\":\"111#flow-instance-流程实例表\",\"1020\":\"111#flow-node-流程节点表\",\"1021\":\"111#flow-skip-节点跳转关联表\",\"1022\":\"111#flow-task-待办任务表\",\"1023\":\"111#flow-user-流程用户表\",\"1024\":\"112\",\"1025\":\"112#_1、mybatis-plus\",\"1026\":\"112#_1-1、spring\",\"1027\":\"112#_1-2、solon\",\"1028\":\"112#_2、通用多租户\",\"1029\":\"112#_2-1、yaml配置方式\",\"1030\":\"112#_2-2、bean配置方式\",\"1031\":\"112#_2-3、-component配置方式\",\"1032\":\"113\",\"1033\":\"114\",\"1034\":\"114#_1、内置表达式\",\"1035\":\"114#_2、变量替换时机\",\"1036\":\"114#_3、默认办理人变量策略\",\"1037\":\"114#前端页面设置变量\",\"1038\":\"114#后端代码设置变量\",\"1039\":\"114#_4、spel办理人变量策略\",\"1040\":\"114#前端页面设置变量-1\",\"1041\":\"114#后端代码设置变量-1\",\"1042\":\"114#_5、扩展\",\"1043\":\"115\",\"1044\":\"115#_1、defservice流程定义接口\",\"1045\":\"115#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"1046\":\"115#_1-2、新增流程定义-并初始化流程节点和流程跳转数据\",\"1047\":\"115#_1-3、导入流程定义、流程节点和流程跳转数据\",\"1048\":\"115#_1-4、保存流程节点和流程跳转数据\",\"1049\":\"115#_1-5、保存流程节点和流程跳转数据\",\"1050\":\"115#_1-6、导出流程定义\",\"1051\":\"115#_1-7、获取流程定义\",\"1052\":\"115#_1-8、删除\",\"1053\":\"115#_1-9、发布\",\"1054\":\"115#_1-10、取消发布\",\"1055\":\"115#_1-11、复制流程\",\"1056\":\"115#_1-12、获取流程图\",\"1057\":\"115#_1-13、激活流程\",\"1058\":\"115#_1-14、挂起流程\",\"1059\":\"115#_2、insservice流程实例接口\",\"1060\":\"115#_2-1、开启流程\",\"1061\":\"115#_2-2、流程跳转\",\"1062\":\"115#_2-3、终止流程\",\"1063\":\"115#_2-4、删除流程实例\",\"1064\":\"115#_2-5、激活实例\",\"1065\":\"115#_2-6、挂起实例\",\"1066\":\"115#_2-7、根据流程定义id集合-查询流程实例集合\",\"1067\":\"115#_3、taskservice待办任务接口\",\"1068\":\"115#_3-1、流程跳转\",\"1069\":\"115#_3-2、终止流程\",\"1070\":\"115#_3-3、转办\",\"1071\":\"115#_3-4、委派\",\"1072\":\"115#_3-5、加签\",\"1073\":\"115#_3-6、减签\",\"1074\":\"115#_3-7、修改办理人\",\"1075\":\"115#_4、nodeservice节点接口\",\"1076\":\"115#_4-1、获取下一个节点列表\",\"1077\":\"115#_5、公共api接口\",\"1078\":\"115#_5-1、根据id查询\",\"1079\":\"115#_5-2、根据ids主键集合查询\",\"1080\":\"115#_5-3、分页查询\",\"1081\":\"115#_5-4、查询列表\",\"1082\":\"115#_5-5、查询列表-可排序\",\"1083\":\"115#_5-6、查询一条记录\",\"1084\":\"115#_5-7、获取总数量\",\"1085\":\"115#_5-8、判断是否存在\",\"1086\":\"115#_5-8、新增\",\"1087\":\"115#_5-9、根据id修改\",\"1088\":\"115#_5-10、根据id删除\",\"1089\":\"115#_5-11、根据entity删除\",\"1090\":\"115#_5-12、根据ids批量删除\",\"1091\":\"115#_5-13、批量新增\",\"1092\":\"115#_5-14、批量新增\",\"1093\":\"115#_5-15、批量更新\",\"1094\":\"115#_5-16、id设置正序排列\",\"1095\":\"115#_5-17、创建时间设置正序排列\",\"1096\":\"115#_5-18、更新时间设置正序排列\",\"1097\":\"115#_5-19、设置正序排列\",\"1098\":\"115#_5-20、设置倒序排列\",\"1099\":\"115#_5-21、用户自定义排序方案\",\"1100\":\"116\",\"1101\":\"116#_1、内置表达式\",\"1102\":\"116#_2、匹配规则\",\"1103\":\"117\",\"1104\":\"117#_1、spring\",\"1105\":\"117#_1-1、yaml配置方式\",\"1106\":\"117#_1-2、bean配置方式\",\"1107\":\"117#_2、solon\",\"1108\":\"117#_2-1、yaml配置方式\",\"1109\":\"117#_2-1、bean配置方式\",\"1110\":\"118\",\"1111\":\"118#_1、开启流程\",\"1112\":\"118#_2、流程跳转\",\"1113\":\"118#_3、其他请查阅核心api\",\"1114\":\"119\",\"1115\":\"119#_1、自定义填充器-并继承datafillhandler\",\"1116\":\"119#_2、注入bean\",\"1117\":\"119#_2-1、通过-component方式注入\",\"1118\":\"119#_2-2、yaml配置方式\",\"1119\":\"119#_2-3、-configuration-bean配置方式\",\"1120\":\"120\",\"1121\":\"120#_1-引入依赖\",\"1122\":\"120#springboot\",\"1123\":\"120#solon\",\"1124\":\"120#_2-后端放行部分路径\",\"1125\":\"120#_2-1-spring-security-放行配置\",\"1126\":\"120#_2-2-shiro-放行配置\",\"1127\":\"120#_2-3-sa-token-放行配置\",\"1128\":\"120#_3-前端加载设计器\",\"1129\":\"120#_3-2-vue2-引入\",\"1130\":\"120#_3-3-vue3-引入\",\"1131\":\"120#_3-4-react版本-引入\",\"1132\":\"120#_3-5-前后端不分离版本\",\"1133\":\"120#_4-设计器办理人权限数据接入\",\"1134\":\"120#_4-1-办理人权限选择弹框页面\",\"1135\":\"120#_4-2-实现接口获取以上页面办理人权限数据\",\"1136\":\"120#_4-2-1-handlerselectservice接口\",\"1137\":\"120#_4-2-2-handlerselectserviceimpl实现类\",\"1138\":\"120#_5-共享后端权限-如token\",\"1139\":\"121\",\"1140\":\"121#_1-下载设计器源码-改造\",\"1141\":\"121#_2-源码调试\",\"1142\":\"121#_3-部署\",\"1143\":\"121#_3-1-先排除原依赖的前端代码\",\"1144\":\"121#_3-2-设计器不分离部署-部署方案一\",\"1145\":\"121#_3-3-设计器独立部署-分离部署-部署方案二\",\"1146\":\"122\",\"1147\":\"122#_1、内置表达式\",\"1148\":\"122#_2、spring-expression-language-spel\",\"1149\":\"122#_3、自定义表达式\",\"1150\":\"123\",\"1151\":\"123#_1、表达式公共接口\",\"1152\":\"123#_2、注册表达式实现类\",\"1153\":\"123#_3、办理人变量表达式\",\"1154\":\"123#_3-1、办理人变量表达式接口\",\"1155\":\"123#_3-2、办理人变量表达式实现类\",\"1156\":\"123#_4-监听器表达式\",\"1157\":\"123#_4-1、监听器表达式接口\",\"1158\":\"123#_4-2、监听器表达式实现类\",\"1159\":\"123#_5、条件表达式\",\"1160\":\"123#_5-1、条件表达式接口\",\"1161\":\"123#_5-2、条件表达式抽象类\",\"1162\":\"123#_5-3、条件表达式实现类\",\"1163\":\"124\",\"1164\":\"125\",\"1165\":\"126\",\"1166\":\"126#json库扩展-1\",\"1167\":\"127\",\"1168\":\"127#_1、监听器大类\",\"1169\":\"127#_2、监听器小类\",\"1170\":\"127#_3、监听器设置\",\"1171\":\"127#_4、匹配规则\",\"1172\":\"127#_5、监听器生命周期图\",\"1173\":\"127#_5、节点和流程监听器\",\"1174\":\"127#_5-1、实现以下接口\",\"1175\":\"127#_5-2、开始监听器实现类例子\",\"1176\":\"127#_5-3、完成监听器实现类例子\",\"1177\":\"127#_5-4、分派监听器实现类例子\",\"1178\":\"127#_5-5、创建监听器\",\"1179\":\"127#_5-6、页面配置全局或节点监听器\",\"1180\":\"127#_5-6-1、节点监听器-流程节点配置\",\"1181\":\"127#_5-6-1、流程监听器-流程定义配置\",\"1182\":\"127#_6、全局监听器\",\"1183\":\"127#_7、监听器参数使用\",\"1184\":\"128\",\"1185\":\"128#_1、mybatis-plus\",\"1186\":\"128#_1-1、spring\",\"1187\":\"128#_1-2、solon\",\"1188\":\"128#_2、通用逻辑删除\",\"1189\":\"129\",\"1190\":\"129#_1、mybatis-plus\",\"1191\":\"129#_2、jpa\",\"1192\":\"129#_3、mybatis-flex\",\"1193\":\"130\",\"1194\":\"130#_1、permissionhandler接口\",\"1195\":\"130#_2、编写permissionhandler实现类\",\"1196\":\"131\",\"1197\":\"131#演示图\",\"1198\":\"131#_1、新增定义\",\"1199\":\"131#_2、流程设计\",\"1200\":\"131#_2、1节点设置\",\"1201\":\"131#_2、2跳转线设置\",\"1202\":\"131#_3、开启流程实例\",\"1203\":\"131#_4、提交流程\",\"1204\":\"131#_5、办理流程\",\"1205\":\"131#_6、驳回流程\",\"1206\":\"132\",\"1207\":\"132#_1、术语\",\"1208\":\"132#_2、通用规则\",\"1209\":\"132#_3、流程状态\",\"1210\":\"132#_4、串行网关规则\",\"1211\":\"132#_5、并行网关规则\",\"1212\":\"132#_6、流程协作规则\",\"1213\":\"133\",\"1214\":\"133#_1、术语\",\"1215\":\"133#_2、通用规则\",\"1216\":\"133#_3、流程状态\",\"1217\":\"133#_4、串行网关规则\",\"1218\":\"133#_5、并行网关规则\",\"1219\":\"133#_6、流程协作规则\",\"1220\":\"134\",\"1221\":\"134#_1、导入sql-按需求执行\",\"1222\":\"134#_2、官网流程定义案例xml\",\"1223\":\"134#_3、maven依赖\",\"1224\":\"134#_3-1、mybatis\",\"1225\":\"134#_3-2、mybatis-plus\",\"1226\":\"134#_3-3、jpa\",\"1227\":\"134#_3-4、mybatis-flex\",\"1228\":\"134#_3-5、easy-query\",\"1229\":\"134#_4、代码示例\",\"1230\":\"134#_4-1、部署流程\",\"1231\":\"134#_4-2、发布流程\",\"1232\":\"134#_4-3、开启流程\",\"1233\":\"134#_4-4、流程流转\",\"1234\":\"134#_5、设计器引入\",\"1235\":\"134#_6、初学者推荐学习路线\",\"1236\":\"134#_6-1、推荐集成案例hh-vue\",\"1237\":\"134#_6-2、推荐学习视频\",\"1238\":\"135\",\"1239\":\"135#表清单\",\"1240\":\"135#表字段明细\",\"1241\":\"135#flow-definition-流程定义表\",\"1242\":\"135#flow-his-task-历史任务记录表\",\"1243\":\"135#flow-instance-流程实例表\",\"1244\":\"135#flow-node-流程节点表\",\"1245\":\"135#flow-skip-节点跳转关联表\",\"1246\":\"135#flow-task-待办任务表\",\"1247\":\"135#flow-user-流程用户表\",\"1248\":\"136\",\"1249\":\"136#_1、mybatis-plus\",\"1250\":\"136#_1-1、spring\",\"1251\":\"136#_1-2、solon\",\"1252\":\"136#_2、通用多租户\",\"1253\":\"136#_2-1、yaml配置方式\",\"1254\":\"136#_2-2、bean配置方式\",\"1255\":\"136#_2-3、-component配置方式\",\"1256\":\"137\",\"1257\":\"138\",\"1258\":\"138#_1、特点\",\"1259\":\"138#_2、内置表达式\",\"1260\":\"138#_3、匹配规则\",\"1261\":\"138#_4、变量替换时机\",\"1262\":\"138#_5、默认办理人变量策略\",\"1263\":\"138#前端页面设置变量\",\"1264\":\"138#后端代码设置变量\",\"1265\":\"138#_6、spel办理人变量策略\",\"1266\":\"138#前端页面设置变量-1\",\"1267\":\"138#后端代码设置变量-1\",\"1268\":\"139\",\"1269\":\"139#_1、监听器大类\",\"1270\":\"139#_2、监听器小类\",\"1271\":\"139#_3、监听器设置\",\"1272\":\"139#_4、匹配规则\",\"1273\":\"139#_5、监听器生命周期图\",\"1274\":\"139#_5、节点和流程监听器\",\"1275\":\"139#_5-1、实现以下接口\",\"1276\":\"139#_5-2、开始监听器实现类例子\",\"1277\":\"139#_5-3、完成监听器实现类例子\",\"1278\":\"139#_5-4、分派监听器实现类例子\",\"1279\":\"139#_5-5、创建监听器\",\"1280\":\"139#_5-6、页面配置全局或节点监听器\",\"1281\":\"139#_5-6-1、节点监听器-流程节点配置\",\"1282\":\"139#_5-6-1、流程监听器-流程定义配置\",\"1283\":\"139#_6、全局监听器\",\"1284\":\"139#_7、监听器参数使用\",\"1285\":\"140\",\"1286\":\"140#_1、mybatis-plus\",\"1287\":\"140#_1-1、spring\",\"1288\":\"140#_1-2、solon\",\"1289\":\"140#_2、通用逻辑删除\",\"1290\":\"141\",\"1291\":\"141#_1、mybatis-plus\",\"1292\":\"141#_2、jpa\",\"1293\":\"141#_3、mybatis-flex\",\"1294\":\"142\",\"1295\":\"142#_1、permissionhandler接口\",\"1296\":\"142#_2、编写permissionhandler实现类\",\"1297\":\"143\",\"1298\":\"143#_1、mybatis-plus\",\"1299\":\"143#_1-1、spring\",\"1300\":\"143#_1-2、solon\",\"1301\":\"143#_2、通用多租户\",\"1302\":\"143#_2-1、yaml配置方式\",\"1303\":\"143#_2-2、bean配置方式\",\"1304\":\"143#_2-3、-component配置方式\",\"1305\":\"144\",\"1306\":\"144#_1、特点\",\"1307\":\"144#_2、内置表达式\",\"1308\":\"144#_3、匹配规则\",\"1309\":\"144#_4、变量替换时机\",\"1310\":\"144#_5、默认办理人变量策略\",\"1311\":\"144#前端页面设置变量\",\"1312\":\"144#后端代码设置变量\",\"1313\":\"144#_6、spel办理人变量策略\",\"1314\":\"144#前端页面设置变量-1\",\"1315\":\"144#后端代码设置变量-1\",\"1316\":\"144#_7、办理人选择项接口\",\"1317\":\"145\",\"1318\":\"145#_1、表达式公共接口\",\"1319\":\"145#_2、注册表达式实现类\",\"1320\":\"145#_3、条件表达式\",\"1321\":\"145#_3-1、条件表达式接口\",\"1322\":\"145#_3-2、条件表达式抽象类\",\"1323\":\"145#_3-3、条件表达式实现类\",\"1324\":\"146\",\"1325\":\"146#_1、开启流程\",\"1326\":\"146#_2、流程跳转\",\"1327\":\"146#_3、其他请查阅核心api\",\"1328\":\"147\",\"1329\":\"147#_1-下载设计器源码-改造\",\"1330\":\"147#_2-源码调试\",\"1331\":\"147#_3-部署\",\"1332\":\"147#_3-1-先排除原依赖的前端代码\",\"1333\":\"147#_3-2-设计器不分离部署-部署方案一\",\"1334\":\"147#_3-3-设计器独立部署-分离部署-部署方案二\",\"1335\":\"148\",\"1336\":\"149\",\"1337\":\"149#json库扩展-1\",\"1338\":\"150\",\"1339\":\"150#_1、表达式公共接口\",\"1340\":\"150#_2、注册表达式实现类\",\"1341\":\"150#_3-监听器表达式\",\"1342\":\"150#_3-1、监听器表达式接口\",\"1343\":\"150#_3-2、监听器表达式实现类\",\"1344\":\"151\",\"1345\":\"151#_1、表达式公共接口\",\"1346\":\"151#_2、注册表达式实现类\",\"1347\":\"151#_3、办理人变量表达式\",\"1348\":\"151#_3-1、办理人变量表达式接口\",\"1349\":\"151#_3-2、办理人变量表达式实现类\",\"1350\":\"152\",\"1351\":\"153\",\"1352\":\"153#参与贡献\",\"1353\":\"153#为开源项目点一个star\",\"1354\":\"153#为社区处理问题\",\"1355\":\"153#改进社区文档-文档仓库\",\"1356\":\"153#贡献代码\",\"1357\":\"153#如何成为项目贡献者\",\"1358\":\"153#项目贡献者待遇\",\"1359\":\"153#提交pr\",\"1360\":\"153#步骤一-fork项目到自己仓库\",\"1361\":\"153#步骤二-基于dev分支-新建一个此pr功能点的专属分支\",\"1362\":\"153#步骤三-使用git工具-将自己仓库的项目拉去到本地做代码编写\",\"1363\":\"153#步骤四-使用idea打开项目-切换到新建的功能分支\",\"1364\":\"153#步骤五-设置创建类的模板\",\"1365\":\"153#步骤六-将编写好的代码-提交到自己的远程仓库\",\"1366\":\"153#步骤七-创建pr申请-此操作在自己仓库或者要pr的仓库都可以\",\"1367\":\"153#步骤八-等待作者评审-按要求更改-直到没有问题后被作者合并\",\"1368\":\"154\",\"1369\":\"154#_1、项目介绍\",\"1370\":\"154#_2、演示地址\",\"1371\":\"154#_3、开源协议\",\"1372\":\"154#_4、应用场景\",\"1373\":\"154#_5、支持数据库类型\",\"1374\":\"154#_6、支持orm框架类型\",\"1375\":\"154#_7、特别赞助\",\"1376\":\"154#_8、你可以请作者喝杯咖啡表示鼓励\",\"1377\":\"155\",\"1378\":\"155#演示地址\",\"1379\":\"155#演示图\",\"1380\":\"155#_1、新增定义\",\"1381\":\"155#_2、流程设计\",\"1382\":\"155#_2、1节点设置\",\"1383\":\"155#_2、2跳转线设置\",\"1384\":\"155#_3、开启流程实例\",\"1385\":\"155#_4、提交流程\",\"1386\":\"155#_5、办理流程\",\"1387\":\"155#_6、驳回流程\",\"1388\":\"156\",\"1389\":\"157\",\"1390\":\"157#捐赠列表\",\"1391\":\"158\",\"1392\":\"158#_1、defservice流程定义接口\",\"1393\":\"158#_1-1、新增流程定义表数据-新增后需要通过savexml接口保存流程节点和流程跳转数据\",\"1394\":\"158#_1-2、新增流程定义-并初始化流程节点和流程跳转数据\",\"1395\":\"158#_1-3、导入流程定义、流程节点和流程跳转数据\",\"1396\":\"158#_1-4、保存流程节点和流程跳转数据\",\"1397\":\"158#_1-5、保存流程节点和流程跳转数据\",\"1398\":\"158#_1-6、导出流程定义\",\"1399\":\"158#_1-7、获取流程定义\",\"1400\":\"158#_1-8、删除\",\"1401\":\"158#_1-9、发布\",\"1402\":\"158#_1-10、取消发布\",\"1403\":\"158#_1-11、复制流程\",\"1404\":\"158#_1-12、获取流程图\",\"1405\":\"158#_1-13、激活流程\",\"1406\":\"158#_1-14、挂起流程\",\"1407\":\"158#_1-15、获取流程定义\",\"1408\":\"158#_1-16、查询流程设计所需的数据-比如流程图渲染-导出流程定义\",\"1409\":\"158#_2、insservice流程实例接口\",\"1410\":\"158#_2-1、开启流程\",\"1411\":\"158#_2-2、流程跳转\",\"1412\":\"158#_2-3、终止流程\",\"1413\":\"158#_2-4、删除流程实例\",\"1414\":\"158#_2-5、激活实例\",\"1415\":\"158#_2-6、挂起实例\",\"1416\":\"158#_2-7、根据流程定义id集合-查询流程实例集合\",\"1417\":\"158#_3、taskservice待办任务接口\",\"1418\":\"158#_3-1、流程跳转\",\"1419\":\"158#_3-2、终止流程\",\"1420\":\"158#_3-3、转办\",\"1421\":\"158#_3-4、委派\",\"1422\":\"158#_3-5、加签\",\"1423\":\"158#_3-6、减签\",\"1424\":\"158#_3-7、修改办理人\",\"1425\":\"158#_4、nodeservice节点接口\",\"1426\":\"158#_4-1、获取下一个节点列表\",\"1427\":\"158#_5、公共api接口\",\"1428\":\"158#_5-1、根据id查询\",\"1429\":\"158#_5-2、根据ids主键集合查询\",\"1430\":\"158#_5-3、分页查询\",\"1431\":\"158#_5-4、查询列表\",\"1432\":\"158#_5-5、查询列表-可排序\",\"1433\":\"158#_5-6、查询一条记录\",\"1434\":\"158#_5-7、获取总数量\",\"1435\":\"158#_5-8、判断是否存在\",\"1436\":\"158#_5-8、新增\",\"1437\":\"158#_5-9、根据id修改\",\"1438\":\"158#_5-10、根据id删除\",\"1439\":\"158#_5-11、根据entity删除\",\"1440\":\"158#_5-12、根据ids批量删除\",\"1441\":\"158#_5-13、批量新增\",\"1442\":\"158#_5-14、批量新增\",\"1443\":\"158#_5-15、批量更新\",\"1444\":\"158#_5-16、id设置正序排列\",\"1445\":\"158#_5-17、创建时间设置正序排列\",\"1446\":\"158#_5-18、更新时间设置正序排列\",\"1447\":\"158#_5-19、设置正序排列\",\"1448\":\"158#_5-20、设置倒序排列\",\"1449\":\"158#_5-21、用户自定义排序方案\",\"1450\":\"159\",\"1451\":\"159#_1、流程协作规则\",\"1452\":\"159#_2、使用演示\",\"1453\":\"159#_2-1、或签\",\"1454\":\"159#_2-2、票签签\",\"1455\":\"159#_2-3、会签\",\"1456\":\"160\",\"1457\":\"160#_1、内置表达式类型\",\"1458\":\"160#_2、匹配规则\",\"1459\":\"161\",\"1460\":\"161#_1、spring\",\"1461\":\"161#_1-1、yaml配置方式\",\"1462\":\"161#_1-2、bean配置方式\",\"1463\":\"161#_2、solon\",\"1464\":\"161#_2-1、yaml配置方式\",\"1465\":\"161#_2-1、bean配置方式\",\"1466\":\"162\",\"1467\":\"162#_1、自定义填充器-并继承datafillhandler\",\"1468\":\"162#_2、注入bean\",\"1469\":\"162#_2-1、通过-component方式注入\",\"1470\":\"162#_2-2、yaml配置方式\",\"1471\":\"162#_2-3、-configuration-bean配置方式\",\"1472\":\"163\",\"1473\":\"163#_1-引入依赖\",\"1474\":\"163#springboot\",\"1475\":\"163#solon\",\"1476\":\"163#_2-后端放行部分路径\",\"1477\":\"163#_2-1-spring-security-放行配置\",\"1478\":\"163#_2-2-shiro-放行配置\",\"1479\":\"163#_2-3-sa-token-放行配置\",\"1480\":\"163#_3-前端加载设计器\",\"1481\":\"163#_3-2-vue2-引入\",\"1482\":\"163#_3-3-vue3-引入\",\"1483\":\"163#_3-4-react版本-引入\",\"1484\":\"163#_3-5-前后端不分离版本\",\"1485\":\"163#_4-设计器办理人权限数据接入\",\"1486\":\"163#_4-1-办理人权限选择弹框页面\",\"1487\":\"163#_4-2-实现接口获取以上页面办理人权限数据\",\"1488\":\"163#_4-2-1-handlerselectservice接口\",\"1489\":\"163#_4-2-2-handlerselectserviceimpl实现类\",\"1490\":\"163#_5-共享后端权限-如token\",\"1491\":\"164\",\"1492\":\"164#_1、变更支持的类型\",\"1493\":\"164#_2、接口描述\",\"1494\":\"164#_3、代码示例\",\"1495\":\"165\",\"1496\":\"165#_1、术语\",\"1497\":\"165#_2、通用规则\",\"1498\":\"165#_3、流程状态\",\"1499\":\"165#_4、串行网关规则\",\"1500\":\"165#_5、并行网关规则\",\"1501\":\"166\",\"1502\":\"166#_1、导入sql-按需求执行\",\"1503\":\"166#_2、官网流程定义案例xml\",\"1504\":\"166#_3、maven依赖\",\"1505\":\"166#_3-1、mybatis\",\"1506\":\"166#_3-2、mybatis-plus\",\"1507\":\"166#_3-3、jpa\",\"1508\":\"166#_3-4、mybatis-flex\",\"1509\":\"166#_3-5、easy-query\",\"1510\":\"166#_4、代码示例\",\"1511\":\"166#_4-1、部署流程\",\"1512\":\"166#_4-2、发布流程\",\"1513\":\"166#_4-3、开启流程\",\"1514\":\"166#_4-4、流程流转\",\"1515\":\"166#_5、设计器引入\",\"1516\":\"166#_6、初学者推荐学习路线\",\"1517\":\"166#_6-1、推荐集成案例hh-vue\",\"1518\":\"166#_6-2、推荐学习视频\",\"1519\":\"167\",\"1520\":\"167#表清单\",\"1521\":\"167#表字段明细\",\"1522\":\"167#flow-definition-流程定义表\",\"1523\":\"167#flow-his-task-历史任务记录表\",\"1524\":\"167#flow-instance-流程实例表\",\"1525\":\"167#flow-node-流程节点表\",\"1526\":\"167#flow-skip-节点跳转关联表\",\"1527\":\"167#flow-task-待办任务表\",\"1528\":\"167#flow-user-流程用户表\",\"1529\":\"168\",\"1530\":\"169\",\"1531\":\"170\",\"1532\":\"170#vip群\",\"1533\":\"170#私人服务\",\"1534\":\"170#特别赞助\",\"1535\":\"171\",\"1536\":\"172\",\"1537\":\"172#_1、id精度丢失\",\"1538\":\"172#_2、流程图片中文乱码\",\"1539\":\"172#_3、initflow-未加载\",\"1540\":\"172#_4、监听器等对象获取不到\",\"1541\":\"172#_5、类型转换异常\",\"1542\":\"172#_6、hh-vue切换mybaits-plus\",\"1543\":\"172#_7、导入依赖包失败\",\"1544\":\"172#_8、-stackoverflowerror-错误\",\"1545\":\"172#_9、-后端接收流程xml部分丢失\",\"1546\":\"173\",\"1547\":\"173#未来发布计划\",\"1548\":\"173#vx-x-x\",\"1549\":\"173#开发中计划\",\"1550\":\"173#v1-3-6\",\"1551\":\"173#v1-3-5\",\"1552\":\"173#更新日志-1\",\"1553\":\"173#v1-3-4-2024-11-25\",\"1554\":\"173#v1-3-3-2024-11-12\",\"1555\":\"173#v1-3-1-2024-11-01\",\"1556\":\"173#v1-3-0-2024-10-23\",\"1557\":\"173#v1-2-10-2024-09-26\",\"1558\":\"173#v1-2-8-2024-09-25\",\"1559\":\"173#v1-2-7-2024-09-03\",\"1560\":\"173#v1-2-6-2024-08-28\",\"1561\":\"173#v1-2-4-2024-08-14\",\"1562\":\"173#v1-2-3-2024-06-28\",\"1563\":\"173#v1-2-1-2024-06-28\",\"1564\":\"173#v1-2-0-2024-06-13\",\"1565\":\"173#v1-1-9-2024-05-08\",\"1566\":\"173#v1-1-7-2024-04-27\",\"1567\":\"173#v1-1-6-2024-04-23\",\"1568\":\"173#v1-1-5-2024-04-17\",\"1569\":\"173#v1-1-4-2024-04-07\",\"1570\":\"173#v1-1-3-2024-04-02\",\"1571\":\"173#v1-1-2-2024-03-27\",\"1572\":\"173#v1-1-1-2024-03-22\",\"1573\":\"173#v1-1-0-2024-03-21\",\"1574\":\"173#v1-0-4-2024-03-06\",\"1575\":\"173#v1-0-3-2024-03-05\",\"1576\":\"173#v1-0-2-2023-12-31\",\"1577\":\"173#v1-0-0-2023-12-28\",\"1578\":\"174\",\"1579\":\"174#_1-引入依赖\",\"1580\":\"174#_2-后端放行部分路径\",\"1581\":\"174#_3-前端加载设计器\",\"1582\":\"174#_4-设计器办理人权限数据接入\",\"1583\":\"174#_4-1-办理人权限选择弹框页面\",\"1584\":\"174#_4-2-实现接口获取以上页面办理人权限数据\",\"1585\":\"174#_4-2-1-handlerselectservice接口\",\"1586\":\"174#_5、项目介绍\",\"1587\":\"174#_6、演示地址\",\"1588\":\"174#_7、官网\",\"1589\":\"175\",\"1590\":\"175#_1-引入依赖\",\"1591\":\"175#_2-后端放行部分路径\",\"1592\":\"175#_3-前端加载设计器\",\"1593\":\"175#_4-设计器办理人权限数据接入\",\"1594\":\"175#_4-1-办理人权限选择弹框页面\",\"1595\":\"175#_4-2-实现接口获取以上页面办理人权限数据\",\"1596\":\"175#_4-2-1-handlerselectservice接口\",\"1597\":\"175#_5、项目介绍\",\"1598\":\"175#_6、演示地址\",\"1599\":\"175#_7、官网\",\"1600\":\"176\",\"1601\":\"176#_1-引入依赖\",\"1602\":\"176#_2-后端放行部分路径\",\"1603\":\"176#_3-前端加载设计器\",\"1604\":\"176#_4-设计器办理人权限数据接入\",\"1605\":\"176#_4-1-办理人权限选择弹框页面\",\"1606\":\"176#_4-2-实现接口获取以上页面办理人权限数据\",\"1607\":\"176#_4-2-1-handlerselectservice接口\",\"1608\":\"176#_5、项目介绍\",\"1609\":\"176#_6、演示地址\",\"1610\":\"176#_7、官网\",\"1611\":\"177\",\"1612\":\"177#_1、老群被干没了-新群\",\"1613\":\"177#_2、详细更新内容\",\"1614\":\"177#_3、项目介绍\",\"1615\":\"177#_4、演示地址\",\"1616\":\"177#_7、官网\",\"1617\":\"178\",\"1618\":\"178#dromara-warmflow工作流动态指定办理人\",\"1619\":\"178#背景\",\"1620\":\"178#解决思路\",\"1621\":\"178#高级玩法\",\"1622\":\"178#总结\",\"1623\":\"179\",\"1624\":\"179#_1、背景\",\"1625\":\"179#_2、gitee建新的仓库\",\"1626\":\"179#_2-1、首先要建立仓库\",\"1627\":\"179#_2-2、仓库选择开源-否则无法下载\",\"1628\":\"179#_3、下载此项目\",\"1629\":\"179#_4、上传私库的到本地\",\"1630\":\"179#_5、下载依赖\",\"1631\":\"180\",\"1632\":\"180#_1-引入依赖\",\"1633\":\"180#_2-后端放行部分路径\",\"1634\":\"180#_3-前端加载设计器\",\"1635\":\"180#_4-设计器办理人权限数据接入\",\"1636\":\"180#_4-1-办理人权限选择弹框页面\",\"1637\":\"180#_4-2-实现接口获取以上页面办理人权限数据\",\"1638\":\"180#_4-2-1-handlerselectservice接口\",\"1639\":\"180#_5、项目介绍\",\"1640\":\"181\",\"1641\":\"181#_1、仓库地址\",\"1642\":\"181#_2、以下为简短案例\",\"1643\":\"181#_2-1、部署流程\",\"1644\":\"181#_2-2、发布流程\",\"1645\":\"181#_2-3、开启流程\",\"1646\":\"181#_2-4、流程流转\",\"1647\":\"181#_3、设计器引入\",\"1648\":\"181#_4、项目介绍\",\"1649\":\"181#_5、演示地址\",\"1650\":\"181#_6、官网\",\"1651\":\"182\",\"1652\":\"182#v1-3-4-2024-11-25\",\"1653\":\"182#v1-3-3-2024-11-12\",\"1654\":\"182#v1-3-1-2024-11-01\",\"1655\":\"182#v1-3-0-2024-10-23\",\"1656\":\"182#v1-2-10-2024-09-26\",\"1657\":\"182#v1-2-8-2024-09-25\",\"1658\":\"182#v1-2-7-2024-09-03\",\"1659\":\"182#v1-2-6-2024-08-28\",\"1660\":\"182#v1-2-4-2024-08-14\",\"1661\":\"182#v1-2-3-2024-06-28\",\"1662\":\"182#v1-2-1-2024-06-28\",\"1663\":\"182#v1-2-0-2024-06-13\",\"1664\":\"182#v1-1-9-2024-05-08\",\"1665\":\"183\",\"1666\":\"183#作者介绍\",\"1667\":\"183#历史背景\",\"1668\":\"183#warm-flow能给你带来什么\",\"1669\":\"183#项目功能模块\",\"1670\":\"183#流程流转管理\",\"1671\":\"183#流程图管理\",\"1672\":\"183#监听器管理\",\"1673\":\"183#配置管理\",\"1674\":\"183#扩展支持\",\"1675\":\"183#orm和数据库扩展\",\"1676\":\"183#条件表达式扩展\",\"1677\":\"184\",\"1678\":\"184#dromara-warmflow工作流动态指定办理人\",\"1679\":\"184#背景\",\"1680\":\"184#解决思路\",\"1681\":\"184#高级玩法\",\"1682\":\"184#总结\",\"1683\":\"185\",\"1684\":\"185#_1、背景\",\"1685\":\"185#_2、gitee建新的仓库\",\"1686\":\"185#_2-1、首先要建立仓库\",\"1687\":\"185#_2-2、仓库选择开源-否则无法下载\",\"1688\":\"185#_3、下载此项目\",\"1689\":\"185#_4、上传私库的到本地\",\"1690\":\"185#_5、下载依赖\",\"1691\":\"186\",\"1692\":\"186#_1-引入依赖\",\"1693\":\"186#_2-后端放行部分路径\",\"1694\":\"186#_3-前端加载设计器\",\"1695\":\"186#_4-设计器办理人权限数据接入\",\"1696\":\"186#_4-1-办理人权限选择弹框页面\",\"1697\":\"186#_4-2-实现接口获取以上页面办理人权限数据\",\"1698\":\"186#_4-2-1-handlerselectservice接口\",\"1699\":\"186#_5、项目介绍\",\"1700\":\"187\",\"1701\":\"187#_1、仓库地址\",\"1702\":\"187#_2、以下为简短案例\",\"1703\":\"187#_2-1、部署流程\",\"1704\":\"187#_2-2、发布流程\",\"1705\":\"187#_2-3、开启流程\",\"1706\":\"187#_2-4、流程流转\",\"1707\":\"187#_3、设计器引入\",\"1708\":\"187#_4、项目介绍\",\"1709\":\"187#_5、演示地址\",\"1710\":\"187#_6、官网\",\"1711\":\"188\",\"1712\":\"188#作者介绍\",\"1713\":\"188#历史背景\",\"1714\":\"188#warm-flow能给你带来什么\",\"1715\":\"188#项目功能模块\",\"1716\":\"188#流程流转管理\",\"1717\":\"188#流程图管理\",\"1718\":\"188#监听器管理\",\"1719\":\"188#配置管理\",\"1720\":\"188#扩展支持\",\"1721\":\"188#orm和数据库扩展\",\"1722\":\"188#条件表达式扩展\",\"1723\":\"189\",\"1724\":\"189#v1-3-4-2024-11-25\",\"1725\":\"189#v1-3-3-2024-11-12\",\"1726\":\"189#v1-3-1-2024-11-01\",\"1727\":\"189#v1-3-0-2024-10-23\",\"1728\":\"189#v1-2-10-2024-09-26\",\"1729\":\"189#v1-2-8-2024-09-25\",\"1730\":\"189#v1-2-7-2024-09-03\",\"1731\":\"189#v1-2-6-2024-08-28\",\"1732\":\"189#v1-2-4-2024-08-14\",\"1733\":\"189#v1-2-3-2024-06-28\",\"1734\":\"189#v1-2-1-2024-06-28\",\"1735\":\"189#v1-2-0-2024-06-13\",\"1736\":\"189#v1-1-9-2024-05-08\",\"1737\":\"190\",\"1738\":\"191\",\"1739\":\"192\",\"1740\":\"193\",\"1741\":\"194\",\"1742\":\"195\",\"1743\":\"196\",\"1744\":\"197\",\"1745\":\"198\",\"1746\":\"199\",\"1747\":\"200\",\"1748\":\"201\",\"1749\":\"202\",\"1750\":\"203\",\"1751\":\"204\",\"1752\":\"205\",\"1753\":\"206\",\"1754\":\"207\",\"1755\":\"208\",\"1756\":\"209\",\"1757\":\"210\",\"1758\":\"211\",\"1759\":\"212\",\"1760\":\"213\",\"1761\":\"214\",\"1762\":\"215\",\"1763\":\"216\",\"1764\":\"217\",\"1765\":\"218\",\"1766\":\"219\",\"1767\":\"220\",\"1768\":\"221\",\"1769\":\"222\",\"1770\":\"223\",\"1771\":\"224\",\"1772\":\"225\",\"1773\":\"226\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,26],\"1\":[1,8],\"2\":[2,12],\"3\":[2,13],\"4\":[2,29],\"5\":[2,2],\"6\":[2],\"7\":[2],\"8\":[3,30],\"9\":[3,75],\"10\":[3,98],\"11\":[3,63],\"12\":[2,2],\"13\":[3],\"14\":[6],\"15\":[6],\"16\":[2,54],\"17\":[2,35],\"18\":[1],\"19\":[3,13],\"20\":[2,15],\"21\":[3,21],\"22\":[2,19],\"23\":[1,5],\"24\":[3,14],\"25\":[2,67],\"26\":[3,16],\"27\":[1,11],\"28\":[2,22],\"29\":[2,52],\"30\":[1],\"31\":[3,4],\"32\":[2,89],\"33\":[3,81],\"34\":[2],\"35\":[3,18],\"36\":[2,15],\"37\":[3,20],\"38\":[1,7],\"39\":[2,67],\"40\":[2,11],\"41\":[2,7],\"42\":[2,15],\"43\":[2],\"44\":[1,5],\"45\":[1,18],\"46\":[2],\"47\":[1,7],\"48\":[1,30],\"49\":[2,5],\"50\":[1,4],\"51\":[2,56],\"52\":[2,6],\"53\":[2,1],\"54\":[3,28],\"55\":[3,54],\"56\":[2,33],\"57\":[1,11],\"58\":[2,37],\"59\":[2,19],\"60\":[2],\"61\":[1,4],\"62\":[3,3],\"63\":[2,4],\"64\":[2],\"65\":[3,20],\"66\":[5,12],\"67\":[5,62],\"68\":[1,1],\"69\":[1,5],\"70\":[1,73],\"71\":[1,4],\"72\":[2,56],\"73\":[2,6],\"74\":[2],\"75\":[3,20],\"76\":[3,26],\"77\":[1,4],\"78\":[2,56],\"79\":[2,6],\"80\":[2,2],\"81\":[3,20],\"82\":[3,35],\"83\":[1,92],\"84\":[1],\"85\":[1],\"86\":[1,13],\"87\":[1,10],\"88\":[1,10],\"89\":[1,9],\"90\":[1,11],\"91\":[1,5],\"92\":[1],\"93\":[2,1],\"94\":[3],\"95\":[3,1],\"96\":[3,1],\"97\":[2,4],\"98\":[3,22],\"99\":[4,1],\"100\":[4,1],\"101\":[1],\"102\":[2,69],\"103\":[2,7],\"104\":[2,31],\"105\":[2,52],\"106\":[2,9],\"107\":[2,7],\"108\":[2,2],\"109\":[2,1],\"110\":[1,3],\"111\":[1,8],\"112\":[1],\"113\":[2,8],\"114\":[2],\"115\":[2,8],\"116\":[2,6],\"117\":[2,5],\"118\":[2,5],\"119\":[2,2],\"120\":[2,1],\"121\":[1,55],\"122\":[1,6],\"123\":[1,54],\"124\":[1,6],\"125\":[1],\"126\":[1,22],\"127\":[1,7],\"128\":[1,7],\"129\":[1,7],\"130\":[1],\"131\":[2,125],\"132\":[2,62],\"133\":[3,25],\"134\":[2,15],\"135\":[2,1],\"136\":[4,103],\"137\":[2,8],\"138\":[3,4],\"139\":[2,3],\"140\":[1,4],\"141\":[1],\"142\":[2,10],\"143\":[1],\"144\":[3,4],\"145\":[3,10],\"146\":[1],\"147\":[6,45],\"148\":[5,17],\"149\":[6,31],\"150\":[6,16],\"151\":[6,5],\"152\":[6,32],\"153\":[6,9],\"154\":[6,30],\"155\":[6,92],\"156\":[6,4],\"157\":[6,39],\"158\":[6,10],\"159\":[6,8],\"160\":[6,4],\"161\":[6,7],\"162\":[6,25],\"163\":[6,11],\"164\":[6,4],\"165\":[6,9],\"166\":[5,4],\"167\":[6,8],\"168\":[6,3],\"169\":[6,5],\"170\":[6,4],\"171\":[5,34],\"172\":[1],\"173\":[2],\"174\":[3,3],\"175\":[4,3],\"176\":[4,3],\"177\":[3,9],\"178\":[3,6],\"179\":[3,6],\"180\":[3,6],\"181\":[3,3],\"182\":[3,3],\"183\":[3,3],\"184\":[3,3],\"185\":[3,3],\"186\":[3,4],\"187\":[3,6],\"188\":[3,6],\"189\":[5,6],\"190\":[2],\"191\":[3,22],\"192\":[2,40],\"193\":[3,29],\"194\":[3,4],\"195\":[3,4],\"196\":[3,6],\"197\":[4,4],\"198\":[2],\"199\":[3,40],\"200\":[3,29],\"201\":[2,28],\"202\":[3,28],\"203\":[3,26],\"204\":[3,25],\"205\":[3,35],\"206\":[2],\"207\":[3,22],\"208\":[2],\"209\":[3,4],\"210\":[3,4],\"211\":[3,7],\"212\":[3,4],\"213\":[3,8],\"214\":[3,4],\"215\":[3,4],\"216\":[3,4],\"217\":[3,4],\"218\":[3,4],\"219\":[3,4],\"220\":[3,4],\"221\":[3,4],\"222\":[3,4],\"223\":[3,6],\"224\":[3,4],\"225\":[3,2],\"226\":[3,2],\"227\":[3,2],\"228\":[3,4],\"229\":[3,4],\"230\":[3,4],\"231\":[3,7],\"232\":[2,8],\"233\":[2],\"234\":[3],\"235\":[2],\"236\":[3],\"237\":[1,4],\"238\":[2,34],\"239\":[2,75],\"240\":[1],\"241\":[2],\"242\":[2,80],\"243\":[3,27],\"244\":[2],\"245\":[3,69],\"246\":[3,20],\"247\":[1,6],\"248\":[3,32],\"249\":[2],\"250\":[4],\"251\":[2,17],\"252\":[4,11],\"253\":[1,12],\"254\":[2],\"255\":[1,16],\"256\":[1,16],\"257\":[2,6],\"258\":[5,26],\"259\":[3,28],\"260\":[5,28],\"261\":[2,14],\"262\":[4,76],\"263\":[3,85],\"264\":[4,1],\"265\":[3,43],\"266\":[2,2],\"267\":[3],\"268\":[3],\"269\":[4,27],\"270\":[3,135],\"271\":[4,27],\"272\":[1,5],\"273\":[2,14],\"274\":[2,1],\"275\":[2,27],\"276\":[1,60],\"277\":[2,56],\"278\":[2,35],\"279\":[2,18],\"280\":[2,7],\"281\":[2,10],\"282\":[1,19],\"283\":[3,16],\"284\":[2,1],\"285\":[2],\"286\":[3,21],\"287\":[4,22],\"288\":[2,31],\"289\":[4,22],\"290\":[4,29],\"291\":[2,8],\"292\":[3,35],\"293\":[3,8],\"294\":[3,14],\"295\":[2,37],\"296\":[2,2],\"297\":[2],\"298\":[4,1],\"299\":[3],\"300\":[1,37],\"301\":[1,26],\"302\":[1],\"303\":[1,81],\"304\":[1,113],\"305\":[1,86],\"306\":[1,95],\"307\":[1,71],\"308\":[1,66],\"309\":[1,49],\"310\":[1,73],\"311\":[1],\"312\":[2],\"313\":[2,5],\"314\":[3,5],\"315\":[3,3],\"316\":[3,3],\"317\":[3,3],\"318\":[3,3],\"319\":[3,3],\"320\":[3,3],\"321\":[3,3],\"322\":[3,4],\"323\":[3,6],\"324\":[2],\"325\":[3,22],\"326\":[2,33],\"327\":[3,16],\"328\":[3,4],\"329\":[3,4],\"330\":[3,6],\"331\":[2],\"332\":[3,33],\"333\":[3,16],\"334\":[2,20],\"335\":[3,21],\"336\":[3,17],\"337\":[3,19],\"338\":[3,36],\"339\":[2],\"340\":[3,22],\"341\":[2],\"342\":[3,6],\"343\":[3,6],\"344\":[3,9],\"345\":[3,6],\"346\":[3,10],\"347\":[3,6],\"348\":[3,6],\"349\":[3,6],\"350\":[3,6],\"351\":[3,6],\"352\":[3,6],\"353\":[3,6],\"354\":[3,6],\"355\":[3,6],\"356\":[3,8],\"357\":[3,6],\"358\":[3,2],\"359\":[3,2],\"360\":[3,2],\"361\":[3,6],\"362\":[3,6],\"363\":[3,6],\"364\":[1],\"365\":[2],\"366\":[2,71],\"367\":[3,27],\"368\":[2],\"369\":[3,69],\"370\":[3,20],\"371\":[1,9],\"372\":[2,37],\"373\":[2,19],\"374\":[2],\"375\":[1,5],\"376\":[3,32],\"377\":[2],\"378\":[4],\"379\":[2,17],\"380\":[4,11],\"381\":[1],\"382\":[2,20],\"383\":[6,63],\"384\":[2,4],\"385\":[1,4],\"386\":[1],\"387\":[1,4],\"388\":[1,72],\"389\":[1,7],\"390\":[2,17],\"391\":[2,12],\"392\":[2],\"393\":[2],\"394\":[3,37],\"395\":[3,75],\"396\":[2,84],\"397\":[3,63],\"398\":[3,2],\"399\":[3],\"400\":[6,4],\"401\":[6],\"402\":[2,35],\"403\":[1],\"404\":[3,11],\"405\":[2,15],\"406\":[3,21],\"407\":[2,19],\"408\":[1,13],\"409\":[3,14],\"410\":[2,66],\"411\":[3,16],\"412\":[1,3],\"413\":[1],\"414\":[2,7],\"415\":[2],\"416\":[2,7],\"417\":[2,5],\"418\":[2,4],\"419\":[2,4],\"420\":[2,1],\"421\":[2,1],\"422\":[1],\"423\":[2,56],\"424\":[2,35],\"425\":[2,18],\"426\":[2,7],\"427\":[2,10],\"428\":[2,31],\"429\":[1,65],\"430\":[1,15],\"431\":[3,13],\"432\":[2,1],\"433\":[2],\"434\":[3,21],\"435\":[4,22],\"436\":[2,33],\"437\":[4,22],\"438\":[4,31],\"439\":[2,9],\"440\":[2,8],\"441\":[2,6],\"442\":[2,35],\"443\":[2,8],\"444\":[2,14],\"445\":[2,37],\"446\":[2],\"447\":[4,1],\"448\":[3,2],\"449\":[1,37],\"450\":[1,26],\"451\":[1],\"452\":[1,81],\"453\":[1,113],\"454\":[1,86],\"455\":[1,95],\"456\":[1,71],\"457\":[1,66],\"458\":[1,49],\"459\":[1],\"460\":[3,3],\"461\":[2,89],\"462\":[3,81],\"463\":[2],\"464\":[3,17],\"465\":[2,15],\"466\":[3,21],\"467\":[1,70],\"468\":[1],\"469\":[2,13],\"470\":[2,13],\"471\":[2],\"472\":[1,10],\"473\":[1,18],\"474\":[2],\"475\":[1,9],\"476\":[1,30],\"477\":[2,53],\"478\":[1],\"479\":[2],\"480\":[3,3],\"481\":[3,3],\"482\":[3,9],\"483\":[3,6],\"484\":[3,6],\"485\":[3,6],\"486\":[3,3],\"487\":[3,3],\"488\":[3,3],\"489\":[3,3],\"490\":[3,3],\"491\":[3,4],\"492\":[3,6],\"493\":[2],\"494\":[3,22],\"495\":[2,40],\"496\":[3,29],\"497\":[3,4],\"498\":[3,4],\"499\":[3,6],\"500\":[2],\"501\":[3,40],\"502\":[3,29],\"503\":[2,26],\"504\":[3,26],\"505\":[3,24],\"506\":[3,23],\"507\":[3,35],\"508\":[2],\"509\":[3,22],\"510\":[2],\"511\":[3,4],\"512\":[3,4],\"513\":[3,7],\"514\":[3,4],\"515\":[3,8],\"516\":[3,4],\"517\":[3,4],\"518\":[3,4],\"519\":[3,4],\"520\":[3,4],\"521\":[3,4],\"522\":[3,4],\"523\":[3,4],\"524\":[3,4],\"525\":[3,6],\"526\":[3,4],\"527\":[3,2],\"528\":[3,2],\"529\":[3,2],\"530\":[3,4],\"531\":[3,4],\"532\":[3,4],\"533\":[1],\"534\":[2],\"535\":[2,73],\"536\":[3,27],\"537\":[2],\"538\":[3,69],\"539\":[3,20],\"540\":[1,11],\"541\":[2,37],\"542\":[2,19],\"543\":[2],\"544\":[1,6],\"545\":[3,32],\"546\":[2],\"547\":[4],\"548\":[2,17],\"549\":[4,11],\"550\":[1,12],\"551\":[2,15],\"552\":[2,6],\"553\":[5,26],\"554\":[3,28],\"555\":[5,28],\"556\":[2,14],\"557\":[4,76],\"558\":[3,85],\"559\":[4,1],\"560\":[3,43],\"561\":[2,2],\"562\":[3],\"563\":[3],\"564\":[4,27],\"565\":[3,135],\"566\":[1],\"567\":[2,20],\"568\":[6,63],\"569\":[2,4],\"570\":[1,4],\"571\":[1],\"572\":[1,5],\"573\":[1,73],\"574\":[1,8],\"575\":[2,17],\"576\":[2,12],\"577\":[2],\"578\":[2],\"579\":[3,37],\"580\":[3,75],\"581\":[2,84],\"582\":[3,63],\"583\":[3,2],\"584\":[3],\"585\":[6,4],\"586\":[6],\"587\":[2,35],\"588\":[1],\"589\":[3,13],\"590\":[2,15],\"591\":[3,21],\"592\":[2,19],\"593\":[1,13],\"594\":[3,14],\"595\":[2,67],\"596\":[3,16],\"597\":[1,3],\"598\":[1],\"599\":[2,7],\"600\":[2],\"601\":[2,7],\"602\":[2,5],\"603\":[2,4],\"604\":[2,4],\"605\":[2,1],\"606\":[2,1],\"607\":[1],\"608\":[2,56],\"609\":[2,35],\"610\":[2,18],\"611\":[2,7],\"612\":[2,10],\"613\":[2,31],\"614\":[1,64],\"615\":[1,19],\"616\":[3,13],\"617\":[2,1],\"618\":[2],\"619\":[3,22],\"620\":[4,23],\"621\":[2,34],\"622\":[4,23],\"623\":[4,29],\"624\":[2,9],\"625\":[2,8],\"626\":[2,2],\"627\":[2,8],\"628\":[3,35],\"629\":[3,8],\"630\":[3,14],\"631\":[3,37],\"632\":[2],\"633\":[4,1],\"634\":[3,2],\"635\":[1,37],\"636\":[1,26],\"637\":[1],\"638\":[1,81],\"639\":[1,113],\"640\":[1,86],\"641\":[1,95],\"642\":[1,71],\"643\":[1,66],\"644\":[1,49],\"645\":[1],\"646\":[3,4],\"647\":[2,89],\"648\":[3,81],\"649\":[2],\"650\":[3,18],\"651\":[2,15],\"652\":[3,20],\"653\":[1,73],\"654\":[1],\"655\":[2,15],\"656\":[2,13],\"657\":[2],\"658\":[1,7],\"659\":[1,18],\"660\":[2],\"661\":[1,9],\"662\":[1,30],\"663\":[2,53],\"664\":[1],\"665\":[2],\"666\":[2,5],\"667\":[3,11],\"668\":[3,7],\"669\":[3,3],\"670\":[3,3],\"671\":[3,3],\"672\":[3,3],\"673\":[3,3],\"674\":[3,3],\"675\":[3,3],\"676\":[3,4],\"677\":[3,6],\"678\":[2],\"679\":[3,22],\"680\":[2,33],\"681\":[3,22],\"682\":[3,4],\"683\":[3,4],\"684\":[3,6],\"685\":[2],\"686\":[3,33],\"687\":[3,22],\"688\":[2,20],\"689\":[3,21],\"690\":[3,17],\"691\":[3,19],\"692\":[3,36],\"693\":[2],\"694\":[3,22],\"695\":[2],\"696\":[3,4],\"697\":[3,4],\"698\":[3,7],\"699\":[3,4],\"700\":[3,8],\"701\":[3,4],\"702\":[3,4],\"703\":[3,4],\"704\":[3,4],\"705\":[3,4],\"706\":[3,4],\"707\":[3,4],\"708\":[3,4],\"709\":[3,4],\"710\":[3,6],\"711\":[3,4],\"712\":[3,2],\"713\":[3,2],\"714\":[3,2],\"715\":[3,4],\"716\":[3,4],\"717\":[3,4],\"718\":[1],\"719\":[2],\"720\":[2,73],\"721\":[3,27],\"722\":[2],\"723\":[3,69],\"724\":[3,20],\"725\":[1,11],\"726\":[2,37],\"727\":[2,19],\"728\":[2],\"729\":[1,6],\"730\":[3,32],\"731\":[2],\"732\":[4],\"733\":[2,17],\"734\":[4,11],\"735\":[1,12],\"736\":[2,16],\"737\":[2,6],\"738\":[5,26],\"739\":[3,28],\"740\":[5,28],\"741\":[2,19],\"742\":[4,14],\"743\":[4,77],\"744\":[3,82],\"745\":[4,1],\"746\":[3,42],\"747\":[2,2],\"748\":[3],\"749\":[3],\"750\":[4,27],\"751\":[3,135],\"752\":[1],\"753\":[2,20],\"754\":[6,63],\"755\":[2,4],\"756\":[1,4],\"757\":[1],\"758\":[1,5],\"759\":[1,72],\"760\":[1,8],\"761\":[2,17],\"762\":[2,12],\"763\":[2],\"764\":[2],\"765\":[3,37],\"766\":[3,75],\"767\":[2,84],\"768\":[3,63],\"769\":[3,2],\"770\":[3],\"771\":[6,4],\"772\":[6],\"773\":[2,35],\"774\":[1],\"775\":[3,13],\"776\":[2,15],\"777\":[3,21],\"778\":[2,19],\"779\":[1,13],\"780\":[3,14],\"781\":[2,66],\"782\":[3,16],\"783\":[1,3],\"784\":[1],\"785\":[2,7],\"786\":[2],\"787\":[2,7],\"788\":[2,5],\"789\":[2,4],\"790\":[2,4],\"791\":[2,1],\"792\":[2,1],\"793\":[1],\"794\":[2,56],\"795\":[2,35],\"796\":[2,18],\"797\":[2,7],\"798\":[2,10],\"799\":[2,31],\"800\":[1,64],\"801\":[1,19],\"802\":[3,13],\"803\":[2,1],\"804\":[2],\"805\":[3,21],\"806\":[4,22],\"807\":[2,33],\"808\":[4,22],\"809\":[4,31],\"810\":[2,9],\"811\":[2,8],\"812\":[2,6],\"813\":[2,35],\"814\":[2,8],\"815\":[2,14],\"816\":[2,37],\"817\":[2],\"818\":[4,1],\"819\":[3,2],\"820\":[1,37],\"821\":[1,26],\"822\":[1],\"823\":[1,81],\"824\":[1,113],\"825\":[1,86],\"826\":[1,95],\"827\":[1,71],\"828\":[1,66],\"829\":[1,49],\"830\":[1],\"831\":[3,4],\"832\":[2,89],\"833\":[3,81],\"834\":[2],\"835\":[3,17],\"836\":[2,15],\"837\":[3,20],\"838\":[1,73],\"839\":[1],\"840\":[2,15],\"841\":[2,13],\"842\":[2],\"843\":[1,7],\"844\":[1,18],\"845\":[2],\"846\":[1,9],\"847\":[1,30],\"848\":[2,53],\"849\":[1],\"850\":[2],\"851\":[3,3],\"852\":[3,3],\"853\":[3,9],\"854\":[3,6],\"855\":[3,6],\"856\":[3,6],\"857\":[3,3],\"858\":[3,3],\"859\":[3,3],\"860\":[3,3],\"861\":[3,3],\"862\":[3,4],\"863\":[3,6],\"864\":[2],\"865\":[3,22],\"866\":[2,40],\"867\":[3,29],\"868\":[3,4],\"869\":[3,4],\"870\":[3,6],\"871\":[2],\"872\":[3,40],\"873\":[3,29],\"874\":[2,26],\"875\":[3,26],\"876\":[3,24],\"877\":[3,23],\"878\":[3,35],\"879\":[2],\"880\":[3,22],\"881\":[2],\"882\":[3,4],\"883\":[3,4],\"884\":[3,7],\"885\":[3,4],\"886\":[3,8],\"887\":[3,4],\"888\":[3,4],\"889\":[3,4],\"890\":[3,4],\"891\":[3,4],\"892\":[3,4],\"893\":[3,4],\"894\":[3,4],\"895\":[3,4],\"896\":[3,6],\"897\":[3,4],\"898\":[3,2],\"899\":[3,2],\"900\":[3,2],\"901\":[3,4],\"902\":[3,4],\"903\":[3,4],\"904\":[1],\"905\":[2],\"906\":[2,80],\"907\":[3,27],\"908\":[2],\"909\":[3,69],\"910\":[3,20],\"911\":[1,11],\"912\":[2,37],\"913\":[2,19],\"914\":[2],\"915\":[1,6],\"916\":[3,32],\"917\":[2],\"918\":[4],\"919\":[2,17],\"920\":[4,11],\"921\":[1,12],\"922\":[2,15],\"923\":[2,6],\"924\":[5,26],\"925\":[3,28],\"926\":[5,28],\"927\":[2,14],\"928\":[4,76],\"929\":[3,85],\"930\":[4,1],\"931\":[3,43],\"932\":[2,2],\"933\":[3],\"934\":[3],\"935\":[4,27],\"936\":[3,135],\"937\":[4,27],\"938\":[2],\"939\":[4,3],\"940\":[3,3],\"941\":[3],\"942\":[4,19],\"943\":[6,12],\"944\":[7,62],\"945\":[1],\"946\":[2,20],\"947\":[6,63],\"948\":[2,4],\"949\":[1,4],\"950\":[1],\"951\":[1,5],\"952\":[1,73],\"953\":[1,8],\"954\":[2,17],\"955\":[2,12],\"956\":[2],\"957\":[2],\"958\":[3,37],\"959\":[3,75],\"960\":[2,84],\"961\":[3,63],\"962\":[3,2],\"963\":[3],\"964\":[6,4],\"965\":[6],\"966\":[2,35],\"967\":[1],\"968\":[3,13],\"969\":[2,15],\"970\":[3,21],\"971\":[2,19],\"972\":[1,13],\"973\":[3,14],\"974\":[2,67],\"975\":[3,16],\"976\":[1,3],\"977\":[1],\"978\":[2,7],\"979\":[2],\"980\":[2,7],\"981\":[2,5],\"982\":[2,4],\"983\":[2,4],\"984\":[2,1],\"985\":[2,1],\"986\":[1],\"987\":[2,56],\"988\":[2,35],\"989\":[2,18],\"990\":[2,7],\"991\":[2,10],\"992\":[2,31],\"993\":[1,62],\"994\":[1,19],\"995\":[3,13],\"996\":[2,1],\"997\":[2],\"998\":[3,22],\"999\":[4,23],\"1000\":[2,32],\"1001\":[4,23],\"1002\":[4,29],\"1003\":[2,9],\"1004\":[2,8],\"1005\":[2,2],\"1006\":[2,8],\"1007\":[3,35],\"1008\":[3,8],\"1009\":[3,14],\"1010\":[3,37],\"1011\":[2],\"1012\":[4,1],\"1013\":[3,2],\"1014\":[1,37],\"1015\":[1,26],\"1016\":[1],\"1017\":[1,81],\"1018\":[1,113],\"1019\":[1,90],\"1020\":[1,95],\"1021\":[1,71],\"1022\":[1,66],\"1023\":[1,49],\"1024\":[1],\"1025\":[3,4],\"1026\":[2,89],\"1027\":[3,81],\"1028\":[2],\"1029\":[3,18],\"1030\":[2,15],\"1031\":[3,20],\"1032\":[1,73],\"1033\":[1],\"1034\":[2,15],\"1035\":[2,13],\"1036\":[2],\"1037\":[1,7],\"1038\":[1,18],\"1039\":[2],\"1040\":[1,9],\"1041\":[1,30],\"1042\":[2,53],\"1043\":[1],\"1044\":[2],\"1045\":[3,3],\"1046\":[4,3],\"1047\":[4,3],\"1048\":[3,9],\"1049\":[3,6],\"1050\":[3,6],\"1051\":[3,6],\"1052\":[3,3],\"1053\":[3,3],\"1054\":[3,3],\"1055\":[3,3],\"1056\":[3,3],\"1057\":[3,4],\"1058\":[3,6],\"1059\":[2],\"1060\":[3,22],\"1061\":[2,40],\"1062\":[3,29],\"1063\":[3,4],\"1064\":[3,4],\"1065\":[3,6],\"1066\":[4,4],\"1067\":[2],\"1068\":[3,40],\"1069\":[3,29],\"1070\":[2,28],\"1071\":[3,28],\"1072\":[3,26],\"1073\":[3,25],\"1074\":[3,35],\"1075\":[2],\"1076\":[3,22],\"1077\":[2],\"1078\":[3,4],\"1079\":[3,4],\"1080\":[3,7],\"1081\":[3,4],\"1082\":[3,8],\"1083\":[3,4],\"1084\":[3,4],\"1085\":[3,4],\"1086\":[3,4],\"1087\":[3,4],\"1088\":[3,4],\"1089\":[3,4],\"1090\":[3,4],\"1091\":[3,4],\"1092\":[3,6],\"1093\":[3,4],\"1094\":[3,2],\"1095\":[3,2],\"1096\":[3,2],\"1097\":[3,4],\"1098\":[3,4],\"1099\":[3,4],\"1100\":[1,4],\"1101\":[2,34],\"1102\":[2,75],\"1103\":[1],\"1104\":[2],\"1105\":[2,80],\"1106\":[3,27],\"1107\":[2],\"1108\":[3,69],\"1109\":[3,20],\"1110\":[1,11],\"1111\":[2,37],\"1112\":[2,19],\"1113\":[2],\"1114\":[1,6],\"1115\":[3,32],\"1116\":[2],\"1117\":[4],\"1118\":[2,17],\"1119\":[4,11],\"1120\":[1,12],\"1121\":[2],\"1122\":[1,16],\"1123\":[1,16],\"1124\":[2,6],\"1125\":[5,26],\"1126\":[3,28],\"1127\":[5,28],\"1128\":[2,14],\"1129\":[4,76],\"1130\":[3,85],\"1131\":[4,1],\"1132\":[3,43],\"1133\":[2,2],\"1134\":[3],\"1135\":[3],\"1136\":[4,27],\"1137\":[3,135],\"1138\":[4,27],\"1139\":[1,4],\"1140\":[3,3],\"1141\":[2,3],\"1142\":[2],\"1143\":[3,20],\"1144\":[5,12],\"1145\":[5,62],\"1146\":[1],\"1147\":[2,20],\"1148\":[6,63],\"1149\":[2,4],\"1150\":[1,4],\"1151\":[2,56],\"1152\":[2,6],\"1153\":[2,2],\"1154\":[3,20],\"1155\":[3,35],\"1156\":[2],\"1157\":[3,20],\"1158\":[3,26],\"1159\":[2,1],\"1160\":[3,28],\"1161\":[3,54],\"1162\":[3,33],\"1163\":[1,4],\"1164\":[1],\"1165\":[1,5],\"1166\":[1,73],\"1167\":[1,8],\"1168\":[2,12],\"1169\":[2,13],\"1170\":[2,29],\"1171\":[2,2],\"1172\":[2],\"1173\":[2],\"1174\":[3,30],\"1175\":[3,75],\"1176\":[3,98],\"1177\":[3,63],\"1178\":[2,2],\"1179\":[3],\"1180\":[6],\"1181\":[6],\"1182\":[2,54],\"1183\":[2,35],\"1184\":[1],\"1185\":[3,13],\"1186\":[2,15],\"1187\":[3,21],\"1188\":[2,19],\"1189\":[1,5],\"1190\":[3,14],\"1191\":[2,67],\"1192\":[3,16],\"1193\":[1,11],\"1194\":[2,24],\"1195\":[2,52],\"1196\":[1,3],\"1197\":[1],\"1198\":[2,7],\"1199\":[2],\"1200\":[2,7],\"1201\":[2,5],\"1202\":[2,4],\"1203\":[2,4],\"1204\":[2,1],\"1205\":[2,1],\"1206\":[1],\"1207\":[2,56],\"1208\":[2,35],\"1209\":[2,18],\"1210\":[2,7],\"1211\":[2,10],\"1212\":[2,31],\"1213\":[1,62],\"1214\":[2,56],\"1215\":[2,35],\"1216\":[2,18],\"1217\":[2,7],\"1218\":[2,10],\"1219\":[2,31],\"1220\":[1,19],\"1221\":[3,16],\"1222\":[2,1],\"1223\":[2],\"1224\":[3,23],\"1225\":[4,24],\"1226\":[2,33],\"1227\":[4,24],\"1228\":[4,31],\"1229\":[2,8],\"1230\":[3,35],\"1231\":[3,8],\"1232\":[3,14],\"1233\":[2,37],\"1234\":[2,2],\"1235\":[2],\"1236\":[4,1],\"1237\":[3,2],\"1238\":[1,37],\"1239\":[1,26],\"1240\":[1],\"1241\":[1,81],\"1242\":[1,113],\"1243\":[1,86],\"1244\":[1,95],\"1245\":[1,71],\"1246\":[1,66],\"1247\":[1,49],\"1248\":[1],\"1249\":[3,4],\"1250\":[2,89],\"1251\":[3,81],\"1252\":[2],\"1253\":[3,18],\"1254\":[2,15],\"1255\":[3,20],\"1256\":[1,73],\"1257\":[1,7],\"1258\":[2,67],\"1259\":[2,11],\"1260\":[2,7],\"1261\":[2,14],\"1262\":[2],\"1263\":[1,5],\"1264\":[1,18],\"1265\":[2],\"1266\":[1,7],\"1267\":[1,30],\"1268\":[1,8],\"1269\":[2,12],\"1270\":[2,13],\"1271\":[2,29],\"1272\":[2,2],\"1273\":[2],\"1274\":[2],\"1275\":[3,30],\"1276\":[3,75],\"1277\":[3,98],\"1278\":[3,63],\"1279\":[2,2],\"1280\":[3],\"1281\":[6],\"1282\":[6],\"1283\":[2,54],\"1284\":[2,35],\"1285\":[1],\"1286\":[3,75],\"1287\":[2,15],\"1288\":[3,21],\"1289\":[2,19],\"1290\":[1,5],\"1291\":[3,14],\"1292\":[2,67],\"1293\":[3,16],\"1294\":[1,11],\"1295\":[2,22],\"1296\":[2,52],\"1297\":[1],\"1298\":[3,4],\"1299\":[2,89],\"1300\":[3,81],\"1301\":[2],\"1302\":[3,18],\"1303\":[2,15],\"1304\":[3,20],\"1305\":[1,7],\"1306\":[2,67],\"1307\":[2,11],\"1308\":[2,7],\"1309\":[2,15],\"1310\":[2],\"1311\":[1,5],\"1312\":[1,18],\"1313\":[2],\"1314\":[1,7],\"1315\":[1,30],\"1316\":[2,5],\"1317\":[1,4],\"1318\":[2,56],\"1319\":[2,6],\"1320\":[2,1],\"1321\":[3,28],\"1322\":[3,54],\"1323\":[2,33],\"1324\":[1,11],\"1325\":[2,37],\"1326\":[2,19],\"1327\":[2],\"1328\":[1,4],\"1329\":[3,3],\"1330\":[2,4],\"1331\":[2],\"1332\":[3,20],\"1333\":[5,12],\"1334\":[5,62],\"1335\":[1,1],\"1336\":[1,5],\"1337\":[1,73],\"1338\":[1,4],\"1339\":[2,56],\"1340\":[2,6],\"1341\":[2],\"1342\":[3,20],\"1343\":[3,26],\"1344\":[1,4],\"1345\":[2,56],\"1346\":[2,6],\"1347\":[2,2],\"1348\":[3,20],\"1349\":[3,35],\"1350\":[1,92],\"1351\":[1],\"1352\":[1],\"1353\":[1,13],\"1354\":[1,10],\"1355\":[1,10],\"1356\":[1,9],\"1357\":[1,11],\"1358\":[1,5],\"1359\":[1],\"1360\":[2,1],\"1361\":[3],\"1362\":[3,1],\"1363\":[3,1],\"1364\":[2,4],\"1365\":[3,22],\"1366\":[4,1],\"1367\":[4,1],\"1368\":[1],\"1369\":[2,69],\"1370\":[2,7],\"1371\":[2,31],\"1372\":[2,52],\"1373\":[2,9],\"1374\":[2,7],\"1375\":[2,2],\"1376\":[2,1],\"1377\":[1,3],\"1378\":[1,8],\"1379\":[1],\"1380\":[2,8],\"1381\":[2],\"1382\":[2,8],\"1383\":[2,6],\"1384\":[2,5],\"1385\":[2,5],\"1386\":[2,2],\"1387\":[2,1],\"1388\":[1,55],\"1389\":[1,6],\"1390\":[1,54],\"1391\":[1],\"1392\":[2],\"1393\":[3,3],\"1394\":[4,3],\"1395\":[4,3],\"1396\":[3,9],\"1397\":[3,6],\"1398\":[3,6],\"1399\":[3,6],\"1400\":[3,3],\"1401\":[3,3],\"1402\":[3,3],\"1403\":[3,3],\"1404\":[3,3],\"1405\":[3,4],\"1406\":[3,6],\"1407\":[3,6],\"1408\":[5,6],\"1409\":[2],\"1410\":[3,22],\"1411\":[2,40],\"1412\":[3,29],\"1413\":[3,4],\"1414\":[3,4],\"1415\":[3,6],\"1416\":[4,4],\"1417\":[2],\"1418\":[3,40],\"1419\":[3,29],\"1420\":[2,28],\"1421\":[3,28],\"1422\":[3,26],\"1423\":[3,25],\"1424\":[3,35],\"1425\":[2],\"1426\":[3,22],\"1427\":[2],\"1428\":[3,4],\"1429\":[3,4],\"1430\":[3,7],\"1431\":[3,4],\"1432\":[3,8],\"1433\":[3,4],\"1434\":[3,4],\"1435\":[3,4],\"1436\":[3,4],\"1437\":[3,4],\"1438\":[3,4],\"1439\":[3,4],\"1440\":[3,4],\"1441\":[3,4],\"1442\":[3,6],\"1443\":[3,4],\"1444\":[3,2],\"1445\":[3,2],\"1446\":[3,2],\"1447\":[3,4],\"1448\":[3,4],\"1449\":[3,4],\"1450\":[3,7],\"1451\":[2,8],\"1452\":[2],\"1453\":[3],\"1454\":[2],\"1455\":[3],\"1456\":[1,4],\"1457\":[2,36],\"1458\":[2,67],\"1459\":[1],\"1460\":[2],\"1461\":[2,80],\"1462\":[3,27],\"1463\":[2],\"1464\":[3,69],\"1465\":[3,20],\"1466\":[1,6],\"1467\":[3,32],\"1468\":[2],\"1469\":[4],\"1470\":[2,17],\"1471\":[4,11],\"1472\":[1,12],\"1473\":[2],\"1474\":[1,16],\"1475\":[1,16],\"1476\":[2,6],\"1477\":[5,26],\"1478\":[3,28],\"1479\":[5,28],\"1480\":[2,14],\"1481\":[4,76],\"1482\":[3,85],\"1483\":[4,1],\"1484\":[3,43],\"1485\":[2,2],\"1486\":[3],\"1487\":[3],\"1488\":[4,27],\"1489\":[3,135],\"1490\":[4,27],\"1491\":[1,5],\"1492\":[2,14],\"1493\":[2,1],\"1494\":[2,27],\"1495\":[1,60],\"1496\":[2,56],\"1497\":[2,35],\"1498\":[2,18],\"1499\":[2,7],\"1500\":[2,10],\"1501\":[1,19],\"1502\":[3,16],\"1503\":[2,1],\"1504\":[2],\"1505\":[3,21],\"1506\":[4,22],\"1507\":[2,31],\"1508\":[4,22],\"1509\":[4,29],\"1510\":[2,8],\"1511\":[3,35],\"1512\":[3,8],\"1513\":[3,14],\"1514\":[2,37],\"1515\":[2,2],\"1516\":[2],\"1517\":[4,1],\"1518\":[3],\"1519\":[1,37],\"1520\":[1,26],\"1521\":[1],\"1522\":[1,81],\"1523\":[1,113],\"1524\":[1,86],\"1525\":[1,95],\"1526\":[1,71],\"1527\":[1,66],\"1528\":[1,49],\"1529\":[1,73],\"1530\":[1,6],\"1531\":[1],\"1532\":[1,22],\"1533\":[1,7],\"1534\":[1,7],\"1535\":[1,7],\"1536\":[1],\"1537\":[2,125],\"1538\":[2,62],\"1539\":[3,25],\"1540\":[2,15],\"1541\":[2,1],\"1542\":[4,103],\"1543\":[2,8],\"1544\":[3,4],\"1545\":[2,3],\"1546\":[1,4],\"1547\":[1],\"1548\":[2,10],\"1549\":[1],\"1550\":[3,13],\"1551\":[3,27],\"1552\":[1],\"1553\":[6,45],\"1554\":[5,17],\"1555\":[6,31],\"1556\":[6,16],\"1557\":[6,5],\"1558\":[6,32],\"1559\":[6,9],\"1560\":[6,30],\"1561\":[6,92],\"1562\":[6,4],\"1563\":[6,39],\"1564\":[6,10],\"1565\":[6,8],\"1566\":[6,4],\"1567\":[6,7],\"1568\":[6,25],\"1569\":[6,11],\"1570\":[6,4],\"1571\":[6,9],\"1572\":[5,4],\"1573\":[6,8],\"1574\":[6,3],\"1575\":[6,5],\"1576\":[6,4],\"1577\":[5,34],\"1578\":[1,10],\"1579\":[2,17],\"1580\":[2,32],\"1581\":[2,14],\"1582\":[2,2],\"1583\":[3],\"1584\":[3],\"1585\":[4,27],\"1586\":[2,61],\"1587\":[2,7],\"1588\":[2,4],\"1589\":[1,7],\"1590\":[2,18],\"1591\":[2,33],\"1592\":[2,32],\"1593\":[2,3],\"1594\":[3],\"1595\":[3],\"1596\":[4,27],\"1597\":[2,62],\"1598\":[2,7],\"1599\":[2,4],\"1600\":[1,10],\"1601\":[2,17],\"1602\":[2,32],\"1603\":[2,14],\"1604\":[2,2],\"1605\":[3],\"1606\":[3],\"1607\":[4,27],\"1608\":[2,61],\"1609\":[2,7],\"1610\":[2,4],\"1611\":[5],\"1612\":[4,10],\"1613\":[3,42],\"1614\":[2,62],\"1615\":[2,7],\"1616\":[2,4],\"1617\":[1],\"1618\":[2],\"1619\":[2,7],\"1620\":[1,30],\"1621\":[1,29],\"1622\":[1,4],\"1623\":[1],\"1624\":[2,5],\"1625\":[2,9],\"1626\":[3,2],\"1627\":[1,2],\"1628\":[2,8],\"1629\":[2,97],\"1630\":[2,37],\"1631\":[1,11],\"1632\":[2,17],\"1633\":[2,32],\"1634\":[2,14],\"1635\":[2,2],\"1636\":[3],\"1637\":[3],\"1638\":[4,27],\"1639\":[2],\"1640\":[1,23],\"1641\":[2,6],\"1642\":[2],\"1643\":[3,35],\"1644\":[2,8],\"1645\":[3,14],\"1646\":[3,36],\"1647\":[2,19],\"1648\":[2,61],\"1649\":[2,7],\"1650\":[2,4],\"1651\":[1],\"1652\":[6,21],\"1653\":[5,7],\"1654\":[6,50],\"1655\":[6,8],\"1656\":[6,1],\"1657\":[6,27],\"1658\":[6,1],\"1659\":[6,10],\"1660\":[6,30],\"1661\":[6,1],\"1662\":[6,7],\"1663\":[6,8],\"1664\":[6,7],\"1665\":[1],\"1666\":[1,23],\"1667\":[1,35],\"1668\":[2,59],\"1669\":[1],\"1670\":[1,53],\"1671\":[1,15],\"1672\":[1,17],\"1673\":[1,77],\"1674\":[1],\"1675\":[1,6],\"1676\":[1,14],\"1677\":[1],\"1678\":[2],\"1679\":[2,7],\"1680\":[1,30],\"1681\":[1,29],\"1682\":[1,4],\"1683\":[1],\"1684\":[2,5],\"1685\":[2,9],\"1686\":[3,2],\"1687\":[1,2],\"1688\":[2,8],\"1689\":[2,97],\"1690\":[2,37],\"1691\":[1,11],\"1692\":[2,17],\"1693\":[2,32],\"1694\":[2,14],\"1695\":[2,2],\"1696\":[3],\"1697\":[3],\"1698\":[4,27],\"1699\":[2],\"1700\":[1,23],\"1701\":[2,6],\"1702\":[2],\"1703\":[3,35],\"1704\":[2,8],\"1705\":[3,14],\"1706\":[3,36],\"1707\":[2,19],\"1708\":[2,61],\"1709\":[2,7],\"1710\":[2,4],\"1711\":[1],\"1712\":[1,23],\"1713\":[1,35],\"1714\":[2,59],\"1715\":[1],\"1716\":[1,53],\"1717\":[1,15],\"1718\":[1,17],\"1719\":[1,77],\"1720\":[1],\"1721\":[1,6],\"1722\":[1,14],\"1723\":[1],\"1724\":[6,21],\"1725\":[5,7],\"1726\":[6,50],\"1727\":[6,8],\"1728\":[6,1],\"1729\":[6,27],\"1730\":[6,1],\"1731\":[6,10],\"1732\":[6,30],\"1733\":[6,1],\"1734\":[6,7],\"1735\":[6,8],\"1736\":[6,7],\"1737\":[1,3],\"1738\":[1],\"1739\":[1],\"1740\":[1],\"1741\":[1],\"1742\":[1],\"1743\":[1],\"1744\":[1],\"1745\":[3],\"1746\":[1],\"1747\":[3],\"1748\":[1],\"1749\":[3],\"1750\":[1],\"1751\":[2],\"1752\":[1],\"1753\":[3],\"1754\":[1],\"1755\":[3],\"1756\":[1],\"1757\":[1],\"1758\":[1],\"1759\":[1],\"1760\":[1],\"1761\":[1],\"1762\":[1],\"1763\":[1],\"1764\":[1],\"1765\":[1],\"1766\":[1],\"1767\":[2],\"1768\":[1],\"1769\":[1],\"1770\":[1],\"1771\":[1],\"1772\":[1],\"1773\":[2]},\"averageFieldLength\":[2.463359639233372,22.509940195888042],\"storedFields\":{\"0\":{\"h\":\"首页\",\"t\":[\"优秀开源集成案例\",\"{{ item.title }} {{ item.author }} \",\"{{ item.intro }}\",\" （如果您的开源项目也使用了 Warm-Flow，您可以 在此 提交） \",\" （更多开源项目详情，您可以 在此 查看） \",\"正在使用 Warm-Flow 的企业 / 个人（24家）\",\" （如果您的企业也使用了 Warm-Flow，您可以 在此 提交） \",\" （更多使用企业/个人详情，您可以 在此 查看） \",\"Dromara 成员项目\",\" 为往圣继绝学，一个人或许能走的更快，但一群人会走的更远。 \",\"👍友情链接\"]},\"1\":{\"h\":\"监听器\",\"t\":[\"重要\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。 支持类包名配置和表达式配置。\"]},\"2\":{\"h\":\"1、监听器大类\",\"t\":[\"重要\",\"节点监听器：在流程节点中配置，只有指定节点任务才会执行 流程监听器：在流程定义中配置，该流程所有节点任务都会执行 全局监听器：实现全局监听器接口，所有流程的节点任务都会执行 执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"3\":{\"h\":\"2、监听器小类\",\"t\":[\"重要\",\"start：开始监听器，任务开始办理时执行 assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行 create：创建监听器，任务创建时执行\"]},\"4\":{\"h\":\"3、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应 listener_type：监听器类型，如start,assignment,finish,create等 listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等 监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"5\":{\"h\":\"4、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"6\":{\"h\":\"5、监听器生命周期图\"},\"7\":{\"h\":\"5、节点和流程监听器\"},\"8\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"9\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"10\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"11\":{\"h\":\"5.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"12\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"13\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"14\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"15\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"16\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"17\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"18\":{\"h\":\"逻辑删除\"},\"19\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"20\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"21\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"22\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"23\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"重要\",\"1、组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"24\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"25\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"26\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"27\":{\"h\":\"办理人权限处理器\",\"t\":[\"重要\",\"1、审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员 2、工作流api中很多需要获取当前办理人id，进行保存或者校验 3、以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"28\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link FlowParams#getPermissionFlag} 中获取 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"29\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"30\":{\"h\":\"多租户\"},\"31\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"32\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"33\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"34\":{\"h\":\"2、通用多租户\"},\"35\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"36\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"37\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"38\":{\"h\":\"办理人变量表达式\",\"t\":[\"重要\",\"1、业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"39\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowFactory.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowFactory.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"40\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"41\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"42\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"3、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"43\":{\"h\":\"5、默认办理人变量策略\"},\"44\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"45\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"46\":{\"h\":\"6、spel办理人变量策略\"},\"47\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"48\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"49\":{\"h\":\"7、办理人选择项接口\",\"t\":[\"通过此接口可以给办理人选择，增加默认选项比如发起人、部门领导审批之类的（待开发）\"]},\"50\":{\"h\":\"条件表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"51\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"52\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"53\":{\"h\":\"3、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"54\":{\"h\":\"3.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"55\":{\"h\":\"3.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"56\":{\"h\":\"3.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"57\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"58\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"59\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"60\":{\"h\":\"3、其他请查阅核心api\"},\"61\":{\"h\":\"设计器二开\",\"t\":[\"重要\",\"1、当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"62\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"63\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\",\"业务系统配置设计器的地址\"]},\"64\":{\"h\":\"3 部署\"},\"65\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"66\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"67\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"68\":{\"h\":\"表单管理\",\"t\":[\"待补充\"]},\"69\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"70\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"71\":{\"h\":\"监听器表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"72\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"73\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"74\":{\"h\":\"3. 监听器表达式\"},\"75\":{\"h\":\"3.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"76\":{\"h\":\"3.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"77\":{\"h\":\"办理人变量表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"78\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"79\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"80\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"81\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"82\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"83\":{\"h\":\"公司使用列表\",\"t\":[\"公司/个人\",\"项目名称\",\"项目介绍\",\"LOGO\\\\代码地址\",\"中交武汉智行国际\",\"能力开放平台\",\"内部系统，流程审批\",\"新理益智慧网络科技（重庆）有限公司\",\"极点OA智慧网络办公系统\",\"企业综合办公管理系统\",\"安徽数智建造研究院有限公司\",\"进销存运营平台\",\"中铁四局集团全资子公司，集成工作流引擎\",\"杭州三之一智联科技有限公司\",\"质量管理系统\",\"基于工业互联网的数字化安全与质量管理平台，集风险、质量和安全为一体，以CTQ（关键质量特性）为中心，端到端全生命周期数字化安全与质量管理。\",\"郑州如阳科技有限公司\",\"智慧燃气平台\",\"智慧燃气平台\",\"山东融佑信息科技有限公司\",\"融运力TMS\",\"融运力TMS是基于移动互联网的面向货主侧需求的订单履约类的TMS系统，兼有传统TMS的竞标、派车、跟踪、签收等功能，同时具备企业ERP级的协同功能\",\"陕西物联达智能科技有限公司\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"H5VE团队\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"抚顺银行\",\"外围管理平台\",\"行内人员使用\",\"武汉数演科技有限公司\",\"开源工作流\",\"仿钉钉界面的开源工作流平台\",\"半月无霜\",\"banmoon-test\",\"半月无霜个人项目\",\"https://www.banmoon.top\",\"某某公司\",\"合规管控系统\",\"对各类事项进行检查，上报不合规的地方来审批整改\",\"个人\",\"海狼OA系统\",\"海狼OA系统\",\"xx自来水股份有限公司\",\"节水信息管理系统\",\"当地节水系统\",\"图灵谷\",\"内部OA\",\"内部OA\",\"湖北建科工程\",\"内部OA\",\"内部OA\",\"Holly\",\"智慧政务\",\"政务系统\",\"雨巷\",\"OA审批系统\",\"公司内部OA办公系统\",\"暗影\",\"erp\",\"erp\",\"LYQ\",\"XX单位综合信息服务系统\",\"简易工作流，OA办公，数据共享等等\",\"若愚\",\"测试检测平台\",\"starrydesert\",\"基于SSM的职工管理系统\",\"毕业设计\",\"zyflzz\",\"基于机器学习的只能停车管理系统\",\"毕业设计\",\"南山客\",\"基于SpringBoot的财务管理系统\",\"本科毕业设计\"]},\"84\":{\"h\":\"如何贡献\"},\"85\":{\"h\":\"参与贡献\"},\"86\":{\"h\":\"为开源项目点一个Star\",\"t\":[\"Star的多少关系到项目能否被更多人看到 同时Star也是作者前进的动力(作者每天都在盯着Star 涨了会开心 跌了会失落) 大家在寻找开源项目的时候, 大多数情况也是会先看Star比较多的项目 所以请给您觉得好的开源项目点一个小小的Star, 让好的项目能够被更多人看到\",\"github地址 | gitee地址 | gitCode地址\"]},\"87\":{\"h\":\"为社区处理问题\",\"t\":[\"Issue是社区的交流地 大家会在这里提出自己的问题 或者是项目的功能异常\",\"提问的规范在Issue的模板里已经写好了 按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",\"屏幕截图\",\"为提出问题的小伙伴答疑 可以有效降的帮助别人\",\"而且可以降低社区人员的精力分散 使精力全部投入到项目设计研发中\",\"屏幕截图\"]},\"88\":{\"h\":\"\",\"t\":[\"大家都知道 我们程序员都不擅长写作\",\"有时候作者把文档写完了也不知道用户是什么感觉 是否能看懂\",\"所以参与社区文档建设绝对是一件意义重大的事情\",\"大家可以在Issue提出观后感 觉得哪看不懂 觉得哪应该详细说明\",\"当然了 大家也可以对文档进行改进后提交PR修改申请\"]},\"89\":{\"h\":\"贡献代码\",\"t\":[\"想参与贡献代码的小伙伴 重点来了: 作者会经常在Issue里发布需求认领 觉得自己能做的可以在Issue里跟作者讨论 如需求还不够清晰 或者做的过程中遇到了什么问题\",\"需求确定了以后就可以开始专注的写代码了 但在开始写代码之前 一定要先看一下如何正确的提交PR\"]},\"90\":{\"h\":\"如何成为项目贡献者\",\"t\":[\"1.对框架有重大贡献者(由作者与团队成员判定) 2.完成社区发布的两项复杂任务 3.持续完成社区发布的简单任务若干(作者会关注到) 4.持续为社区优化文档或处理issue若干(作者会关注到)\"]},\"91\":{\"h\":\"项目贡献者待遇\",\"t\":[\"1.捐献红包和群主不定时红包 2.每年还会发放IDEA正版授权,视情况而定\"]},\"92\":{\"h\":\"提交pr\"},\"93\":{\"h\":\"步骤一 Fork项目到自己仓库\",\"t\":[\"屏幕截图\"]},\"94\":{\"h\":\"步骤二 基于dev分支 新建一个此PR功能点的专属分支\"},\"95\":{\"h\":\"步骤三 使用Git工具 将自己仓库的项目拉去到本地做代码编写\",\"t\":[\"屏幕截图\"]},\"96\":{\"h\":\"步骤四 使用Idea打开项目 切换到新建的功能分支\",\"t\":[\"屏幕截图\"]},\"97\":{\"h\":\"步骤五 设置创建类的模板\",\"t\":[\"新创建的类使用这个模板生成注释，使用方式在类上面写上 /c，然后按回车会自动生成\"]},\"98\":{\"h\":\"步骤六 将编写好的代码 提交到自己的远程仓库\",\"t\":[\"屏幕截图\",\"git提交规范\",\"[init] 初始化 [feat] 增加新功能 [fix] 修复问题/BUG [perf] 优化/性能提升 [refactor] 重构 [revert] 撤销修改 [style] 代码风格相关无影响运行结果的 [update] 其他修改 [upgrade] 升级版本\"]},\"99\":{\"h\":\"步骤七 创建PR申请(此操作在自己仓库或者要PR的仓库都可以)\",\"t\":[\"屏幕截图\"]},\"100\":{\"h\":\"步骤八 等待作者评审 按要求更改 直到没有问题后被作者合并\",\"t\":[\"屏幕截图\"]},\"101\":{\"h\":\"介绍\"},\"102\":{\"h\":\"1、项目介绍\",\"t\":[\"重要\",\"Dromara Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"希望一键三连，你的⭐️ Star ⭐️是我持续开发的动力，项目也活的更长\"]},\"103\":{\"h\":\"2、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"104\":{\"h\":\"3、开源协议\",\"t\":[\"Dromara Warm-Flow采用APACHE LICENSE 2.0开源协议，已申请软著，您如果需要源码开发方式，需要注意以下几点：\",\"请不要删除和修改根目录下的LICENSE文件。\",\"请不要删除和修改Warm-Flow源码头部的版权声明。\",\"本项目代码可免费商业使用，商业使用请保留源码和相关描述文件的项目出处，作者声明等。\",\"分发源码时候，请注明软件出处 http://www.warm-flow.cn\",\"不可二次分发开源参与同类竞品，如有想法可联系290631660@qq.com商议合作。\",\"若您的项目无法满足以上几点，需要更多功能代码，获取可找作者定制化开发，290631660@qq.com\"]},\"105\":{\"h\":\"4、应用场景\",\"t\":[\"Dromara Warm-Flow作为一个国产的工作流引擎，其设计简洁轻量但功能全面，适用于多种应用场景，尤其是针对中小型项目。以下是一些典型的应用场景：\",\"企业内部流程管理：用于管理企业的日常业务流程，如请假、报销、采购审批等。\",\"项目管理：在项目管理中，Dromara Warm-Flow可以用来跟踪项目任务的状态，管理项目流程，确保项目按计划进行。\",\"办公自动化：通过Warm-Flow，企业可以实现办公流程的自动化，提高工作效率，减少人为错误。\",\"客户服务流程：用于管理客户服务请求，如客户咨询、投诉处理、售后服务等。\",\"人力资源管理：在人力资源管理中，Warm-Flow可用于员工招聘、培训、绩效评估等流程的管理。\",\"财务和会计流程：管理财务审批流程，如发票审核、预算审批等。\",\"IT服务管理：用于IT服务请求的处理，如IT支持请求、系统变更管理等。\",\"业务流程优化：企业可以利用Dromara Warm-Flow来分析和优化现有业务流程，提高业务效率。\",\"合规性和风险管理：帮助企业在遵守法规和标准的同时，管理风险和合规流程。\",\"跨部门协作：Dromara Warm-Flow支持跨部门的流程协作，帮助不同部门之间更好地协调工作。\"]},\"106\":{\"h\":\"5、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"107\":{\"h\":\"6、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"108\":{\"h\":\"7、特别赞助\",\"t\":[\"如何成为赞助商 加群联系作者详谈\"]},\"109\":{\"h\":\"8、你可以请作者喝杯咖啡表示鼓励\",\"t\":[\"捐赠地址\"]},\"110\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"111\":{\"h\":\"演示地址\",\"t\":[\"注意\",\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"112\":{\"h\":\"演示图\"},\"113\":{\"h\":\"1、新增定义\",\"t\":[\"提示\",\"流程编码和流程版本：确定唯一 审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"114\":{\"h\":\"2、流程设计\"},\"115\":{\"h\":\"2、1节点设置\",\"t\":[\"提示\",\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"116\":{\"h\":\"2、2跳转线设置\",\"t\":[\"提示\",\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"117\":{\"h\":\"3、开启流程实例\",\"t\":[\"提示\",\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"118\":{\"h\":\"4、提交流程\",\"t\":[\"提示\",\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"119\":{\"h\":\"5、办理流程\",\"t\":[\"提示\",\"如果是互斥网关则会判断是否满足条件\"]},\"120\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"121\":{\"h\":\"开源集成案例\",\"t\":[\"作者\",\"项目名称\",\"描述\",\"晓华\",\"hh-vue / 演示\",\"基于ruoyi-vue集成，springboot2+vue2\",\"seven\",\"seaflow / 演示\",\"seaflow 是一款 开源仿钉钉工作流 平台， 前端使用 vue3+element plus ， 实现 流程设计和审批功能， 后端基于国产工作流Dromara warm-flow 实现流程控制， 大大缩短了学习成本\",\"晓华/Zhen\",\"ruoyi-vue3\",\"基于ruoyi-vue3集成前端\",\"梁小梁/Zhen\",\"Ruoyi-Cloud/RuoYi-Vue3\",\"基于Ruoyi-Cloud集成的跑批系统,spring-cloud(nacos)+vue3\",\"quick\",\"quick-boot / 演示\",\"基于 Spring Cloud 2022 、Spring Boot 3、React、AMIS 和 APIJSON 的低代码系统的设计和实现。该系统可以帮助企业快速开发和部署高质量的 Web 应用程序\"]},\"122\":{\"h\":\"捐赠\",\"t\":[\"感谢所有捐赠者，你们的支持是我最大的动力。这些费用将用于服务器、域名和相关服务的费用，以及warm组织成员和贡献者的红包奖励。\"]},\"123\":{\"h\":\"捐赠列表\",\"t\":[\"如有遗漏，请联系我。\",\"捐献者\",\"金额/元\",\"留言\",\"时间\",\"一拳打爆常大宝\",\"20\",\"感谢您对开源项目的支持\",\"2024-08-08\",\"李*佳\",\"30\",\"感谢您对开源项目的支持\",\"2024-08-02\",\"*佳\",\"30\",\"希望有交流机会\",\"2024-08-01\",\"*子\",\"30\",\"准备试用，致敬\",\"2024-07-16\",\"i*d\",\"1\",\"感谢您对开源项目的支持\",\"2024-07-11\",\"自由飞翔\",\"100\",\"感谢您对开源项目的支持\",\"2024-07-03\",\"文斌\",\"100\",\"Dromara warm-flow项目非常好，希望能发展壮大\",\"2024-06-25\",\"*入\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*梁\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*马\",\"100\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*热\",\"68\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*巴\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*敏\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*剑\",\"1\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"一骑\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"姜杰\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Cola\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Dotor-ww💪\",\"30\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*荒\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*飞鸿\",\"11\",\"感谢您对开源项目的支持\",\"2024-06-25\"]},\"124\":{\"h\":\"新闻公告\",\"t\":[\" {{ getTypeValue(item.type) }} \",\"{{ item.title }}\",\"{{ item.pushTime }}\"]},\"125\":{\"h\":\"有偿服务\"},\"126\":{\"h\":\"VIP群\",\"t\":[\"项目代码、文档，均开源免费可商用，遵循开源协议，不代表着项目收费\",\"VIP群由四名后端与一名前端工程师组成，提供问题答疑服务和技术分享等服务，欢迎加群交流\",\"支付后加微信号【warm-houhou】，邀请进入vip群\",\"问问题等于做习题 听作者解答问题等于习题讲解 一个人接触的问题有限 一群人接触的问题无限 早进群早接触更多的问题 承诺: 看见必回复 让你感受作者有多话痨\",\"加群扫码: 99元\"]},\"127\":{\"h\":\"私人服务\",\"t\":[\"作者提供作者私人服务，关于Dromara Warm-Flow工作流私人培训，如流程引擎集成与使用，技术咨询等，包括但不限于\"]},\"128\":{\"h\":\"特别赞助\",\"t\":[\"如需Dromara Warm-Flow官网挂广告，请加微信号【warm-houhou】联系我\"]},\"129\":{\"h\":\"团队\",\"t\":[\"avatar\",\"name\",\"email\",\"role\",\"contributions\",\"{{ item.name }}\",\"{{ item.email }}\",\"{{ item.role }}\",\"{{ item.contributions }}\"]},\"130\":{\"h\":\"常见问题\"},\"131\":{\"h\":\"1、id精度丢失\",\"t\":[\"方案1：处理长度过长的Long类型\",\"只处理长度过长的Long类型，前端页面就不会丢失精度了 (感谢【Colin】提供解决方案)\",\"创建一个BigNumberSerializer（用来处理超过JS数据范围的Long类型）\",\"👇 代码详情 👇\",\"/** * 超出 JS 最大最小值 处理 */ @JacksonStdImpl public class BigNumberSerializer extends NumberSerializer { /** * 根据 JS Number.MAX_SAFE_INTEGER 与 Number.MIN_SAFE_INTEGER 得来 */ private static final long MAX_SAFE_INTEGER = 9007199254740991L; private static final long MIN_SAFE_INTEGER = -9007199254740991L; /** * 提供实例 */ public static final BigNumberSerializer INSTANCE = new BigNumberSerializer(Number.class); public BigNumberSerializer(Class<? extends Number> rawType) { super(rawType); } @Override public void serialize(Number value, JsonGenerator gen, SerializerProvider provider) throws IOException { // 超出范围 序列化位字符串 if (value.longValue() > MIN_SAFE_INTEGER && value.longValue() < MAX_SAFE_INTEGER) { super.serialize(value, gen, provider); } else { gen.writeString(value.toString()); } } }\",\"添加JacksonConfig配置全局序列化（针对所有属性），一下两种方式任选其一\",\"👇 代码详情 👇\",\"@Configuration public class JacksonConfig { // 方式一 @Bean public Jackson2ObjectMapperBuilderCustomizer customizer() { return builder -> { ... 其他配置.... JavaTimeModule javaTimeModule = new JavaTimeModule(); //Long,BigInteger 转为 String 防止 js 丢失精度 javaTimeModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); builder.modules(javaTimeModule); }; } // 方式二 @Bean public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() { final Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder(); final ObjectMapper objectMapper = builder.build(); ... 其他配置.... SimpleModule simpleModule = new SimpleModule(); // Long,BigInteger 转为 String 防止 js 丢失精度 simpleModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); objectMapper.registerModule(simpleModule); return new MappingJackson2HttpMessageConverter(objectMapper); } }\",\"方案2：序列化所有long类型\",\"如何处理Long类型精度丢失问题 👇点击👇\",\"方案3：通过yml配置\",\"通过设置id生成器类型，修改id生成方式\",\"# warm-flow工作流配置 warm-flow: # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19\",\"方案4：自定义id生成策略\",\"参照如下文章，继承填充器接口，修改id生成方式\",\"Dromara Warm-Flow工作流引擎数据库主键自增策略实现👇\"]},\"132\":{\"h\":\"2、流程图片中文乱码\",\"t\":[\"linux环境：安装中文字体\",\"生成的流程图中文乱码或者报错InternalError; java.lang.reflect,InvocationTargetException\",\"由于服务器上缺少中文字体，通过检查fc-list :lang=zh是否包含中文字符集（以下是存在的示例）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ zhFonts]# fc-list :lang=zh /usr/share/fonts/zhFonts/SIMSUN.TTC: 新宋体,NSimSun:style=常规,Regular /usr/share/fonts/zhFonts/SIMSUN.TTC: 宋体,SimSun:style=常规,Regular\",\"zhFonts.zip将文件解压至/usr/share/fonts目录下，如果还不行，添加到jre的lib/fonts目录（感谢【我们好像在哪儿见过 】提供的方案）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ fonts]# ll 总用量 8 drwxr-xr-x 2 root root 4096 5月 17 00:20 dejavu drwxr-xr-x 2 root root 4096 5月 17 11:40 zhFonts\",\"重启服务\",\"docker环境：安装中文字体\",\"以ruoyi-vue-plus-4.x中dockerfile为例，添加中文字体即可 （感谢【格调@main】提供的方案）\"]},\"133\":{\"h\":\"3、initFlow()未加载\",\"t\":[\"提示\",\"spring开启懒加载后，导致FlowAutoConfig.initFlow()未加载。（由社区【星 Q】提供）\",\"删除\\\"lazy-initialization: true\\\",可解决问题，以下是错误示例\",\"spring: main: allow-bean-definition-overriding: true lazy-initialization: true web-application-type: servlet\"]},\"134\":{\"h\":\"4、监听器等对象获取不到\",\"t\":[\"提示\",\"热部署插件jrebel或者devtools导致问题，检查是否使用热部署插件，比如spring.devtools，可以把插件关了，或者加上排除配置spring-devtools.properties\",\"restart.include.flow=/org.dromara.warm.*.jar\"]},\"135\":{\"h\":\"5、类型转换异常\",\"t\":[\"同上\"]},\"136\":{\"h\":\"6、hh-vue切换mybaits-plus\",\"t\":[\"提示\",\"1、根pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"2、ruoyi-flow的pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"3、ruoyi-common增加依赖\",\" <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.5.1</version> </dependency>\",\"4、MyBatisConfig.java注释掉，新增MybatisPlusConfig\",\"👇 代码详情 👇\",\"package com.ruoyi.framework.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; /** * Mybatis Plus 配置 * * @author ruoyi */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 分页插件 interceptor.addInnerInterceptor(paginationInnerInterceptor()); // 乐观锁插件 interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor()); // 阻断插件 interceptor.addInnerInterceptor(blockAttackInnerInterceptor()); return interceptor; } /** * 分页插件，自动识别数据库类型 https://baomidou.com/guide/interceptor-pagination.html */ public PaginationInnerInterceptor paginationInnerInterceptor() { PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); // 设置数据库类型为mysql paginationInnerInterceptor.setDbType(DbType.MYSQL); // 设置最大单页限制数量，默认 500 条，-1 不受限制 paginationInnerInterceptor.setMaxLimit(-1L); return paginationInnerInterceptor; } /** * 乐观锁插件 https://baomidou.com/guide/interceptor-optimistic-locker.html */ public OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor() { return new OptimisticLockerInnerInterceptor(); } /** * 如果是对全表的删除或更新操作，就会终止该操作 https://baomidou.com/guide/interceptor-block-attack.html */ public BlockAttackInnerInterceptor blockAttackInnerInterceptor() { return new BlockAttackInnerInterceptor(); } }\",\"5、ruoyi-admin的application.yml中配置mybatis改为mybatis-plus\"]},\"137\":{\"h\":\"7、导入依赖包失败\",\"t\":[\"可尝试切换maven版本 （感谢【一拳打爆常大宝】）\",\"如maven3.9.6切换为低版本3.8.2\"]},\"138\":{\"h\":\"8、 StackOverflowError 错误\",\"t\":[\"提示\",\"查看跳转线退回的，是否设置为退回类型，后续有时间再做校验\"]},\"139\":{\"h\":\"9、 后端接收流程xml部分丢失\",\"t\":[\"提示\",\"一般是xxs过滤导致，排查下接口就行或者对象就行\"]},\"140\":{\"h\":\"更新日志\",\"t\":[\"重要\",\"更新脚本在项目里面的sql文件下，对应数据库类型，对应版本号\"]},\"141\":{\"h\":\"未来发布计划\"},\"142\":{\"h\":\"vx.x.x\",\"t\":[\"事件\",\"流程图合法性检验\",\"把不能退回到开始节点去掉，会有什么影响\",\"子流程\",\"会签和票签通过率策略，支持扩展\",\"重启流程\",\"适配国产数据库\",\"包容网关\"]},\"143\":{\"h\":\"开发中计划\"},\"144\":{\"h\":\"v1.3.6\",\"t\":[\"新增流程图元数据 @晓华\",\"接入仿钉钉设计器 @Zhen\"]},\"145\":{\"h\":\"v1.3.5\",\"t\":[\"动态表单支持 @vanlin\",\"取回 @xiarigang\",\"可多个网关直连 @晓华\",\"开启流程可以不默认执行到中间节点 @晓华\",\"新增办理人选择项接口 @晓华\",\"[feat] 流程定义数据保存支持json格式 @xiarigang\"]},\"146\":{\"h\":\"更新日志\"},\"147\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器优化配置（类中配置增加类型接口，或者优化页面配置）\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[update] 修改项目的groupId\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"148\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"[feat] 新增支持接入业务系统token，支持多token\",\"[update] 办理人选择tabs切换\",\"[update] 没有左侧树状选择数据时，左侧隐藏\",\"[fix] 统一修复分页bug\",\"[fix] 修复删除流程实例信息，未删除办理人信息 @xiarigang\",\"[fix] 修改【Bug】 会签节点委派 @vanlin\",\"[fix] 统一修复分页bug\"]},\"149\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"[feat] 新增boot3+java17支持\",\"[feat] 流程设计器新增快捷键支持\",\"[feat] 新增流程状态枚举（终止、作废、撤销和取回）\",\"[feat] 新增转办、委派、加签和减签方法，老方法标识即将删除，接入监听器\",\"[update] 终止流程状态改为更合理的终止状态\",\"[update] 流程复制克隆改set/get赋值\",\"[refactor] 重构skip等方法通用校验\",\"[perf] 流程图清晰度调整\",\"[fix] 流程图查询异常处理\",\"[fix] 修复历史记录表，创建时间和更新时间一样的问题\",\"[remove] FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\"]},\"150\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"[feat] 设计器独立 @zhen\",\"[feat] 使用jar引入方式引入设计器\",\"[feat] 新增办理人变量表达式流程案例\",\"[feat] 新增方法，获取流程变量的map类型\",\"[update] 节点线条保存关联名称\",\"[fix] 修复mybatis扩展包中，flowStatus变量书写错误的问题\",\"[fix] 更新时间有值时，取更新时间，不是创建时间\"]},\"151\":{\"h\":\"v1.2.10 2024-09-26\",\"t\":[\"[fix] 修复mybatis-plus扩展包，配置了其他id策略不生效的问题\"]},\"152\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"[feat] json库支持snack3、jackson、fastjson和gson，并且支持扩展\",\"[feat] 增加办理人变量表达式，支持${xxx}替换和spel，并支持扩展\",\"[feat] ListenerVariable监听器变量新增FlowParams字段，方便开始监听器全局传递参数\",\"[feat] 终止新增对开始和完成监听器的支持\",\"[update] springboot项目的条件表达式默认支持spel\",\"[update] 历史记录改为单条保存，删除重复代码\",\"[update] 修改FlowUserDao的bean名称\",\"[update] 中间节点拆分为或签，会签，票签\",\"[fix] 修复历史记录创建时间相等，导致流程图渲染异常\",\"[fix]修复Mybatis逻辑删除变成真实删除的缺陷 @xiarigang\",\"[refactor] 重构id生成器，支持orm默认策略，删除数据填充默认实现类，改为匿名类\"]},\"153\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"[update] 历史任务表流程状态支持外部传入\",\"[update] 修改办理人接口，当未设置办理人时，不做权限校验\",\"[update] ModifyHandler增加链式调用\",\"[fix] 修复流程监听器导出失败的问题\"]},\"154\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"[feat] 增加获取下个节点集合api @xiarigang\",\"[feat] 流程监听器 @xiaoxiaoliu889\",\"[feat] id内存策略新增14、15位雪花算法支持\",\"[feat] 流程激活和挂起案例 @xiaoxiaoliu889\",\"[feat] 增加基于流程定义Id获取流程图 @xiaoxiaoliu889\",\"[update] 流程状态改成字符串类型 @xiarigang\",\"[update] 测试模块拆分独立仓库\",\"[update] modes-sb删除加载配置文件，改为有上层jar加载\",\"[update] flex solon版本yml弄错了，config调整\",\"[refactor] 流程版本号生成逻辑重构 @xiaoxiaoliu889\",\"[fix] 修复deleteByTaskIds 中的根据无法正确删除user数据\",\"[fix] 修复 jpa solon注解问题 @vanlin\",\"[fix] 修复 并行网关三个任务分支的时候，错误结束流程的问题\"]},\"155\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"[feat] 激活和挂起 @xiaoxiaoliu889\",\"[feat] 不同节点也支持配置审批表单路径 @vanlin\",\"[feat] 支持接收外部流程状态，支持流程状态扩展 @vanlin\",\"[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式\",\"[feat] 新增分派监听器，支持代办任务中办理人等动态修改 @liangli\",\"[feat] 新增Easy-Query框架支持 @link2fun\",\"[feat] 新增Mybatis-Flex的solon扩展包 @xiarigang\",\"[feat] 新增Jpa的solon扩展包 @vanlin\",\"[feat] 历史表新增跳转类型，记录跳转类型 @vanlin\",\"[feat] 增加组件加载，yml控制开关 @疯狂的狮子Li\",\"[update] 之前强依赖流程状态的通过的，改为跳转类型，历史数据考虑如何处理 @vanlin\",\"[update] 之前所有保存流程状态地方，全部提供可接受外部传入 @vanlin\",\"[update] 流程开启，校验节点是否发布，提示语增加流程编码\",\"[update] 删除校验是否任意跳转\",\"[update] 修改扩展字段ext注释，删除FlowConfigUtil多余的代码\",\"[update] SqlSessionFactory改为构造函数引入\",\"[update] 替换异常类，UtilException高版本不兼容\",\"[update] from_custom改为form_custom，from_path改为form_path\",\"[remove] 移除节点前置执行权限处理器\",\"[remove] 删除cooperateAutoPass方法\",\"[update] 代办改为待办\",\"[refactor] 重构测试模块，完善mybatis-plus多租户和逻辑删除使用方式\",\"[refactor] 重构solon和插件模块\",\"[fix] 修复加签批量提交报错\",\"[fix] 修复TaskServiceImpl#handleDepute方法中删除受托人传参数错误\",\"[fix] 修复 JPA flowUserDao bug @vanlin\",\"[fix] 流程第三个节点为网关时无法渲染颜色\",\"[fix] 修复查看流程图模糊的问题 @erfeijiadao\",\"[fix] 修復开始节点直连网关，流程图渲染有问题\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 修复流程定义和流程实例相同，处于非结束节点，流程实例不能存在相同的业务id\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 删除不必要的··符号，修复postgresql与mysql关键词符号问题。\",\"[fix] 修复流程已完成，流程图结束节点显示为黑色\",\"[fix] 修复已办任务查询审批想起无效问题\",\"[fix] 设置开始节点 skip_type = PASS\",\"[fix] 为SpringUtil指定bean name,解决 LocalContainerEntityManagerFactoryBean 依赖问题\",\"[chore] 升级dom4j为安全版本2.1.3\"]},\"156\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"[fix] 修复更新拼上了多余的条件\",\"[fix] 修复保存流程xml报错问题\"]},\"157\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"[feat] 新增mybatis-flex扩展包 @xiarigang\",\"[feat] 新增抄送演示案例 @adru*\",\"[feat] 历史记录表新增ext扩展字段，方便保存历史过程数据 @adru*\",\"[update] 保存下一个节点办理人时，不校验是否有审批人\",\"[update] 调整扩展包配置，新增测试模块\",\"[update] 票签,会签，将待办任务的创建时间赋予历史任务开始时间 @liutao\",\"[update] 调整mybatis-plus多租户和软件删除处理\",\"[update] 修改任务历史表时间定义，任务审批通过，将待办任务的创建时间赋予历史任务开始时间 @liutao*\",\"[update] 修正pg的sql文件名，新增1.2.1增量sql @liutao\",\"[update] 会签票签，开始时间记录代表任务的创建时间\",\"[remove] 删除监听器自定义参数,修改扩展字段名称\",\"[fix] 监听器问题修复 @liangli\",\"[fix] solon插件包增加userMapper.xml加载\",\"[fix] 修复填充器不接收外部设置的时间\",\"[fix] 修复userMapper.xml中updateLogic的某个负值错误\"]},\"158\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"待办表解偶用户，新增用户表（查询方式需要改动）\",\"会签，票签\",\"加减签\",\"转办完善\",\"jpa扩展\",\"oracle适配\",\"pg适配\"]},\"159\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"orm支持mybatis-plus扩展\",\"多租户字段隔离提供全局配置，自动获取\",\"增加软删除可以配置化\",\"新增三个测试模块\",\"修复设置默认填充器时候，判空错误\"]},\"160\":{\"h\":\"v1.1.7 2024-04-27\",\"t\":[\"启动流程时，支持第二个节点为网关节点的情况\",\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",\"修复终止流程bug\"]},\"161\":{\"h\":\"v1.1.6 2024-04-23\",\"t\":[\"支持转办功能\",\"任务自动流转到创建人\",\"考虑流程终止功能\",\"修复流程流转异常\",\"实体类支持序列化\",\"修复java17以上@Resource包路径变更的问题\"]},\"162\":{\"h\":\"v1.1.5 2024-04-17\",\"t\":[\"支持自定义填充\",\"新增配置文件，部分功能可配置\",\"重构代码，insService.skip标识即将删除，改用taskService.skip\",\"引入日志门面\",\"修复已经设置后续节点动态权限后，办理时未生效问题；\",\"枚举扩展getByKey方法 @Holly_Git\",\"调整实例类结构，方便链式写法\",\"修复并行网关后面没有中间节点\",\"修复开始任务记录待办，为保存流程状态\",\"新增链式查询排序提供id排序\",\"新增历史任务记录结束节点\",\"新增赋值流程记录创建更新时间\",\"优化表实体类链式赋值\",\"待办已办查询标记为即将删除, 已挪到业务系统中\"]},\"163\":{\"h\":\"v1.1.4 2024-04-07\",\"t\":[\"修复监听器部分判空bug 感谢@Holly_Git\",\"新增创建任务监听器\",\"修改flow_node监听类型和监听路径字段长度\",\"新增监听器生命周期概念，完善文档\",\"重构流程开启流程和流程办理代码\",\"开始节点也能记录到历史任务记录中\"]},\"164\":{\"h\":\"v1.1.3 2024-04-02\",\"t\":[\"新增权限监听器，办理中动态设置权限 感谢@Holly\"]},\"165\":{\"h\":\"v1.1.2 2024-03-27\",\"t\":[\"流程定义新增复制按钮\",\"补齐sql脚本，完善文档\",\"跳转条件获取方式变更为流程变量 感谢@Holly\",\"监听器变量新增返回结点信息 感谢@Holly\",\"新增根据流程定义和当前节点code获取下一节点api接口. 感谢@Holly\",\"删除多余的字段和代码\"]},\"166\":{\"h\":\"v1.1.1 2024-03-22\",\"t\":[\"[fix] 修复xml脚本中遗漏伪命的问题，完善sql\"]},\"167\":{\"h\":\"v1.1.0 2024-03-21\",\"t\":[\"可以跳转指定节点\",\"增加全局变量\",\"增加监听器\",\"重构代码，解偶orm，方便扩展不同orm和数据，新增代码示例\",\"修复并行网关流程流程图显示错误问题\"]},\"168\":{\"h\":\"v1.0.4 2024-03-06\",\"t\":[\"[update] 美化后台返回的流程图\"]},\"169\":{\"h\":\"v1.0.3 2024-03-05\",\"t\":[\"[update] 重构代码，解偶orm操作，方便扩展其他orm框架\"]},\"170\":{\"h\":\"v1.0.2 2023-12-31\",\"t\":[\"[fix] 修复solon版本业务系统可不用单独加载warm-flow的xml\"]},\"171\":{\"h\":\"v1.0.0 2023-12-28\",\"t\":[\"完善流程设计器和流程图，新增vue3版本\",\"放弃js引擎，自研条件表达式\",\"新增支持条件表达式\",\"可退回到任意节点\",\"支持生成流程图\",\"流程设计器开发\",\"互斥网关，并行网关（会签、或签）功能开发\",\"抽离spring生态依赖，支持solon，并且保持事务与业务系统一致\",\"支持待办任务和已办任务，通过权限标识过滤数据\",\"新增多租户模式\",\"原生提供排序\",\"原生提供分页查询\",\"项目上传中央仓库\",\"工作流模块抽取为独立项目，提供集成方式\",\"已办任务和任务记录，审批页面中包含业务详情页面\",\"提供待办任务、提供角色、部门等权限配置\",\"提供流程配置界面\",\"流程配置文件改为表单填报方式\",\"用户角色抽取出来\",\"整理流程表，调整表名和字段名\"]},\"172\":{\"h\":\"核心api\"},\"173\":{\"h\":\"1、DefService流程定义接口\"},\"174\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"175\":{\"h\":\"1.2、新增流程定义，并初始化流程节点和流程跳转数据\",\"t\":[\"saveAndInitNode(definition)：校验后新增\"]},\"176\":{\"h\":\"1.3、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"177\":{\"h\":\"1.4、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"178\":{\"h\":\"1.5、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"179\":{\"h\":\"1.6、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"180\":{\"h\":\"1.7、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"181\":{\"h\":\"1.8、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"182\":{\"h\":\"1.9、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"183\":{\"h\":\"1.10、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"184\":{\"h\":\"1.11、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"185\":{\"h\":\"1.12、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"186\":{\"h\":\"1.13、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"187\":{\"h\":\"1.14、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"188\":{\"h\":\"1.15、获取流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 获取流程定义全部数据(包含节点和跳转)\"]},\"189\":{\"h\":\"1.16、查询流程设计所需的数据，比如流程图渲染，导出流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 查询流程设计所需的数据，比如流程图渲染，导出流程定义\"]},\"190\":{\"h\":\"2、InsService流程实例接口\"},\"191\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"192\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"193\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"194\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"195\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"196\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"197\":{\"h\":\"2.7、根据流程定义id集合，查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"198\":{\"h\":\"3、TaskService待办任务接口\"},\"199\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"200\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"201\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"202\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"203\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"204\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"205\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"206\":{\"h\":\"4、NodeService节点接口\"},\"207\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"208\":{\"h\":\"5、公共api接口\"},\"209\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"210\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"211\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"212\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"213\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"214\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"215\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"216\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"217\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"218\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"219\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"220\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"221\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"222\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"223\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"224\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"225\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"226\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"227\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"228\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"229\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"230\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"231\":{\"h\":\"流程协作(票签等)\",\"t\":[\"重要\",\"审批过程中可能存在，一人或者多人审批的情况，不同情况对应不同协作类型（会签、票签和或签）\"]},\"232\":{\"h\":\"1、流程协作规则\",\"t\":[\"或签：一名办理人审批通过，审批节点才会通过 票签：满足设定的通过率，部分审批人审批通过，审批节点才会通过 会签：所有审批人审批通过，审批节点才会通过\"]},\"233\":{\"h\":\"2、使用演示\"},\"234\":{\"h\":\"2.1、或签\"},\"235\":{\"h\":\"2.2、票签签\"},\"236\":{\"h\":\"2.3、会签\"},\"237\":{\"h\":\"条件表达式\",\"t\":[\"重要\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"238\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于: @@gt@@|flag@@gt@@4\",\"2、大于等于: @@ge@@|flag@@ge@@4\",\"3、等于: @@eq@@|flag@@eq@@4\",\"4、不等于： @@ne@@|flag@@ne@@4\",\"5、小于: @@lt@@|flag@@lt@@4\",\"6、小于等于: @@le@@|flag@@le@@4\",\"7、包含: @@like@@|flag@@like@@4\",\"8、不包含: @@notNike@@|flag@@notNike@@4\",\"9、SpEL: @@spel@@|#{@user.eval(#flag)}\",\"10、自定义表达式\"]},\"239\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：@@xxx@@|yyy@@xxx@@zzz，xxx为表达式策略，其中yyy为变量，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）: 前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"240\":{\"h\":\"配置文件\"},\"241\":{\"h\":\"1、spring\"},\"242\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"243\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"244\":{\"h\":\"2、solon\"},\"245\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"246\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"247\":{\"h\":\"数据填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"248\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"249\":{\"h\":\"2、注入bean\"},\"250\":{\"h\":\"2.1、通过@Component方式注入\"},\"251\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"252\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"253\":{\"h\":\"设计器集成\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"254\":{\"h\":\"1. 引入依赖\"},\"255\":{\"h\":\"springboot\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"256\":{\"h\":\"solon\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-solon-web</artifactId> <version>版本号</version> </dependency>\"]},\"257\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"258\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"259\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"260\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"261\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"262\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"263\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"264\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"265\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"266\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"267\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"268\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"269\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"270\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"271\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"272\":{\"h\":\"办理人变更\",\"t\":[\"重要\",\"审批业务中经常会出现办理人中途变更的情况，比如增加办理人，任务转办给别人等。\"]},\"273\":{\"h\":\"1、变更支持的类型\",\"t\":[\"1、转办：任务转给其他人办理 2、委派：求助其他人审批，然后参照他的意见决定是否审批通过 3、加签：办理中途，希望其他人一起参与办理 4、减签：办理中途，希望某些人不参与办理\"]},\"274\":{\"h\":\"2、接口描述\",\"t\":[\"接口描述地址\"]},\"275\":{\"h\":\"3、代码示例\",\"t\":[\"/** * 转办 */ public void transfer(TaskService taskService) { taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"转办\\\")); } /** * 委派 */ public void depute(TaskService taskService){ taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"委派\\\")); } /** * 加签 */ public void addSignature(TaskService taskService){ taskService.addSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"加签\\\")); } /** * 减签 */ public void reductionSignature(TaskService taskService){ taskService.reductionSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .reductionHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"减签\\\")); }\"]},\"276\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"求助其他人审批，然后参照他的意见决定是否审批通过\",\"4\",\"转办\",\"任务转给其他人办理\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"办理中途，希望其他人一起参与办理\",\"11\",\"减签\",\"办理中途，希望某些人不参与办理\",\"12\",\"会签\",\"所有审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"满足设定的通过率，部分审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"一名办理人审批通过，审批节点才会通过\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"277\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"278\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"279\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"280\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"281\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"282\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"283\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"284\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"285\":{\"h\":\"3、maven依赖\"},\"286\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"287\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"288\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"289\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"290\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>最新版本</version> </dependency>\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"291\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"292\":{\"h\":\"4.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"293\":{\"h\":\"4.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"294\":{\"h\":\"4.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"295\":{\"h\":\"4.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"296\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"297\":{\"h\":\"6、初学者推荐学习路线\"},\"298\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"299\":{\"h\":\"6.2、推荐学习视频\"},\"300\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"301\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"302\":{\"h\":\"表字段明细\"},\"303\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"304\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"305\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"306\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"307\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"308\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"309\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"310\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"311\":{\"h\":\"核心api\"},\"312\":{\"h\":\"1、DefService流程定义接口\"},\"313\":{\"h\":\"1.1、导入流程定义\",\"t\":[\"importXml(is)：导入流程定义xml的输入流is，保存流程定义数据，返回流程定义对象\"]},\"314\":{\"h\":\"1.2、保存流程定义\",\"t\":[\"saveXml(def))： 传入流程定义id、流程定义xml字符串，保存流程定义数据\"]},\"315\":{\"h\":\"1.3、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义xml的Document对象\"]},\"316\":{\"h\":\"1.4、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml的字符串\"]},\"317\":{\"h\":\"1.5、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"318\":{\"h\":\"1.6、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"319\":{\"h\":\"1.7、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"320\":{\"h\":\"1.8、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"321\":{\"h\":\"1.9、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"322\":{\"h\":\"1.10、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"323\":{\"h\":\"1.11、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"324\":{\"h\":\"2、InsService流程实例接口\"},\"325\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"326\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码 [如果指定节点,可任意跳转到对应节点,按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等[只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"327\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"328\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"329\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"330\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"331\":{\"h\":\"3、TaskService待办任务接口\"},\"332\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码 [如果指定节点,可任意跳转到对应节点,按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等[只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"333\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"334\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, curUser, permissionFlag, addHandlers, message)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"335\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, curUser, permissionFlag, addHandlers, message)：委派, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"336\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, curUser, permissionFlag, addHandlers, message)：加签，增加办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"337\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, curUser, permissionFlag, addHandlers, message)：减签，减少办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"338\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(modifyHandler)：修改办理人\",\"curUser: 办理人唯一标识 [按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签）[按需传输]\"]},\"339\":{\"h\":\"4、NodeService节点接口\"},\"340\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"341\":{\"h\":\"5、公共api接口\"},\"342\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键 [必传]\"]},\"343\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合 [必传]\"]},\"344\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体 [必传]\",\"page: 分页对象，支持设置排序字段 [必传]\"]},\"345\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体 [必传]\"]},\"346\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体 [必传]\",\"query: 查询代理层处理，支持设置排序字段 [必传]\"]},\"347\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体 [必传]\"]},\"348\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体 [必传]\"]},\"349\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体 [必传]\"]},\"350\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体 [必传]\"]},\"351\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体 [必传]\"]},\"352\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体 [必传]\"]},\"353\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体 [必传]\"]},\"354\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体 [必传]\"]},\"355\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合 [必传]\"]},\"356\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据 [必传]\",\"batchSize: 插入大小 [必传]\"]},\"357\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据 [必传]\"]},\"358\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"359\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"360\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"361\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段 [必传]\"]},\"362\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段 [必传]\"]},\"363\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段 [必传]\"]},\"364\":{\"h\":\"配置文件\"},\"365\":{\"h\":\"1、spring\"},\"366\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"367\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"368\":{\"h\":\"2、solon\"},\"369\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: com.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"370\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"371\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"flowStatus：流程实例表状态，当前流程状态 hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"372\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"373\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"374\":{\"h\":\"3、其他请查阅核心api\"},\"375\":{\"h\":\"填充器\",\"t\":[\"重要\",\"如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"376\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"377\":{\"h\":\"2、注入bean\"},\"378\":{\"h\":\"2.1、通过@Component方式注入\"},\"379\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"380\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"381\":{\"h\":\"条件表达式\"},\"382\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"383\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"384\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"385\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"386\":{\"h\":\"表单管理\"},\"387\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"388\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件com.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如com.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"389\":{\"h\":\"监听器\",\"t\":[\"重要\",\"在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"390\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"391\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"392\":{\"h\":\"2、监听器生命周期图\"},\"393\":{\"h\":\"3、监听器使用\"},\"394\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"395\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"396\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"397\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"398\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"399\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"400\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"401\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"402\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"403\":{\"h\":\"逻辑删除\"},\"404\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 默认逻辑未删除值：0，逻辑已删除值：1 如需修改默认值，请参考如下配置文件中进行修改\"]},\"405\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"406\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"407\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"408\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"409\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"410\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>com.warm.flow.orm.entity.FlowDefinition</class> <class>com.warm.flow.orm.entity.FlowHisTask</class> <class>com.warm.flow.orm.entity.FlowInstance</class> <class>com.warm.flow.orm.entity.FlowNode</class> <class>com.warm.flow.orm.entity.FlowSkip</class> <class>com.warm.flow.orm.entity.FlowTask</class> <class>com.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"411\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"412\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"413\":{\"h\":\"演示图\"},\"414\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"415\":{\"h\":\"2、流程设计\"},\"416\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"417\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"418\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"419\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"420\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"421\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"422\":{\"h\":\"流程规则\"},\"423\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"424\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"425\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"426\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"427\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"428\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"429\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"发起人操作，可以撤销当前流程\",\"7\",\"取回\",\"当前节点上一节点处理人操作，当前节点处理人还未处理，上一节点处理人可以将其退回自己手中重新操作（取回重办）\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"430\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"熟悉 Java 环境配置及其开发 熟悉 关系型 数据库，比如 MySQL 熟悉 Spring Boot或者Solon 及相关框架 熟悉 Java 构建工具，比如 Maven\"]},\"431\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"432\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"433\":{\"h\":\"3、maven依赖\"},\"434\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"435\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"436\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"437\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.2.10</version> </dependency>\"]},\"438\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.2.10</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.2.10</version> </dependency>\"]},\"439\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"440\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"441\":{\"h\":\"6、代码示例\",\"t\":[\"测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\"]},\"442\":{\"h\":\"7、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"443\":{\"h\":\"8、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"444\":{\"h\":\"9、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"445\":{\"h\":\"10、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"446\":{\"h\":\"11、初学者推荐学习路线\"},\"447\":{\"h\":\"11.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"448\":{\"h\":\"11.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"449\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"450\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"451\":{\"h\":\"表字段明细\"},\"452\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"453\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"454\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"455\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"456\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"457\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"458\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"459\":{\"h\":\"多租户\"},\"460\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"Mybatis-plus只支持自身的多租户方式\"]},\"461\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"462\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"463\":{\"h\":\"2、通用多租户\"},\"464\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler\"]},\"465\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"466\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ @Component public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"467\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"流程变量，map类型，用于流程执行中的数据转递 在执行流程时，可以设置流程变量 在监听器中，可以获取流程变量。\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"468\":{\"h\":\"办理人变量设置\"},\"469\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\"]},\"470\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"471\":{\"h\":\"3、默认办理人变量策略\"},\"472\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1},role:1,1\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\",\"role:1,1表示办理人角色和具体办理人\"]},\"473\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"474\":{\"h\":\"4、spel办理人变量策略\"},\"475\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"476\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"477\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"478\":{\"h\":\"核心api\"},\"479\":{\"h\":\"1、DefService流程定义接口\"},\"480\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"481\":{\"h\":\"1.1、新增流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"482\":{\"h\":\"1.2、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"483\":{\"h\":\"1.3、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"484\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"485\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"486\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"487\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"488\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"489\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"490\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"491\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"492\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"493\":{\"h\":\"2、InsService流程实例接口\"},\"494\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"495\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"496\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"497\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"498\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"499\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"500\":{\"h\":\"3、TaskService待办任务接口\"},\"501\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"502\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"503\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"504\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"505\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"506\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"507\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"508\":{\"h\":\"4、NodeService节点接口\"},\"509\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"510\":{\"h\":\"5、公共api接口\"},\"511\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"512\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"513\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"514\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"515\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"516\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"517\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"518\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"519\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"520\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"521\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"522\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"523\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"524\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"525\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"526\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"527\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"528\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"529\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"530\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"531\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"532\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"533\":{\"h\":\"配置文件\"},\"534\":{\"h\":\"1、spring\"},\"535\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"536\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"537\":{\"h\":\"2、solon\"},\"538\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"539\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"540\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"541\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"542\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"543\":{\"h\":\"3、其他请查阅核心api\"},\"544\":{\"h\":\"填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"545\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"546\":{\"h\":\"2、注入bean\"},\"547\":{\"h\":\"2.1、通过@Component方式注入\"},\"548\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"549\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"550\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"551\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"552\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"553\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"554\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"555\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\"); } }\"]},\"556\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"557\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"558\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"559\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"560\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"561\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"562\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"563\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"564\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"565\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"566\":{\"h\":\"条件表达式\"},\"567\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"568\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"569\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"570\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"571\":{\"h\":\"表单管理\"},\"572\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"573\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"574\":{\"h\":\"监听器\",\"t\":[\"重要\",\"1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"575\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"576\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"577\":{\"h\":\"2、监听器生命周期图\"},\"578\":{\"h\":\"3、监听器使用\"},\"579\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"580\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"581\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"582\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"583\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"584\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"585\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"586\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"587\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"588\":{\"h\":\"逻辑删除\"},\"589\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"590\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"591\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"592\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"593\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"594\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"595\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"596\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"597\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"598\":{\"h\":\"演示图\"},\"599\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"600\":{\"h\":\"2、流程设计\"},\"601\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"602\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"603\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"604\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"605\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"606\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"607\":{\"h\":\"流程规则\"},\"608\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"609\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"610\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"611\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"612\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"613\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"614\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"工作流中的某个节点上，允许返回到上一个节点进行修改，属于退回中的一种\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"615\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"616\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"617\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"618\":{\"h\":\"3、maven依赖\"},\"619\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"620\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"621\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"622\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.1</version> </dependency>\"]},\"623\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.1</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.1</version> </dependency>\"]},\"624\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"625\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"626\":{\"h\":\"6、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"627\":{\"h\":\"7、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"628\":{\"h\":\"7.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"629\":{\"h\":\"7.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"630\":{\"h\":\"7.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"631\":{\"h\":\"7.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"632\":{\"h\":\"8、初学者推荐学习路线\"},\"633\":{\"h\":\"8.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"634\":{\"h\":\"8.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"635\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"636\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"637\":{\"h\":\"表字段明细\"},\"638\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"639\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"640\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"641\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"642\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"643\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"644\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"645\":{\"h\":\"多租户\"},\"646\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"647\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"648\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"649\":{\"h\":\"2、通用多租户\"},\"650\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"651\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"652\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"653\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"654\":{\"h\":\"办理人变量设置\"},\"655\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"656\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"657\":{\"h\":\"3、默认办理人变量策略\"},\"658\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"659\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"660\":{\"h\":\"4、spel办理人变量策略\"},\"661\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"662\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"663\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"664\":{\"h\":\"核心api\"},\"665\":{\"h\":\"1、DefService流程定义接口\"},\"666\":{\"h\":\"1.1、导入流程定义\",\"t\":[\"importXml(is)：导入流程定义xml的输入流is，保存流程定义数据，返回流程定义对象\"]},\"667\":{\"h\":\"1.2、保存流程定义\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串，保存流程定义数据。def包含如下字段：\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"668\":{\"h\":\"1.3、保存流程定义\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串，保存流程定义数据\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"669\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义xml的Document对象\"]},\"670\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml的字符串\"]},\"671\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"672\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"673\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"674\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"675\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"676\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"677\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"678\":{\"h\":\"2、InsService流程实例接口\"},\"679\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"680\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\"]},\"681\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\"]},\"682\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"683\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"684\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"685\":{\"h\":\"3、TaskService待办任务接口\"},\"686\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等 [只有未设置办理人时可不传]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\"]},\"687\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\"]},\"688\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, curUser, permissionFlag, addHandlers, message)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"689\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, curUser, permissionFlag, addHandlers, message)：委派, 默认删除当然办理用户权限，转办后，当前办理不可办理\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"690\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, curUser, permissionFlag, addHandlers, message)：加签，增加办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"691\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, curUser, permissionFlag, addHandlers, message)：减签，减少办理人\",\"taskId: 修改的任务id [必传]\",\"curUser: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [必传]\",\"message: 审批意见 [按需传输]\"]},\"692\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(modifyHandler)：修改办理人\",\"curUser: 办理人唯一标识 [按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签）[按需传输]\"]},\"693\":{\"h\":\"4、NodeService节点接口\"},\"694\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"695\":{\"h\":\"5、公共api接口\"},\"696\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"697\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"698\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"699\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"700\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"701\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"702\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"703\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"704\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"705\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"706\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"707\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"708\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"709\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"710\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"711\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"712\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"713\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"714\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"715\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"716\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"717\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"718\":{\"h\":\"配置文件\"},\"719\":{\"h\":\"1、spring\"},\"720\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"721\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"722\":{\"h\":\"2、solon\"},\"723\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: com.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"724\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"725\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"726\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"727\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"728\":{\"h\":\"3、其他请查阅核心api\"},\"729\":{\"h\":\"填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"730\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"731\":{\"h\":\"2、注入bean\"},\"732\":{\"h\":\"2.1、通过@Component方式注入\"},\"733\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"734\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"735\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"736\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"737\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这两个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/**\"]},\"738\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"739\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"740\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"741\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口地址为：/warm-flow-ui/${definitionId}?disabled=${disabled} 2、总体思路就是把前端接口(比如80)代理成后端接口(8080)，去访问该地址，其他不变 3、或者直接通过后端接口访问该地址，可能需要处理跨域问题\"]},\"742\":{\"h\":\"3.1 nginx 代理配置\",\"t\":[\"server { listen 80; server_name localhost; location /warm-flow-ui/ { proxy_pass http://localhost:8080/warm-flow-ui/; } }\"]},\"743\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"代理到后端需要vue.config.js配置代码\",\"\\\"/warm-flow-ui\\\": { target: `http://localhost:8080/warm-flow-ui`, changeOrigin: true, pathRewrite: { '/warm-flow-ui': '/' } },\",\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // definitionId为需要查询的流程定义id， // disabled为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = `/warm-flow-ui/${definitionId}?disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"744\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"vue3项目引入过程同上vue2\",\"\\\"/warm-flow-ui\\\": { target: `http://localhost:8080`, changeOrigin: true, pathRewrite: { '/warm-flow-ui': '/' } },\",\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // definitionId为需要查询的流程定义id， // disabled为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(`/warm-flow-ui/${definitionId}?disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"745\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"746\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"前后端不分离项目，前后端端口一致，不需要代理（以下代码再ruoyi不分离版中测试）\",\"可以直接访问后端接口加载页面，如：/warm-flow/1839683148936663047?disabled=false\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/\\\" + definitionId + \\\"?disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow/1839683148936663047?disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/1839683148936663047?disabled=false&pageNum=1\\\"); }\"]},\"747\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"748\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"749\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"750\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"751\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"752\":{\"h\":\"条件表达式\"},\"753\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"754\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"755\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"756\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"757\":{\"h\":\"表单管理\"},\"758\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"759\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件com.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如com.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"760\":{\"h\":\"监听器\",\"t\":[\"重要\",\"1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"761\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"762\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"763\":{\"h\":\"2、监听器生命周期图\"},\"764\":{\"h\":\"3、监听器使用\"},\"765\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"766\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"767\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"768\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"769\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"770\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"771\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"772\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"773\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"774\":{\"h\":\"逻辑删除\"},\"775\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"776\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"777\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"778\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"779\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"780\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"781\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>com.warm.flow.orm.entity.FlowDefinition</class> <class>com.warm.flow.orm.entity.FlowHisTask</class> <class>com.warm.flow.orm.entity.FlowInstance</class> <class>com.warm.flow.orm.entity.FlowNode</class> <class>com.warm.flow.orm.entity.FlowSkip</class> <class>com.warm.flow.orm.entity.FlowTask</class> <class>com.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"782\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"783\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"784\":{\"h\":\"演示图\"},\"785\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"786\":{\"h\":\"2、流程设计\"},\"787\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"788\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"789\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"790\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"791\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"792\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"793\":{\"h\":\"流程规则\"},\"794\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"795\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"796\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"797\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"798\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"799\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"800\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"6\",\"撤销\",\"工作流中的某个节点上，允许返回到上一个节点进行修改，属于退回中的一种\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"801\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"802\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"803\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"804\":{\"h\":\"3、maven依赖\"},\"805\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"806\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"807\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"808\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.0</version> </dependency>\"]},\"809\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.0</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.0</version> </dependency>\"]},\"810\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"811\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"812\":{\"h\":\"6、代码示例\",\"t\":[\"测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\"]},\"813\":{\"h\":\"7、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"814\":{\"h\":\"8、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"815\":{\"h\":\"9、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"816\":{\"h\":\"10、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"817\":{\"h\":\"11、初学者推荐学习路线\"},\"818\":{\"h\":\"11.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"819\":{\"h\":\"11.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"820\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"821\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"822\":{\"h\":\"表字段明细\"},\"823\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"824\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"825\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"826\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"827\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"828\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"829\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"830\":{\"h\":\"多租户\"},\"831\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"832\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"833\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"834\":{\"h\":\"2、通用多租户\"},\"835\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: com.warm.flow.core.test.handle.CustomTenantHandler\"]},\"836\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"837\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"838\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"839\":{\"h\":\"办理人变量设置\"},\"840\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"841\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"842\":{\"h\":\"3、默认办理人变量策略\"},\"843\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"844\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"845\":{\"h\":\"4、spel办理人变量策略\"},\"846\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"847\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"848\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"849\":{\"h\":\"核心api\"},\"850\":{\"h\":\"1、DefService流程定义接口\"},\"851\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"852\":{\"h\":\"1.1、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"853\":{\"h\":\"1.2、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"854\":{\"h\":\"1.3、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"855\":{\"h\":\"1.4、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"856\":{\"h\":\"1.5、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"857\":{\"h\":\"1.6、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"858\":{\"h\":\"1.7、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"859\":{\"h\":\"1.8、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"860\":{\"h\":\"1.9、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"861\":{\"h\":\"1.10、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"862\":{\"h\":\"1.11、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"863\":{\"h\":\"1.12、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"864\":{\"h\":\"2、InsService流程实例接口\"},\"865\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"866\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"867\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"868\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"869\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"870\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"871\":{\"h\":\"3、TaskService待办任务接口\"},\"872\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"873\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"874\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"875\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"876\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"877\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户权限标识集合 [必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"878\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"879\":{\"h\":\"4、NodeService节点接口\"},\"880\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"881\":{\"h\":\"5、公共api接口\"},\"882\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"883\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"884\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"885\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"886\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"887\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"888\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"889\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"890\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"891\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"892\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"893\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"894\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"895\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"896\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"897\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"898\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"899\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"900\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"901\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"902\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"903\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"904\":{\"h\":\"配置文件\"},\"905\":{\"h\":\"1、spring\"},\"906\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"907\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"908\":{\"h\":\"2、solon\"},\"909\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"910\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"911\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"912\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"913\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"914\":{\"h\":\"3、其他请查阅核心api\"},\"915\":{\"h\":\"填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"916\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"917\":{\"h\":\"2、注入bean\"},\"918\":{\"h\":\"2.1、通过@Component方式注入\"},\"919\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"920\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"921\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"922\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"923\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"924\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"925\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"926\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"927\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"928\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"929\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"930\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"931\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"932\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"933\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"934\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"935\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"936\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"937\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到headerAuthorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"938\":{\"h\":\"6. 设计器二开\"},\"939\":{\"h\":\"6.1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"940\":{\"h\":\"6.2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\"]},\"941\":{\"h\":\"6.3 部署\"},\"942\":{\"h\":\"6.3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara</groupId> </exclusion> </exclusions> </dependency>\"]},\"943\":{\"h\":\"6.3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"944\":{\"h\":\"6.3.2 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"945\":{\"h\":\"条件表达式\"},\"946\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"947\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"948\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"949\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"950\":{\"h\":\"表单管理\"},\"951\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"952\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"953\":{\"h\":\"监听器\",\"t\":[\"重要\",\"1、在办理流程过程中，通过监听器，监听办理过程的不同环节，进行业务处理，功能增强。\"]},\"954\":{\"h\":\"1、监听器类型\",\"t\":[\"重要\",\"create：创建监听器，任务创建时执行 start：开始监听器，任务开始办理时执行 permission：权限监听器，办理任务动态设置权限（后续不建议用） assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行\"]},\"955\":{\"h\":\"2、流程监听器和节点监听器\",\"t\":[\"重要\",\"流程监听器和某个流程定义有关，节点监听器和某个节点有关 执行顺序：优先执行节点监听器，然后执行流程监听器 流程监听器：在流程定义中配置，所有节点任务都会执行 节点监听器：在流程节点中配置，只有指定节点任务才会执行\"]},\"956\":{\"h\":\"2、监听器生命周期图\"},\"957\":{\"h\":\"3、监听器使用\"},\"958\":{\"h\":\"3.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_END = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; /** 权限监听器，办理任务动态设置权限(1.2.4版本后建议使用分派监听器修改办理人) */ String LISTENER_PERMISSION = \\\"permission\\\"; void notify(ListenerVariable variable); }\"]},\"959\":{\"h\":\"3.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"960\":{\"h\":\"3.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); Object o = variable.get(\\\"businessData\\\"); // 更新业务数据 if (ObjectUtil.isNotNull(o)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 if (o instanceof TestLeave) { TestLeave testLeave = (TestLeave) o; testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"961\":{\"h\":\"3.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"962\":{\"h\":\"3.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"963\":{\"h\":\"3.6、页面配置全局或节点监听器\"},\"964\":{\"h\":\"3.6.1、节点监听器（流程节点配置）\",\"t\":[\"传递后台通过@@分割不同监听器，监听器类型和监听器路径，上下一一对应\"]},\"965\":{\"h\":\"3.6.1、流程监听器（流程定义配置）\"},\"966\":{\"h\":\"4、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"967\":{\"h\":\"逻辑删除\"},\"968\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"969\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"970\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"971\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"972\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"常规增删改查可以通过注入方式，或者工具类获取service\",\"// 第一种 @Resource private DefService defService; // 第二种 FlowFactory.defService()\",\"但是由于不同orm框架的数据库操作的，接口使用方式不一致，所以可以通过以下方式获取对应的使用入口。\"]},\"973\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"974\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"975\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"976\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"977\":{\"h\":\"演示图\"},\"978\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"979\":{\"h\":\"2、流程设计\"},\"980\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"981\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"982\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"983\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"984\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"985\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"986\":{\"h\":\"流程规则\"},\"987\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"988\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"989\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"990\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"991\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"992\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"993\":{\"h\":\"流程术语\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"994\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"995\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"996\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"997\":{\"h\":\"3、maven依赖\"},\"998\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"999\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1000\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1001\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.3</version> </dependency>\"]},\"1002\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.3</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.3</version> </dependency>\"]},\"1003\":{\"h\":\"4、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"1004\":{\"h\":\"5、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1005\":{\"h\":\"6、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1006\":{\"h\":\"7、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1007\":{\"h\":\"7.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1008\":{\"h\":\"7.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1009\":{\"h\":\"7.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1010\":{\"h\":\"7.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1011\":{\"h\":\"8、初学者推荐学习路线\"},\"1012\":{\"h\":\"8.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1013\":{\"h\":\"8.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"1014\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"1015\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1016\":{\"h\":\"表字段明细\"},\"1017\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1018\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1019\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 4终止 5作废 6撤销 7取回 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1020\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1021\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1022\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1023\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1024\":{\"h\":\"多租户\"},\"1025\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"1026\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"1027\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"1028\":{\"h\":\"2、通用多租户\"},\"1029\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"1030\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1031\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"1032\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1033\":{\"h\":\"办理人变量设置\"},\"1034\":{\"h\":\"1、内置表达式\",\"t\":[\"1、默认办理人变量策略: @@default@@|${handler1}\",\"2、spel办理人变量策略: @@spel@@|#{@user.evalVar(#handler2)}\",\"3、@@xxx@@: 标识不同策略的前缀\"]},\"1035\":{\"h\":\"2、变量替换时机\",\"t\":[\"1、上一个节点任务办理时，传入变量\",\"2、下一个节点任务生成时即可获取替换\",\"比如B-->C, C任务设置办理人变量为@@default@@|${handler1}，B任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1036\":{\"h\":\"3、默认办理人变量策略\"},\"1037\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@default@@|${handler1}\",\"@@default@@|${handler1}中@@default@@表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1038\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1039\":{\"h\":\"4、spel办理人变量策略\"},\"1040\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：@@spel@@|#{@user.evalVar(#handler2)}\",\"#{@user.evalVar(#handler2)}是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1041\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1042\":{\"h\":\"5、扩展\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\",\"并且通过这个方法进行注册VariableUtil.setVariable\",\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy { /** * 获取变量替换类型 * @return 变量替换类型 */ String getType(); /** * 执行表达式 * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ String eval(String expression, Map<String, Object> variable); } /** * 默认办理人变量表达式策略： @@default@@|${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return FlowCons.splitAt + \\\"default\\\" + FlowCons.splitAt; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1043\":{\"h\":\"核心api\"},\"1044\":{\"h\":\"1、DefService流程定义接口\"},\"1045\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"1046\":{\"h\":\"1.2、新增流程定义，并初始化流程节点和流程跳转数据\",\"t\":[\"saveAndInitNode(definition)：校验后新增\"]},\"1047\":{\"h\":\"1.3、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"1048\":{\"h\":\"1.4、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"1049\":{\"h\":\"1.5、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"1050\":{\"h\":\"1.6、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"1051\":{\"h\":\"1.7、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"1052\":{\"h\":\"1.8、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"1053\":{\"h\":\"1.9、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"1054\":{\"h\":\"1.10、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"1055\":{\"h\":\"1.11、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"1056\":{\"h\":\"1.12、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"1057\":{\"h\":\"1.13、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"1058\":{\"h\":\"1.14、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"1059\":{\"h\":\"2、InsService流程实例接口\"},\"1060\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"1061\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1062\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1063\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"1064\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"1065\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"1066\":{\"h\":\"2.7、根据流程定义id集合，查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"1067\":{\"h\":\"3、TaskService待办任务接口\"},\"1068\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1069\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1070\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1071\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1072\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1073\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1074\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"1075\":{\"h\":\"4、NodeService节点接口\"},\"1076\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"1077\":{\"h\":\"5、公共api接口\"},\"1078\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"1079\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"1080\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"1081\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"1082\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"1083\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"1084\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"1085\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"1086\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"1087\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"1088\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"1089\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"1090\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"1091\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"1092\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"1093\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"1094\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"1095\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"1096\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"1097\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"1098\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"1099\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"1100\":{\"h\":\"条件表达式\",\"t\":[\"重要\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"1101\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于: @@gt@@|flag@@gt@@4\",\"2、大于等于: @@ge@@|flag@@ge@@4\",\"3、等于: @@eq@@|flag@@eq@@4\",\"4、不等于： @@ne@@|flag@@ne@@4\",\"5、小于: @@lt@@|flag@@lt@@4\",\"6、小于等于: @@le@@|flag@@le@@4\",\"7、包含: @@like@@|flag@@like@@4\",\"8、不包含: @@notNike@@|flag@@notNike@@4\",\"9、SpEL: @@spel@@|#{@user.eval(#flag)}\",\"10、自定义表达式\"]},\"1102\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：@@xxx@@|yyy@@xxx@@zzz，xxx为表达式策略，其中yyy为变量，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）: 前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1103\":{\"h\":\"配置文件\"},\"1104\":{\"h\":\"1、spring\"},\"1105\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"1106\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"1107\":{\"h\":\"2、solon\"},\"1108\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"1109\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1110\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"1111\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"1112\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"1113\":{\"h\":\"3、其他请查阅核心api\"},\"1114\":{\"h\":\"数据填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"1115\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"1116\":{\"h\":\"2、注入bean\"},\"1117\":{\"h\":\"2.1、通过@Component方式注入\"},\"1118\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"1119\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"1120\":{\"h\":\"设计器引入\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"1121\":{\"h\":\"1. 引入依赖\"},\"1122\":{\"h\":\"springboot\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"1123\":{\"h\":\"solon\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-solon-web</artifactId> <version>版本号</version> </dependency>\"]},\"1124\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"1125\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1126\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"1127\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"1128\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1129\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"1130\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"1131\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"1132\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"1133\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1134\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1135\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1136\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1137\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"1138\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"1139\":{\"h\":\"设计器二开\",\"t\":[\"重要\",\"1、当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"1140\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"1141\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\"]},\"1142\":{\"h\":\"3 部署\"},\"1143\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"1144\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"1145\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"1146\":{\"h\":\"条件表达式\"},\"1147\":{\"h\":\"1、内置表达式\",\"t\":[\"1、大于\",\"2、大于等于\",\"3、等于\",\"4、不等于\",\"5、小于\",\"6、小于等于\",\"7、包含\",\"8、不包含\",\"9、SpEL\",\"10、自定义表达式\"]},\"1148\":{\"h\":\"2、Spring Expression Language（SpEL）\",\"t\":[\"前端配置如#{@user.eval(#flag)}表达式，入库前要拼接前缀，方便区分表达式类型，最终为@@spel@@|#{@user.eval(#flag)}\",\"#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1149\":{\"h\":\"3、自定义表达式\",\"t\":[\"1、扩展需要实现ExpressionStrategy接口或者继承ExpressionStrategyAbstract抽象类2、并且通过这个方法进行注册ExpressionUtil.setExpression\"]},\"1150\":{\"h\":\"表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"1151\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1152\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1153\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"1154\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1155\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1156\":{\"h\":\"4. 监听器表达式\"},\"1157\":{\"h\":\"4.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1158\":{\"h\":\"4.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"1159\":{\"h\":\"5、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"1160\":{\"h\":\"5.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"1161\":{\"h\":\"5.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"1162\":{\"h\":\"5.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"1163\":{\"h\":\"流程图\",\"t\":[\"流程图根据前端返回的节点坐标，通过后端Graphics2D进行绘制，最终返回图片给前端展示\",\"屏幕截图\",\"屏幕截图\"]},\"1164\":{\"h\":\"表单管理\"},\"1165\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"1166\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"1167\":{\"h\":\"监听器\",\"t\":[\"重要\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。 支持类包名配置和表达式配置。\"]},\"1168\":{\"h\":\"1、监听器大类\",\"t\":[\"重要\",\"节点监听器：在流程节点中配置，只有指定节点任务才会执行 流程监听器：在流程定义中配置，该流程所有节点任务都会执行 全局监听器：实现全局监听器接口，所有流程的节点任务都会执行 执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"1169\":{\"h\":\"2、监听器小类\",\"t\":[\"重要\",\"start：开始监听器，任务开始办理时执行 assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行 create：创建监听器，任务创建时执行\"]},\"1170\":{\"h\":\"3、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应 listener_type：监听器类型，如start,assignment,finish,create等 listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等 监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"1171\":{\"h\":\"4、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"1172\":{\"h\":\"5、监听器生命周期图\"},\"1173\":{\"h\":\"5、节点和流程监听器\"},\"1174\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"1175\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"1176\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"1177\":{\"h\":\"5.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"1178\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"1179\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"1180\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"1181\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"1182\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"1183\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"1184\":{\"h\":\"逻辑删除\"},\"1185\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启，目前不支持关闭 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\"]},\"1186\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"1187\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"1188\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"1189\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"重要\",\"1、组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"1190\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"1191\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"1192\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"1193\":{\"h\":\"办理人权限处理器\",\"t\":[\"重要\",\"1、审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员 2、工作流api中很多需要获取当前办理人id，进行保存或者校验 3、以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"1194\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link TaskServiceImpl#checkAuth(Task, FlowParams)} 中调用 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"1195\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"1196\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"1197\":{\"h\":\"演示图\"},\"1198\":{\"h\":\"1、新增定义\",\"t\":[\"流程编码和流程版本：确定唯一\",\"审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1199\":{\"h\":\"2、流程设计\"},\"1200\":{\"h\":\"2、1节点设置\",\"t\":[\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1201\":{\"h\":\"2、2跳转线设置\",\"t\":[\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1202\":{\"h\":\"3、开启流程实例\",\"t\":[\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1203\":{\"h\":\"4、提交流程\",\"t\":[\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1204\":{\"h\":\"5、办理流程\",\"t\":[\"如果是互斥网关则会判断是否满足条件\"]},\"1205\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1206\":{\"h\":\"流程规则\"},\"1207\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1208\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1209\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1210\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1211\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1212\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"1213\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"当前节点处理人，将自己的主办或者经办权限转移委派至别的用户代为处理，处理完后回到当前处理人手中，并由当前处理人处理完后进入下一节点\",\"4\",\"转办\",\"当前节点处理人，将操作权限转给别人处理，处理完后进入下一节点（自己不再处理）\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"当前节点处理人，需要增加他人参与审批\",\"11\",\"减签\",\"当前节点处理人，需要减少他人参与审批\",\"12\",\"会签\",\"会签就是指在流程管理中发起人可以同时对多个人发起会签，多个人可以同时处理，只有所有负责人审批通过，审批节点才会通过。\",\"13\",\"或签\",\"一名负责人通过即可通过审批节点\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"1214\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1215\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1216\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1217\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1218\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1219\":{\"h\":\"6、流程协作规则\",\"t\":[\"或签：待办任务有一个\\\"审批\\\"/\\\"回退\\\"操作即完成当前任务，或签待办权限支持个人、部门、角色及用户自定义类型\",\"会签：待办任务所有待办人都进行\\\"审批\\\"当前任务执行\\\"审批\\\"通过逻辑，会签中任意一待办人进行\\\"回退\\\"则整个任务执行\\\"回退\\\"逻辑，会签所有待办权限只支持个人类型\",\"票签：此时根据\\\"审批\\\"/\\\"回退\\\"操作自动计算\\\"审批通过率(已审批人数/任务总人数)\\\"与\\\"回退驳回率(已回退人数/任务总人数)\\\"，\\\"审批通过率\\\"大于等于流程设计时指定的\\\"票签通过率\\\"执行\\\"审批\\\"通过逻辑，\\\"回退驳回率\\\"大于\\\"1-票签通过率\\\"执行\\\"回退\\\"逻辑，票签所有待办权限只支持个人\"]},\"1220\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"1221\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"1222\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"1223\":{\"h\":\"3、maven依赖\"},\"1224\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1225\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1226\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1227\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\"]},\"1228\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>1.3.4</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>1.3.4</version> </dependency>\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1229\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1230\":{\"h\":\"4.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1231\":{\"h\":\"4.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1232\":{\"h\":\"4.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1233\":{\"h\":\"4.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1234\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1235\":{\"h\":\"6、初学者推荐学习路线\"},\"1236\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1237\":{\"h\":\"6.2、推荐学习视频\",\"t\":[\"新手教学视频，社区同学录制\"]},\"1238\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"1239\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1240\":{\"h\":\"表字段明细\"},\"1241\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1242\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1243\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1244\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1245\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1246\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1247\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1248\":{\"h\":\"多租户\"},\"1249\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"1250\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"1251\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"1252\":{\"h\":\"2、通用多租户\"},\"1253\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"1254\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1255\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"1256\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1257\":{\"h\":\"办理人变量表达式\",\"t\":[\"重要\",\"1、业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"1258\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowFactory.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowFactory.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"1259\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"1260\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"1261\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"2、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1262\":{\"h\":\"5、默认办理人变量策略\"},\"1263\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1264\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1265\":{\"h\":\"6、spel办理人变量策略\"},\"1266\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1267\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1268\":{\"h\":\"监听器\",\"t\":[\"重要\",\"在办理流程过程中，通过监听器，监听办理过程的不同时期，进行业务处理，功能增强。 支持类包名配置和表达式配置。\"]},\"1269\":{\"h\":\"1、监听器大类\",\"t\":[\"重要\",\"节点监听器：在流程节点中配置，只有指定节点任务才会执行 流程监听器：在流程定义中配置，该流程所有节点任务都会执行 全局监听器：实现全局监听器接口，所有流程的节点任务都会执行 执行顺序：节点监听器 --> 流程监听器 --> 全局监听器\"]},\"1270\":{\"h\":\"2、监听器小类\",\"t\":[\"重要\",\"start：开始监听器，任务开始办理时执行 assignment： 分派办理人监听器，动态修改代办任务信息 finish：完成监听器，当前任务完成后执行 create：创建监听器，任务创建时执行\"]},\"1271\":{\"h\":\"3、监听器设置\",\"t\":[\"监听器设置：设置节点表的listener_type和listener_path字段，如果有多个监听器，用,分隔，并且两个字段对应 listener_type：监听器类型，如start,assignment,finish,create等 listener_path：监听器路径，支持配置类包名和表达式，如包名1,表达式1,包名2,表达式2等 监听器路径：默认支持内置spel表达式，支持扩展，比如：#{@assignmentExpListener.notify(#listenerVariable)}\"]},\"1272\":{\"h\":\"4、匹配规则\",\"t\":[\"默认先判断是否是监听器表达式，然后再去尝试加载类路径\"]},\"1273\":{\"h\":\"5、监听器生命周期图\"},\"1274\":{\"h\":\"5、节点和流程监听器\"},\"1275\":{\"h\":\"5.1、实现以下接口\",\"t\":[\"/** * 监听器接口 */ public interface Listener extends Serializable { /** 创建监听器，任务创建时执行 */ String LISTENER_CREATE = \\\"create\\\"; /** 开始监听器，任务开始办理时执行 */ String LISTENER_START = \\\"start\\\"; /** * 完成监听器，当前任务完成后执行 */ String LISTENER_FINISH = \\\"finish\\\"; /** 分派监听器，动态修改代办任务信息 */ String LISTENER_ASSIGNMENT = \\\"assignment\\\"; void notify(ListenerVariable variable); }\"]},\"1276\":{\"h\":\"5.2、开始监听器实现类例子\",\"t\":[\"通过@Component或者@Bean注解注入到容器\",\"@Component public class DefStartListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefStartListener.class); /** * 设置办理人id、所拥有的权限等操作，也可以放到业务代码中办理前设置，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程开始监听器\\\"); FlowParams flowParams = listenerVariable.getFlowParams(); LoginUser user = SecurityUtils.getLoginUser(); // 设置当前办理人id flowParams.setHandler(user.getUser().getUserId().toString()); // 设置办理人所拥有的权限，比如角色、部门、用户等 List<String> permissionList = flowParams.getPermissionFlag(); if (StringUtils.isEmpty(permissionList)) { permissionList = new ArrayList<>(); } List<SysRole> roles = user.getUser().getRoles(); if (Objects.nonNull(roles)) { permissionList.addAll(roles.stream().map(role -> \\\"role:\\\" + role.getRoleId()).collect(Collectors.toList())); } permissionList.add(\\\"dept:\\\" + SecurityUtils.getLoginUser().getUser().getDeptId()); permissionList.add(user.getUser().getUserId().toString()); flowParams.setPermissionFlag(permissionList); log.info(\\\"流程开始监听器结束......\\\"); } }\"]},\"1277\":{\"h\":\"5.3、完成监听器实现类例子\",\"t\":[\"@Component public class DefFinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(DefFinishListener.class); @Resource private TestLeaveMapper testLeaveMapper; /** * 业务表新增或者更新操作，也可以放到业务代码中办理完成后，或者节点监听器 * @param listenerVariable 监听器变量 */ @Override public void notify(ListenerVariable listenerVariable) { log.info(\\\"流程完成监听器\\\"); Instance instance = listenerVariable.getInstance(); Map<String, Object> variable = listenerVariable.getVariable(); if (StringUtils.isNotNull(variable)) { String businessId = instance.getBusinessId(); Object businessType = variable.get(\\\"businessType\\\"); /** 如果{@link com.ruoyi.system.service.impl.TestLeaveServiceImpl}中更新了，这里就不用更新了*/ // 更新业务数据 if (\\\"testLeave\\\".equals(businessType)) { // 可以统一使用一个流程监听器，不同实体类，不同的操作 TestLeave testLeave = testLeaveMapper.selectTestLeaveById(businessId); if (ObjectUtil.isNull(testLeave)) { testLeave = (TestLeave) variable.get(\\\"businessData\\\"); } testLeave.setNodeCode(instance.getNodeCode()); testLeave.setNodeName(instance.getNodeName()); testLeave.setNodeType(instance.getNodeType()); testLeave.setFlowStatus(instance.getFlowStatus()); // 如果没有实例id，说明是新增 if (ObjectUtil.isNull(testLeave.getInstanceId())) { testLeave.setInstanceId(instance.getId()); testLeaveMapper.insertTestLeave(testLeave); testLeave.setCreateTime(DateUtils.getNowDate()); // 新增抄送人方法，也可发送通知 if (StringUtils.isNotNull(testLeave.getAdditionalHandler())) { List<User> users = FlowFactory.userService().structureUser(instance.getId() , testLeave.getAdditionalHandler(), \\\"4\\\"); FlowFactory.userService().saveBatch(users); } } else { testLeave.setUpdateTime(DateUtils.getNowDate()); testLeaveMapper.updateTestLeave(testLeave); } } } log.info(\\\"流程完成监听器结束......\\\"); } }\"]},\"1278\":{\"h\":\"5.4、分派监听器实现类例子\",\"t\":[\"如下图中示例可以很容易实现\",\"注意： \",\"上个节点分派监听器修改：执行时修改【下个节点配置权限策略】\",\"下个节点配置权限策略：可设置自定义权限策略，比如发起人审批，部门领导审批等\",\"@Component public class AssignmentListener implements Listener { private static final Logger log = LoggerFactory.getLogger(AssignmentListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"分派监听器开始执行......\\\"); List<Task> tasks = variable.getNextTasks(); Instance instance = variable.getInstance(); for (Task task : tasks) { List<String> permissionList = task.getPermissionList(); // 如果设置了发起人审批，则需要动态替换权限标识 for (int i = 0; i < permissionList.size(); i++) { String permission = permissionList.get(i); if (StringUtils.isNotEmpty(permission) && permission.contains(FlowCons.WARMFLOWINITIATOR)) { permissionList.set(i, permission.replace(FlowCons.WARMFLOWINITIATOR, instance.getCreateBy())); } } } log.info(\\\"分派监听器执行结束......\\\"); } }\"]},\"1279\":{\"h\":\"5.5、创建监听器\",\"t\":[\"就是在下一个任务生成前执行，比如创建任务前需要初始化信息或者校验数据是否合法\"]},\"1280\":{\"h\":\"5.6、页面配置全局或节点监听器\"},\"1281\":{\"h\":\"5.6.1、节点监听器（流程节点配置）\"},\"1282\":{\"h\":\"5.6.1、流程监听器（流程定义配置）\"},\"1283\":{\"h\":\"6、全局监听器\",\"t\":[\"全局监听器，只需要实现GlobalListener接口, 按照实际业务需求选择实现一个方法或者多个方法。\",\"/** * 全局监听器: 整个系统只有一个，任务开始、分派、完成和创建时期执行 * * @author warm * @since 2024/11/17 */ @Component public class CustomGlobalListener implements GlobalListener { private static final Logger log = LoggerFactory.getLogger(CustomGlobalListener.class); /** * 开始监听器，任务开始办理时执行 * @param listenerVariable 监听器变量 */ public void start(ListenerVariable listenerVariable) { log.info(\\\"全局开始监听器开始执行......\\\"); log.info(\\\"全局开始监听器执行结束......\\\"); } /** * 分派监听器，动态修改代办任务信息 * @param listenerVariable 监听器变量 */ public void assignment(ListenerVariable listenerVariable) { log.info(\\\"全局分派监听器开始执行......\\\"); log.info(\\\"全局分派监听器执行结束......\\\"); } /** * 完成监听器，当前任务完成后执行 * @param listenerVariable 监听器变量 */ public void finish(ListenerVariable listenerVariable) { log.info(\\\"全局完成监听器开始执行......\\\"); log.info(\\\"全局完成监听器执行结束......\\\"); } /** * 创建监听器，任务创建时执行 * @param listenerVariable 监听器变量 */ public void create(ListenerVariable listenerVariable) { log.info(\\\"全局创建监听器开始执行......\\\"); log.info(\\\"全局创建监听器执行结束......\\\"); } }\"]},\"1284\":{\"h\":\"7、监听器参数使用\",\"t\":[\"页面配置监听器时加上类路径\",\" public void notify(ListenerVariable variable) { Instance instance = variable.getInstance(); Map<String, Object> variableMap = variable.getVariable(); // 拿到json后使用序列化可以拿到配置信息 Map<String, Object> variableMap = variable.getVariable(); if (MapUtil.isNotEmpty(variableMap)) { Object o = variableMap.get(FlowCons.WARM_LISTENER_PARAM); HashMap hashMap = JSONObject.parseObject(JSONObject.toJSONString(o), HashMap.class); } log.info(\\\"创建监听器结束\\\"); }\"]},\"1285\":{\"h\":\"逻辑删除\"},\"1286\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的逻辑删除方式, 默认开启。 如若关闭, 需高版本比如3.5.3或者以上 2、默认逻辑未删除值：0，逻辑已删除值：1 3、如需修改默认值，请参考如下配置文件中进行修改\",\"/** * 关闭逻辑删除 * * @author warm */ @Component public class PlusPostInitTableInfoHandler implements PostInitTableInfoHandler { List<String> tableNames = Arrays.asList(\\\"flow_definition\\\", \\\"flow_node\\\", \\\"flow_skip\\\", \\\"flow_instance\\\", \\\"flow_task\\\" , \\\"flow_his_task\\\", \\\"flow_user\\\"); @Override public void postTableInfo(TableInfo tableInfo, Configuration configuration) { String tableName = tableInfo.getTableName(); if (tableNames.contains(tableName)) { Class<?> clazz = tableInfo.getClass(); Field[] fields = clazz.getDeclaredFields(); try { for (Field field : fields) { if (\\\"withLogicDelete\\\".equals(field.getName())) { field.setAccessible(true); // 关闭逻辑删除 field.set(tableInfo, false); } } } catch (IllegalAccessException e) { throw new FlowException(\\\"反射设置对象值异常\\\"); } } } }\"]},\"1287\":{\"h\":\"1.1、spring\",\"t\":[\"# mybatis-plus配置 mybatis-plus: global-config: db-config: logic-delete-value: 2 # 逻辑已删除值 logic-not-delete-value: 0 # 逻辑未删除值\"]},\"1288\":{\"h\":\"1.2、solon\",\"t\":[\"# 配置数据源对应的 mybatis 信息（要与 DataSource bean 的名字对上） mybatis.db1: globalConfig: #全局配置（要与 GlobalConfig 类的属性一一对应） banner: false logicDeleteValue: 2 # 逻辑已删除值 logicNotDeleteValue: 0 # 逻辑未删除值\"]},\"1289\":{\"h\":\"2、通用逻辑删除\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0\"]},\"1290\":{\"h\":\"orm扩展包使用技巧\",\"t\":[\"重要\",\"1、组件本身提供常见并且基础的api，如果满足不了需求，可以使用orm自身的api\"]},\"1291\":{\"h\":\"1、mybatis-plus\",\"t\":[\"获取组件中的mapper，使用mybaits-plus的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowTaskMapper taskMapper = FrameInvoker.getBean(FlowTaskMapper.class);\"]},\"1292\":{\"h\":\"2、JPA\",\"t\":[\"注入 unitName=warm-flow-jpa EntityManager entityManager 对象\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager;\",\"通过上述注解获取工作流组件内各Entity访问能力\",\"<persistence-unit name=\\\"warm-flow-jpa\\\" transaction-type=\\\"RESOURCE_LOCAL\\\"> <class>org.dromara.warm.flow.orm.entity.FlowDefinition</class> <class>org.dromara.warm.flow.orm.entity.FlowHisTask</class> <class>org.dromara.warm.flow.orm.entity.FlowInstance</class> <class>org.dromara.warm.flow.orm.entity.FlowNode</class> <class>org.dromara.warm.flow.orm.entity.FlowSkip</class> <class>org.dromara.warm.flow.orm.entity.FlowTask</class> <class>org.dromara.warm.flow.orm.entity.FlowUser</class> </persistence-unit>\",\"以下为主要接口示例，更多接口请参考 EntityManager 接口\",\"@PersistenceContext(unitName = \\\"warm-flow-jpa\\\") protected EntityManager entityManager; FlowDefinition entity = dao.newEntity(); // entity 字段填充 // 持久化保存数据 entityManager.persist(entity); // 通过主键查找数据 FlowDefinition existEntity = entityManager.find(FlowDefinition.class, 1l); // 复杂查询语句通过 CriteriaQuery<T> criteriaQuery CriteriaQuery<T> criteriaQuery = ... // select语句获取结果 entityManager.createQuery(criteriaQuery).getResultList(); // 更新操作使用 CriteriaUpdate<T> criteriaUpdate CriteriaUpdate<T> criteriaUpdate = ... entityManager.createQuery(criteriaUpdate).executeUpdate()\",\"JPA注意事项 JPA涉及持久化操作必须开启事务 @Transactional(spring) @Tran(solon)\"]},\"1293\":{\"h\":\"3、mybatis-flex\",\"t\":[\"获取组件中的mapper，使用mybaits-flex的自带方法\",\" // 第一种方式 @Resource private FlowTaskMapper taskMapper; // 第二种方式 FlowDefinitionMapper definitionMapper = FrameInvoker.getBean(FlowDefinitionMapper.class);\"]},\"1294\":{\"h\":\"办理人权限处理器\",\"t\":[\"重要\",\"1、审批前通常需要获取当前办理人所拥有的权限，如角色和部门等，办理时会校验的该权限是否是可审批人员 2、工作流api中很多需要获取当前办理人id，进行保存或者校验 3、以上业务代码中会出现很多重复代码，为此抽取出这个接口\"]},\"1295\":{\"h\":\"1、PermissionHandler接口\",\"t\":[\"/** * 办理人权限处理器 * * @author shadow */ public interface PermissionHandler { /** * 审批前获取当前办理人，办理时会校验的该权限集合 * 后续在{@link FlowParams#getPermissionFlag} 中获取 * 返回当前用户权限集合 * */ List<String> permissions(); /** * 获取当前办理人 * @return 当前办理人 */ String getHandler(); }\"]},\"1296\":{\"h\":\"2、编写PermissionHandler实现类\",\"t\":[\"/** * 办理人权限处理器（可通过配置文件注入，也可用@Bean/@Component方式） * * @author shadow */ @Component public class CustomPermissionHandler implements PermissionHandler { /** * 获取当前操作用户所有权限 */ @Override public List<String> permissions() { // 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输] SysUser sysUser = SecurityUtils.getLoginUser().getUser(); List<SysRole> roles = sysUser.getRoles(); List<String> permissionList = StreamUtils.toList(roles, role -> \\\"role:\\\" + role.getRoleId()); if (sysUser.getUserId() != null) { permissionList.add(String.valueOf(sysUser.getUserId())); } if (sysUser.getDeptId() != null) { permissionList.add(\\\"dept:\\\" + sysUser.getDeptId()); } return permissionList; } /** * 获取当前办理人 * @return 当前办理人 */ @Override public String getHandler() { SysUser sysUser = SecurityUtils.getLoginUser().getUser(); if (sysUser.getUserId() != null) { return String.valueOf(sysUser.getUserId()); } return null; } }\"]},\"1297\":{\"h\":\"多租户\"},\"1298\":{\"h\":\"1、Mybatis-plus\",\"t\":[\"重要\",\"1、Mybatis-plus只支持自身的多租户方式\"]},\"1299\":{\"h\":\"1.1、spring\",\"t\":[\"@Component public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } /** * 指定租户字段 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } /** * 如果业务系统不开启租户，使用下面方法，指定流程表才开启 * @param tableName 表名 * @return */ @Override public boolean ignoreTable(String tableName) { // 流程表 List<String> flowTableName = Arrays.asList(\\\"flow_definition\\\", \\\"flow_his_task\\\", \\\"flow_instance\\\", \\\"flow_node\\\" ,\\\"flow_skip\\\", \\\"flow_task\\\", \\\"flow_user\\\"); TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); AtomicBoolean flag = new AtomicBoolean(true); if (flowTableName.contains(tableInfo.getTableName())) { flag.set(false); } List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return flag.get(); } } @Configuration public class MybatisPlusConfig { @Resource private MpTenantHandler mpTenantHandler; @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); TenantLineInnerInterceptor tenantInterceptor = new TenantLineInnerInterceptor(); tenantInterceptor.setTenantLineHandler(mpTenantHandler); interceptor.addInnerInterceptor(tenantInterceptor); return interceptor; } }\"]},\"1300\":{\"h\":\"1.2、solon\",\"t\":[\"public class MpTenantHandler implements TenantLineHandler { ThreadLocal<String> threadLocal = new ThreadLocal<>(); @Override public Expression getTenantId() { // 返回租户ID的表达式，LongValue 是 JSQLParser 中表示 bigint 类型的 class return new LongValue(2); } @Override public String getTenantIdColumn() { return threadLocal.get(); } @Override public boolean ignoreTable(String tableName) { TableInfo tableInfo = TableInfoHelper.getTableInfo(tableName); List<TableFieldInfo> fieldList = tableInfo.getFieldList(); fieldList.forEach(field -> { // 如果业务和工作流引擎中的租户字段不一致，可以通过这种方式动态切换 if (field.getColumn().equals(\\\"tenant_id\\\") || field.getColumn().equals(\\\"tenant_code\\\")) { threadLocal.set(field.getColumn()); } }); // 获取表字段 return false; } } @Configuration public class WarmFlowConfig { @Bean(value = \\\"db1\\\", typed = true) public DataSource db1(@Inject(\\\"${demo.db1}\\\") HikariDataSource ds) { return ds; } /** * MybatisPlus全局配置 * * @param globalConfig 数据源 */ @Bean public void db1_cfg(@Db(\\\"db1\\\") MybatisConfiguration cfg, @Db(\\\"db1\\\") GlobalConfig globalConfig) { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 多租户插件 必须放到第一位 interceptor.addInnerInterceptor(tenantLineInnerInterceptor()); cfg.addInterceptor(interceptor); } /** * 多租户插件 */ public TenantLineInnerInterceptor tenantLineInnerInterceptor() { return new TenantLineInnerInterceptor(new MpTenantHandler()); } }\"]},\"1301\":{\"h\":\"2、通用多租户\"},\"1302\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler\"]},\"1303\":{\"h\":\"2.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1304\":{\"h\":\"2.3、@Component配置方式\",\"t\":[\"/** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { // 这里返回系统中的当前办理人的租户ID，一般会有工具类获取 return \\\"000000\\\"; } }\"]},\"1305\":{\"h\":\"办理人变量表达式\",\"t\":[\"重要\",\"1、业务中，经常会出现设计流程时，还不确定具体办理人是谁，就需要后续能够动态设置办理人功能，此时办理人变量表达式就派上用场了\"]},\"1306\":{\"h\":\"1、特点\",\"t\":[\"1、内置常见表达式，同时支持功能强大的spel表达，支持扩展\",\"2、支持一对一替换，同时支持多对一的替换，替换集合\",\" @SpringBootTest public class VariableTest { /** * 办理人变量表达式测试 */ @Test public void testVariable() { List<Task> addTasks = new ArrayList<>(); addTasks.add(FlowFactory.newTask().setPermissionList(Arrays.asList(\\\"${handler1}\\\" , \\\"#{@user.evalVar(#handler2)}\\\", \\\"${handler3}\\\", \\\"#{@user.evalVar(#handler4)}\\\" , \\\"#{@user.evalVarEntity(#handler5)}\\\", \\\"role:1\\\", \\\"1\\\"))); FlowParams flowParams = new FlowParams(); Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); variable.put(\\\"handler2\\\", 12L); variable.put(\\\"handler3\\\", new Object[]{9, \\\"10\\\", 102L}); variable.put(\\\"handler4\\\", \\\"15\\\"); Task task = FlowFactory.newTask(); variable.put(\\\"handler5\\\", task.setId(55L)); ExpressionUtil.evalVariable(addTasks, variable); addTasks.forEach(p -> p.getPermissionList().forEach(System.out::println)); } }\"]},\"1307\":{\"h\":\"2、内置表达式\",\"t\":[\"1、默认办理人变量策略: ${handler1}， $前缀表示默认办理人变量策略\",\"2、spel办理人变量策略: #{@user.evalVar(#handler2)}，#前缀表示spel办理人变量策略\"]},\"1308\":{\"h\":\"3、匹配规则\",\"t\":[\"1、默认按照注入策略顺序，倒叙匹配。比如最后注入spel策略，就先遍历spel策略，匹配上就执行。\"]},\"1309\":{\"h\":\"4、变量替换时机\",\"t\":[\"1、流程设计时，本节点配置办理人变量表达式\",\"2、上一个节点任务办理时，传入变量\",\"3、办理完成会生成本节点任务，即可替换完成\",\"比如B-->C, C任务设置办理人变量为${handler1}，B任务或者之前任务办理时传入变量handler1=100，则C节点办理人变量为100\"]},\"1310\":{\"h\":\"5、默认办理人变量策略\"},\"1311\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：${handler1}，表示默认办理人变量策略，handler1是需要被流程变量中替换的标识\"]},\"1312\":{\"h\":\"后端代码设置变量\",\"t\":[\" // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1313\":{\"h\":\"6、spel办理人变量策略\"},\"1314\":{\"h\":\"前端页面设置变量\",\"t\":[\"比如：#{@user.evalVar(#handler2)}，是spel表达式，#handler2是方法入参变量，可以不设置\"]},\"1315\":{\"h\":\"后端代码设置变量\",\"t\":[\"/** * 用户类 */ @Component(\\\"user\\\") public class User { /** * spel办理人变量表达式 * @param handler2 办理人 * @return String */ public String evalVar(String handler2) { return handler2; } } // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler2\\\", \\\"101\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1316\":{\"h\":\"7、办理人选择项接口\",\"t\":[\"通过此接口可以给办理人选择，增加默认选项比如发起人、部门领导审批之类的（待开发）\"]},\"1317\":{\"h\":\"条件表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"1318\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1319\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1320\":{\"h\":\"3、条件表达式\",\"t\":[\"扩展需要实现ConditionStrategy接口或者继承ConditionStrategyAbstract抽象类\"]},\"1321\":{\"h\":\"3.1、条件表达式接口\",\"t\":[\"/** * 条件表达式接口 * * @author warm */ public interface ConditionStrategy extends ExpressionStrategy<Boolean> { /** * 条件表达式策略实现类map */ Map<String, ExpressionStrategy<Boolean>> map = new HashMap<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { map.put(expressionStrategy.getType(), expressionStrategy); } static Map<String, ExpressionStrategy<Boolean>> getExpressionMap() { return map; } default Boolean isIntercept() { return true; } }\"]},\"1322\":{\"h\":\"3.2、条件表达式抽象类\",\"t\":[\"/** * 条件表达式抽象类，复用部分代码 * * @author warm */ public abstract class ConditionStrategyAbstract implements ConditionStrategy { /** * 执行表达式前置方法 合法性校验 * * @param split 表达式后缀：如flag@@eq@@4 * @param variable 流程变量 */ public void preEval(String[] split, Map<String, Object> variable) { AssertUtil.isEmpty(variable, ExceptionCons.NULL_CONDITIONVALUE); Object o = variable.get(split[0].trim()); AssertUtil.isNull(o, ExceptionCons.NULL_CONDITIONVALUE); } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ @Override public Boolean eval(String expression, Map<String, Object> variable) { String[] split = expression.split(FlowCons.splitAt); preEval(split, variable); String variableValue = String.valueOf(variable.get(split[0].trim())); return afterEval(split, variableValue); } /** * 执行表达式后置方法 * * @param split 如flag@@eq@@4 * @param value 流程变量值 * @return 执行结果 */ public abstract Boolean afterEval(String[] split, String value); }\"]},\"1323\":{\"h\":\"3.3、条件表达式实现类\",\"t\":[\"/** * 条件表达式等于 @@eq@@|flag@@eq@@4 * * @author warm */ public class ConditionStrategyEq extends ConditionStrategyAbstract { @Override public String getType() { return FlowCons.splitAt + \\\"eq\\\" + FlowCons.splitAt; } @Override public Boolean afterEval(String[] split, String value) { if (MathUtil.isNumeric(split[2].trim())) { return MathUtil.determineSize(value, split[2].trim()) == 0; } else { return value.equals(split[2].trim()); } } }\"]},\"1324\":{\"h\":\"自定义流程状态\",\"t\":[\"重要\",\"1、flowStatus：流程实例表状态，当前流程状态 2、hisStatus：历史任务表状态，过程状态记录，按照自身业务要求，可以语流程实例状态不同\"]},\"1325\":{\"h\":\"1、开启流程\",\"t\":[\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.start(id, flowParams); }\"]},\"1326\":{\"h\":\"2、流程跳转\",\"t\":[\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\",\" // 自定义流程状态扩展，flowStatus与hisStatus可以不同 if (Objects.nonNull(flowStatus)) { flowParams.flowStatus(flowStatus).hisStatus(flowStatus); } Instance instance = taskService.skip(taskId, flowParams);\"]},\"1327\":{\"h\":\"3、其他请查阅核心api\"},\"1328\":{\"h\":\"设计器二开\",\"t\":[\"重要\",\"1、当内置的设计器和接口不满足业务需求时，可进行二开设计器\"]},\"1329\":{\"h\":\"1 下载设计器源码，改造\",\"t\":[\"如果内置的接口不满足或者不够支持实际业务开发，可在业务系统中增加接口，设计器配置该接口地址\"]},\"1330\":{\"h\":\"2 源码调试\",\"t\":[\"设计器需要配置业务系统的代理地址，否则无法访问业务系统\",\"独立启动该设计器\",\"业务系统配置设计器的地址\"]},\"1331\":{\"h\":\"3 部署\"},\"1332\":{\"h\":\"3.1 先排除原依赖的前端代码\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <exclusions> <exclusion> <artifactId>warm-flow-plugin-vue3-ui</artifactId> <groupId>org.dromara.warm</groupId> </exclusion> </exclusions> </dependency>\"]},\"1333\":{\"h\":\"3.2 设计器不分离部署(部署方案一)\",\"t\":[\"打包项目，把打包后的文件dist复制到业务系统src/main/META-INF/resources,或者src/main/resources目录下都可以,改名为warm-flow-ui\",\"独立服务\"]},\"1334\":{\"h\":\"3.3 设计器独立部署/分离部署(部署方案二)\",\"t\":[\"打包项目，把打包后的文件dist复制到nginx的html目录下,改名为warm-flow-ui\",\"访问地址改为(请注意地址少了/warm-flow-ui)：http://localhost:81/index.html?id=xxx&disabled=false\",\"nginx配置示例\",\"server { listen 82; server_name localhost; location / { root D:/software/nginx-1.16.1/html/warm-flow-ui; try_files $uri $uri/ /index.html; index index.html index.htm; } location /warm-flow-ui/ { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_pass http://localhost:8080/warm-flow-ui/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } }\"]},\"1335\":{\"h\":\"表单管理\",\"t\":[\"待补充\"]},\"1336\":{\"h\":\"json库扩展\",\"t\":[\"重要\",\"1、目前支持Snack3、Jackson、fastjson和Gson四种json库\"]},\"1337\":{\"h\":\"json库扩展\",\"t\":[\"扩展json库需要实现JsonConvert接口，并实现strToMap和mapToStr方法\",\"并通过spi机制加载，可参照warm-flow-plugin-json模块\",\"在resource目录下新建META-INF\\\\services文件夹，并在该文件夹下新建文件org.dromara.warm.flow.core.json.JsonConvert, 配置实现类的全限定名，如org.dromara.warm.plugin.json.JsonConvertJackson\",\"public class JsonConvertJackson implements JsonConvert { private static final Logger log = LoggerFactory.getLogger(JsonConvertJackson.class); /** * 将字符串转为map * @param jsonStr json字符串 * @return map */ @Override public Map<String, Object> strToMap(String jsonStr) { if (StringUtils.isNotEmpty(jsonStr)) { ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.readValue(jsonStr, TypeFactory.defaultInstance().constructMapType(Map.class, String.class, Object.class)); } catch (IOException e) { log.error(\\\"json转换异常\\\", e); throw new FlowException(\\\"json转换异常\\\"); } } return new HashMap<>(); } /** * 将map转为字符串 * @param variable map * @return json字符串 */ @Override public String mapToStr(Map<String, Object> variable) { if (MapUtil.isNotEmpty(variable)) { // 创建 ObjectMapper 实例 ObjectMapper objectMapper = new ObjectMapper(); try { return objectMapper.writeValueAsString(variable); } catch (Exception e) { log.error(\\\"Map转换异常\\\", e); throw new FlowException(\\\"Map转换异常\\\"); } } return null; } }\"]},\"1338\":{\"h\":\"监听器表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"1339\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1340\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1341\":{\"h\":\"3. 监听器表达式\"},\"1342\":{\"h\":\"3.1、监听器表达式接口\",\"t\":[\" /** * 监听器表达式策略接口 * * @author warm */ public interface ListenerStrategy extends ExpressionStrategy<Boolean> { /** * 监听器表达式策略实现类集合 */ List<ExpressionStrategy<Boolean>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<Boolean> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1343\":{\"h\":\"3.2、监听器表达式实现类\",\"t\":[\"/** * spel监听器表达式 #{@user.eval()} * * @author warm */ public class ListenerStrategySpel implements ListenerStrategy { @Override public String getType() { return \\\"#\\\"; } @Override public Boolean eval(String expression, Map<String, Object> variable) { SpelHelper.parseExpression(expression, variable); // 恒返回true，说明匹配上监听器表达式，扩展策略也一定要返回true return true; } }\"]},\"1344\":{\"h\":\"办理人变量表达式扩展\",\"t\":[\"重要\",\"当内置的条件、办理人变量和监听器表达式不满足业务需求时，可进行扩展\"]},\"1345\":{\"h\":\"1、表达式公共接口\",\"t\":[\"重要\",\"ExpressionStrategy接口，是表达式策略类接口，抽离公共方法\",\"1、getType(): 表达式策略类型，也是表达式的前缀 2、isIntercept(): 执行表达式之前，是否截取表达式前缀，然后在进行执行，默认不截取 3、eval(): 执行表达式 4、setExpression(): 设置新增的表达式，方便扩展\",\"/** * 表达式策略类接口 * * @author warm */ public interface ExpressionStrategy<T> { /** * 获取策略类型 * * @return 类型 */ String getType(); /** * 是否截取表达式前缀，然后在进行执行，默认不截取 * 如果截取，比如@@spel@@|#{@user.evalVar()} , 截取@@spel@@|，后再执行#{@user.evalVar()}解析 * * @return 类型 */ default Boolean isIntercept() { return false; } /** * 执行表达式 * * @param expression 表达式 * @param variable 流程变量 * @return 执行结果 */ T eval(String expression, Map<String, Object> variable); /** * 设置表达式 * @param expressionStrategy 表达式 */ void setExpression(ExpressionStrategy<T> expressionStrategy); }\"]},\"1346\":{\"h\":\"2、注册表达式实现类\",\"t\":[\"通过这个方法进行注册ExpressionUtil.setExpression\",\"ExpressionUtil.setExpression(new ExpressionStrategyEq());\"]},\"1347\":{\"h\":\"3、办理人变量表达式\",\"t\":[\"扩展需要实现VariableStrategy接口, 实现getType和eval方法\"]},\"1348\":{\"h\":\"3.1、办理人变量表达式接口\",\"t\":[\"/** * 办理人变量表达式策略 * * @author warm */ public interface VariableStrategy extends ExpressionStrategy<List<String>> { /** * 办理人变量表达式策略实现类集合 */ List<ExpressionStrategy<List<String>>> expressionStrategyList = new ArrayList<>(); default void setExpression(ExpressionStrategy<List<String>> expressionStrategy) { expressionStrategyList.add(expressionStrategy); } }\"]},\"1349\":{\"h\":\"3.2、办理人变量表达式实现类\",\"t\":[\"/** * 默认办理人变量表达式策略： ${flag} * * @author warm */ public class DefaultVariableStrategy implements VariableStrategy { @Override public String getType() { return \\\"$\\\"; } @Override public String eval(String expression, Map<String, Object> variable) { if (StringUtils.isEmpty(expression) || MapUtil.isEmpty(variable)) { return null; } String result = expression.replace(\\\"${\\\", \\\"\\\").replace(\\\"}\\\", \\\"\\\"); Object o = variable.get(result); if (ObjectUtil.isNotNull(o)) { String variableStr = (String) o; if (StringUtils.isEmpty(variableStr)) { return null; } return variableStr; } return null; } }\"]},\"1350\":{\"h\":\"公司使用列表\",\"t\":[\"公司/个人\",\"项目名称\",\"项目介绍\",\"LOGO\\\\代码地址\",\"中交武汉智行国际\",\"能力开放平台\",\"内部系统，流程审批\",\"新理益智慧网络科技（重庆）有限公司\",\"极点OA智慧网络办公系统\",\"企业综合办公管理系统\",\"安徽数智建造研究院有限公司\",\"进销存运营平台\",\"中铁四局集团全资子公司，集成工作流引擎\",\"杭州三之一智联科技有限公司\",\"质量管理系统\",\"基于工业互联网的数字化安全与质量管理平台，集风险、质量和安全为一体，以CTQ（关键质量特性）为中心，端到端全生命周期数字化安全与质量管理。\",\"郑州如阳科技有限公司\",\"智慧燃气平台\",\"智慧燃气平台\",\"山东融佑信息科技有限公司\",\"融运力TMS\",\"融运力TMS是基于移动互联网的面向货主侧需求的订单履约类的TMS系统，兼有传统TMS的竞标、派车、跟踪、签收等功能，同时具备企业ERP级的协同功能\",\"陕西物联达智能科技有限公司\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"H5VE团队\",\"entfrm-boot\",\"打造免费开源低代码平台 构建信创，开放生态\",\"抚顺银行\",\"外围管理平台\",\"行内人员使用\",\"武汉数演科技有限公司\",\"开源工作流\",\"仿钉钉界面的开源工作流平台\",\"半月无霜\",\"banmoon-test\",\"半月无霜个人项目\",\"https://www.banmoon.top\",\"某某公司\",\"合规管控系统\",\"对各类事项进行检查，上报不合规的地方来审批整改\",\"个人\",\"海狼OA系统\",\"海狼OA系统\",\"xx自来水股份有限公司\",\"节水信息管理系统\",\"当地节水系统\",\"图灵谷\",\"内部OA\",\"内部OA\",\"湖北建科工程\",\"内部OA\",\"内部OA\",\"Holly\",\"智慧政务\",\"政务系统\",\"雨巷\",\"OA审批系统\",\"公司内部OA办公系统\",\"暗影\",\"erp\",\"erp\",\"LYQ\",\"XX单位综合信息服务系统\",\"简易工作流，OA办公，数据共享等等\",\"若愚\",\"测试检测平台\",\"starrydesert\",\"基于SSM的职工管理系统\",\"毕业设计\",\"zyflzz\",\"基于机器学习的只能停车管理系统\",\"毕业设计\",\"南山客\",\"基于SpringBoot的财务管理系统\",\"本科毕业设计\"]},\"1351\":{\"h\":\"如何贡献\"},\"1352\":{\"h\":\"参与贡献\"},\"1353\":{\"h\":\"为开源项目点一个Star\",\"t\":[\"Star的多少关系到项目能否被更多人看到 同时Star也是作者前进的动力(作者每天都在盯着Star 涨了会开心 跌了会失落) 大家在寻找开源项目的时候, 大多数情况也是会先看Star比较多的项目 所以请给您觉得好的开源项目点一个小小的Star, 让好的项目能够被更多人看到\",\"github地址 | gitee地址 | gitCode地址\"]},\"1354\":{\"h\":\"为社区处理问题\",\"t\":[\"Issue是社区的交流地 大家会在这里提出自己的问题 或者是项目的功能异常\",\"提问的规范在Issue的模板里已经写好了 按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",\"屏幕截图\",\"为提出问题的小伙伴答疑 可以有效降的帮助别人\",\"而且可以降低社区人员的精力分散 使精力全部投入到项目设计研发中\",\"屏幕截图\"]},\"1355\":{\"h\":\"\",\"t\":[\"大家都知道 我们程序员都不擅长写作\",\"有时候作者把文档写完了也不知道用户是什么感觉 是否能看懂\",\"所以参与社区文档建设绝对是一件意义重大的事情\",\"大家可以在Issue提出观后感 觉得哪看不懂 觉得哪应该详细说明\",\"当然了 大家也可以对文档进行改进后提交PR修改申请\"]},\"1356\":{\"h\":\"贡献代码\",\"t\":[\"想参与贡献代码的小伙伴 重点来了: 作者会经常在Issue里发布需求认领 觉得自己能做的可以在Issue里跟作者讨论 如需求还不够清晰 或者做的过程中遇到了什么问题\",\"需求确定了以后就可以开始专注的写代码了 但在开始写代码之前 一定要先看一下如何正确的提交PR\"]},\"1357\":{\"h\":\"如何成为项目贡献者\",\"t\":[\"1.对框架有重大贡献者(由作者与团队成员判定) 2.完成社区发布的两项复杂任务 3.持续完成社区发布的简单任务若干(作者会关注到) 4.持续为社区优化文档或处理issue若干(作者会关注到)\"]},\"1358\":{\"h\":\"项目贡献者待遇\",\"t\":[\"1.捐献红包和群主不定时红包 2.每年还会发放IDEA正版授权,视情况而定\"]},\"1359\":{\"h\":\"提交pr\"},\"1360\":{\"h\":\"步骤一 Fork项目到自己仓库\",\"t\":[\"屏幕截图\"]},\"1361\":{\"h\":\"步骤二 基于dev分支 新建一个此PR功能点的专属分支\"},\"1362\":{\"h\":\"步骤三 使用Git工具 将自己仓库的项目拉去到本地做代码编写\",\"t\":[\"屏幕截图\"]},\"1363\":{\"h\":\"步骤四 使用Idea打开项目 切换到新建的功能分支\",\"t\":[\"屏幕截图\"]},\"1364\":{\"h\":\"步骤五 设置创建类的模板\",\"t\":[\"新创建的类使用这个模板生成注释，使用方式在类上面写上 /c，然后按回车会自动生成\"]},\"1365\":{\"h\":\"步骤六 将编写好的代码 提交到自己的远程仓库\",\"t\":[\"屏幕截图\",\"git提交规范\",\"[init] 初始化 [feat] 增加新功能 [fix] 修复问题/BUG [perf] 优化/性能提升 [refactor] 重构 [revert] 撤销修改 [style] 代码风格相关无影响运行结果的 [update] 其他修改 [upgrade] 升级版本\"]},\"1366\":{\"h\":\"步骤七 创建PR申请(此操作在自己仓库或者要PR的仓库都可以)\",\"t\":[\"屏幕截图\"]},\"1367\":{\"h\":\"步骤八 等待作者评审 按要求更改 直到没有问题后被作者合并\",\"t\":[\"屏幕截图\"]},\"1368\":{\"h\":\"介绍\"},\"1369\":{\"h\":\"1、项目介绍\",\"t\":[\"重要\",\"Dromara Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"希望一键三连，你的⭐️ Star ⭐️是我持续开发的动力，项目也活的更长\"]},\"1370\":{\"h\":\"2、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1371\":{\"h\":\"3、开源协议\",\"t\":[\"Dromara Warm-Flow采用APACHE LICENSE 2.0开源协议，已申请软著，您如果需要源码开发方式，需要注意以下几点：\",\"请不要删除和修改根目录下的LICENSE文件。\",\"请不要删除和修改Warm-Flow源码头部的版权声明。\",\"本项目代码可免费商业使用，商业使用请保留源码和相关描述文件的项目出处，作者声明等。\",\"分发源码时候，请注明软件出处 http://www.warm-flow.cn\",\"不可二次分发开源参与同类竞品，如有想法可联系290631660@qq.com商议合作。\",\"若您的项目无法满足以上几点，需要更多功能代码，获取可找作者定制化开发，290631660@qq.com\"]},\"1372\":{\"h\":\"4、应用场景\",\"t\":[\"Dromara Warm-Flow作为一个国产的工作流引擎，其设计简洁轻量但功能全面，适用于多种应用场景，尤其是针对中小型项目。以下是一些典型的应用场景：\",\"企业内部流程管理：用于管理企业的日常业务流程，如请假、报销、采购审批等。\",\"项目管理：在项目管理中，Dromara Warm-Flow可以用来跟踪项目任务的状态，管理项目流程，确保项目按计划进行。\",\"办公自动化：通过Warm-Flow，企业可以实现办公流程的自动化，提高工作效率，减少人为错误。\",\"客户服务流程：用于管理客户服务请求，如客户咨询、投诉处理、售后服务等。\",\"人力资源管理：在人力资源管理中，Warm-Flow可用于员工招聘、培训、绩效评估等流程的管理。\",\"财务和会计流程：管理财务审批流程，如发票审核、预算审批等。\",\"IT服务管理：用于IT服务请求的处理，如IT支持请求、系统变更管理等。\",\"业务流程优化：企业可以利用Dromara Warm-Flow来分析和优化现有业务流程，提高业务效率。\",\"合规性和风险管理：帮助企业在遵守法规和标准的同时，管理风险和合规流程。\",\"跨部门协作：Dromara Warm-Flow支持跨部门的流程协作，帮助不同部门之间更好地协调工作。\"]},\"1373\":{\"h\":\"5、支持数据库类型\",\"t\":[\" mysql\",\" oracle\",\" postgresql\",\" 达梦\",\" 人大金仓\",\" GaussDB\",\" oceanbase\",\" sqlserver\",\" ......\"]},\"1374\":{\"h\":\"6、支持orm框架类型\",\"t\":[\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1375\":{\"h\":\"7、特别赞助\",\"t\":[\"如何成为赞助商 加群联系作者详谈\"]},\"1376\":{\"h\":\"8、你可以请作者喝杯咖啡表示鼓励\",\"t\":[\"捐赠地址\"]},\"1377\":{\"h\":\"功能演示\",\"t\":[\"以下演示基于项目示例hh-vue\",\"重要\",\"以下演示基于项目示例hh-vue\"]},\"1378\":{\"h\":\"演示地址\",\"t\":[\"注意\",\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1379\":{\"h\":\"演示图\"},\"1380\":{\"h\":\"1、新增定义\",\"t\":[\"提示\",\"流程编码和流程版本：确定唯一 审批表单路径：记录待办任务需要显示的待办信息页面，点击待办时候获取这个路径，动态加载这个页面\",\"屏幕截图\"]},\"1381\":{\"h\":\"2、流程设计\"},\"1382\":{\"h\":\"2、1节点设置\",\"t\":[\"提示\",\"配置节点名称，协作方式（会签、票签和或签），节点权限，是否任意调整，监听器等\"]},\"1383\":{\"h\":\"2、2跳转线设置\",\"t\":[\"提示\",\"配置跳转名称，跳转类型（通过还是退回）,退回不能选择通过类型，调整条件\"]},\"1384\":{\"h\":\"3、开启流程实例\",\"t\":[\"提示\",\"hh-vue项目已经准备了七套流程，以及开启流程代码，开启流程会直接执行到开始节点后一个节点\"]},\"1385\":{\"h\":\"4、提交流程\",\"t\":[\"提示\",\"提交流程后，流程流转到代表任务，由流程设计中的对应权限人去办理\",\"屏幕截图\"]},\"1386\":{\"h\":\"5、办理流程\",\"t\":[\"提示\",\"如果是互斥网关则会判断是否满足条件\"]},\"1387\":{\"h\":\"6、驳回流程\",\"t\":[\"屏幕截图\"]},\"1388\":{\"h\":\"开源集成案例\",\"t\":[\"作者\",\"项目名称\",\"描述\",\"晓华\",\"hh-vue / 演示\",\"基于ruoyi-vue集成，springboot2+vue2\",\"seven\",\"seaflow / 演示\",\"seaflow 是一款 开源仿钉钉工作流 平台， 前端使用 vue3+element plus ， 实现 流程设计和审批功能， 后端基于国产工作流Dromara warm-flow 实现流程控制， 大大缩短了学习成本\",\"晓华/Zhen\",\"ruoyi-vue3\",\"基于ruoyi-vue3集成前端\",\"梁小梁/Zhen\",\"Ruoyi-Cloud/RuoYi-Vue3\",\"基于Ruoyi-Cloud集成的跑批系统,spring-cloud(nacos)+vue3\",\"quick\",\"quick-boot / 演示\",\"基于 Spring Cloud 2022 、Spring Boot 3、React、AMIS 和 APIJSON 的低代码系统的设计和实现。该系统可以帮助企业快速开发和部署高质量的 Web 应用程序\"]},\"1389\":{\"h\":\"捐赠\",\"t\":[\"感谢所有捐赠者，你们的支持是我最大的动力。这些费用将用于服务器、域名和相关服务的费用，以及warm组织成员和贡献者的红包奖励。\"]},\"1390\":{\"h\":\"捐赠列表\",\"t\":[\"如有遗漏，请联系我。\",\"捐献者\",\"金额/元\",\"留言\",\"时间\",\"一拳打爆常大宝\",\"20\",\"感谢您对开源项目的支持\",\"2024-08-08\",\"李*佳\",\"30\",\"感谢您对开源项目的支持\",\"2024-08-02\",\"*佳\",\"30\",\"希望有交流机会\",\"2024-08-01\",\"*子\",\"30\",\"准备试用，致敬\",\"2024-07-16\",\"i*d\",\"1\",\"感谢您对开源项目的支持\",\"2024-07-11\",\"自由飞翔\",\"100\",\"感谢您对开源项目的支持\",\"2024-07-03\",\"文斌\",\"100\",\"Dromara warm-flow项目非常好，希望能发展壮大\",\"2024-06-25\",\"*入\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*梁\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*马\",\"100\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*热\",\"68\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*巴\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*敏\",\"10\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*剑\",\"1\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"一骑\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"姜杰\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Cola\",\"20\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"Dotor-ww💪\",\"30\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*荒\",\"50\",\"感谢您对开源项目的支持\",\"2024-06-25\",\"*飞鸿\",\"11\",\"感谢您对开源项目的支持\",\"2024-06-25\"]},\"1391\":{\"h\":\"核心api\"},\"1392\":{\"h\":\"1、DefService流程定义接口\"},\"1393\":{\"h\":\"1.1、新增流程定义表数据，新增后需要通过saveXml接口保存流程节点和流程跳转数据\",\"t\":[\"checkAndSave(definition)：校验后新增\"]},\"1394\":{\"h\":\"1.2、新增流程定义，并初始化流程节点和流程跳转数据\",\"t\":[\"saveAndInitNode(definition)：校验后新增\"]},\"1395\":{\"h\":\"1.3、导入流程定义、流程节点和流程跳转数据\",\"t\":[\"importXml(is)：导入流程定义xml的输入流\"]},\"1396\":{\"h\":\"1.4、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(def)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id [必传]\",\"xmlString: 流程定义xml字符串 [必传]\"]},\"1397\":{\"h\":\"1.5、保存流程节点和流程跳转数据\",\"t\":[\"saveXml(id, xmlString)： 传入流程定义id、流程定义xml字符串\",\"id: 流程定义id\",\"xmlString: 流程定义xml字符串\"]},\"1398\":{\"h\":\"1.6、导出流程定义\",\"t\":[\"exportXml(id)： 导出流程定义(流程定义、流程节点和流程跳转数据)xml的Document对象\"]},\"1399\":{\"h\":\"1.7、获取流程定义\",\"t\":[\"xmlString(id)： 获取流程定义xml(流程定义、流程节点和流程跳转数据)的字符串\"]},\"1400\":{\"h\":\"1.8、删除\",\"t\":[\"removeDef(ids)： 删除流程定义相关数据\"]},\"1401\":{\"h\":\"1.9、发布\",\"t\":[\"publish(id)： 发布流程定义\"]},\"1402\":{\"h\":\"1.10、取消发布\",\"t\":[\"unPublish(id)： 取消发布流程定义\"]},\"1403\":{\"h\":\"1.11、复制流程\",\"t\":[\"copyDef(id)： 复制流程定义\"]},\"1404\":{\"h\":\"1.12、获取流程图\",\"t\":[\"flowChart(instanceId)： 获取流程图的图片流\"]},\"1405\":{\"h\":\"1.13、激活流程\",\"t\":[\"active(Long id)： 激活流程\"]},\"1406\":{\"h\":\"1.14、挂起流程\",\"t\":[\"unActive(Long id)： 挂起流程：流程定义挂起后，相关的流程实例都无法继续流转\"]},\"1407\":{\"h\":\"1.15、获取流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 获取流程定义全部数据(包含节点和跳转)\"]},\"1408\":{\"h\":\"1.16、查询流程设计所需的数据，比如流程图渲染，导出流程定义\",\"t\":[\"getAllDataDefinition(Long id)： 查询流程设计所需的数据，比如流程图渲染，导出流程定义\"]},\"1409\":{\"h\":\"2、InsService流程实例接口\"},\"1410\":{\"h\":\"2.1、开启流程\",\"t\":[\"start(businessId, flowParams)：传入业务id，开启流程实例。flowParams包含如下字段：\",\"flowCode: 流程编码 [必传]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"ext: 扩展字段，预留给业务系统使用 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态[按需传输]\"]},\"1411\":{\"h\":\"2.2、流程跳转\",\"t\":[\"skipByInsId(instanceId, flowParams)：传入流程实例id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码,如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1412\":{\"h\":\"2.3、终止流程\",\"t\":[\"termination(instanceId, flowParams)：传入流程实例id，终止流程。flowParams包含如下字段：\",\"handler: 办理人唯一标识 [建议传]\",\"message: 审批意见 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1413\":{\"h\":\"2.4、删除流程实例\",\"t\":[\"remove(instanceIds)：根据实例ids，删除流程\"]},\"1414\":{\"h\":\"2.5、激活实例\",\"t\":[\"active(Long id)： 激活实例\"]},\"1415\":{\"h\":\"2.6、挂起实例\",\"t\":[\"unActive(Long id)： 挂起实例，流程实例挂起后，该流程实例无法继续流转\"]},\"1416\":{\"h\":\"2.7、根据流程定义id集合，查询流程实例集合\",\"t\":[\"listByDefIds(defIds)：根据流程定义id集合，查询流程实例集合\"]},\"1417\":{\"h\":\"3、TaskService待办任务接口\"},\"1418\":{\"h\":\"3.1、流程跳转\",\"t\":[\"skip(taskId, flowParams)：传入流程任务id，流程跳转。flowParams包含如下字段：\",\"skipType: 跳转类型(PASS审批通过 REJECT退回) [必传]\",\"nodeCode: 节点编码，如果指定节点,可任意跳转到对应节点 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等, 流程设计时未设置办理人或者ignore为true可不传 [按需传输]\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"variable: 流程变量 [按需传输]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1419\":{\"h\":\"3.2、终止流程\",\"t\":[\"termination(taskId, flowParams)：传入流程任务id，终止流程。flowParams包含如下字段：\",\"message: 审批意见 [按需传输]\",\"handler: 办理人唯一标识 [建议传]\",\"flowStatus: 流程状态，自定义流程状态 [按需传输]\",\"permissionFlag: 办理人权限标识，比如用户，角色，部门等，不传不校验权限 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1420\":{\"h\":\"3.3、转办\",\"t\":[\"transfer(taskId, flowParams)：转办, 默认删除当然办理用户权限，转办后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 转办对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1421\":{\"h\":\"3.4、委派\",\"t\":[\"depute(taskId, flowParams)：委派, 默认删除当然办理用户权限，委派后，当前办理不可办理。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 委托对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1422\":{\"h\":\"3.5、加签\",\"t\":[\"addSignature(taskId, flowParams)：加签，增加办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"addHandlers: 加签对象 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1423\":{\"h\":\"3.6、减签\",\"t\":[\"reductionSignature(taskId, flowParams)：减签，减少办理人。flowParams包含如下字段：\",\"handler: 当前办理人唯一标识 [必传]\",\"permissionFlag: 用户所拥有的权限标识[按需传输，ignore为false，则必传]\",\"reductionHandlers: 减少办理人 [必传]\",\"message: 审批意见 [按需传输]\",\"ignore: 转办忽略权限校验，默认不忽略（true：忽略，false：不忽略）[按需传输]\"]},\"1424\":{\"h\":\"3.7、修改办理人\",\"t\":[\"updateHandler(taskId, flowParams)：传入流程任务id，修改办理人\",\"handler: 办理人唯一标识 [按需传输]\",\"permissionFlag: 用户所拥有的权限标识 [按需传输，ignore为false，则必传]\",\"addHandlers: 增加办理人：加签，转办，委托 [按需传输]\",\"reductionHandlers: 减少办理人：减签，委托 [按需传输]\",\"message: 审批意见 [按需传输]\",\"cooperateType: 协作方式(2转办 3委派 6加签 7减签）[按需传输]\",\"ignore: 转办忽略权限校验（true：忽略，false：不忽略）[按需传输]\"]},\"1425\":{\"h\":\"4、NodeService节点接口\"},\"1426\":{\"h\":\"4.1、获取下一个节点列表\",\"t\":[\"getNextNodeList(definitionId, nowNodeCode, anyNodeCode, skipType, variable)：根据流程定义和当前节点code获取下一节点,如是网关跳过取下一节点,并行网关返回多个节点\",\"definitionId: 流程定义id [必传]\",\"nowNodeCode: 当前节点code [必传]\",\"skipType: 跳转类型（PASS审批通过 REJECT退回） [必传]\",\"anyNodeCode: anyNodeCode不为空，则可跳转anyNodeCode节点（优先级最高） [按需传输]\",\"variable: 流程变量,下一个节点是网关需要判断跳转条件,并行网关返回多个节点 [按需传输]\"]},\"1427\":{\"h\":\"5、公共api接口\"},\"1428\":{\"h\":\"5.1、根据id查询\",\"t\":[\"getById(id)：根据id查询\",\"id: 主键\"]},\"1429\":{\"h\":\"5.2、根据ids主键集合查询\",\"t\":[\"getByIds(ids)：根据ids主键集合查询\",\"ids: 主键集合\"]},\"1430\":{\"h\":\"5.3、分页查询\",\"t\":[\"getById(entity, page)：分页查询\",\"entity: 查询实体\",\"page: 分页对象，支持设置排序字段\"]},\"1431\":{\"h\":\"5.4、查询列表\",\"t\":[\"list(entity)：查询列表\",\"entity: 查询实体\"]},\"1432\":{\"h\":\"5.5、查询列表，可排序\",\"t\":[\"list(entity, query)：查询列表，可排序\",\"entity: 查询实体\",\"query: 查询代理层处理，支持设置排序字段\"]},\"1433\":{\"h\":\"5.6、查询一条记录\",\"t\":[\"getOne(entity)：查询一条记录\",\"entity 查询实体\"]},\"1434\":{\"h\":\"5.7、获取总数量\",\"t\":[\"selectCount(entity)：获取总数量\",\"entity: 查询实体\"]},\"1435\":{\"h\":\"5.8、判断是否存在\",\"t\":[\"exists(entity)：判断是否存在\",\"entity: 查询实体\"]},\"1436\":{\"h\":\"5.8、新增\",\"t\":[\"save(entity)：新增\",\"entity: 实体\"]},\"1437\":{\"h\":\"5.9、根据id修改\",\"t\":[\"updateById(entity)：根据id修改\",\"entity: 实体\"]},\"1438\":{\"h\":\"5.10、根据id删除\",\"t\":[\"removeById(id)：根据id删除\",\"id: 实体\"]},\"1439\":{\"h\":\"5.11、根据entity删除\",\"t\":[\"remove(entity)：根据entity删除\",\"entity: 实体\"]},\"1440\":{\"h\":\"5.12、根据ids批量删除\",\"t\":[\"removeByIds(ids)：根据ids批量删除\",\"ids: 实体\"]},\"1441\":{\"h\":\"5.13、批量新增\",\"t\":[\"saveBatch(list)：批量新增\",\"list: 实体集合\"]},\"1442\":{\"h\":\"5.14、批量新增\",\"t\":[\"saveBatch(list, batchSize)：批量新增\",\"list: 需要插入的集合数据\",\"batchSize: 插入大小\"]},\"1443\":{\"h\":\"5.15、批量更新\",\"t\":[\"updateBatch(list)：批量更新\",\"list: 集合数据\"]},\"1444\":{\"h\":\"5.16、id设置正序排列\",\"t\":[\"orderById()：id设置正序排列\"]},\"1445\":{\"h\":\"5.17、创建时间设置正序排列\",\"t\":[\"orderByCreateTime()：创建时间设置正序排列\"]},\"1446\":{\"h\":\"5.18、更新时间设置正序排列\",\"t\":[\"orderByUpdateTime()：更新时间设置正序排列\"]},\"1447\":{\"h\":\"5.19、设置正序排列\",\"t\":[\"orderByAsc(orderByField)：设置正序排列\",\"orderByField: 排序字段\"]},\"1448\":{\"h\":\"5.20、设置倒序排列\",\"t\":[\"orderByDesc(orderByField)：设置倒序排列\",\"orderByField: 排序字段\"]},\"1449\":{\"h\":\"5.21、用户自定义排序方案\",\"t\":[\"orderBy(orderByField)：用户自定义排序方案\",\"orderByField: 排序字段\"]},\"1450\":{\"h\":\"流程协作(票签等)\",\"t\":[\"重要\",\"审批过程中可能存在，一人或者多人审批的情况，不同情况对应不同协作类型（会签、票签和或签）\"]},\"1451\":{\"h\":\"1、流程协作规则\",\"t\":[\"或签：一名办理人审批通过，审批节点才会通过 票签：满足设定的通过率，部分审批人审批通过，审批节点才会通过 会签：所有审批人审批通过，审批节点才会通过\"]},\"1452\":{\"h\":\"2、使用演示\"},\"1453\":{\"h\":\"2.1、或签\"},\"1454\":{\"h\":\"2.2、票签签\"},\"1455\":{\"h\":\"2.3、会签\"},\"1456\":{\"h\":\"条件表达式\",\"t\":[\"重要\",\"在执行互斥网关时候，抉择是执行哪个分支，可以通过条件表达式来判断\"]},\"1457\":{\"h\":\"1、内置表达式类型\",\"t\":[\"1、默认: default|${flag == 5 && flag > 4}\",\"2、SpEL: #{@user.eval(#flag)}\",\"3、大于: gt|flag|4\",\"4、大于等于: ge|flag|4\",\"5、等于: eq|flag|4\",\"6、不等于： ne|flag|4\",\"7、小于: lt|flag|4\",\"8、小于等于: le|flag|4\",\"9、包含: like|flag|4\",\"10、不包含: notNike|flag|4\",\"11、自定义表达式\"]},\"1458\":{\"h\":\"2、匹配规则\",\"t\":[\"1、常规匹配规则：xxx|yyy|zzz，xxx为表达式类型，其中yyy为变量名，，最后的zzz为变量值\",\"2、Spring Expression Language（SpEL）:#{@user.eval(#flag)}表达式，#flag为变量和以下方法入参命名一致，可不设置入参\",\"@Component(\\\"user\\\") public class User { /** * spel条件表达：判断大于等4 * @param flag 待判断的字符串 * @return boolean */ public boolean eval(String flag) { BigDecimal a = new BigDecimal(flag); BigDecimal b = new BigDecimal(\\\"4\\\"); return a.compareTo(b) > 0; } } /** * 新增OA 请假申请 * * @param testLeave OA 请假申请 * @return 结果 */ @Override public int insertTestLeave(TestLeave testLeave, String flowStatus) { FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); return instance != null? 1 : 0; }\"]},\"1459\":{\"h\":\"配置文件\"},\"1460\":{\"h\":\"1、spring\"},\"1461\":{\"h\":\"1.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 是否开启设计器ui，默认true ui: true # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19 # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器，有多租户需要，可以配置自定义实现 tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization1 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\"]},\"1462\":{\"h\":\"1.2、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 * * @author warm */ public class CustomTenantHandler implements TenantHandler { @Override public String getTenantId() { return \\\"000000\\\"; } }\"]},\"1463\":{\"h\":\"2、solon\"},\"1464\":{\"h\":\"2.1、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 是否显示banner图，默认是 banner: true # # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 # data-fill-handler-path: org.dromara.warm.flow.core.test.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 # tenant_handler_path: org.dromara.warm.flow.core.test.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启，比如jpa） logic_delete: false # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # warm-flow-jpa 的hibernate jpa配置 此处属于固定配置 warm-flow-jpa: # jpa 与 数据源绑定，此处填写数据源名称 datasource: db1 # hibernate 配置配置 properties: hibernate: hbm2ddl: auto: none show_sql: true format_sql: true dialect: org.hibernate.dialect.MySQL8Dialect connection: isolaction: 4 # 事务隔离级别 4 可重复度\"]},\"1465\":{\"h\":\"2.1、bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1466\":{\"h\":\"数据填充器\",\"t\":[\"重要\",\"1、如果觉得内置的id、创建时间和更新时间自动生成规则，不符合业务要求，可通过填充器覆盖\"]},\"1467\":{\"h\":\"1、自定义填充器，并继承DataFillHandler\",\"t\":[\"public class CustomDataFillHandler implements DataFillHandler { @Override public void idFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { if (Objects.isNull(entity.getId())) { entity.setId(IdUtils.nextId()); } } } @Override public void insertFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { Date date = ObjectUtil.isNotNull(entity.getCreateTime())? entity.getCreateTime() : new Date(); entity.setCreateTime(date); entity.setUpdateTime(date); } } @Override public void updateFill(Object object) { RootEntity entity = (RootEntity) object; if (ObjectUtil.isNotNull(entity)) { entity.setUpdateTime(ObjectUtil.isNotNull(entity.getUpdateTime()) ? entity.getCreateTime() : new Date()); } } }\"]},\"1468\":{\"h\":\"2、注入bean\"},\"1469\":{\"h\":\"2.1、通过@Component方式注入\"},\"1470\":{\"h\":\"2.2、yaml配置方式\",\"t\":[\"# warm-flow工作流配置 warm-flow: # 填充器，内部有默认实现，如果不满足实际业务，可通过此配置自定义实现 data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler\"]},\"1471\":{\"h\":\"2.3、@Configuration+@Bean配置方式\",\"t\":[\"@Configuration public class WarmFlowConfig { @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } }\"]},\"1472\":{\"h\":\"设计器集成\",\"t\":[\"重要\",\"1、为了方便业务系统快速引入设计器，不需要搬运并且适配等工作 2、可以按照本文中介绍的，使用设计器，并快速接入业务系统 3、设计原理采取不分离的方式，把设计器打包的jar包中,以接口和静态资源的方式引入\"]},\"1473\":{\"h\":\"1. 引入依赖\"},\"1474\":{\"h\":\"springboot\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>版本号</version> </dependency>\"]},\"1475\":{\"h\":\"solon\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-solon-web</artifactId> <version>版本号</version> </dependency>\"]},\"1476\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"这个路径需要放行，否则无法访问，/warm-flow-ui/**\"]},\"1477\":{\"h\":\"2.1 spring-security 放行配置\",\"t\":[\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1478\":{\"h\":\"2.2 shiro 放行配置\",\"t\":[\"@Configuration public class ShiroConfig { /** * Shiro过滤器配置 */ @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) { CustomShiroFilterFactoryBean shiroFilterFactoryBean = new CustomShiroFilterFactoryBean(); ...... // 后端请求，静态资源，可匿名访问 LinkedHashMap<String, String> filterChainDefinitionMap = new LinkedHashMap<>(); filterChainDefinitionMap.put(\\\"/warm-flow-ui/**\\\", \\\"anon\\\"); filterChainDefinitionMap.put(\\\"/warm-flow/**\\\", \\\"anon\\\"); shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap); return shiroFilterFactoryBean; } }\"]},\"1479\":{\"h\":\"2.3 sa-token 放行配置\",\"t\":[\"@Configuration public class SaTokenConfigure implements WebMvcConfigurer { // 注册拦截器 @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new SaInterceptor(handle -> StpUtil.checkLogin())) .addPathPatterns(\\\"/**\\\") // 以上是sa-token案例，下面才是需要排除的地址 .excludePathPatterns(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\"); } }\"]},\"1480\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1481\":{\"h\":\"3.2 vue2 引入\",\"t\":[\"首先传入设计器需要的流程定义definitionId和是否可编辑disabled参数\",\"本实例采用iframe方式嵌入设计器\",\" <template> <div :style=\\\"'height:' + height\\\"> <iframe :src=\\\"url\\\" style=\\\"width: 100%; height: 100%\\\"/> </div> </template> <script> export default { name: \\\"WarmFlow\\\", data() { return { height: document.documentElement.clientHeight - 94.5 + \\\"px;\\\", url: \\\"\\\" }; }, mounted() { // process.env.VUE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 this.url = process.env.VUE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`; this.iframeLoaded(); }, methods: { // iframe监听组件内设计器保存事件 iframeLoaded() { window.onmessage = (event) => { console.log(event); switch (event.data.method) { case \\\"close\\\": this.close(); break; } } }, close() { const obj = {path: \\\"/flow/definition\\\"}; this.$tab.closeOpenPage(obj); } } }; </script>\"]},\"1482\":{\"h\":\"3.3 vue3 引入\",\"t\":[\"<template> <div class=\\\"container\\\" ref=\\\"container\\\"> <iframe ref=\\\"iframe\\\" :src=\\\"iframeUrl\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe> </div> </template> <script setup name=\\\"WarmFlow\\\"> const { proxy } = getCurrentInstance(); import { onMounted } from 'vue'; // import.meta.env.VITE_APP_BASE_API: 前端地址的前缀如dev-api // definitionId: 为需要查询的流程定义id // disabled: 为是否可编辑, 例如：查看的时候不可编辑，不可保存 const iframeUrl = ref(import.meta.env.VITE_APP_BASE_API + `/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}`); const iframeLoaded = () => { // iframe监听组件内设计器保存事件 window.onmessage = (event) => { switch (event.data.method) { case \\\"close\\\": close(); break; } } }; /** 关闭按钮 */ function close() { const obj = { path: \\\"/flow/definition\\\" }; proxy.$tab.closeOpenPage(obj); } onMounted(() => { iframeLoaded(); }); </script> <style scoped> .container { width: 100%; height: calc(100vh - 84px); } </style>\"]},\"1483\":{\"h\":\"3.4 React版本 引入\",\"t\":[\"待完善\"]},\"1484\":{\"h\":\"3.5 前后端不分离版本\",\"t\":[\"可以直接访问后端接口加载页面，如：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\",\"@Controller @RequestMapping(\\\"/warm-flow\\\") public class WarmFlowController { @GetMapping() public String index(String definitionId, Boolean disabled) { return redirect(\\\"/warm-flow-ui/index.html?id=\\\" + definitionId + \\\"&disabled=\\\" + disabled); } }\",\"或者前端直接访问后端接口，如：/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\",\"/*打开新的页签，加载设计器*/ function detail(dictId) { var url = prefix + '/detail/' + dictId; $.modal.openTab(\\\"字典数据\\\", \\\"/warm-flow-ui/index.html?id=1839683148936663047&disabled=false\\\"); }\"]},\"1485\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1486\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1487\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1488\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1489\":{\"h\":\"4.2.2 HandlerSelectServiceImpl实现类\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口实现类 * * @author warm */ @Component public class HandlerSelectServiceImpl implements HandlerSelectService { @Autowired private SysUserMapper userMapper; @Autowired private SysRoleMapper roleMapper; @Autowired private SysDeptMapper deptMapper; /** * 获取办理人权限设置列表tabs页签，如：用户、角色和部门等，可以返回其中一种或者多种，按业务需求决定 * @return tabs页签 */ @Override public List<String> getHandlerType() { return Arrays.asList(\\\"用户\\\", \\\"角色\\\", \\\"部门\\\"); } /** * 获取用户列表、角色列表、部门列表等，可以返回其中一种或者多种，按业务需求决定 * @param query 查询参数 * @return 结果 */ @Override public HandlerSelectVo getHandlerSelect(HandlerQuery query) { if (\\\"角色\\\".equals(query.getHandlerType())) { return getRole(query); } if (\\\"部门\\\".equals(query.getHandlerType())) { return getDept(query); } if (\\\"用户\\\".equals(query.getHandlerType())) { return getUser(query); } return new HandlerSelectVo(); } /** * 获取角色列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getRole(HandlerQuery query) { ...... // 查询角色列表 List<SysRole> roleList = roleMapper.selectRoleList(sysRole); long total = new PageInfo<>(roleList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysRole> handlerFunDto = new HandlerFunDto<>(roleList, total) // 以下设置获取内置变量的Function .setStorageId(role -> \\\"role:\\\" + role.getRoleId()) // 前面拼接role: 是为了防止用户、角色的主键重复 .setHandlerCode(SysRole::getRoleKey) // 权限编码 .setHandlerName(SysRole::getRoleName) // 权限名称 .setCreateTime(role -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, role.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getDept(HandlerQuery query) { ...... // 查询部门列表 List<SysDept> deptList = deptMapper.selectDeptList(sysDept); long total = new PageInfo<>(deptList).getTotal(); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysDept> handlerFunDto = new HandlerFunDto<>(deptList, total) .setStorageId(dept -> \\\"dept:\\\" + dept.getDeptId()) // 前面拼接dept: 是为了防止用户、部门的主键重复 .setHandlerName(SysDept::getDeptName) // 权限名称 .setCreateTime(dept -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, dept.getCreateTime())); return getHandlerSelectVo(handlerFunDto); } /** * 获取用户列表, 同时构建左侧部门树状结构 * * @param query 查询条件 * @return HandlerSelectVo */ private HandlerSelectVo getUser(HandlerQuery query) { ...... // 查询用户列表 List<SysUser> userList = userMapper.selectUserList(sysUser); long total = new PageInfo<>(userList).getTotal(); // 查询部门列表，构建树状结构 List<SysDept> deptList = deptMapper.selectDeptList(new SysDept()); // 业务系统数据，转成组件内部能够显示的数据, total是业务数据总数，用于分页显示 HandlerFunDto<SysUser> handlerFunDto = new HandlerFunDto<>(userList, total) .setStorageId(user -> user.getUserId().toString()) .setHandlerCode(SysUser::getUserName) // 权限编码 .setHandlerName(SysUser::getNickName) // 权限名称 .setCreateTime(user -> DateUtils.parseDateToStr(DateUtils.YYYY_MM_DD_HH_MM_SS, user.getCreateTime())) .setGroupName(user -> user.getDept() != null ? user.getDept().getDeptName() : \\\"\\\"); // 业务系统机构，转成组件内部左侧树列表能够显示的数据 TreeFunDto<SysDept> treeFunDto = new TreeFunDto<>(deptList) .setId(dept -> dept.getDeptId().toString()) // 左侧树ID .setName(SysDept::getDeptName) // 左侧树名称 .setParentId(dept -> dept.getParentId().toString()); // 左侧树父级ID return getHandlerSelectVo(handlerFunDto, treeFunDto); } }\"]},\"1490\":{\"h\":\"5. 共享后端权限(如token)\",\"t\":[\"后端放行路径/warm-flow-ui/**,/warm-flow/**，改为只放行一个/warm-flow-ui/**\",\"在前端加载设计器页面路径后面，追加&Authorization=${token}，token是业务系统的token，可追加多个token\",\"yml中配置warm-flow.token-name=Authorization,每次请求会把token, set到header的Authorization上，多个token用逗号分隔\",\"请注意：请求中的token的名称或者key，要和后端yml中配置一致\",\"# warm-flow工作流配置 warm-flow: ...... ## 如果需要工作流共享业务系统权限，默认Authorization，如果有多个token，用逗号分隔 token-name: Authorization ......\"]},\"1491\":{\"h\":\"办理人变更\",\"t\":[\"重要\",\"审批业务中经常会出现办理人中途变更的情况，比如增加办理人，任务转办给别人等。\"]},\"1492\":{\"h\":\"1、变更支持的类型\",\"t\":[\"1、转办：任务转给其他人办理 2、委派：求助其他人审批，然后参照他的意见决定是否审批通过 3、加签：办理中途，希望其他人一起参与办理 4、减签：办理中途，希望某些人不参与办理\"]},\"1493\":{\"h\":\"2、接口描述\",\"t\":[\"接口描述地址\"]},\"1494\":{\"h\":\"3、代码示例\",\"t\":[\"/** * 转办 */ public void transfer(TaskService taskService) { taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"转办\\\")); } /** * 委派 */ public void depute(TaskService taskService){ taskService.transfer(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"委派\\\")); } /** * 加签 */ public void addSignature(TaskService taskService){ taskService.addSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .addHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"加签\\\")); } /** * 减签 */ public void reductionSignature(TaskService taskService){ taskService.reductionSignature(getTaskId(), new FlowParams() .handler(\\\"1\\\") .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\", \\\"user:1\\\")) .reductionHandlers(Arrays.asList(\\\"1\\\",\\\"2\\\")) .message(\\\"减签\\\")); }\"]},\"1495\":{\"h\":\"术语规则\",\"t\":[\"序 号\",\"术语\",\"术语解释\",\"1\",\"审批\",\"当前节点处理人，对当前流程节点进行审核操作，完成后进入下一节点\",\"2\",\"回退\",\"当前节点处理人，将流程驳回至之前已经处理过的任务节点，要求重新处理\",\"2\",\"任意跳转\",\"任意跳转(通过或者退回)指定节点\",\"3\",\"委派\",\"求助其他人审批，然后参照他的意见决定是否审批通过\",\"4\",\"转办\",\"任务转给其他人办理\",\"5\",\"催办\",\"对于时效要求高的流程，发起人可催办提醒当前节点处理人，一般以消息通知方式提醒处理人\",\"7\",\"取回\",\"将工作流中的某个任务退回给之前的执行者，以便进行修改或重新处理\",\"8\",\"终止\",\"当前节点处理人，终止当前流程\",\"9\",\"抄送\",\"当前节点处理人，处理完成之后将处理结果抄送给其他人\",\"10\",\"加签\",\"办理中途，希望其他人一起参与办理\",\"11\",\"减签\",\"办理中途，希望某些人不参与办理\",\"12\",\"会签\",\"所有审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"满足设定的通过率，部分审批人审批通过，审批节点才会通过\",\"13\",\"或签\",\"一名办理人审批通过，审批节点才会通过\",\"14\",\"暂存\",\"复杂表单，一次性填写不完，需要保存草稿功能，开始节点的暂存\"]},\"1496\":{\"h\":\"1、术语\",\"t\":[\"跳转类型：PASS-审批通过，REJECT-驳回。\",\"跳转条件：根据跳转条件，判断要执行哪个分支，比如“请假天数小于4”。\",\"节点类型：0-开始节点，1-中间节点，2-结束节点。\",\"权限标识：权限类型:权限标识，可以多个，如“role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”。\",\"所属并行网关节点编码：离上次最近的并行网关节点编码，可传递，遇新网关重置。\",\"协作类型：\",\"APPROVAL-无：无其他协作方式 TRANSFER-转办：任务转给其他人办理 DEPUTE-委派：求助其他人审批，然后参照他的意见决定是否审批通过 COUNTERSIGN-会签：和其他人一起审批通过，才算通过 VOTE-票签：和部分人一起审批，达到一定通过率，才算通过 ADD_SIGNATURE-加签：办理中途，希望其他人一起参与办理 REDUCTION_SIGNATURE-减签：办理中途，希望某些人不参与办理\"]},\"1497\":{\"h\":\"2、通用规则\",\"t\":[\"开始节点和结束节点必须有。\",\"开始节点必须有且只有一个跳转条件（跳转节点），中间和网关节点必须有跳转条件，结束节点不需要。\",\"网关节点可不需要跳转类型，互斥网关按照跳转条件流转。\",\"开启流程是传入租户id，就可以后续就可以根据租户id过来任务。\",\"角色权限控制，非必填，流程定义时通过逗号隔开多个权限，流转是传入“1,role:3” ， “1,role:3,role:1”或者“1,role:3,dept:1”，进行控制。\",\"当流程有多个结束节点，有一个完成，流程实例就算完成\",\"网关节点不可直连。\",\"一票否决（谨慎使用），如果驳回，驳回指向节点后还存在其他正在执行的待办任务，转历史任务，状态都为失效,重走流程。\",\"中间节点不可通过或者驳回到多个中间节点，必须先流转到网关节点\",\"流程变量是全局都能获取，任务变量就当前任务触发的监听器时可以获取。\"]},\"1498\":{\"h\":\"3、流程状态\",\"t\":[\"待提交：开启流程后的状态\",\"审批中：提交审批后的状态\",\"驳回：就是点击驳回后的状态\",\"失效：是针对并行流程，流程完成后，还存在待办任务，把它转历史记录，历史记录状态无效\",\"审批通过：是任务完成后，待办任务转为历史记录，历史记录状态为审批通过\",\"已完成：流程结束的状态\"]},\"1499\":{\"h\":\"4、串行网关规则\",\"t\":[\"以串行网关开头，只会执行后面的一条任务路线，以串行网关结尾，只需前面的一条路线完成即可往下执行（最主要限制）。\",\"串行网关需要根据传入跳转条件去判断执行哪个任务路线。\"]},\"1500\":{\"h\":\"5、并行网关规则\",\"t\":[\"以并行网关开头，只会必须执行后面的所有任务路线，以并行网关结尾，前面的任务路线必须都完成即可往下执行（最主要限制）。\",\"当流程完成，并行网关范围内还存在待办任务未完成，转历史任务，状态完成。\"]},\"1501\":{\"h\":\"快速开始\",\"t\":[\"重要\",\"在开始之前，我们假定您已经:\",\"1、熟悉 Java 环境配置及其开发 2、熟悉 关系型 数据库，比如 MySQL 3、熟悉 Spring Boot或者Solon 及相关框架 4、熟悉 Java 构建工具，比如 Maven\"]},\"1502\":{\"h\":\"1、导入sql，按需求执行\",\"t\":[\"开始学习前，请先了解表结构，不迷路\",\"首次导入，先创建数据库，找到对应数据库的全量脚本warm-flow-all.sql，执行\",\"如果版本更新，找到对应数据库的更新版本，比如xx-upgrade，warm-flow_x.x.x.sql，执行\"]},\"1503\":{\"h\":\"2、官网流程定义案例xml\",\"t\":[\"官网流程定义案例xml\"]},\"1504\":{\"h\":\"3、maven依赖\"},\"1505\":{\"h\":\"3.1、mybatis\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1506\":{\"h\":\"3.2、mybatis-plus\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1507\":{\"h\":\"3.3、jpa\",\"t\":[\"warm-flow工作流配置\",\"# warm-flow工作流配置 warm-flow: # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider\",\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-jpa-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-plus-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1508\":{\"h\":\"3.4、mybatis-flex\",\"t\":[\"springboot2项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"springboot3项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-sb3-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-mybatis-flex-solon-plugin</artifactId> <version>最新版本</version> </dependency>\"]},\"1509\":{\"h\":\"3.5、easy-query\",\"t\":[\"springboot项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-sb-starter</artifactId> <version>最新版本</version> </dependency>\",\"solon项目\",\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-easy-query-solon-plugin</artifactId> <exclusions> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.data</artifactId> </exclusion> <exclusion> <groupId>org.noear</groupId> <artifactId>solon.logging</artifactId> </exclusion> </exclusions> <version>最新版本</version> </dependency>\",\"有想扩展其他orm框架和数据库的可加qq群联系群主\"]},\"1510\":{\"h\":\"4、代码示例\",\"t\":[\"详细案例测试代码warm-flow-test项目中，warm-flow-xxx-test模块的测类\",\"以下为简短案例：\"]},\"1511\":{\"h\":\"4.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1512\":{\"h\":\"4.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1513\":{\"h\":\"4.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1514\":{\"h\":\"4.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); // // 通过任务id流转 // Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) // .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); // System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1515\":{\"h\":\"5、设计器引入\",\"t\":[\"通过jar包引入：文档地址\"]},\"1516\":{\"h\":\"6、初学者推荐学习路线\"},\"1517\":{\"h\":\"6.1、推荐集成案例hh-vue\",\"t\":[\"项目地址\"]},\"1518\":{\"h\":\"6.2、推荐学习视频\"},\"1519\":{\"h\":\"表结构\",\"t\":[\"重要\",\"表描述\",\" 流程定义的相关的三张表 1、集团军要对某个区域进行长期的军事演练（流程定义表） 2、军事演练，有多个演练环节，需要制定任务计划 （流程节点表） 3、任务的需要有先后顺序，确保演练按计划推进 （流程跳转表） 流程实例三张表 4、今天要进行一次军事演练（流程实例表） 5、首先，按照任务计划，解放军执行第一个任务（待办任务表） 6、后续会根据不同情况，进行不同的军事演练任务（待办任务表） 7、演练要记录过程 （历史任务表） 8、任务的需要分配执行人 (流程用户表) 9、最终军事演练完成，流程完成 \"]},\"1520\":{\"h\":\"表清单\",\"t\":[\"#\",\"数据表\",\"名称\",\"备注说明\",\"1\",\"flow_definition\",\"流程定义表\",\"2\",\"flow_his_task\",\"历史任务记录表\",\"3\",\"flow_instance\",\"流程实例表\",\"4\",\"flow_node\",\"流程节点表\",\"5\",\"flow_skip\",\"节点跳转关联表\",\"6\",\"flow_task\",\"待办任务表\",\"7\",\"flow_user\",\"流程用户表\"]},\"1521\":{\"h\":\"表字段明细\"},\"1522\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"flow_code\",\"流程编码\",\"VARCHAR(40)\",\"√\",\"3\",\"flow_name\",\"流程名称\",\"VARCHAR(100)\",\"√\",\"4\",\"version\",\"流程版本\",\"VARCHAR(20)\",\"√\",\"5\",\"is_publish\",\"是否发布（0未发布 1已发布 9失效）\",\"BIT(1)\",\"√\",\"0\",\"6\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"7\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"8\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"9\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"10\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"11\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"12\",\"create_time\",\"创建时间\",\"DATETIME\",\"13\",\"update_time\",\"更新时间\",\"DATETIME\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1523\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"task_id\",\"对应flow_task表的id\",\"BIGINT\",\"√\",\"5\",\"node_code\",\"开始节点编码\",\"VARCHAR(100)\",\"6\",\"node_name\",\"开始节点名称\",\"VARCHAR(100)\",\"7\",\"node_type\",\"开始节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"8\",\"target_node_code\",\"目标节点编码\",\"VARCHAR(100)\",\"9\",\"target_node_name\",\"结束节点名称\",\"VARCHAR(100)\",\"10\",\"approver\",\"审批者\",\"VARCHAR(40)\",\"11\",\"cooperate_type\",\"协作方式(1审批 2转办 3委派 4会签 5票签 6加签 7减签)\",\"BIT(1)\",\"√\",\"0\",\"12\",\"collaborator\",\"协作人\",\"VARCHAR(40)\",\"13\",\"skip_type\",\"流转类型（PASS通过 REJECT退回 NONE无动作）\",\"VARCHAR(10)\",\"√\",\"14\",\"flow_status\",\"流程状态（1审批中 2 审批通过 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"15\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"16\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"17\",\"message\",\"审批意见\",\"VARCHAR(500)\",\"18\",\"ext\",\"业务详情 存业务表对象json字符串\",\"VARCHAR(500)\",\"19\",\"create_time\",\"开始时间\",\"DATETIME\",\"20\",\"update_time\",\"完成时间\",\"DATETIME\",\"21\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"22\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1524\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"business_id\",\"业务id\",\"VARCHAR(40)\",\"√\",\"4\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"5\",\"node_code\",\"流程节点编码\",\"VARCHAR(40)\",\"√\",\"6\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"7\",\"variable\",\"任务变量\",\"TEXT\",\"8\",\"flow_status\",\"流程状态（0待提交 1审批中 2 审批通过 3自动通过 8已完成 9已退回 10失效）\",\"VARCHAR(20)\",\"√\",\"9\",\"activity_status\",\"流程激活状态（0挂起 1激活）\",\"BIT(1)\",\"√\",\"1\",\"10\",\"create_by\",\"创建者\",\"VARCHAR(64)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"ext\",\"扩展字段，预留给业务系统使用\",\"VARCHAR(500)\",\"14\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"15\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1525\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"3\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"流程节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"流程节点名称\",\"VARCHAR(100)\",\"6\",\"permission_flag\",\"权限标识（权限类型:权限标识，可以多个，用逗号隔开)\",\"VARCHAR(200)\",\"7\",\"node_ratio\",\"流程签署比例值\",\"DECIMAL(6,3)\",\"8\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"9\",\"skip_any_node\",\"是否可以退回任意节点（Y是 N否）\",\"VARCHAR(100)\",\"'N'\",\"10\",\"listener_type\",\"监听器类型\",\"VARCHAR(100)\",\"11\",\"listener_path\",\"监听器路径\",\"VARCHAR(400)\",\"12\",\"handler_type\",\"处理器类型\",\"VARCHAR(100)\",\"13\",\"handler_path\",\"处理器路径\",\"VARCHAR(400)\",\"14\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"15\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"16\",\"version\",\"版本\",\"VARCHAR(20)\",\"√\",\"17\",\"create_time\",\"创建时间\",\"DATETIME\",\"18\",\"update_time\",\"更新时间\",\"DATETIME\",\"19\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"20\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1526\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"definition_id\",\"流程定义id\",\"BIGINT\",\"√\",\"3\",\"now_node_code\",\"当前流程节点的编码\",\"VARCHAR(100)\",\"√\",\"4\",\"now_node_type\",\"当前节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"5\",\"next_node_code\",\"下一个流程节点的编码\",\"VARCHAR(100)\",\"√\",\"6\",\"next_node_type\",\"下一个节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"7\",\"skip_name\",\"跳转名称\",\"VARCHAR(100)\",\"8\",\"skip_type\",\"跳转类型（PASS审批通过 REJECT退回）\",\"VARCHAR(40)\",\"9\",\"skip_condition\",\"跳转条件\",\"VARCHAR(200)\",\"10\",\"coordinate\",\"坐标\",\"VARCHAR(100)\",\"11\",\"create_time\",\"创建时间\",\"DATETIME\",\"12\",\"update_time\",\"更新时间\",\"DATETIME\",\"13\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"14\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1527\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT\",\"√\",\"√\",\"2\",\"definition_id\",\"对应flow_definition表的id\",\"BIGINT\",\"√\",\"3\",\"instance_id\",\"对应flow_instance表的id\",\"BIGINT\",\"√\",\"4\",\"node_code\",\"节点编码\",\"VARCHAR(100)\",\"√\",\"5\",\"node_name\",\"节点名称\",\"VARCHAR(100)\",\"6\",\"node_type\",\"节点类型（0开始节点 1中间节点 2结束节点 3互斥网关 4并行网关）\",\"BIT(1)\",\"√\",\"7\",\"form_custom\",\"审批表单是否自定义（Y是 N否）\",\"CHAR(1)\",\"'N'\",\"8\",\"form_path\",\"审批表单路径\",\"VARCHAR(100)\",\"9\",\"create_time\",\"创建时间\",\"DATETIME\",\"10\",\"update_time\",\"更新时间\",\"DATETIME\",\"11\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"12\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1528\":{\"h\":\"\",\"t\":[\"#\",\"字段\",\"名称\",\"数据类型\",\"主键\",\"非空\",\"默认值\",\"备注说明\",\"1\",\"id\",\"主键id\",\"BIGINT UNSIGNED\",\"√\",\"√\",\"2\",\"type\",\"人员类型（1待办任务的审批人权限 2待办任务的转办人权限 3待办任务的委托人权限）\",\"CHAR(1)\",\"√\",\"3\",\"processed_by\",\"权限人\",\"VARCHAR(80)\",\"4\",\"associated\",\"任务表id\",\"BIGINT\",\"√\",\"5\",\"create_time\",\"创建时间\",\"DATETIME\",\"6\",\"create_by\",\"创建人\",\"VARCHAR(80)\",\"7\",\"update_time\",\"更新时间\",\"DATETIME\",\"8\",\"del_flag\",\"删除标志\",\"CHAR(1)\",\"'0'\",\"9\",\"tenant_id\",\"租户id\",\"VARCHAR(40)\"]},\"1529\":{\"h\":\"流程变量\",\"t\":[\"重要\",\"1、流程变量，map类型，用于流程执行中的数据转递 2、在执行流程时，可以设置流程变量 3、在监听器中，可以获取流程变量\",\" public void insertTestLeave(TestLeave testLeave, Integer flowStatus) { String id = IdUtils.nextIdStr(); testLeave.setId(id); LoginUser user = SecurityUtils.getLoginUser(); FlowParams flowParams = FlowParams.build().flowCode(getFlowType(testLeave)) .handler(user.getUser().getUserId().toString()); // 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"testLeave\\\", testLeave); variable.put(\\\"flag\\\", String.valueOf(testLeave.getDay())); flowParams.variable(variable); Instance instance = insService.start(id, flowParams); }\",\"@Component public class FinishListener implements Listener { private static final Logger log = LoggerFactory.getLogger(StartListener.class); @Override public void notify(ListenerVariable variable) { log.info(\\\"完成监听器:{}\\\", variable); Instance instance = variable.getInstance(); Map<String, Object> testLeaveMap = variable.getVariable(); log.info(\\\"完成监听器结束......\\\"); } }\"]},\"1530\":{\"h\":\"新闻公告\",\"t\":[\" {{ getTypeValue(item.type) }} \",\"{{ item.title }}\",\"{{ item.pushTime }}\"]},\"1531\":{\"h\":\"有偿服务\"},\"1532\":{\"h\":\"VIP群\",\"t\":[\"项目代码、文档，均开源免费可商用，遵循开源协议，不代表着项目收费\",\"VIP群由四名后端与一名前端工程师组成，提供问题答疑服务和技术分享等服务，欢迎加群交流\",\"支付后加微信号【warm-houhou】，邀请进入vip群\",\"问问题等于做习题 听作者解答问题等于习题讲解 一个人接触的问题有限 一群人接触的问题无限 早进群早接触更多的问题 承诺: 看见必回复 让你感受作者有多话痨\",\"加群扫码: 99元\"]},\"1533\":{\"h\":\"私人服务\",\"t\":[\"作者提供作者私人服务，关于Dromara Warm-Flow工作流私人培训，如流程引擎集成与使用，技术咨询等，包括但不限于\"]},\"1534\":{\"h\":\"特别赞助\",\"t\":[\"如需Dromara Warm-Flow官网挂广告，请加微信号【warm-houhou】联系我\"]},\"1535\":{\"h\":\"团队\",\"t\":[\"avatar\",\"name\",\"email\",\"role\",\"contributions\",\"{{ item.name }}\",\"{{ item.email }}\",\"{{ item.role }}\",\"{{ item.contributions }}\"]},\"1536\":{\"h\":\"常见问题\"},\"1537\":{\"h\":\"1、id精度丢失\",\"t\":[\"方案1：处理长度过长的Long类型\",\"只处理长度过长的Long类型，前端页面就不会丢失精度了 (感谢【Colin】提供解决方案)\",\"创建一个BigNumberSerializer（用来处理超过JS数据范围的Long类型）\",\"👇 代码详情 👇\",\"/** * 超出 JS 最大最小值 处理 */ @JacksonStdImpl public class BigNumberSerializer extends NumberSerializer { /** * 根据 JS Number.MAX_SAFE_INTEGER 与 Number.MIN_SAFE_INTEGER 得来 */ private static final long MAX_SAFE_INTEGER = 9007199254740991L; private static final long MIN_SAFE_INTEGER = -9007199254740991L; /** * 提供实例 */ public static final BigNumberSerializer INSTANCE = new BigNumberSerializer(Number.class); public BigNumberSerializer(Class<? extends Number> rawType) { super(rawType); } @Override public void serialize(Number value, JsonGenerator gen, SerializerProvider provider) throws IOException { // 超出范围 序列化位字符串 if (value.longValue() > MIN_SAFE_INTEGER && value.longValue() < MAX_SAFE_INTEGER) { super.serialize(value, gen, provider); } else { gen.writeString(value.toString()); } } }\",\"添加JacksonConfig配置全局序列化（针对所有属性），一下两种方式任选其一\",\"👇 代码详情 👇\",\"@Configuration public class JacksonConfig { // 方式一 @Bean public Jackson2ObjectMapperBuilderCustomizer customizer() { return builder -> { ... 其他配置.... JavaTimeModule javaTimeModule = new JavaTimeModule(); //Long,BigInteger 转为 String 防止 js 丢失精度 javaTimeModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); javaTimeModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); builder.modules(javaTimeModule); }; } // 方式二 @Bean public MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() { final Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder(); final ObjectMapper objectMapper = builder.build(); ... 其他配置.... SimpleModule simpleModule = new SimpleModule(); // Long,BigInteger 转为 String 防止 js 丢失精度 simpleModule.addSerializer(Long.class, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(Long.TYPE, BigNumberSerializer.INSTANCE); simpleModule.addSerializer(BigInteger.class, BigNumberSerializer.INSTANCE); objectMapper.registerModule(simpleModule); return new MappingJackson2HttpMessageConverter(objectMapper); } }\",\"方案2：序列化所有long类型\",\"如何处理Long类型精度丢失问题 👇点击👇\",\"方案3：通过yml配置\",\"通过设置id生成器类型，修改id生成方式\",\"# warm-flow工作流配置 warm-flow: # id生成器类型, 不填默认为orm扩展自带生成器或者warm-flow内置的19位雪花算法, SnowId14:14位，SnowId15:15位， SnowFlake19：19位 key_type: SnowId19\",\"方案4：自定义id生成策略\",\"参照如下文章，继承填充器接口，修改id生成方式\",\"Dromara Warm-Flow工作流引擎数据库主键自增策略实现👇\"]},\"1538\":{\"h\":\"2、流程图片中文乱码\",\"t\":[\"linux环境：安装中文字体\",\"生成的流程图中文乱码或者报错InternalError; java.lang.reflect,InvocationTargetException\",\"由于服务器上缺少中文字体，通过检查fc-list :lang=zh是否包含中文字符集（以下是存在的示例）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ zhFonts]# fc-list :lang=zh /usr/share/fonts/zhFonts/SIMSUN.TTC: 新宋体,NSimSun:style=常规,Regular /usr/share/fonts/zhFonts/SIMSUN.TTC: 宋体,SimSun:style=常规,Regular\",\"zhFonts.zip将文件解压至/usr/share/fonts目录下，如果还不行，添加到jre的lib/fonts目录（感谢【我们好像在哪儿见过 】提供的方案）\",\"[root@iZbp18ilgi6s1lkbmmfo2jZ fonts]# ll 总用量 8 drwxr-xr-x 2 root root 4096 5月 17 00:20 dejavu drwxr-xr-x 2 root root 4096 5月 17 11:40 zhFonts\",\"重启服务\",\"docker环境：安装中文字体\",\"以ruoyi-vue-plus-4.x中dockerfile为例，添加中文字体即可 （感谢【格调@main】提供的方案）\"]},\"1539\":{\"h\":\"3、initFlow()未加载\",\"t\":[\"提示\",\"spring开启懒加载后，导致FlowAutoConfig.initFlow()未加载。（由社区【星 Q】提供）\",\"删除\\\"lazy-initialization: true\\\",可解决问题，以下是错误示例\",\"spring: main: allow-bean-definition-overriding: true lazy-initialization: true web-application-type: servlet\"]},\"1540\":{\"h\":\"4、监听器等对象获取不到\",\"t\":[\"提示\",\"热部署插件jrebel或者devtools导致问题，检查是否使用热部署插件，比如spring.devtools，可以把插件关了，或者加上排除配置spring-devtools.properties\",\"restart.include.flow=/org.dromara.warm.*.jar\"]},\"1541\":{\"h\":\"5、类型转换异常\",\"t\":[\"同上\"]},\"1542\":{\"h\":\"6、hh-vue切换mybaits-plus\",\"t\":[\"提示\",\"1、根pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"2、ruoyi-flow的pom.xml，warm-flow-mybatis-sb-starter改为warm-flow-mybatis-plus-sb-starter\",\"3、ruoyi-common增加依赖\",\" <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>3.5.1</version> </dependency>\",\"4、MyBatisConfig.java注释掉，新增MybatisPlusConfig\",\"👇 代码详情 👇\",\"package com.ruoyi.framework.config; import com.baomidou.mybatisplus.annotation.DbType; import com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.BlockAttackInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor; import com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.transaction.annotation.EnableTransactionManagement; /** * Mybatis Plus 配置 * * @author ruoyi */ @EnableTransactionManagement(proxyTargetClass = true) @Configuration public class MybatisPlusConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // 分页插件 interceptor.addInnerInterceptor(paginationInnerInterceptor()); // 乐观锁插件 interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor()); // 阻断插件 interceptor.addInnerInterceptor(blockAttackInnerInterceptor()); return interceptor; } /** * 分页插件，自动识别数据库类型 https://baomidou.com/guide/interceptor-pagination.html */ public PaginationInnerInterceptor paginationInnerInterceptor() { PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); // 设置数据库类型为mysql paginationInnerInterceptor.setDbType(DbType.MYSQL); // 设置最大单页限制数量，默认 500 条，-1 不受限制 paginationInnerInterceptor.setMaxLimit(-1L); return paginationInnerInterceptor; } /** * 乐观锁插件 https://baomidou.com/guide/interceptor-optimistic-locker.html */ public OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor() { return new OptimisticLockerInnerInterceptor(); } /** * 如果是对全表的删除或更新操作，就会终止该操作 https://baomidou.com/guide/interceptor-block-attack.html */ public BlockAttackInnerInterceptor blockAttackInnerInterceptor() { return new BlockAttackInnerInterceptor(); } }\",\"5、ruoyi-admin的application.yml中配置mybatis改为mybatis-plus\"]},\"1543\":{\"h\":\"7、导入依赖包失败\",\"t\":[\"可尝试切换maven版本 （感谢【一拳打爆常大宝】）\",\"如maven3.9.6切换为低版本3.8.2\"]},\"1544\":{\"h\":\"8、 StackOverflowError 错误\",\"t\":[\"提示\",\"查看跳转线退回的，是否设置为退回类型，后续有时间再做校验\"]},\"1545\":{\"h\":\"9、 后端接收流程xml部分丢失\",\"t\":[\"提示\",\"一般是xxs过滤导致，排查下接口就行或者对象就行\"]},\"1546\":{\"h\":\"更新日志\",\"t\":[\"重要\",\"更新脚本在项目里面的sql文件下，对应数据库类型，对应版本号\"]},\"1547\":{\"h\":\"未来发布计划\"},\"1548\":{\"h\":\"vx.x.x\",\"t\":[\"事件\",\"流程图合法性检验\",\"把不能退回到开始节点去掉，会有什么影响\",\"子流程\",\"会签和票签通过率策略，支持扩展\",\"重启流程\",\"适配国产数据库\",\"包容网关\"]},\"1549\":{\"h\":\"开发中计划\"},\"1550\":{\"h\":\"v1.3.6\",\"t\":[\"新增流程图元数据 @晓华\",\"接入仿钉钉设计器 @Zhen\",\"动态表单支持 @vanlin\",\"取回 @xiarigang\",\"可多个网关直连 @晓华\",\"开启流程可以不默认执行到中间节点 @晓华\",\"新增办理人选择项接口 @晓华\",\"[feat] 流程定义数据保存支持json格式 @xiarigang\"]},\"1551\":{\"h\":\"v1.3.5\",\"t\":[\"[feat] 条件表达式新增默认策略default|${flag == 5 && flag > 4}\",\"[feat] 新增mybatis-plus关闭逻辑删除示例\",\"[update] 退回不校验是否办理过\",\"[update] 复制流程版本号支持自动递增\",\"[update] 节点全部改成节点\",\"[refactor] 导入流程方法拆成两个方法，读取is流和导入实体类，insertFlow改为公共方法\",\"[refactor] 条件表达式原本太繁琐，进行精简, @@eq@@|flag@@eq@5 --> eq|flag|5\",\"[refactor] 任意跳转，改成退回选择目标节点，票签必填，修改字段名称\"]},\"1552\":{\"h\":\"更新日志\"},\"1553\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器优化配置（类中配置增加类型接口，或者优化页面配置）\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[update] 修改项目的groupId\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"1554\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"[feat] 新增支持接入业务系统token，支持多token\",\"[update] 办理人选择tabs切换\",\"[update] 没有左侧树状选择数据时，左侧隐藏\",\"[fix] 统一修复分页bug\",\"[fix] 修复删除流程实例信息，未删除办理人信息 @xiarigang\",\"[fix] 修改【Bug】 会签节点委派 @vanlin\",\"[fix] 统一修复分页bug\"]},\"1555\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"[feat] 新增boot3+java17支持\",\"[feat] 流程设计器新增快捷键支持\",\"[feat] 新增流程状态枚举（终止、作废、撤销和取回）\",\"[feat] 新增转办、委派、加签和减签方法，老方法标识即将删除，接入监听器\",\"[update] 终止流程状态改为更合理的终止状态\",\"[update] 流程复制克隆改set/get赋值\",\"[refactor] 重构skip等方法通用校验\",\"[perf] 流程图清晰度调整\",\"[fix] 流程图查询异常处理\",\"[fix] 修复历史记录表，创建时间和更新时间一样的问题\",\"[remove] FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\"]},\"1556\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"[feat] 设计器独立 @zhen\",\"[feat] 使用jar引入方式引入设计器\",\"[feat] 新增办理人变量表达式流程案例\",\"[feat] 新增方法，获取流程变量的map类型\",\"[update] 节点线条保存关联名称\",\"[fix] 修复mybatis扩展包中，flowStatus变量书写错误的问题\",\"[fix] 更新时间有值时，取更新时间，不是创建时间\"]},\"1557\":{\"h\":\"v1.2.10 2024-09-26\",\"t\":[\"[fix] 修复mybatis-plus扩展包，配置了其他id策略不生效的问题\"]},\"1558\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"[feat] json库支持snack3、jackson、fastjson和gson，并且支持扩展\",\"[feat] 增加办理人变量表达式，支持${xxx}替换和spel，并支持扩展\",\"[feat] ListenerVariable监听器变量新增FlowParams字段，方便开始监听器全局传递参数\",\"[feat] 终止新增对开始和完成监听器的支持\",\"[update] springboot项目的条件表达式默认支持spel\",\"[update] 历史记录改为单条保存，删除重复代码\",\"[update] 修改FlowUserDao的bean名称\",\"[update] 中间节点拆分为或签，会签，票签\",\"[fix] 修复历史记录创建时间相等，导致流程图渲染异常\",\"[fix]修复Mybatis逻辑删除变成真实删除的缺陷 @xiarigang\",\"[refactor] 重构id生成器，支持orm默认策略，删除数据填充默认实现类，改为匿名类\"]},\"1559\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"[update] 历史任务表流程状态支持外部传入\",\"[update] 修改办理人接口，当未设置办理人时，不做权限校验\",\"[update] ModifyHandler增加链式调用\",\"[fix] 修复流程监听器导出失败的问题\"]},\"1560\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"[feat] 增加获取下个节点集合api @xiarigang\",\"[feat] 流程监听器 @xiaoxiaoliu889\",\"[feat] id内存策略新增14、15位雪花算法支持\",\"[feat] 流程激活和挂起案例 @xiaoxiaoliu889\",\"[feat] 增加基于流程定义Id获取流程图 @xiaoxiaoliu889\",\"[update] 流程状态改成字符串类型 @xiarigang\",\"[update] 测试模块拆分独立仓库\",\"[update] modes-sb删除加载配置文件，改为有上层jar加载\",\"[update] flex solon版本yml弄错了，config调整\",\"[refactor] 流程版本号生成逻辑重构 @xiaoxiaoliu889\",\"[fix] 修复deleteByTaskIds 中的根据无法正确删除user数据\",\"[fix] 修复 jpa solon注解问题 @vanlin\",\"[fix] 修复 并行网关三个任务分支的时候，错误结束流程的问题\"]},\"1561\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"[feat] 激活和挂起 @xiaoxiaoliu889\",\"[feat] 不同节点也支持配置审批表单路径 @vanlin\",\"[feat] 支持接收外部流程状态，支持流程状态扩展 @vanlin\",\"[feat] 新增spel条件表达式，新增可通过SPI机制加载条件表达式\",\"[feat] 新增分派监听器，支持代办任务中办理人等动态修改 @liangli\",\"[feat] 新增Easy-Query框架支持 @link2fun\",\"[feat] 新增Mybatis-Flex的solon扩展包 @xiarigang\",\"[feat] 新增Jpa的solon扩展包 @vanlin\",\"[feat] 历史表新增跳转类型，记录跳转类型 @vanlin\",\"[feat] 增加组件加载，yml控制开关 @疯狂的狮子Li\",\"[update] 之前强依赖流程状态的通过的，改为跳转类型，历史数据考虑如何处理 @vanlin\",\"[update] 之前所有保存流程状态地方，全部提供可接受外部传入 @vanlin\",\"[update] 流程开启，校验节点是否发布，提示语增加流程编码\",\"[update] 删除校验是否任意跳转\",\"[update] 修改扩展字段ext注释，删除FlowConfigUtil多余的代码\",\"[update] SqlSessionFactory改为构造函数引入\",\"[update] 替换异常类，UtilException高版本不兼容\",\"[update] from_custom改为form_custom，from_path改为form_path\",\"[remove] 移除节点前置执行权限处理器\",\"[remove] 删除cooperateAutoPass方法\",\"[update] 代办改为待办\",\"[refactor] 重构测试模块，完善mybatis-plus多租户和逻辑删除使用方式\",\"[refactor] 重构solon和插件模块\",\"[fix] 修复加签批量提交报错\",\"[fix] 修复TaskServiceImpl#handleDepute方法中删除受托人传参数错误\",\"[fix] 修复 JPA flowUserDao bug @vanlin\",\"[fix] 流程第三个节点为网关时无法渲染颜色\",\"[fix] 修复查看流程图模糊的问题 @erfeijiadao\",\"[fix] 修復开始节点直连网关，流程图渲染有问题\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 修复流程定义和流程实例相同，处于非结束节点，流程实例不能存在相同的业务id\",\"[fix] 修复不能退回，未完成过任务\",\"[fix] 删除不必要的··符号，修复postgresql与mysql关键词符号问题。\",\"[fix] 修复流程已完成，流程图结束节点显示为黑色\",\"[fix] 修复已办任务查询审批想起无效问题\",\"[fix] 设置开始节点 skip_type = PASS\",\"[fix] 为SpringUtil指定bean name,解决 LocalContainerEntityManagerFactoryBean 依赖问题\",\"[chore] 升级dom4j为安全版本2.1.3\"]},\"1562\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"[fix] 修复更新拼上了多余的条件\",\"[fix] 修复保存流程xml报错问题\"]},\"1563\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"[feat] 新增mybatis-flex扩展包 @xiarigang\",\"[feat] 新增抄送演示案例 @adru*\",\"[feat] 历史记录表新增ext扩展字段，方便保存历史过程数据 @adru*\",\"[update] 保存下一个节点办理人时，不校验是否有审批人\",\"[update] 调整扩展包配置，新增测试模块\",\"[update] 票签,会签，将待办任务的创建时间赋予历史任务开始时间 @liutao\",\"[update] 调整mybatis-plus多租户和软件删除处理\",\"[update] 修改任务历史表时间定义，任务审批通过，将待办任务的创建时间赋予历史任务开始时间 @liutao*\",\"[update] 修正pg的sql文件名，新增1.2.1增量sql @liutao\",\"[update] 会签票签，开始时间记录代表任务的创建时间\",\"[remove] 删除监听器自定义参数,修改扩展字段名称\",\"[fix] 监听器问题修复 @liangli\",\"[fix] solon插件包增加userMapper.xml加载\",\"[fix] 修复填充器不接收外部设置的时间\",\"[fix] 修复userMapper.xml中updateLogic的某个负值错误\"]},\"1564\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"待办表解偶用户，新增用户表（查询方式需要改动）\",\"会签，票签\",\"加减签\",\"转办完善\",\"jpa扩展\",\"oracle适配\",\"pg适配\"]},\"1565\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"orm支持mybatis-plus扩展\",\"多租户字段隔离提供全局配置，自动获取\",\"增加软删除可以配置化\",\"新增三个测试模块\",\"修复设置默认填充器时候，判空错误\"]},\"1566\":{\"h\":\"v1.1.7 2024-04-27\",\"t\":[\"启动流程时，支持第二个节点为网关节点的情况\",\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",\"修复终止流程bug\"]},\"1567\":{\"h\":\"v1.1.6 2024-04-23\",\"t\":[\"支持转办功能\",\"任务自动流转到创建人\",\"考虑流程终止功能\",\"修复流程流转异常\",\"实体类支持序列化\",\"修复java17以上@Resource包路径变更的问题\"]},\"1568\":{\"h\":\"v1.1.5 2024-04-17\",\"t\":[\"支持自定义填充\",\"新增配置文件，部分功能可配置\",\"重构代码，insService.skip标识即将删除，改用taskService.skip\",\"引入日志门面\",\"修复已经设置后续节点动态权限后，办理时未生效问题；\",\"枚举扩展getByKey方法 @Holly_Git\",\"调整实例类结构，方便链式写法\",\"修复并行网关后面没有中间节点\",\"修复开始任务记录待办，为保存流程状态\",\"新增链式查询排序提供id排序\",\"新增历史任务记录结束节点\",\"新增赋值流程记录创建更新时间\",\"优化表实体类链式赋值\",\"待办已办查询标记为即将删除, 已挪到业务系统中\"]},\"1569\":{\"h\":\"v1.1.4 2024-04-07\",\"t\":[\"修复监听器部分判空bug 感谢@Holly_Git\",\"新增创建任务监听器\",\"修改flow_node监听类型和监听路径字段长度\",\"新增监听器生命周期概念，完善文档\",\"重构流程开启流程和流程办理代码\",\"开始节点也能记录到历史任务记录中\"]},\"1570\":{\"h\":\"v1.1.3 2024-04-02\",\"t\":[\"新增权限监听器，办理中动态设置权限 感谢@Holly\"]},\"1571\":{\"h\":\"v1.1.2 2024-03-27\",\"t\":[\"流程定义新增复制按钮\",\"补齐sql脚本，完善文档\",\"跳转条件获取方式变更为流程变量 感谢@Holly\",\"监听器变量新增返回节点信息 感谢@Holly\",\"新增根据流程定义和当前节点code获取下一节点api接口. 感谢@Holly\",\"删除多余的字段和代码\"]},\"1572\":{\"h\":\"v1.1.1 2024-03-22\",\"t\":[\"[fix] 修复xml脚本中遗漏伪命的问题，完善sql\"]},\"1573\":{\"h\":\"v1.1.0 2024-03-21\",\"t\":[\"可以跳转指定节点\",\"增加全局变量\",\"增加监听器\",\"重构代码，解偶orm，方便扩展不同orm和数据，新增代码示例\",\"修复并行网关流程流程图显示错误问题\"]},\"1574\":{\"h\":\"v1.0.4 2024-03-06\",\"t\":[\"[update] 美化后台返回的流程图\"]},\"1575\":{\"h\":\"v1.0.3 2024-03-05\",\"t\":[\"[update] 重构代码，解偶orm操作，方便扩展其他orm框架\"]},\"1576\":{\"h\":\"v1.0.2 2023-12-31\",\"t\":[\"[fix] 修复solon版本业务系统可不用单独加载warm-flow的xml\"]},\"1577\":{\"h\":\"v1.0.0 2023-12-28\",\"t\":[\"完善流程设计器和流程图，新增vue3版本\",\"放弃js引擎，自研条件表达式\",\"新增支持条件表达式\",\"可退回到任意节点\",\"支持生成流程图\",\"流程设计器开发\",\"互斥网关，并行网关（会签、或签）功能开发\",\"抽离spring生态依赖，支持solon，并且保持事务与业务系统一致\",\"支持待办任务和已办任务，通过权限标识过滤数据\",\"新增多租户模式\",\"原生提供排序\",\"原生提供分页查询\",\"项目上传中央仓库\",\"工作流模块抽取为独立项目，提供集成方式\",\"已办任务和任务记录，审批页面中包含业务详情页面\",\"提供待办任务、提供角色、部门等权限配置\",\"提供流程配置界面\",\"流程配置文件改为表单填报方式\",\"用户角色抽取出来\",\"整理流程表，调整表名和字段名\"]},\"1578\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志\"]},\"1579\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"1580\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1581\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1582\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1583\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1584\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1585\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1586\":{\"h\":\"5、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1587\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1588\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1589\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.0，不需要在为引入设计器而烦恼了，按照以下前四点，可以快速接入业务系统，下面介绍如何使用设计器\"]},\"1590\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>io.github.minliuhua</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.0</version> </dependency>\"]},\"1591\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"重要\",\"1、这两个路径需要放行，否则无法访问，/warm-flow-ui/**, /warm-flow/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\", \\\"/warm-flow/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1592\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"重要\",\"1、设计器页面入口地址为：/warm-flow-ui/${definitionId}?disabled=${disabled} 2、总体思路就是把前端接口(比如80)代理成后端接口(8080)，去访问该地址，其他不变 3、或者直接通过后端接口访问该地址，可能需要处理跨域问题 4、以下是nginx代理示例：\",\"server { listen 80; server_name localhost; location /warm-flow-ui/ { proxy_pass http://localhost:8080/warm-flow-ui/; } }\"]},\"1593\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"重要\",\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1594\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1595\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1596\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1597\":{\"h\":\"5、项目介绍\",\"t\":[\"重要\",\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1598\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1599\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1600\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志\"]},\"1601\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"1602\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1603\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1604\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1605\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1606\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1607\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1608\":{\"h\":\"5、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1609\":{\"h\":\"6、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1610\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1611\":{\"h\":\"Warm-Flow发布1.3.4, 支持solon和便捷性提升\"},\"1612\":{\"h\":\"1、老群被干没了，新群：\",\"t\":[\"本次的版本大大提升了工作流的使用便捷性，如下：\",\"设计器引入，新增支持solon 新增监听器spel表达式，并且支持扩展 增加全局监听器，针对整个系统，通过接口接入方式 流程变量表达式支持替换集合\"]},\"1613\":{\"h\":\"2、详细更新内容：\",\"t\":[\"更新日志 \",\"[feat] 新增监听器spel表达式，并且支持扩展\",\"[feat] 增加全局监听器，针对整个系统，通过接口接入方式\",\"[feat] 新增审批前获取当前办理人接口，类似satoken方式 @huangjian\",\"[feat] 流程变量表达式支持替换集合 @huangjian\",\"[feat] 设计器引入，新增支持solon\",\"[feat] 新增创建流程定义，默认初始化节点\",\"[feat] 新增根据流程定义id集合，查询流程实例集合api\",\"[update] 监听器配置页面ui调整\",\"[update] 重新定义监听器名称，原全局监听器改名为流程监听器，局部监听器改名为节点监听器\",\"[update] 已经开启过审批任务的不可取消发布和删除\",\"[update] 转办、委派、加签和减签，增加参数合法性校验\",\"[update] 修改流程变量传递方式，可通过办理人变量表达式或者分派监听器，初始化后续所有办理人\",\"[update] 加载handler取消懒加载，重构test项目\",\"[update] 办理人变量表达式，删除策略前缀，通过$和#区分\",\"[update] 流程版本号默认改完自动递增，不接收外部设置\",\"[refactor] 重构条件表达式和办理人变量表达式\",\"[remove] 移除权限监听器\"]},\"1614\":{\"h\":\"3、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器和不同颗粒的的作用范围，支持spel表达式，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配，支持solon和springboot\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1615\":{\"h\":\"4、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1616\":{\"h\":\"7、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1617\":{\"h\":\"\"},\"1618\":{\"h\":\"Dromara WarmFlow工作流动态指定办理人\"},\"1619\":{\"h\":\"背景：\",\"t\":[\"审批任务的办理人，通常是在流程设计器中预先设定好办理人，那如果想要在办理过程中指定办理人呢？ 那不得不提一下本次的主角，来自Dromara组织的WarmFlow工作流，通过他的办理人变量表达式就能很好解决此问题。\"]},\"1620\":{\"h\":\"解决思路\",\"t\":[\"1、流程设计时，需要动态指定办理人的节点，配置办理人变量表达式${handler1}\",\"2、当上一个任务办理时，在流程变量中传入${handler1}的值\",\"3、办理完成会生成本节点任务，即可替换完成\",\"后端代码设置变量\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1621\":{\"h\":\"高级玩法\",\"t\":[\"支持动态指定一群人\",\"支持spel表达式\",\"支持表达式扩展\",\"把如上代码\\\"100\\\"改成Arrays.asList(4, \\\"5\\\", 100L)，就可以动态指定一群人\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1622\":{\"h\":\"总结\",\"t\":[\"是不是通过WarmFlow工作流可以很简单的管理你的审批业务呢，还不快快加入v\",\"另外Dromara组织还有大量好用的项目，欢迎评鉴\"]},\"1623\":{\"h\":\"gitee变成maven私库\"},\"1624\":{\"h\":\"1、背景\",\"t\":[\"当由于各种原因，比如网络、想控制谁有权限访问类库或者公司没有服务器作为私库等，可以采用此法建立私库。\",\"​\"]},\"1625\":{\"h\":\"2、Gitee建新的仓库\",\"t\":[\"我的仓库地址：https://gitee.com/min290/warm-flow-repo.git\"]},\"1626\":{\"h\":\"2.1、首先要建立仓库\",\"t\":[\"img\",\"​\"]},\"1627\":{\"h\":\"\",\"t\":[\"img\",\"​\"]},\"1628\":{\"h\":\"3、下载此项目\",\"t\":[\"比如我的下载到：D:/IdeaProjects/min/warm-flow-repo\",\"​\"]},\"1629\":{\"h\":\"4、上传私库的到本地\",\"t\":[\"上传命令：mvn clean deploy -P gitee\",\"配置介绍：\",\"distributionManagement：此配置上传到本地的路径\",\"maven-source-plugin：打包附带源码 maven-javadoc-plugin：打包附带api文档\",\"<profile> <id>gitee</id> <build> <plugins> <!-- Source --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> <version>2.2.1</version> <executions> <execution> <id>attach-sources</id> <goals> <goal>jar-no-fork</goal> </goals> </execution> </executions> </plugin> <!-- Javadoc --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> <version>2.10.4</version> <configuration> <!-- 忽略生成文档中的错误 --> <additionalparam>-Xdoclint:none</additionalparam> <aggregate>true</aggregate> <charset>UTF-8</charset><!-- utf-8读取文件 --> <encoding>UTF-8</encoding><!-- utf-8进行编码代码 --> <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 --> </configuration> <executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> </plugins> </build> <distributionManagement> <snapshotRepository> <id>gitee-snapshots</id> <url>file:D:/IdeaProjects/min/warm-flow-repo/snapshots</url> </snapshotRepository> <repository> <id>gitee-releases</id> <name>releases</name> <url>file:D:/IdeaProjects/min/warm-flow-repo/releases</url> </repository> </distributionManagement> </profile> </profiles>\",\"​\"]},\"1630\":{\"h\":\"5、下载依赖\",\"t\":[\"在pom.xml的project目录下新增如下配置\",\"​\",\"<repositories> <repository> <id>Gitee-Warm-Flow</id> <url>https://gitee.com/min290/maven-repository/raw/main/releases</url> </repository> </repositories>\",\"需要注意：如果没有此配置没有生效，还是走maven中setting的镜像仓库，需要查看，mirrorOf是否位“*”，此代码拦截所有仓库，需要增加排除“!Gitee-Warm-Flow”\",\"img\",\"​\",\"改为如下，重新加载依赖，如还为生效，可能缓存原因，重启idea。\",\"img\"]},\"1631\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志 最新版本集成方式请看官方文档\"]},\"1632\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"1633\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1634\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1635\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1636\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1637\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1638\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1639\":{\"h\":\"5、项目介绍\"},\"1640\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1641\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"1642\":{\"h\":\"2、以下为简短案例\"},\"1643\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1644\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1645\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1646\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1647\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"1648\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1649\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1650\":{\"h\":\"6、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1651\":{\"h\":\"升级指南\"},\"1652\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"办理人变量表达式，删除策略前缀，通过$和#区分，需执行1.3.4增量脚本sql\",\"依赖的groupId：org.dromara，改为org.dromara.warm\",\"如果扩展了条件表达式策略 \",\"接口或者抽象类前缀由ExpressionStrategy改为 ConditionStrategy\",\"全局搜索org.dromara.warm.flow.core.expression 替换为org.dromara.warm.flow.core.expression,然后检查是否正确\"]},\"1653\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"独立设计器放行路径增加/warm-flow，如果想要共享后端权限(比如token)，可不增加，并且按照官网流程设计器引入进行设置\"]},\"1654\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"依赖的groupId：io.github.minliuhua，改为org.dromara\",\"包名：com.warm， 改为org.dromara.warm\",\"节点详情进入改为双击\",\"终止操作的流程状态改为更合理的终止状态，如需还想按照原本的自动完成，请使用自定义流程状态\",\"FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\",\"转办、委派、加签和减签方法，老方法标识即将删除, 请尽快使用新的接口\",\"终止免校验权限改为设置ignore字段\",\"设计器引入优化 \",\"设计器后端放行地址/warm-flow/**删除，不再需要\",\"前端加载设计器代理配置,vue.config.js或者nginx中的代理，/warm-flow-ui/删除，不再需要\",\"iframe中访问设计器接口由/warm-flow-ui/${definitionId}?disabled=${disabled}，改为VUE_APP_BASE_API +/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\",\"VUE_APP_BASE_API是前端访问前缀比如prod-api\"]},\"1655\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"执行升级脚本【warm-flow_1.3.0.sql】\"]},\"1656\":{\"h\":\"v1.2.10 2024-09-26\",\"t\":[\"无\"]},\"1657\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"本次升级，内置json库snack3方式，改为spi方式加载，业务项目中存在哪种json就会使用哪种的实现， 支持顺序按顺序加载一种：snack3、jackson、fastjson、gson，并且目前只实现了这四种，可扩展\",\"如在未集成snack3库的环境下，还需要使用snack3库，需要单独使用（原组件使用snack3库）\",\" <dependency> <groupId>org.noear</groupId> <artifactId>snack3</artifactId> <version>3.2.88</version> </dependency>\"]},\"1658\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"无\"]},\"1659\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"执行升级脚本【warm-flow_1.2.6.sql】\",\"流程状态字段flow_status改为string类型，业务系统需要对应修改\"]},\"1660\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"执行升级脚本【warm-flow_1.2.4.sql】\",\"流程定义表from_custom改为form_custom，from_path改为form_path，涉及到这两个字段的前后段都要修改\",\"反显审批流程表单，改为通过task表新增的form_custom和form_path字段\",\"只针对mybatis-plus扩展包，其他的扩展包可忽略，多租户和逻辑删除，改为通过mybatis-plus的自带的方式实现( 可参考官网文章逻辑删除和多租户)，并且流程表的逻辑删除字段都更新为0\",\"原本的我发起[warmFlowInitiator], 组件内部不在维护替换，由分派监听器实现替换\"]},\"1661\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"无\"]},\"1662\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"执行升级脚本【warm-flow_1.2.1.sql】\"]},\"1663\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"执行升级脚本【warm-flow_1.2.0.sql】\",\"工具包路径调整\"]},\"1664\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"执行升级脚本【warm-flow_1.1.90.sql】\"]},\"1665\":{\"h\":\"\"},\"1666\":{\"h\":\"作者介绍\",\"t\":[\"名称：warm\",\"dromara 开源组织成员，dromara/warm-flow作者\",\"研发工程师、技术经理，工作经验8年。此工作流已经持续开发有一年有余。\",\"Gitee|Github\",\"微信：warm-houhou；qq群：778470567\",\"大家好，我是warm，是warm-flow工作流引擎的作者，来自于美丽的江西南昌，从事开发8年有余。此工作流持续开发一年了，那还得从工作流的痛点来说，\"]},\"1667\":{\"h\":\"历史背景\",\"t\":[\"flowable和activities确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗\",\"学习曲线： 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。\",\"复杂性： 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。\",\"定制化需求： 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。\",\"版本更新： 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。\",\"阅读难度： 全英文注释，对于英文不好的人来说，确实有门槛。\",\"那何不开发属于国人的工作流呢，为此耗时一年时间自研warm-flow工作流。\"]},\"1668\":{\"h\":\"warm-flow能给你带来什么\",\"t\":[\"重要\",\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持五种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"条件表达式：内置常见的条件表达式，并且支持自定义扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"支持角色、部门和用户等权限配置\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"接入warm-flow后妈妈再也不用担心我加班了\"]},\"1669\":{\"h\":\"项目功能模块\"},\"1670\":{\"h\":\"流程流转管理\",\"t\":[\"​ 流程流转就像是warm-flow的驾驶人。让办理流程像喝水一样简单的事情。\",\"// 部署流程 public void deployFlow() throws Exception { defService.importXml(new FileInputStream(\\\"/xxx/leaveFlow-serial.xml\\\")); } // 发布流程 public void publish() { defService.publish(1219285650587652096L); } // 开启流程 public void startFlow() { insService.start(\\\"2\\\", getUser()); } // 跳转流程 public void skipFlow() { Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); } //任意跳转 public void skipAnyNode() { Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); } // 终止流程 public void termination() { taskService.termination(1232001396254052352L, getUser()); }\"]},\"1671\":{\"h\":\"流程图管理\",\"t\":[\"​ 流程图管理就像warm-flow的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow自研了流程图绘制，通过设计器获取坐标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的demo项目中设计好导出xml，业务系统再次导入即可）。\",\"屏幕截图\"]},\"1672\":{\"h\":\"监听器管理\",\"t\":[\"监听器可以说是工作流引擎的上限，灵活度和可扩展性的核心人物\",\"监听器类型 \",\"create：创建监听器，任务创建时执行\",\"start：开始监听器，任务开始办理时执行\",\"assignment： 分派办理人监听器，分派后执行\",\"finish：结束监听器，当前任务完成后执行\",\"监听器生命周期\",\"屏幕截图\"]},\"1673\":{\"h\":\"配置管理\",\"t\":[\"​ 配置文件可以让工作流使用更加方便，如虎添翼。\",\"配置文件目前支持banner图和填充器配置，后续还会增加多租户和软删除等。\",\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 填充器 （可通过配置文件注入，也可用@Bean/@Component方式） data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式） tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\",\"填充器也可通过代码方式注入\",\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1674\":{\"h\":\"扩展支持\"},\"1675\":{\"h\":\"orm和数据库扩展\",\"t\":[\"​ 作为新时代的程序员不能固步自封，只支持mybatis和msyql。所以目前已经解偶数据库操作，按照mybatis方式扩展其他的orm或者数据库类型即可\",\"屏幕截图\"]},\"1676\":{\"h\":\"条件表达式扩展\",\"t\":[\"​ 工作流引擎想要灵活跳转，就得有相应表达式，满足不同的条件，执行不同的任务，目前支持，并且支持规则扩展\",\">, >=, <, <=, =, !=, like, not like\"]},\"1677\":{\"h\":\"\"},\"1678\":{\"h\":\"Dromara WarmFlow工作流动态指定办理人\"},\"1679\":{\"h\":\"背景：\",\"t\":[\"审批任务的办理人，通常是在流程设计器中预先设定好办理人，那如果想要在办理过程中指定办理人呢？ 那不得不提一下本次的主角，来自Dromara组织的WarmFlow工作流，通过他的办理人变量表达式就能很好解决此问题。\"]},\"1680\":{\"h\":\"解决思路\",\"t\":[\"1、流程设计时，需要动态指定办理人的节点，配置办理人变量表达式${handler1}\",\"2、当上一个任务办理时，在流程变量中传入${handler1}的值\",\"3、办理完成会生成本节点任务，即可替换完成\",\"后端代码设置变量\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", \\\"100\\\"); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1681\":{\"h\":\"高级玩法\",\"t\":[\"支持动态指定一群人\",\"支持spel表达式\",\"支持表达式扩展\",\"把如上代码\\\"100\\\"改成Arrays.asList(4, \\\"5\\\", 100L)，就可以动态指定一群人\",\"// 流程变量 Map<String, Object> variable = new HashMap<>(); variable.put(\\\"handler1\\\", Arrays.asList(4, \\\"5\\\", 100L)); flowParams.variable(variable); Instance instance = insService.skipByInsId(testLeave.getInstanceId(), flowParams);\"]},\"1682\":{\"h\":\"总结\",\"t\":[\"是不是通过WarmFlow工作流可以很简单的管理你的审批业务呢，还不快快加入v\",\"另外Dromara组织还有大量好用的项目，欢迎评鉴\"]},\"1683\":{\"h\":\"gitee变成maven私库\"},\"1684\":{\"h\":\"1、背景\",\"t\":[\"当由于各种原因，比如网络、想控制谁有权限访问类库或者公司没有服务器作为私库等，可以采用此法建立私库。\",\"​\"]},\"1685\":{\"h\":\"2、Gitee建新的仓库\",\"t\":[\"我的仓库地址：https://gitee.com/min290/warm-flow-repo.git\"]},\"1686\":{\"h\":\"2.1、首先要建立仓库\",\"t\":[\"img\",\"​\"]},\"1687\":{\"h\":\"\",\"t\":[\"img\",\"​\"]},\"1688\":{\"h\":\"3、下载此项目\",\"t\":[\"比如我的下载到：D:/IdeaProjects/min/warm-flow-repo\",\"​\"]},\"1689\":{\"h\":\"4、上传私库的到本地\",\"t\":[\"上传命令：mvn clean deploy -P gitee\",\"配置介绍：\",\"distributionManagement：此配置上传到本地的路径\",\"maven-source-plugin：打包附带源码 maven-javadoc-plugin：打包附带api文档\",\"<profile> <id>gitee</id> <build> <plugins> <!-- Source --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> <version>2.2.1</version> <executions> <execution> <id>attach-sources</id> <goals> <goal>jar-no-fork</goal> </goals> </execution> </executions> </plugin> <!-- Javadoc --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> <version>2.10.4</version> <configuration> <!-- 忽略生成文档中的错误 --> <additionalparam>-Xdoclint:none</additionalparam> <aggregate>true</aggregate> <charset>UTF-8</charset><!-- utf-8读取文件 --> <encoding>UTF-8</encoding><!-- utf-8进行编码代码 --> <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 --> </configuration> <executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> </plugins> </build> <distributionManagement> <snapshotRepository> <id>gitee-snapshots</id> <url>file:D:/IdeaProjects/min/warm-flow-repo/snapshots</url> </snapshotRepository> <repository> <id>gitee-releases</id> <name>releases</name> <url>file:D:/IdeaProjects/min/warm-flow-repo/releases</url> </repository> </distributionManagement> </profile> </profiles>\",\"​\"]},\"1690\":{\"h\":\"5、下载依赖\",\"t\":[\"在pom.xml的project目录下新增如下配置\",\"​\",\"<repositories> <repository> <id>Gitee-Warm-Flow</id> <url>https://gitee.com/min290/maven-repository/raw/main/releases</url> </repository> </repositories>\",\"需要注意：如果没有此配置没有生效，还是走maven中setting的镜像仓库，需要查看，mirrorOf是否位“*”，此代码拦截所有仓库，需要增加排除“!Gitee-Warm-Flow”\",\"img\",\"​\",\"改为如下，重新加载依赖，如还为生效，可能缓存原因，重启idea。\",\"img\"]},\"1691\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"终于迎来了这个激动人心的版本1.3.1，不需要在为引入设计器而烦恼了。按照以下四点，可以快速集成。 另外一直被吐槽的流程图不够清晰，也在此版本得到解决。\",\"详细更新说明：更新日志 最新版本集成方式请看官方文档\"]},\"1692\":{\"h\":\"1. 引入依赖\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>1.3.1</version> </dependency>\"]},\"1693\":{\"h\":\"2. 后端放行部分路径\",\"t\":[\"1、这个路径需要放行，否则无法访问，/warm-flow-ui/** 2、以下是spring-security放行配置示例\",\"@Bean protected SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception { return httpSecurity ....... // 注解标记允许匿名访问的url .authorizeHttpRequests((requests) -> { // 后端请求，静态资源，可匿名访问 requests.antMatchers(\\\"/warm-flow-ui/**\\\").permitAll() // 除上面外的所有请求全部需要鉴权认证 .anyRequest().authenticated(); }) ...... .build(); }\"]},\"1694\":{\"h\":\"3. 前端加载设计器\",\"t\":[\"1、设计器页面入口是访问后端地址(前后端不分离)：ip:port/warm-flow-ui/index?id=${definitionId}&disabled=${disabled}\"]},\"1695\":{\"h\":\"4. 设计器办理人权限数据接入\",\"t\":[\"给任务节点设置哪些权限的人可以办理，实现接口提供给设计器\"]},\"1696\":{\"h\":\"4.1 办理人权限选择弹框页面\"},\"1697\":{\"h\":\"4.2 实现接口获取以上页面办理人权限数据\"},\"1698\":{\"h\":\"4.2.1 HandlerSelectService接口\",\"t\":[\"/** * 流程设计器-获取办理人权限设置列表接口 * * @author warm */ public interface HandlerSelectService { /** * 获取办理人权限设置列表tabs页签, 如：用户、角色和部门等 * @return tabs页签 */ List<String> getHandlerType(); /** * 获取办理人权限设置列表结果，如：用户列表、角色列表、部门列表等 * @param query 查询参数 * @return 结果 */ List<HandlerSelectVo> getHandlerSelect(HandlerQuery query); }\"]},\"1699\":{\"h\":\"5、项目介绍\"},\"1700\":{\"h\":\"一个自带流程设计器的工作流引擎\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>warm-flow-mybatis-solon-plugin</artifactId> <version>1.3.4</version> </dependency>\",\"支持orm框架类型:\",\" mybatis\",\" mybatis-plus\",\" jpa\",\" easy-query\",\" mybatis-flex\",\" ......\"]},\"1701\":{\"h\":\"1、仓库地址\",\"t\":[\"https://gitee.com/dromara/warm-flow\"]},\"1702\":{\"h\":\"2、以下为简短案例\"},\"1703\":{\"h\":\"2.1、部署流程\",\"t\":[\"public void deployFlow() throws Exception { String path = \\\"/Users/minliuhua/Desktop/mdata/file/IdeaProjects/min/hh-vue/hh-admin/src/main/resources/leaveFlow-serial.xml\\\"; System.out.println(\\\"已部署流程的id：\\\" + defService.importXml(new FileInputStream(path)).getId()); }\"]},\"1704\":{\"h\":\"2.2、发布流程\",\"t\":[\"public void publish() throws Exception { defService.publish(1212437969554771968L); }\"]},\"1705\":{\"h\":\"2.3、开启流程\",\"t\":[\"public void startFlow() { System.out.println(\\\"已开启的流程实例id：\\\" + insService.start(\\\"1\\\", getUser()).getId()); }\"]},\"1706\":{\"h\":\"2.4、流程流转\",\"t\":[\"public void skipFlow() throws Exception { // 通过实例id流转 Instance instance = insService.skipByInsId(1219286332141080576L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); } public void skipAnyNode() throws Exception { // 跳转到指定节点 Instance instance = insService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); System.out.println(\\\"流转后流程实例：\\\" + instance.toString()); }\"]},\"1707\":{\"h\":\"3、设计器引入\",\"t\":[\"<dependency> <groupId>org.dromara.warm</groupId> <artifactId>warm-flow-plugin-ui-sb-web</artifactId> <version>最新版本</version> </dependency>\",\"具体引入方式：\",\"通过jar包引入：文档地址\"]},\"1708\":{\"h\":\"4、项目介绍\",\"t\":[\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量，五脏俱全，可扩展，是一个可通过jar引入设计器的工作流。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持四种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"流程设计器：可通过jar包形式快速集成到项目，减少繁琐代码搬运和适配\",\"条件表达式：内置常见的和spel条件表达式，并且支持自定义扩展\",\"办理人变量表达式：内置${handler}和spel格式的表达式，可满足不同场景，灵活可扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\"]},\"1709\":{\"h\":\"5、演示地址\",\"t\":[\"admin/admin123\",\"演示地址：http://www.hhzai.top\"]},\"1710\":{\"h\":\"6、官网\",\"t\":[\"http://warm-flow.cn\"]},\"1711\":{\"h\":\"\"},\"1712\":{\"h\":\"作者介绍\",\"t\":[\"名称：warm\",\"dromara 开源组织成员，dromara/warm-flow作者\",\"研发工程师、技术经理，工作经验8年。此工作流已经持续开发有一年有余。\",\"Gitee|Github\",\"微信：warm-houhou；qq群：778470567\",\"大家好，我是warm，是warm-flow工作流引擎的作者，来自于美丽的江西南昌，从事开发8年有余。此工作流持续开发一年了，那还得从工作流的痛点来说，\"]},\"1713\":{\"h\":\"历史背景\",\"t\":[\"flowable和activities确实大而全，但是这样对一般的项目会是好事吗？能早点下班吗\",\"学习曲线： 对于初学者来说，学习可能需要一定的时间和精力。理解其概念、API 和配置可能需要一些耐心和实践。\",\"复杂性： 对于简单的工作流程来说，引入可能会显得过于复杂。在某些情况下，使用简单的解决方案可能更合适。\",\"定制化需求： 在一些特殊场景下，可能需要对进行定制化开发，以满足特定的需求。这可能需要深入理解其内部工作原理和源代码。\",\"版本更新： 随着时间的推移，会发布新的版本，其中可能包含功能改进、bug 修复等。升级到新版本可能需要投入一定的时间和资源，以确保平稳过渡和兼容性。\",\"阅读难度： 全英文注释，对于英文不好的人来说，确实有门槛。\",\"那何不开发属于国人的工作流呢，为此耗时一年时间自研warm-flow工作流。\"]},\"1714\":{\"h\":\"warm-flow能给你带来什么\",\"t\":[\"重要\",\"Warm-Flow国产工作流引擎🎉，其特点简洁轻量但又不简单，五脏俱全，组件独立，可扩展，可满足中小项目的组件。\",\"简洁易用：只有7张表，代码量少，可快速上手和集成\",\"审批功能：支持通过、退回、任意跳转、转办、终止、会签、票签、委派和加减签、互斥和并行网关\",\"监听器与流程变量：支持五种监听器，可应对不同场景，灵活可扩展，参数传递，动态权限\",\"流程图：流程引擎自带流程图，可在不集成流程设计器情况下使用\",\"条件表达式：内置常见的条件表达式，并且支持自定义扩展\",\"orm框架扩展：目前支持MyBatis、Mybatis-Plus、Mybatis-Flex和Jpa，后续会由社区提供其他支持，扩展方便\",\"数据库支持：目前支持MySQL 、Oracle 和PostgreSQL，后续会继续支持其他数据库或者国产数据库\",\"多租户与软删除：流程引擎自身维护多租户和软删除实现，也可使用对应orm框架的实现方式\",\"支持角色、部门和用户等权限配置\",\"同时支持spring和solon\",\"兼容java8和java17,理论11也可以\",\"官方提供基于ruoyi-vue封装实战项目，很实用\",\"接入warm-flow后妈妈再也不用担心我加班了\"]},\"1715\":{\"h\":\"项目功能模块\"},\"1716\":{\"h\":\"流程流转管理\",\"t\":[\"​ 流程流转就像是warm-flow的驾驶人。让办理流程像喝水一样简单的事情。\",\"// 部署流程 public void deployFlow() throws Exception { defService.importXml(new FileInputStream(\\\"/xxx/leaveFlow-serial.xml\\\")); } // 发布流程 public void publish() { defService.publish(1219285650587652096L); } // 开启流程 public void startFlow() { insService.start(\\\"2\\\", getUser()); } // 跳转流程 public void skipFlow() { Instance instance = insService.skip(1232001238795685888L,getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\"))); } //任意跳转 public void skipAnyNode() { Instance instance = taskService.skip(1219286332145274880L, getUser().skipType(SkipType.PASS.getKey()) .permissionFlag(Arrays.asList(\\\"role:1\\\", \\\"role:2\\\")).nodeCode(\\\"4\\\")); } // 终止流程 public void termination() { taskService.termination(1232001396254052352L, getUser()); }\"]},\"1717\":{\"h\":\"流程图管理\",\"t\":[\"​ 流程图管理就像warm-flow的门面。作为工作流引擎，当然是可以能脱离流程设计器，独立使用的，那流程图片生成是必不可少的。warm-flow自研了流程图绘制，通过设计器获取坐标，进行绘制流程的进度和状态（当然业务系统可以不集成设计器，可在作者提供的demo项目中设计好导出xml，业务系统再次导入即可）。\",\"屏幕截图\"]},\"1718\":{\"h\":\"监听器管理\",\"t\":[\"监听器可以说是工作流引擎的上限，灵活度和可扩展性的核心人物\",\"监听器类型 \",\"create：创建监听器，任务创建时执行\",\"start：开始监听器，任务开始办理时执行\",\"assignment： 分派办理人监听器，分派后执行\",\"finish：结束监听器，当前任务完成后执行\",\"监听器生命周期\",\"屏幕截图\"]},\"1719\":{\"h\":\"配置管理\",\"t\":[\"​ 配置文件可以让工作流使用更加方便，如虎添翼。\",\"配置文件目前支持banner图和填充器配置，后续还会增加多租户和软删除等。\",\"# warm-flow工作流配置 warm-flow: # 是否开启工作流，默认true enabled: true # 是否显示banner图，默认是 banner: true # 填充器 （可通过配置文件注入，也可用@Bean/@Component方式） data-fill-handler-path: com.ruoyi.system.handle.CustomDataFillHandler # 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式） tenant_handler_path: com.ruoyi.system.handle.CustomTenantHandler # 是否开启逻辑删除（orm框架本身不支持逻辑删除，可通过这种方式开启） logic_delete: true # 逻辑删除字段值（开启后默认为2） logic_delete_value: 2 # 逻辑未删除字段（开启后默认为0） logic_not_delete_value: 0 # 当使用JPA时指定JpaPersistenceProvider jpa_persistence_provider: org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider # 内部已实现自动获取，失效时使用此配置（在使用mybatis扩展包时, 由于各数据库sql语句存在差异, 通过此配置兼容，默认为mysql） data_source_type: mysql\",\"填充器也可通过代码方式注入\",\"@Configuration public class WarmFlowConfig { /** * 自定义填充 （可配置文件注入，也可用@Bean/@Component方式） */ @Bean public DataFillHandler dataFillHandler() { return new CustomDataFillHandler(); } /** * 全局租户处理器（可通过配置文件注入，也可用@Bean/@Component方式 */ @Bean public TenantHandler tenantHandler() { return new CustomTenantHandler(); } }\"]},\"1720\":{\"h\":\"扩展支持\"},\"1721\":{\"h\":\"orm和数据库扩展\",\"t\":[\"​ 作为新时代的程序员不能固步自封，只支持mybatis和msyql。所以目前已经解偶数据库操作，按照mybatis方式扩展其他的orm或者数据库类型即可\",\"屏幕截图\"]},\"1722\":{\"h\":\"条件表达式扩展\",\"t\":[\"​ 工作流引擎想要灵活跳转，就得有相应表达式，满足不同的条件，执行不同的任务，目前支持，并且支持规则扩展\",\">, >=, <, <=, =, !=, like, not like\"]},\"1723\":{\"h\":\"升级指南\"},\"1724\":{\"h\":\"v1.3.4 2024-11-25\",\"t\":[\"办理人变量表达式，删除策略前缀，通过$和#区分，需执行1.3.4增量脚本sql\",\"依赖的groupId：org.dromara，改为org.dromara.warm\",\"如果扩展了条件表达式策略 \",\"接口或者抽象类前缀由ExpressionStrategy改为 ConditionStrategy\",\"全局搜索org.dromara.warm.flow.core.expression 替换为org.dromara.warm.flow.core.expression,然后检查是否正确\"]},\"1725\":{\"h\":\"v1.3.3 2024-11-12\",\"t\":[\"独立设计器放行路径增加/warm-flow，如果想要共享后端权限(比如token)，可不增加，并且按照官网流程设计器引入进行设置\"]},\"1726\":{\"h\":\"v1.3.1 2024-11-01\",\"t\":[\"依赖的groupId：io.github.minliuhua，改为org.dromara\",\"包名：com.warm， 改为org.dromara.warm\",\"节点详情进入改为双击\",\"终止操作的流程状态改为更合理的终止状态，如需还想按照原本的自动完成，请使用自定义流程状态\",\"FlowParams对象删除setXxx(yyy)方法，改为xxx(yyy)方法赋值\",\"转办、委派、加签和减签方法，老方法标识即将删除, 请尽快使用新的接口\",\"终止免校验权限改为设置ignore字段\",\"设计器引入优化 \",\"设计器后端放行地址/warm-flow/**删除，不再需要\",\"前端加载设计器代理配置,vue.config.js或者nginx中的代理，/warm-flow-ui/删除，不再需要\",\"iframe中访问设计器接口由/warm-flow-ui/${definitionId}?disabled=${disabled}，改为VUE_APP_BASE_API +/warm-flow-ui/index.html?id=${definitionId}&disabled=${disabled}\",\"VUE_APP_BASE_API是前端访问前缀比如prod-api\"]},\"1727\":{\"h\":\"v1.3.0 2024-10-23\",\"t\":[\"执行升级脚本【warm-flow_1.3.0.sql】\"]},\"1728\":{\"h\":\"v1.2.10 2024-09-26\",\"t\":[\"无\"]},\"1729\":{\"h\":\"v1.2.8 2024-09-25\",\"t\":[\"本次升级，内置json库snack3方式，改为spi方式加载，业务项目中存在哪种json就会使用哪种的实现， 支持顺序按顺序加载一种：snack3、jackson、fastjson、gson，并且目前只实现了这四种，可扩展\",\"如在未集成snack3库的环境下，还需要使用snack3库，需要单独使用（原组件使用snack3库）\",\" <dependency> <groupId>org.noear</groupId> <artifactId>snack3</artifactId> <version>3.2.88</version> </dependency>\"]},\"1730\":{\"h\":\"v1.2.7 2024-09-03\",\"t\":[\"无\"]},\"1731\":{\"h\":\"v1.2.6 2024-08-28\",\"t\":[\"执行升级脚本【warm-flow_1.2.6.sql】\",\"流程状态字段flow_status改为string类型，业务系统需要对应修改\"]},\"1732\":{\"h\":\"v1.2.4 2024-08-14\",\"t\":[\"执行升级脚本【warm-flow_1.2.4.sql】\",\"流程定义表from_custom改为form_custom，from_path改为form_path，涉及到这两个字段的前后段都要修改\",\"反显审批流程表单，改为通过task表新增的form_custom和form_path字段\",\"只针对mybatis-plus扩展包，其他的扩展包可忽略，多租户和逻辑删除，改为通过mybatis-plus的自带的方式实现( 可参考官网文章逻辑删除和多租户)，并且流程表的逻辑删除字段都更新为0\",\"原本的我发起[warmFlowInitiator], 组件内部不在维护替换，由分派监听器实现替换\"]},\"1733\":{\"h\":\"v1.2.3 2024-06-28\",\"t\":[\"无\"]},\"1734\":{\"h\":\"v1.2.1 2024-06-28\",\"t\":[\"执行升级脚本【warm-flow_1.2.1.sql】\"]},\"1735\":{\"h\":\"v1.2.0 2024-06-13\",\"t\":[\"执行升级脚本【warm-flow_1.2.0.sql】\",\"工具包路径调整\"]},\"1736\":{\"h\":\"v1.1.9 2024-05-08\",\"t\":[\"执行升级脚本【warm-flow_1.1.90.sql】\"]},\"1737\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"1738\":{\"h\":\"Advanced\"},\"1739\":{\"h\":\"Master\"},\"1740\":{\"h\":\"Enhance\"},\"1741\":{\"h\":\"Introduction\"},\"1742\":{\"h\":\"Other\"},\"1743\":{\"h\":\"Primary\"},\"1744\":{\"h\":\"Guide\"},\"1745\":{\"h\":\"V1.2.10\"},\"1746\":{\"h\":\"Guide\"},\"1747\":{\"h\":\"V1.3.1\"},\"1748\":{\"h\":\"Guide\"},\"1749\":{\"h\":\"V1.3.0\"},\"1750\":{\"h\":\"Guide\"},\"1751\":{\"h\":\"V1.3.3\"},\"1752\":{\"h\":\"Guide\"},\"1753\":{\"h\":\"V1.3.4\"},\"1754\":{\"h\":\"Advanced\"},\"1755\":{\"h\":\"V1.3.5\"},\"1756\":{\"h\":\"Enhance\"},\"1757\":{\"h\":\"Introduction\"},\"1758\":{\"h\":\"Primary\"},\"1759\":{\"h\":\"Other\"},\"1760\":{\"h\":\"Update\"},\"1761\":{\"h\":\"Update\"},\"1762\":{\"h\":\"Update\"},\"1763\":{\"h\":\"Update\"},\"1764\":{\"h\":\"Experience\"},\"1765\":{\"h\":\"News\"},\"1766\":{\"h\":\"News\"},\"1767\":{\"h\":\"Upgrade Guide\"},\"1768\":{\"h\":\"Notice\"},\"1769\":{\"h\":\"Experience\"},\"1770\":{\"h\":\"News\"},\"1771\":{\"h\":\"News\"},\"1772\":{\"h\":\"Notice\"},\"1773\":{\"h\":\"Upgrade Guide\"}},\"dirtCount\":0,\"index\":[[\"满足不同的条件\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"满足设定的通过率\",{\"1\":{\"232\":1,\"276\":1,\"1451\":1,\"1495\":1}}],[\"灵活度和可扩展性的核心人物\",{\"1\":{\"1672\":1,\"1718\":1}}],[\"灵活可扩展\",{\"1\":{\"102\":2,\"1369\":2,\"1586\":2,\"1597\":2,\"1608\":2,\"1614\":2,\"1648\":2,\"1668\":1,\"1708\":2,\"1714\":1}}],[\"阅读难度\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"随着时间的推移\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"定制化需求\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"理解其概念\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"理论11也可以\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"学习可能需要一定的时间和精力\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"学习曲线\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"能早点下班吗\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"能力开放平台\",{\"1\":{\"83\":1,\"1350\":1}}],[\"从事开发8年有余\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"来自于美丽的江西南昌\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"来自dromara组织的warmflow工作流\",{\"1\":{\"1619\":1,\"1679\":1}}],[\"微信\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"技术经理\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"技术咨询等\",{\"1\":{\"127\":1,\"1533\":1}}],[\"研发工程师\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"工作经验8年\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"工作流引擎想要灵活跳转\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"工作流中的某个节点上\",{\"1\":{\"614\":1,\"800\":1}}],[\"工作流模块抽取为独立项目\",{\"1\":{\"171\":1,\"1577\":1}}],[\"工作流api中很多需要获取当前办理人id\",{\"1\":{\"27\":1,\"1193\":1,\"1294\":1}}],[\"工具包路径调整\",{\"1\":{\"1663\":1,\"1735\":1}}],[\"组件独立\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"组件内部不在维护替换\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"组件本身提供常见并且基础的api\",{\"1\":{\"23\":1,\"1189\":1,\"1290\":1}}],[\"反显审批流程表单\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"反射设置对象值异常\",{\"1\":{\"1286\":1}}],[\"涉及到这两个字段的前后段都要修改\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"依赖的groupid\",{\"1\":{\"1652\":1,\"1654\":1,\"1724\":1,\"1726\":1}}],[\"依赖问题\",{\"1\":{\"155\":1,\"1561\":1}}],[\"具体引入方式\",{\"1\":{\"1647\":1,\"1707\":1}}],[\"仓库地址\",{\"0\":{\"1641\":1,\"1701\":1}}],[\"我是warm\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"我的仓库地址\",{\"1\":{\"1625\":1,\"1685\":1}}],[\"我们假定您已经\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"我们好像在哪儿见过\",{\"1\":{\"132\":1,\"1538\":1}}],[\"我们程序员都不擅长写作\",{\"1\":{\"88\":1,\"1355\":1}}],[\"​\",{\"1\":{\"1624\":1,\"1626\":1,\"1627\":1,\"1628\":1,\"1629\":1,\"1630\":2,\"1670\":1,\"1671\":1,\"1673\":1,\"1675\":1,\"1676\":1,\"1684\":1,\"1686\":1,\"1687\":1,\"1688\":1,\"1689\":1,\"1690\":2,\"1716\":1,\"1717\":1,\"1719\":1,\"1721\":1,\"1722\":1}}],[\"想控制谁有权限访问类库或者公司没有服务器作为私库等\",{\"1\":{\"1624\":1,\"1684\":1}}],[\"想参与贡献代码的小伙伴\",{\"1\":{\"89\":1,\"1356\":1}}],[\"欢迎评鉴\",{\"1\":{\"1622\":1,\"1682\":1}}],[\"欢迎加群交流\",{\"1\":{\"126\":1,\"1532\":1}}],[\"另外dromara组织还有大量好用的项目\",{\"1\":{\"1622\":1,\"1682\":1}}],[\"另外一直被吐槽的流程图不够清晰\",{\"1\":{\"1578\":1,\"1600\":1,\"1631\":1,\"1691\":1}}],[\"高级玩法\",{\"0\":{\"1621\":1,\"1681\":1}}],[\"那流程图片生成是必不可少的\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"那何不开发属于国人的工作流呢\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"那还得从工作流的痛点来说\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"那不得不提一下本次的主角\",{\"1\":{\"1619\":1,\"1679\":1}}],[\"那如果想要在办理过程中指定办理人呢\",{\"1\":{\"1619\":1,\"1679\":1}}],[\"背景\",{\"0\":{\"1619\":1,\"1624\":1,\"1679\":1,\"1684\":1}}],[\"老群被干没了\",{\"0\":{\"1612\":1}}],[\"老方法标识即将删除\",{\"1\":{\"149\":1,\"1555\":1,\"1654\":1,\"1726\":1}}],[\"详细更新内容\",{\"0\":{\"1613\":1}}],[\"详细更新说明\",{\"1\":{\"1578\":1,\"1600\":1,\"1631\":1,\"1691\":1}}],[\"详细案例测试代码warm\",{\"1\":{\"291\":1,\"627\":1,\"1006\":1,\"1229\":1,\"1510\":1}}],[\"终于迎来了这个激动人心的版本1\",{\"1\":{\"1578\":1,\"1589\":1,\"1600\":1,\"1631\":1,\"1691\":1}}],[\"终止免校验权限改为设置ignore字段\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"终止操作的流程状态改为更合理的终止状态\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"终止当前流程\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"终止流程\",{\"0\":{\"193\":1,\"200\":1,\"327\":1,\"333\":1,\"496\":1,\"502\":1,\"681\":1,\"687\":1,\"867\":1,\"873\":1,\"1062\":1,\"1069\":1,\"1412\":1,\"1419\":1},\"1\":{\"193\":1,\"200\":1,\"327\":1,\"333\":1,\"496\":1,\"502\":1,\"681\":1,\"687\":1,\"867\":1,\"873\":1,\"1062\":1,\"1069\":1,\"1412\":1,\"1419\":1,\"1670\":1,\"1716\":1}}],[\"终止流程状态改为更合理的终止状态\",{\"1\":{\"149\":1,\"1555\":1}}],[\"终止新增对开始和完成监听器的支持\",{\"1\":{\"152\":1,\"1558\":1}}],[\"终止\",{\"1\":{\"102\":1,\"149\":1,\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1369\":1,\"1495\":1,\"1555\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"读取is流和导入实体类\",{\"1\":{\"1551\":1}}],[\"去访问该地址\",{\"1\":{\"741\":1,\"1592\":1}}],[\"总结\",{\"0\":{\"1622\":1,\"1682\":1}}],[\"总体思路就是把前端接口\",{\"1\":{\"741\":1,\"1592\":1}}],[\"总用量\",{\"1\":{\"132\":1,\"1538\":1}}],[\"标识不同策略的前缀\",{\"1\":{\"655\":1,\"840\":1,\"1034\":1}}],[\"属于退回中的一种\",{\"1\":{\"614\":1,\"800\":1}}],[\"允许返回到上一个节点进行修改\",{\"1\":{\"614\":1,\"800\":1}}],[\"社区同学录制\",{\"1\":{\"448\":1,\"634\":1,\"819\":1,\"1013\":1,\"1237\":1}}],[\"操作自动计算\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"操作即完成当前任务\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"传递后台通过\",{\"1\":{\"400\":1,\"585\":1,\"771\":1,\"964\":1}}],[\"传入流程任务id\",{\"1\":{\"199\":1,\"200\":1,\"205\":1,\"332\":1,\"333\":1,\"501\":1,\"502\":1,\"507\":1,\"686\":1,\"687\":1,\"872\":1,\"873\":1,\"878\":1,\"1068\":1,\"1069\":1,\"1074\":1,\"1418\":1,\"1419\":1,\"1424\":1}}],[\"传入流程实例id\",{\"1\":{\"192\":1,\"193\":1,\"326\":1,\"327\":1,\"495\":1,\"496\":1,\"680\":1,\"681\":1,\"866\":1,\"867\":1,\"1061\":1,\"1062\":1,\"1411\":1,\"1412\":1}}],[\"传入流程定义id\",{\"1\":{\"177\":1,\"178\":1,\"314\":1,\"482\":1,\"483\":1,\"667\":1,\"668\":1,\"853\":1,\"854\":1,\"1048\":1,\"1049\":1,\"1396\":1,\"1397\":1}}],[\"传入业务id\",{\"1\":{\"191\":1,\"325\":1,\"494\":1,\"679\":1,\"865\":1,\"1060\":1,\"1410\":1}}],[\"传入变量\",{\"1\":{\"42\":1,\"470\":1,\"656\":1,\"841\":1,\"1035\":1,\"1261\":1,\"1309\":1}}],[\"版本更新\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"版本\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"坐标\",{\"1\":{\"306\":1,\"307\":1,\"455\":1,\"456\":1,\"641\":1,\"642\":1,\"826\":1,\"827\":1,\"1020\":1,\"1021\":1,\"1244\":1,\"1245\":1,\"1525\":1,\"1526\":1}}],[\"目标节点编码\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"目前支持\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"目前支持mysql\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"目前支持mybatis\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"目前支持snack3\",{\"1\":{\"69\":1,\"387\":1,\"572\":1,\"758\":1,\"951\":1,\"1165\":1,\"1336\":1}}],[\"目前不支持关闭\",{\"1\":{\"19\":1,\"404\":1,\"589\":1,\"775\":1,\"968\":1,\"1185\":1}}],[\"租户id\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"存业务表对象json字符串\",{\"1\":{\"303\":1,\"304\":1,\"452\":1,\"453\":1,\"638\":1,\"639\":1,\"823\":1,\"824\":1,\"1017\":1,\"1018\":1,\"1241\":1,\"1242\":1,\"1522\":1,\"1523\":1}}],[\"√\",{\"1\":{\"303\":7,\"304\":8,\"305\":8,\"306\":6,\"307\":5,\"308\":6,\"309\":4,\"452\":7,\"453\":8,\"454\":8,\"455\":6,\"456\":5,\"457\":6,\"458\":4,\"638\":7,\"639\":8,\"640\":8,\"641\":6,\"642\":5,\"643\":6,\"644\":4,\"823\":7,\"824\":8,\"825\":8,\"826\":6,\"827\":5,\"828\":6,\"829\":4,\"1017\":7,\"1018\":8,\"1019\":8,\"1020\":6,\"1021\":5,\"1022\":6,\"1023\":4,\"1241\":7,\"1242\":8,\"1243\":8,\"1244\":6,\"1245\":5,\"1246\":6,\"1247\":4,\"1522\":7,\"1523\":8,\"1524\":8,\"1525\":6,\"1526\":5,\"1527\":6,\"1528\":4}}],[\"非空\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"非必填\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"备注说明\",{\"1\":{\"301\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"450\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"636\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"821\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1015\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1239\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"名称\",{\"1\":{\"301\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"450\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"636\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"821\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1015\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1239\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1666\":1,\"1712\":1}}],[\"演练要记录过程\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"演示\",{\"1\":{\"121\":3,\"1388\":3}}],[\"演示图\",{\"0\":{\"112\":1,\"413\":1,\"598\":1,\"784\":1,\"977\":1,\"1197\":1,\"1379\":1}}],[\"演示地址\",{\"0\":{\"103\":1,\"111\":1,\"1370\":1,\"1378\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1615\":1,\"1649\":1,\"1709\":1},\"1\":{\"103\":1,\"111\":1,\"1370\":1,\"1378\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1615\":1,\"1649\":1,\"1709\":1}}],[\"今天要进行一次军事演练\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"军事演练\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"推荐学习视频\",{\"0\":{\"299\":1,\"448\":1,\"634\":1,\"819\":1,\"1013\":1,\"1237\":1,\"1518\":1}}],[\"推荐集成案例hh\",{\"0\":{\"298\":1,\"447\":1,\"633\":1,\"818\":1,\"1012\":1,\"1236\":1,\"1517\":1}}],[\"初学者推荐学习路线\",{\"0\":{\"297\":1,\"446\":1,\"632\":1,\"817\":1,\"1011\":1,\"1235\":1,\"1516\":1}}],[\"初始化后续所有办理人\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"初始化\",{\"1\":{\"98\":1,\"1365\":1}}],[\"官网\",{\"0\":{\"1588\":1,\"1599\":1,\"1610\":1,\"1616\":1,\"1650\":1,\"1710\":1}}],[\"官网流程定义案例xml\",{\"0\":{\"284\":1,\"432\":1,\"617\":1,\"803\":1,\"996\":1,\"1222\":1,\"1503\":1},\"1\":{\"284\":1,\"432\":1,\"617\":1,\"803\":1,\"996\":1,\"1222\":1,\"1503\":1}}],[\"官方提供基于ruoyi\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"找到对应数据库的更新版本\",{\"1\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"找到对应数据库的全量脚本warm\",{\"1\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"先创建数据库\",{\"1\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"先排除原依赖的前端代码\",{\"0\":{\"65\":1,\"942\":1,\"1143\":1,\"1332\":1}}],[\"及相关框架\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"环境配置及其开发\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"熟悉\",{\"1\":{\"282\":4,\"430\":4,\"615\":4,\"801\":4,\"994\":4,\"1220\":4,\"1501\":4}}],[\"快速开始\",{\"0\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"状态完成\",{\"1\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"状态都为失效\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"串行网关需要根据传入跳转条件去判断执行哪个任务路线\",{\"1\":{\"280\":1,\"426\":1,\"611\":1,\"797\":1,\"990\":1,\"1210\":1,\"1217\":1,\"1499\":1}}],[\"串行网关规则\",{\"0\":{\"280\":1,\"426\":1,\"611\":1,\"797\":1,\"990\":1,\"1210\":1,\"1217\":1,\"1499\":1}}],[\"还需要使用snack3库\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"还是走maven中setting的镜像仓库\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"还不快快加入v\",{\"1\":{\"1622\":1,\"1682\":1}}],[\"还不确定具体办理人是谁\",{\"1\":{\"38\":1,\"1257\":1,\"1305\":1}}],[\"还存在待办任务\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"失效\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"失效时使用此配置\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"谨慎使用\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"网关节点不可直连\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"网关节点可不需要跳转类型\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"流转类型\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"流转后流程实例\",{\"1\":{\"295\":3,\"445\":3,\"631\":3,\"816\":3,\"1010\":3,\"1233\":3,\"1514\":3,\"1646\":2,\"1706\":2}}],[\"流转是传入\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"流程术语\",{\"0\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1}}],[\"流程规则\",{\"0\":{\"422\":1,\"607\":1,\"793\":1,\"986\":1,\"1206\":1}}],[\"流程签署比例值\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"流程激活状态\",{\"1\":{\"303\":1,\"305\":1,\"452\":1,\"454\":1,\"638\":1,\"640\":1,\"823\":1,\"825\":1,\"1017\":1,\"1019\":1,\"1241\":1,\"1243\":1,\"1522\":1,\"1524\":1}}],[\"流程激活和挂起案例\",{\"1\":{\"154\":1,\"1560\":1}}],[\"流程版本\",{\"1\":{\"303\":1,\"452\":1,\"638\":1,\"823\":1,\"1017\":1,\"1241\":1,\"1522\":1}}],[\"流程版本号生成逻辑重构\",{\"1\":{\"154\":1,\"1560\":1}}],[\"流程版本号默认改完自动递增\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"流程名称\",{\"1\":{\"303\":1,\"452\":1,\"638\":1,\"823\":1,\"1017\":1,\"1241\":1,\"1522\":1}}],[\"流程用户表\",{\"1\":{\"300\":1,\"301\":1,\"449\":1,\"450\":1,\"635\":1,\"636\":1,\"820\":1,\"821\":1,\"1014\":1,\"1015\":1,\"1238\":1,\"1239\":1,\"1519\":1,\"1520\":1}}],[\"流程流转就像是warm\",{\"1\":{\"1670\":1,\"1716\":1}}],[\"流程流转管理\",{\"0\":{\"1670\":1,\"1716\":1}}],[\"流程流转\",{\"0\":{\"295\":1,\"445\":1,\"631\":1,\"816\":1,\"1010\":1,\"1233\":1,\"1514\":1,\"1646\":1,\"1706\":1}}],[\"流程流转到代表任务\",{\"1\":{\"118\":1,\"419\":1,\"604\":1,\"790\":1,\"983\":1,\"1203\":1,\"1385\":1}}],[\"流程结束的状态\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"流程完成\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"流程完成后\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"流程完成监听器结束\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"流程完成监听器\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"流程协作规则\",{\"0\":{\"232\":1,\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1,\"1451\":1}}],[\"流程协作\",{\"0\":{\"231\":1,\"1450\":1}}],[\"流程状态字段flow\",{\"1\":{\"1659\":1,\"1731\":1}}],[\"流程状态\",{\"0\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1},\"1\":{\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"304\":1,\"305\":1,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"453\":1,\"454\":1,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"639\":1,\"640\":1,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"824\":1,\"825\":1,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"1018\":1,\"1019\":1,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1242\":1,\"1243\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1523\":1,\"1524\":1}}],[\"流程状态改成字符串类型\",{\"1\":{\"154\":1,\"1560\":1}}],[\"流程编码\",{\"1\":{\"191\":1,\"303\":1,\"325\":1,\"452\":1,\"494\":1,\"638\":1,\"679\":1,\"823\":1,\"865\":1,\"1017\":1,\"1060\":1,\"1241\":1,\"1410\":1,\"1522\":1}}],[\"流程编码和流程版本\",{\"1\":{\"113\":1,\"414\":1,\"599\":1,\"785\":1,\"978\":1,\"1198\":1,\"1380\":1}}],[\"流程节点名称\",{\"1\":{\"305\":1,\"306\":1,\"454\":1,\"455\":1,\"640\":1,\"641\":1,\"825\":1,\"826\":1,\"1019\":1,\"1020\":1,\"1243\":1,\"1244\":1,\"1524\":1,\"1525\":1}}],[\"流程节点编码\",{\"1\":{\"305\":1,\"306\":1,\"454\":1,\"455\":1,\"640\":1,\"641\":1,\"825\":1,\"826\":1,\"1019\":1,\"1020\":1,\"1243\":1,\"1244\":1,\"1524\":1,\"1525\":1}}],[\"流程节点表\",{\"1\":{\"300\":1,\"301\":1,\"449\":1,\"450\":1,\"635\":1,\"636\":1,\"820\":1,\"821\":1,\"1014\":1,\"1015\":1,\"1238\":1,\"1239\":1,\"1519\":1,\"1520\":1}}],[\"流程节点和流程跳转数据\",{\"0\":{\"176\":1,\"481\":1,\"852\":1,\"1047\":1,\"1395\":1},\"1\":{\"179\":1,\"180\":1,\"484\":1,\"485\":1,\"855\":1,\"856\":1,\"1050\":1,\"1051\":1,\"1398\":1,\"1399\":1}}],[\"流程节点配置\",{\"0\":{\"14\":1,\"400\":1,\"585\":1,\"771\":1,\"964\":1,\"1180\":1,\"1281\":1}}],[\"流程配置文件改为表单填报方式\",{\"1\":{\"171\":1,\"1577\":1}}],[\"流程实例表\",{\"1\":{\"300\":1,\"301\":1,\"449\":1,\"450\":1,\"635\":1,\"636\":1,\"820\":1,\"821\":1,\"1014\":1,\"1015\":1,\"1238\":1,\"1239\":1,\"1519\":1,\"1520\":1}}],[\"流程实例表状态\",{\"1\":{\"57\":1,\"371\":1,\"540\":1,\"725\":1,\"911\":1,\"1110\":1,\"1324\":1}}],[\"流程实例三张表\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"流程实例就算完成\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"流程实例挂起后\",{\"1\":{\"196\":1,\"330\":1,\"499\":1,\"684\":1,\"870\":1,\"1065\":1,\"1415\":1}}],[\"流程实例不能存在相同的业务id\",{\"1\":{\"155\":1,\"1561\":1}}],[\"流程第三个节点为网关时无法渲染颜色\",{\"1\":{\"155\":1,\"1561\":1}}],[\"流程开启\",{\"1\":{\"155\":1,\"1561\":1}}],[\"流程开始监听器结束\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"流程开始监听器\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"流程复制克隆改set\",{\"1\":{\"149\":1,\"1555\":1}}],[\"流程定义表from\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"流程定义表\",{\"1\":{\"300\":1,\"301\":1,\"449\":1,\"450\":1,\"635\":1,\"636\":1,\"820\":1,\"821\":1,\"1014\":1,\"1015\":1,\"1238\":1,\"1239\":1,\"1519\":1,\"1520\":1}}],[\"流程定义的相关的三张表\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"流程定义时通过逗号隔开多个权限\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"流程定义挂起后\",{\"1\":{\"187\":1,\"323\":1,\"492\":1,\"677\":1,\"863\":1,\"1058\":1,\"1406\":1}}],[\"流程定义\",{\"1\":{\"179\":1,\"180\":1,\"484\":1,\"485\":1,\"855\":1,\"856\":1,\"1050\":1,\"1051\":1,\"1398\":1,\"1399\":1}}],[\"流程定义id\",{\"1\":{\"177\":1,\"178\":1,\"207\":1,\"306\":1,\"307\":1,\"340\":1,\"455\":1,\"456\":1,\"482\":1,\"483\":1,\"509\":1,\"641\":1,\"642\":1,\"667\":1,\"668\":1,\"694\":1,\"826\":1,\"827\":1,\"853\":1,\"854\":1,\"880\":1,\"1020\":1,\"1021\":1,\"1048\":1,\"1049\":1,\"1076\":1,\"1244\":1,\"1245\":1,\"1396\":1,\"1397\":1,\"1426\":1,\"1525\":1,\"1526\":1}}],[\"流程定义xml字符串\",{\"1\":{\"177\":2,\"178\":2,\"314\":1,\"482\":2,\"483\":2,\"667\":2,\"668\":2,\"853\":2,\"854\":2,\"1048\":2,\"1049\":2,\"1396\":2,\"1397\":2}}],[\"流程定义新增复制按钮\",{\"1\":{\"165\":1,\"1571\":1}}],[\"流程定义数据保存支持json格式\",{\"1\":{\"145\":1,\"1550\":1}}],[\"流程定义配置\",{\"0\":{\"15\":1,\"401\":1,\"586\":1,\"772\":1,\"965\":1,\"1181\":1,\"1282\":1}}],[\"流程引擎自身维护多租户和软删除实现\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"流程引擎自带流程图\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"流程设计和审批功能\",{\"1\":{\"121\":1,\"1388\":1}}],[\"流程设计\",{\"0\":{\"114\":1,\"415\":1,\"600\":1,\"786\":1,\"979\":1,\"1199\":1,\"1381\":1}}],[\"流程设计器开发\",{\"1\":{\"171\":1,\"1577\":1}}],[\"流程设计器新增快捷键支持\",{\"1\":{\"149\":1,\"1555\":1}}],[\"流程设计器\",{\"1\":{\"102\":1,\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1369\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1586\":1,\"1596\":1,\"1597\":1,\"1607\":1,\"1608\":1,\"1614\":1,\"1638\":1,\"1648\":1,\"1698\":1,\"1708\":1}}],[\"流程设计时\",{\"1\":{\"42\":1,\"1261\":1,\"1309\":1,\"1620\":1,\"1680\":1}}],[\"流程设计时未设置办理人或者ignore为true可不传\",{\"1\":{\"29\":1,\"192\":1,\"199\":1,\"866\":1,\"872\":1,\"1061\":1,\"1068\":1,\"1195\":1,\"1296\":1,\"1411\":1,\"1418\":1}}],[\"流程图管理就像warm\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"流程图管理\",{\"0\":{\"1671\":1,\"1717\":1}}],[\"流程图根据前端返回的节点坐标\",{\"1\":{\"385\":1,\"570\":1,\"756\":1,\"949\":1,\"1163\":1}}],[\"流程图结束节点显示为黑色\",{\"1\":{\"155\":1,\"1561\":1}}],[\"流程图渲染有问题\",{\"1\":{\"155\":1,\"1561\":1}}],[\"流程图查询异常处理\",{\"1\":{\"149\":1,\"1555\":1}}],[\"流程图清晰度调整\",{\"1\":{\"149\":1,\"1555\":1}}],[\"流程图合法性检验\",{\"1\":{\"142\":1,\"1548\":1}}],[\"流程图片中文乱码\",{\"0\":{\"132\":1,\"1538\":1}}],[\"流程图\",{\"0\":{\"385\":1,\"570\":1,\"756\":1,\"949\":1,\"1163\":1},\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"流程审批\",{\"1\":{\"83\":1,\"1350\":1}}],[\"流程跳转表\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"流程跳转\",{\"0\":{\"59\":1,\"192\":1,\"199\":1,\"326\":1,\"332\":1,\"373\":1,\"495\":1,\"501\":1,\"542\":1,\"680\":1,\"686\":1,\"727\":1,\"866\":1,\"872\":1,\"913\":1,\"1061\":1,\"1068\":1,\"1112\":1,\"1326\":1,\"1411\":1,\"1418\":1},\"1\":{\"192\":1,\"199\":1,\"326\":1,\"332\":1,\"495\":1,\"501\":1,\"680\":1,\"686\":1,\"866\":1,\"872\":1,\"1061\":1,\"1068\":1,\"1411\":1,\"1418\":1}}],[\"流程变量是全局都能获取\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"流程变量表达式支持替换集合\",{\"1\":{\"147\":1,\"1553\":1,\"1612\":1,\"1613\":1}}],[\"流程变量值\",{\"1\":{\"55\":1,\"1161\":1,\"1322\":1}}],[\"流程变量\",{\"0\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1},\"1\":{\"45\":1,\"48\":1,\"51\":1,\"55\":2,\"72\":1,\"78\":1,\"191\":1,\"192\":1,\"199\":1,\"207\":1,\"239\":1,\"310\":2,\"325\":1,\"326\":1,\"332\":1,\"340\":1,\"383\":1,\"467\":2,\"473\":1,\"476\":1,\"477\":1,\"494\":1,\"495\":1,\"501\":1,\"509\":1,\"568\":1,\"653\":2,\"659\":1,\"662\":1,\"663\":1,\"679\":1,\"680\":1,\"686\":1,\"694\":1,\"754\":1,\"838\":2,\"844\":1,\"847\":1,\"848\":1,\"865\":1,\"866\":1,\"872\":1,\"880\":1,\"947\":1,\"1032\":2,\"1038\":1,\"1041\":1,\"1042\":1,\"1060\":1,\"1061\":1,\"1068\":1,\"1076\":1,\"1102\":1,\"1148\":1,\"1151\":1,\"1161\":2,\"1256\":2,\"1264\":1,\"1267\":1,\"1312\":1,\"1315\":1,\"1318\":1,\"1322\":2,\"1339\":1,\"1345\":1,\"1410\":1,\"1411\":1,\"1418\":1,\"1426\":1,\"1458\":1,\"1529\":2,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"流程表\",{\"1\":{\"32\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1299\":1}}],[\"流程监听器和某个流程定义有关\",{\"1\":{\"391\":1,\"576\":1,\"762\":1,\"955\":1}}],[\"流程监听器和节点监听器\",{\"0\":{\"391\":1,\"576\":1,\"762\":1,\"955\":1}}],[\"流程监听器\",{\"0\":{\"15\":1,\"401\":1,\"586\":1,\"772\":1,\"965\":1,\"1181\":1,\"1282\":1},\"1\":{\"2\":2,\"154\":1,\"391\":1,\"576\":1,\"762\":1,\"955\":1,\"1168\":2,\"1269\":2,\"1560\":1}}],[\"达到一定通过率\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"达梦\",{\"1\":{\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1373\":1}}],[\"才算通过\",{\"1\":{\"277\":2,\"423\":2,\"608\":2,\"794\":2,\"987\":2,\"1207\":2,\"1214\":2,\"1496\":2}}],[\"无其他协作方式\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"无\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1,\"1656\":1,\"1658\":1,\"1661\":1,\"1728\":1,\"1730\":1,\"1733\":1}}],[\"协作人\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"协作类型\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"协作方式\",{\"1\":{\"115\":1,\"205\":1,\"304\":1,\"338\":1,\"416\":1,\"453\":1,\"507\":1,\"601\":1,\"639\":1,\"692\":1,\"787\":1,\"824\":1,\"878\":1,\"980\":1,\"1018\":1,\"1074\":1,\"1200\":1,\"1242\":1,\"1382\":1,\"1424\":1,\"1523\":1}}],[\"遇新网关重置\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"离上次最近的并行网关节点编码\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"结束监听器\",{\"1\":{\"1672\":1,\"1718\":1}}],[\"结束节点名称\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"结束节点不需要\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"结束节点\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"结果\",{\"1\":{\"239\":1,\"269\":1,\"270\":1,\"383\":1,\"564\":1,\"565\":1,\"568\":1,\"750\":1,\"751\":1,\"754\":1,\"935\":1,\"936\":1,\"947\":1,\"1102\":1,\"1136\":1,\"1137\":1,\"1148\":1,\"1458\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"驳回指向节点后还存在其他正在执行的待办任务\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"驳回\",{\"1\":{\"277\":1,\"279\":1,\"423\":1,\"425\":1,\"608\":1,\"610\":1,\"794\":1,\"796\":1,\"987\":1,\"989\":1,\"1207\":1,\"1209\":1,\"1214\":1,\"1216\":1,\"1496\":1,\"1498\":1}}],[\"驳回流程\",{\"0\":{\"120\":1,\"421\":1,\"606\":1,\"792\":1,\"985\":1,\"1205\":1,\"1387\":1}}],[\"暂存\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"抄送\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"发起人操作\",{\"1\":{\"429\":1}}],[\"发起人可催办提醒当前节点处理人\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"发布流程\",{\"0\":{\"293\":1,\"443\":1,\"629\":1,\"814\":1,\"1008\":1,\"1231\":1,\"1512\":1,\"1644\":1,\"1704\":1},\"1\":{\"1670\":1,\"1716\":1}}],[\"发布流程定义\",{\"1\":{\"182\":1,\"318\":1,\"487\":1,\"672\":1,\"858\":1,\"1053\":1,\"1401\":1}}],[\"发布\",{\"0\":{\"182\":1,\"318\":1,\"487\":1,\"672\":1,\"858\":1,\"1053\":1,\"1401\":1}}],[\"催办\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"回退驳回率\",{\"1\":{\"428\":2,\"613\":2,\"799\":2,\"992\":2,\"1212\":2,\"1219\":2}}],[\"回退\",{\"1\":{\"276\":1,\"428\":5,\"429\":1,\"613\":5,\"614\":1,\"799\":5,\"800\":1,\"992\":5,\"993\":1,\"1212\":5,\"1213\":1,\"1219\":5,\"1495\":1}}],[\"术语解释\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"术语\",{\"0\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1},\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"术语规则\",{\"0\":{\"276\":1,\"1213\":1,\"1495\":1}}],[\"号\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"序\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"序列化所有long类型\",{\"1\":{\"131\":1,\"1537\":1}}],[\"序列化位字符串\",{\"1\":{\"131\":1,\"1537\":1}}],[\"求助其他人审批\",{\"1\":{\"273\":1,\"276\":1,\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1492\":1,\"1495\":1,\"1496\":1}}],[\"变量替换类型\",{\"1\":{\"477\":1,\"663\":1,\"848\":1,\"1042\":1}}],[\"变量替换时机\",{\"0\":{\"42\":1,\"470\":1,\"656\":1,\"841\":1,\"1035\":1,\"1261\":1,\"1309\":1}}],[\"变更支持的类型\",{\"0\":{\"273\":1,\"1492\":1}}],[\"要求重新处理\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"要和后端yml中配置一致\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"要与\",{\"1\":{\"21\":2,\"406\":2,\"591\":2,\"777\":2,\"970\":2,\"1187\":2,\"1288\":2}}],[\"多个人可以同时处理\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"多个token用逗号分隔\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"多租户和逻辑删除\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"多租户字段隔离提供全局配置\",{\"1\":{\"159\":1,\"1565\":1}}],[\"多租户与软删除\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"多租户插件\",{\"1\":{\"33\":2,\"462\":2,\"648\":2,\"833\":2,\"1027\":2,\"1251\":2,\"1300\":2}}],[\"多租户\",{\"0\":{\"30\":1,\"459\":1,\"645\":1,\"830\":1,\"1024\":1,\"1248\":1,\"1297\":1}}],[\"每次请求会把token\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"每年还会发放idea正版授权\",{\"1\":{\"91\":1,\"1358\":1}}],[\"追加\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"共享后端权限\",{\"0\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"左侧树父级id\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"左侧树名称\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"左侧树id\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"左侧隐藏\",{\"1\":{\"148\":1,\"1554\":1}}],[\"构建工具\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"构建树状结构\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"构建信创\",{\"1\":{\"83\":2,\"1350\":2}}],[\"权限监听器\",{\"1\":{\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1}}],[\"权限人\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"权限类型\",{\"1\":{\"277\":1,\"306\":1,\"423\":1,\"455\":1,\"608\":1,\"641\":1,\"794\":1,\"826\":1,\"987\":1,\"1020\":1,\"1207\":1,\"1214\":1,\"1244\":1,\"1496\":1,\"1525\":1}}],[\"权限标识\",{\"1\":{\"277\":2,\"306\":2,\"423\":2,\"455\":2,\"608\":2,\"641\":2,\"794\":2,\"826\":2,\"987\":2,\"1020\":2,\"1207\":2,\"1214\":2,\"1244\":2,\"1496\":2,\"1525\":2}}],[\"权限名称\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"权限编码\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"给任务节点设置哪些权限的人可以办理\",{\"1\":{\"266\":1,\"561\":1,\"747\":1,\"932\":1,\"1133\":1,\"1485\":1,\"1582\":1,\"1593\":1,\"1604\":1,\"1635\":1,\"1695\":1}}],[\"字段\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"字段填充\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"字典数据\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"`http\",{\"1\":{\"743\":1,\"744\":1}}],[\"`\",{\"1\":{\"262\":2,\"263\":2,\"557\":2,\"558\":2,\"743\":2,\"744\":2,\"928\":2,\"929\":2,\"1129\":2,\"1130\":2,\"1481\":2,\"1482\":2}}],[\"例如\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"首先要建立仓库\",{\"0\":{\"1626\":1,\"1686\":1}}],[\"首先\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"首先传入设计器需要的流程定义definitionid和是否可编辑disabled参数\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"首次导入\",{\"1\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"首页\",{\"0\":{\"0\":1}}],[\"除上面外的所有请求全部需要鉴权认证\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"静态资源\",{\"1\":{\"258\":1,\"259\":1,\"553\":1,\"554\":1,\"738\":1,\"739\":1,\"924\":1,\"925\":1,\"1125\":1,\"1126\":1,\"1477\":1,\"1478\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"放行配置\",{\"0\":{\"258\":1,\"259\":1,\"260\":1,\"553\":1,\"554\":1,\"555\":1,\"738\":1,\"739\":1,\"740\":1,\"924\":1,\"925\":1,\"926\":1,\"1125\":1,\"1126\":1,\"1127\":1,\"1477\":1,\"1478\":1,\"1479\":1}}],[\"放弃js引擎\",{\"1\":{\"171\":1,\"1577\":1}}],[\"否则无法访问\",{\"1\":{\"257\":1,\"552\":1,\"737\":1,\"923\":1,\"1124\":1,\"1476\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"否则无法访问业务系统\",{\"1\":{\"63\":1,\"940\":1,\"1141\":1,\"1330\":1}}],[\"引入可能会显得过于复杂\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"引入\",{\"0\":{\"262\":1,\"263\":1,\"264\":1,\"557\":1,\"558\":1,\"559\":1,\"743\":1,\"744\":1,\"745\":1,\"928\":1,\"929\":1,\"930\":1,\"1129\":1,\"1130\":1,\"1131\":1,\"1481\":1,\"1482\":1,\"1483\":1}}],[\"引入依赖\",{\"0\":{\"254\":1,\"551\":1,\"736\":1,\"922\":1,\"1121\":1,\"1473\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1632\":1,\"1692\":1}}],[\"引入日志门面\",{\"1\":{\"162\":1,\"1568\":1}}],[\"事务隔离级别\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"事件\",{\"1\":{\"142\":1,\"1548\":1}}],[\"填充器也可通过代码方式注入\",{\"1\":{\"1673\":1,\"1719\":1}}],[\"填充器\",{\"0\":{\"375\":1,\"544\":1,\"729\":1,\"915\":1},\"1\":{\"242\":1,\"245\":1,\"251\":1,\"366\":1,\"369\":1,\"379\":1,\"535\":1,\"538\":1,\"548\":1,\"720\":1,\"723\":1,\"733\":1,\"906\":1,\"909\":1,\"919\":1,\"1105\":1,\"1108\":1,\"1118\":1,\"1461\":1,\"1464\":1,\"1470\":1,\"1673\":1,\"1719\":1}}],[\"最新版本集成方式请看官方文档\",{\"1\":{\"1631\":1,\"1691\":1}}],[\"最终返回图片给前端展示\",{\"1\":{\"385\":1,\"570\":1,\"756\":1,\"949\":1,\"1163\":1}}],[\"最终军事演练完成\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"最终为\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1}}],[\"最主要限制\",{\"1\":{\"280\":1,\"281\":1,\"426\":1,\"427\":1,\"611\":1,\"612\":1,\"797\":1,\"798\":1,\"990\":1,\"991\":1,\"1210\":1,\"1211\":1,\"1217\":1,\"1218\":1,\"1499\":1,\"1500\":1}}],[\"最后的zzz为变量值\",{\"1\":{\"239\":1,\"1102\":1,\"1458\":1}}],[\"最大最小值\",{\"1\":{\"131\":1,\"1537\":1}}],[\"常规增删改查可以通过注入方式\",{\"1\":{\"408\":1,\"593\":1,\"779\":1,\"972\":1}}],[\"常规匹配规则\",{\"1\":{\"239\":1,\"1102\":1,\"1458\":1}}],[\"常见问题\",{\"0\":{\"130\":1,\"1536\":1}}],[\"小于等于\",{\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"小于\",{\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"等于\",{\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"等待作者评审\",{\"0\":{\"100\":1,\"1367\":1}}],[\"抉择是执行哪个分支\",{\"1\":{\"237\":1,\"1100\":1,\"1456\":1}}],[\"排序字段\",{\"1\":{\"228\":1,\"229\":1,\"230\":1,\"361\":1,\"362\":1,\"363\":1,\"530\":1,\"531\":1,\"532\":1,\"715\":1,\"716\":1,\"717\":1,\"901\":1,\"902\":1,\"903\":1,\"1097\":1,\"1098\":1,\"1099\":1,\"1447\":1,\"1448\":1,\"1449\":1}}],[\"排查下接口就行或者对象就行\",{\"1\":{\"139\":1,\"1545\":1}}],[\"批量更新\",{\"0\":{\"224\":1,\"357\":1,\"526\":1,\"711\":1,\"897\":1,\"1093\":1,\"1443\":1},\"1\":{\"224\":1,\"357\":1,\"526\":1,\"711\":1,\"897\":1,\"1093\":1,\"1443\":1}}],[\"批量新增\",{\"0\":{\"222\":1,\"223\":1,\"355\":1,\"356\":1,\"524\":1,\"525\":1,\"709\":1,\"710\":1,\"895\":1,\"896\":1,\"1091\":1,\"1092\":1,\"1441\":1,\"1442\":1},\"1\":{\"222\":1,\"223\":1,\"355\":1,\"356\":1,\"524\":1,\"525\":1,\"709\":1,\"710\":1,\"895\":1,\"896\":1,\"1091\":1,\"1092\":1,\"1441\":1,\"1442\":1}}],[\"插入大小\",{\"1\":{\"223\":1,\"356\":1,\"525\":1,\"710\":1,\"896\":1,\"1092\":1,\"1442\":1}}],[\"判断要执行哪个分支\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"判断大于等4\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"判断是否存在\",{\"0\":{\"216\":1,\"349\":1,\"518\":1,\"703\":1,\"889\":1,\"1085\":1,\"1435\":1},\"1\":{\"216\":1,\"349\":1,\"518\":1,\"703\":1,\"889\":1,\"1085\":1,\"1435\":1}}],[\"判空错误\",{\"1\":{\"159\":1,\"1565\":1}}],[\"主键id\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"主键集合\",{\"1\":{\"210\":1,\"343\":1,\"512\":1,\"697\":1,\"883\":1,\"1079\":1,\"1429\":1}}],[\"主键\",{\"1\":{\"209\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"342\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"511\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"696\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"882\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1078\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1428\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"公共api接口\",{\"0\":{\"208\":1,\"341\":1,\"510\":1,\"695\":1,\"881\":1,\"1077\":1,\"1427\":1}}],[\"公司内部oa办公系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"公司使用列表\",{\"0\":{\"83\":1,\"1350\":1}}],[\"减签\",{\"0\":{\"204\":1,\"337\":1,\"506\":1,\"691\":1,\"877\":1,\"1073\":1,\"1423\":1},\"1\":{\"204\":1,\"205\":1,\"273\":1,\"275\":2,\"276\":1,\"277\":1,\"337\":1,\"338\":1,\"423\":1,\"429\":1,\"506\":1,\"507\":1,\"608\":1,\"614\":1,\"691\":1,\"692\":1,\"794\":1,\"800\":1,\"877\":1,\"878\":1,\"987\":1,\"993\":1,\"1073\":1,\"1074\":1,\"1207\":1,\"1213\":1,\"1214\":1,\"1423\":1,\"1424\":1,\"1492\":1,\"1494\":2,\"1495\":1,\"1496\":1}}],[\"减少办理人\",{\"1\":{\"204\":2,\"205\":1,\"337\":1,\"338\":1,\"506\":2,\"507\":1,\"691\":1,\"692\":1,\"877\":2,\"878\":1,\"1073\":2,\"1074\":1,\"1423\":2,\"1424\":1}}],[\"减少人为错误\",{\"1\":{\"105\":1,\"1372\":1}}],[\"减少繁琐代码搬运和适配\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"委托\",{\"1\":{\"205\":2,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":2,\"507\":2,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":2,\"878\":2,\"1074\":2,\"1424\":2}}],[\"委托对象\",{\"1\":{\"202\":1,\"504\":1,\"875\":1,\"1071\":1,\"1421\":1}}],[\"委派后\",{\"1\":{\"202\":1,\"504\":1,\"875\":1,\"1071\":1,\"1421\":1}}],[\"委派\",{\"0\":{\"202\":1,\"335\":1,\"504\":1,\"689\":1,\"875\":1,\"1071\":1,\"1421\":1},\"1\":{\"147\":1,\"149\":1,\"202\":1,\"273\":1,\"275\":2,\"276\":1,\"277\":1,\"335\":1,\"423\":1,\"429\":1,\"504\":1,\"608\":1,\"614\":1,\"689\":1,\"794\":1,\"800\":1,\"875\":1,\"987\":1,\"993\":1,\"1071\":1,\"1207\":1,\"1213\":1,\"1214\":1,\"1421\":1,\"1492\":1,\"1494\":2,\"1495\":1,\"1496\":1,\"1553\":1,\"1555\":1,\"1613\":1,\"1654\":1,\"1726\":1}}],[\"委派和加减签\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"挂起实例\",{\"0\":{\"196\":1,\"330\":1,\"499\":1,\"684\":1,\"870\":1,\"1065\":1,\"1415\":1},\"1\":{\"196\":1,\"330\":1,\"499\":1,\"684\":1,\"870\":1,\"1065\":1,\"1415\":1}}],[\"挂起流程\",{\"0\":{\"187\":1,\"323\":1,\"492\":1,\"677\":1,\"863\":1,\"1058\":1,\"1406\":1},\"1\":{\"187\":1,\"323\":1,\"492\":1,\"677\":1,\"863\":1,\"1058\":1,\"1406\":1}}],[\"忽略生成文档中的错误\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"忽略\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"338\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"692\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"预留给业务系统使用\",{\"1\":{\"191\":1,\"305\":1,\"325\":1,\"454\":1,\"494\":1,\"640\":1,\"679\":1,\"825\":1,\"865\":1,\"1019\":1,\"1060\":1,\"1243\":1,\"1410\":1,\"1524\":1}}],[\"预算审批等\",{\"1\":{\"105\":1,\"1372\":1}}],[\"建议传\",{\"1\":{\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1}}],[\"相关的流程实例都无法继续流转\",{\"1\":{\"187\":1,\"323\":1,\"492\":1,\"677\":1,\"863\":1,\"1058\":1,\"1406\":1}}],[\"激活实例\",{\"0\":{\"195\":1,\"329\":1,\"498\":1,\"683\":1,\"869\":1,\"1064\":1,\"1414\":1},\"1\":{\"195\":1,\"329\":1,\"498\":1,\"683\":1,\"869\":1,\"1064\":1,\"1414\":1}}],[\"激活流程\",{\"0\":{\"186\":1,\"322\":1,\"491\":1,\"676\":1,\"862\":1,\"1057\":1,\"1405\":1},\"1\":{\"186\":1,\"322\":1,\"491\":1,\"676\":1,\"862\":1,\"1057\":1,\"1405\":1}}],[\"激活和挂起\",{\"1\":{\"155\":1,\"1561\":1}}],[\"必须先流转到网关节点\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"必须放到第一位\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"必传\",{\"1\":{\"177\":2,\"191\":1,\"192\":1,\"199\":1,\"201\":2,\"202\":2,\"203\":2,\"204\":2,\"207\":3,\"325\":1,\"326\":1,\"332\":1,\"334\":4,\"335\":4,\"336\":4,\"337\":4,\"340\":3,\"342\":1,\"343\":1,\"344\":2,\"345\":1,\"346\":2,\"347\":1,\"348\":1,\"349\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":2,\"357\":1,\"361\":1,\"362\":1,\"363\":1,\"482\":2,\"494\":1,\"495\":1,\"501\":1,\"503\":3,\"504\":3,\"505\":3,\"506\":3,\"509\":3,\"667\":2,\"679\":1,\"680\":1,\"686\":1,\"688\":4,\"689\":4,\"690\":4,\"691\":4,\"694\":3,\"853\":2,\"865\":1,\"866\":1,\"872\":1,\"874\":3,\"875\":3,\"876\":3,\"877\":3,\"880\":3,\"1048\":2,\"1060\":1,\"1061\":1,\"1068\":1,\"1070\":2,\"1071\":2,\"1072\":2,\"1073\":2,\"1076\":3,\"1396\":2,\"1410\":1,\"1411\":1,\"1418\":1,\"1420\":2,\"1421\":2,\"1422\":2,\"1423\":2,\"1426\":3}}],[\"保存流程定义\",{\"0\":{\"314\":1,\"667\":1,\"668\":1}}],[\"保存流程定义数据\",{\"1\":{\"313\":1,\"314\":1,\"666\":1,\"667\":1,\"668\":1}}],[\"保存流程节点和流程跳转数据\",{\"0\":{\"177\":1,\"178\":1,\"482\":1,\"483\":1,\"853\":1,\"854\":1,\"1048\":1,\"1049\":1,\"1396\":1,\"1397\":1}}],[\"保存下一个节点办理人时\",{\"1\":{\"157\":1,\"1563\":1}}],[\"校验后新增\",{\"1\":{\"174\":1,\"175\":1,\"480\":1,\"851\":1,\"1045\":1,\"1046\":1,\"1393\":1,\"1394\":1}}],[\"校验节点是否发布\",{\"1\":{\"155\":1,\"1561\":1}}],[\"核心api\",{\"0\":{\"172\":1,\"311\":1,\"478\":1,\"664\":1,\"849\":1,\"1043\":1,\"1391\":1}}],[\"整理流程表\",{\"1\":{\"171\":1,\"1577\":1}}],[\"整个系统只有一个\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"原本的我发起\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"原组件使用snack3库\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"原生提供分页查询\",{\"1\":{\"171\":1,\"1577\":1}}],[\"原生提供排序\",{\"1\":{\"171\":1,\"1577\":1}}],[\"原全局监听器改名为流程监听器\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"抽离spring生态依赖\",{\"1\":{\"171\":1,\"1577\":1}}],[\"抽离公共方法\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"或签待办权限支持个人\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"或签\",{\"0\":{\"234\":1,\"1453\":1},\"1\":{\"171\":1,\"232\":1,\"276\":2,\"428\":1,\"429\":1,\"613\":1,\"614\":1,\"799\":1,\"800\":1,\"992\":1,\"993\":1,\"1212\":1,\"1213\":1,\"1219\":1,\"1451\":1,\"1495\":2,\"1577\":1}}],[\"或者直接通过后端接口访问该地址\",{\"1\":{\"741\":1,\"1592\":1}}],[\"或者工具类获取service\",{\"1\":{\"408\":1,\"593\":1,\"779\":1,\"972\":1}}],[\"或者\",{\"1\":{\"277\":1,\"278\":1,\"423\":1,\"424\":1,\"608\":1,\"609\":1,\"794\":1,\"795\":1,\"987\":1,\"988\":1,\"1207\":1,\"1208\":1,\"1214\":1,\"1215\":1,\"1496\":1,\"1497\":1}}],[\"或者前端直接访问后端接口\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"或者优化页面配置\",{\"1\":{\"147\":1,\"1553\":1}}],[\"或者加上排除配置spring\",{\"1\":{\"134\":1,\"1540\":1}}],[\"或者做的过程中遇到了什么问题\",{\"1\":{\"89\":1,\"1356\":1}}],[\"或者是项目的功能异常\",{\"1\":{\"87\":1,\"1354\":1}}],[\"或者src\",{\"1\":{\"66\":1,\"943\":1,\"1144\":1,\"1333\":1}}],[\"或者节点监听器\",{\"1\":{\"9\":1,\"10\":1,\"395\":1,\"396\":1,\"580\":1,\"581\":1,\"766\":1,\"767\":1,\"959\":1,\"960\":1,\"1175\":1,\"1176\":1,\"1276\":1,\"1277\":1}}],[\"互斥网关按照跳转条件流转\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"互斥网关\",{\"1\":{\"171\":1,\"1577\":1}}],[\"互斥和并行网关\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"美化后台返回的流程图\",{\"1\":{\"168\":1,\"1574\":1}}],[\"跳转流程\",{\"1\":{\"1670\":1,\"1716\":1}}],[\"跳转名称\",{\"1\":{\"307\":1,\"456\":1,\"642\":1,\"827\":1,\"1021\":1,\"1245\":1,\"1526\":1}}],[\"跳转到指定节点\",{\"1\":{\"295\":1,\"445\":1,\"631\":1,\"816\":1,\"1010\":1,\"1233\":1,\"1514\":1,\"1646\":1,\"1706\":1}}],[\"跳转节点\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"跳转条件\",{\"1\":{\"277\":1,\"307\":1,\"423\":1,\"456\":1,\"608\":1,\"642\":1,\"794\":1,\"827\":1,\"987\":1,\"1021\":1,\"1207\":1,\"1214\":1,\"1245\":1,\"1496\":1,\"1526\":1}}],[\"跳转条件获取方式变更为流程变量\",{\"1\":{\"165\":1,\"1571\":1}}],[\"跳转类型\",{\"1\":{\"116\":1,\"192\":1,\"199\":1,\"207\":1,\"277\":1,\"307\":1,\"326\":1,\"332\":1,\"340\":1,\"417\":1,\"423\":1,\"456\":1,\"495\":1,\"501\":1,\"509\":1,\"602\":1,\"608\":1,\"642\":1,\"680\":1,\"686\":1,\"694\":1,\"788\":1,\"794\":1,\"827\":1,\"866\":1,\"872\":1,\"880\":1,\"981\":1,\"987\":1,\"1021\":1,\"1061\":1,\"1068\":1,\"1076\":1,\"1201\":1,\"1207\":1,\"1214\":1,\"1245\":1,\"1383\":1,\"1411\":1,\"1418\":1,\"1426\":1,\"1496\":1,\"1526\":1}}],[\"补齐sql脚本\",{\"1\":{\"165\":1,\"1571\":1}}],[\"枚举扩展getbykey方法\",{\"1\":{\"162\":1,\"1568\":1}}],[\"考虑流程终止功能\",{\"1\":{\"161\":1,\"1567\":1}}],[\"启动流程时\",{\"1\":{\"160\":1,\"1566\":1}}],[\"调整表名和字段名\",{\"1\":{\"171\":1,\"1577\":1}}],[\"调整实例类结构\",{\"1\":{\"162\":1,\"1568\":1}}],[\"调整mybatis\",{\"1\":{\"157\":1,\"1563\":1}}],[\"调整扩展包配置\",{\"1\":{\"157\":1,\"1563\":1}}],[\"调整条件\",{\"1\":{\"116\":1,\"417\":1,\"602\":1,\"788\":1,\"981\":1,\"1201\":1,\"1383\":1}}],[\"升级到新版本可能需要投入一定的时间和资源\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"升级指南\",{\"0\":{\"1651\":1,\"1723\":1}}],[\"升级dom4j为安全版本2\",{\"1\":{\"155\":1,\"1561\":1}}],[\"升级版本\",{\"1\":{\"98\":1,\"1365\":1}}],[\"解放军执行第一个任务\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"解偶orm操作\",{\"1\":{\"169\":1,\"1575\":1}}],[\"解偶orm\",{\"1\":{\"167\":1,\"1573\":1}}],[\"解决思路\",{\"0\":{\"1620\":1,\"1680\":1}}],[\"解决\",{\"1\":{\"155\":1,\"1561\":1}}],[\"解析\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"符号\",{\"1\":{\"155\":1,\"1561\":1}}],[\"处于非结束节点\",{\"1\":{\"155\":1,\"1561\":1}}],[\"处理完后进入下一节点\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"处理完后回到当前处理人手中\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"处理完成之后将处理结果抄送给其他人\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"处理器路径\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"处理器类型\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"处理\",{\"1\":{\"131\":1,\"1537\":1}}],[\"处理长度过长的long类型\",{\"1\":{\"131\":1,\"1537\":1}}],[\"完善流程设计器和流程图\",{\"1\":{\"171\":1,\"1577\":1}}],[\"完善sql\",{\"1\":{\"166\":1,\"1572\":1}}],[\"完善文档\",{\"1\":{\"163\":1,\"165\":1,\"1569\":1,\"1571\":1}}],[\"完善mybatis\",{\"1\":{\"155\":1,\"1561\":1}}],[\"完成时间\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"完成后进入下一节点\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"完成社区发布的两项复杂任务\",{\"1\":{\"90\":1,\"1357\":1}}],[\"完成和创建时期执行\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"完成监听器结束\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"完成监听器实现类例子\",{\"0\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"完成监听器\",{\"1\":{\"3\":1,\"8\":1,\"16\":1,\"310\":1,\"390\":1,\"394\":1,\"467\":1,\"575\":1,\"579\":1,\"653\":1,\"761\":1,\"765\":1,\"838\":1,\"954\":1,\"958\":1,\"1032\":1,\"1169\":1,\"1174\":1,\"1182\":1,\"1256\":1,\"1270\":1,\"1275\":1,\"1283\":1,\"1529\":1}}],[\"代理到后端需要vue\",{\"1\":{\"743\":1}}],[\"代理配置\",{\"0\":{\"742\":1}}],[\"代理成后端接口\",{\"1\":{\"741\":1,\"1592\":1}}],[\"代办改为待办\",{\"1\":{\"155\":1,\"1561\":1}}],[\"代码示例\",{\"0\":{\"275\":1,\"291\":1,\"441\":1,\"627\":1,\"812\":1,\"1006\":1,\"1229\":1,\"1494\":1,\"1510\":1}}],[\"代码详情\",{\"1\":{\"131\":2,\"136\":1,\"1537\":2,\"1542\":1}}],[\"代码量少\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"代码风格相关无影响运行结果的\",{\"1\":{\"98\":1,\"1365\":1}}],[\"代码地址\",{\"1\":{\"83\":1,\"1350\":1}}],[\"移除节点前置执行权限处理器\",{\"1\":{\"155\":1,\"1561\":1}}],[\"移除权限监听器\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"全英文注释\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"全部提供可接受外部传入\",{\"1\":{\"155\":1,\"1561\":1}}],[\"全局搜索org\",{\"1\":{\"1652\":1,\"1724\":1}}],[\"全局租户处理器\",{\"1\":{\"35\":1,\"36\":1,\"37\":1,\"242\":1,\"243\":2,\"245\":1,\"246\":1,\"366\":1,\"367\":2,\"369\":1,\"370\":1,\"464\":1,\"465\":1,\"466\":1,\"535\":1,\"536\":2,\"538\":1,\"539\":1,\"650\":1,\"651\":1,\"652\":1,\"720\":1,\"721\":2,\"723\":1,\"724\":1,\"835\":1,\"836\":1,\"837\":1,\"906\":1,\"907\":2,\"909\":1,\"910\":1,\"1029\":1,\"1030\":1,\"1031\":1,\"1105\":1,\"1106\":2,\"1108\":1,\"1109\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1461\":1,\"1462\":2,\"1464\":1,\"1465\":1,\"1673\":2,\"1719\":2}}],[\"全局配置\",{\"1\":{\"21\":1,\"406\":1,\"591\":1,\"777\":1,\"970\":1,\"1187\":1,\"1288\":1}}],[\"全局创建监听器执行结束\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局创建监听器开始执行\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局完成监听器执行结束\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局完成监听器开始执行\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局分派监听器执行结束\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局分派监听器开始执行\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局开始监听器执行结束\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局开始监听器开始执行\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"全局监听器\",{\"0\":{\"16\":1,\"1182\":1,\"1283\":1},\"1\":{\"2\":2,\"16\":2,\"1168\":2,\"1182\":2,\"1269\":2,\"1283\":2}}],[\"之前所有保存流程状态地方\",{\"1\":{\"155\":1,\"1561\":1}}],[\"之前强依赖流程状态的通过的\",{\"1\":{\"155\":1,\"1561\":1}}],[\"疯狂的狮子li\",{\"1\":{\"155\":1,\"1561\":1}}],[\"记录跳转类型\",{\"1\":{\"155\":1,\"1561\":1}}],[\"记录待办任务需要显示的待办信息页面\",{\"1\":{\"113\":1,\"414\":1,\"599\":1,\"785\":1,\"978\":1,\"1198\":1,\"1380\":1}}],[\"测试代码warm\",{\"1\":{\"441\":1,\"812\":1}}],[\"测试模块拆分独立仓库\",{\"1\":{\"154\":1,\"1560\":1}}],[\"测试检测平台\",{\"1\":{\"83\":1,\"1350\":1}}],[\"历史背景\",{\"0\":{\"1667\":1,\"1713\":1}}],[\"历史任务记录表\",{\"1\":{\"301\":1,\"450\":1,\"636\":1,\"821\":1,\"1015\":1,\"1239\":1,\"1520\":1}}],[\"历史任务表\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"历史任务表流程状态支持外部传入\",{\"1\":{\"153\":1,\"1559\":1}}],[\"历史任务表状态\",{\"1\":{\"57\":1,\"371\":1,\"540\":1,\"725\":1,\"911\":1,\"1110\":1,\"1324\":1}}],[\"历史记录状态为审批通过\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"历史记录状态无效\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"历史记录表新增ext扩展字段\",{\"1\":{\"157\":1,\"1563\":1}}],[\"历史记录改为单条保存\",{\"1\":{\"152\":1,\"1558\":1}}],[\"历史数据考虑如何处理\",{\"1\":{\"155\":1,\"1561\":1}}],[\"历史表新增跳转类型\",{\"1\":{\"155\":1,\"1561\":1}}],[\"替换为org\",{\"1\":{\"1652\":1,\"1724\":1}}],[\"替换异常类\",{\"1\":{\"155\":1,\"1561\":1}}],[\"替换和spel\",{\"1\":{\"152\":1,\"1558\":1}}],[\"替换集合\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"取消发布流程定义\",{\"1\":{\"183\":1,\"319\":1,\"488\":1,\"673\":1,\"859\":1,\"1054\":1,\"1402\":1}}],[\"取消发布\",{\"0\":{\"183\":1,\"319\":1,\"488\":1,\"673\":1,\"859\":1,\"1054\":1,\"1402\":1}}],[\"取更新时间\",{\"1\":{\"150\":1,\"1556\":1}}],[\"取回重办\",{\"1\":{\"429\":1}}],[\"取回\",{\"1\":{\"145\":1,\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1,\"1550\":1}}],[\"撤销\",{\"1\":{\"429\":1,\"614\":1,\"800\":1}}],[\"撤销和取回\",{\"1\":{\"149\":1,\"1555\":1}}],[\"撤销修改\",{\"1\":{\"98\":1,\"1365\":1}}],[\"作为新时代的程序员不能固步自封\",{\"1\":{\"1675\":1,\"1721\":1}}],[\"作为工作流引擎\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"作废\",{\"1\":{\"149\":1,\"1555\":1}}],[\"作者介绍\",{\"0\":{\"1666\":1,\"1712\":1}}],[\"作者提供作者私人服务\",{\"1\":{\"127\":1,\"1533\":1}}],[\"作者\",{\"1\":{\"121\":1,\"1388\":1}}],[\"作者声明等\",{\"1\":{\"104\":1,\"1371\":1}}],[\"作者会关注到\",{\"1\":{\"90\":2,\"1357\":2}}],[\"作者会经常在issue里发布需求认领\",{\"1\":{\"89\":1,\"1356\":1}}],[\"作者每天都在盯着star\",{\"1\":{\"86\":1,\"1353\":1}}],[\"统一修复分页bug\",{\"1\":{\"148\":2,\"1554\":2}}],[\"没有左侧树状选择数据时\",{\"1\":{\"148\":1,\"1554\":1}}],[\"区分\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1,\"1652\":1,\"1724\":1}}],[\"加载设计器\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"加载handler取消懒加载\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"加签对象\",{\"1\":{\"203\":1,\"505\":1,\"876\":1,\"1072\":1,\"1422\":1}}],[\"加签\",{\"0\":{\"203\":1,\"336\":1,\"505\":1,\"690\":1,\"876\":1,\"1072\":1,\"1422\":1},\"1\":{\"203\":1,\"205\":1,\"273\":1,\"275\":2,\"276\":1,\"277\":1,\"334\":1,\"335\":1,\"336\":2,\"337\":1,\"338\":1,\"423\":1,\"429\":1,\"505\":1,\"507\":1,\"608\":1,\"614\":1,\"688\":1,\"689\":1,\"690\":2,\"691\":1,\"692\":1,\"794\":1,\"800\":1,\"876\":1,\"878\":1,\"987\":1,\"993\":1,\"1072\":1,\"1074\":1,\"1207\":1,\"1213\":1,\"1214\":1,\"1422\":1,\"1424\":1,\"1492\":1,\"1494\":2,\"1495\":1,\"1496\":1}}],[\"加签和减签方法\",{\"1\":{\"149\":1,\"1555\":1,\"1654\":1,\"1726\":1}}],[\"加签和减签\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"加减签\",{\"1\":{\"158\":1,\"1564\":1}}],[\"加群扫码\",{\"1\":{\"126\":1,\"1532\":1}}],[\"加群联系作者详谈\",{\"1\":{\"108\":1,\"1375\":1}}],[\"已回退人数\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"已审批人数\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"已开启的流程实例id\",{\"1\":{\"294\":1,\"444\":1,\"630\":1,\"815\":1,\"1009\":1,\"1232\":1,\"1513\":1,\"1645\":1,\"1705\":1}}],[\"已部署流程的id\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1703\":1}}],[\"已完成\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"已办任务和任务记录\",{\"1\":{\"171\":1,\"1577\":1}}],[\"已挪到业务系统中\",{\"1\":{\"162\":1,\"1568\":1}}],[\"已经开启过审批任务的不可取消发布和删除\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"已申请软著\",{\"1\":{\"104\":1,\"1371\":1}}],[\"局部监听器改名为节点监听器\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"查询用户列表\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"查询部门列表\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"查询角色列表\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"查询条件\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"查询参数\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"查询一条记录\",{\"0\":{\"214\":1,\"347\":1,\"516\":1,\"701\":1,\"887\":1,\"1083\":1,\"1433\":1},\"1\":{\"214\":1,\"347\":1,\"516\":1,\"701\":1,\"887\":1,\"1083\":1,\"1433\":1}}],[\"查询代理层处理\",{\"1\":{\"213\":1,\"346\":1,\"515\":1,\"700\":1,\"886\":1,\"1082\":1,\"1432\":1}}],[\"查询列表\",{\"0\":{\"212\":1,\"213\":1,\"345\":1,\"346\":1,\"514\":1,\"515\":1,\"699\":1,\"700\":1,\"885\":1,\"886\":1,\"1081\":1,\"1082\":1,\"1431\":1,\"1432\":1},\"1\":{\"212\":1,\"213\":1,\"345\":1,\"346\":1,\"514\":1,\"515\":1,\"699\":1,\"700\":1,\"885\":1,\"886\":1,\"1081\":1,\"1082\":1,\"1431\":1,\"1432\":1}}],[\"查询实体\",{\"1\":{\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"348\":1,\"349\":1,\"513\":1,\"514\":1,\"515\":1,\"516\":1,\"517\":1,\"518\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"703\":1,\"884\":1,\"885\":1,\"886\":1,\"887\":1,\"888\":1,\"889\":1,\"1080\":1,\"1081\":1,\"1082\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1}}],[\"查询流程实例集合\",{\"0\":{\"197\":1,\"1066\":1,\"1416\":1},\"1\":{\"197\":1,\"1066\":1,\"1416\":1}}],[\"查询流程实例集合api\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"查询流程设计所需的数据\",{\"0\":{\"189\":1,\"1408\":1},\"1\":{\"189\":1,\"1408\":1}}],[\"查询方式需要改动\",{\"1\":{\"158\":1,\"1564\":1}}],[\"查看的时候不可编辑\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"查看跳转线退回的\",{\"1\":{\"138\":1,\"1544\":1}}],[\"查看\",{\"1\":{\"0\":2}}],[\"针对整个系统\",{\"1\":{\"147\":1,\"1553\":1,\"1612\":1,\"1613\":1}}],[\"针对所有属性\",{\"1\":{\"131\":1,\"1537\":1}}],[\"接入warm\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"接入监听器\",{\"1\":{\"149\":1,\"1555\":1}}],[\"接入仿钉钉设计器\",{\"1\":{\"144\":1,\"1550\":1}}],[\"接口或者抽象类前缀由expressionstrategy改为\",{\"1\":{\"1652\":1,\"1724\":1}}],[\"接口使用方式不一致\",{\"1\":{\"408\":1,\"593\":1,\"779\":1,\"972\":1}}],[\"接口描述地址\",{\"1\":{\"274\":1,\"1493\":1}}],[\"接口描述\",{\"0\":{\"274\":1,\"1493\":1}}],[\"接口\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"适配国产数据库\",{\"1\":{\"142\":1,\"1548\":1}}],[\"适用于多种应用场景\",{\"1\":{\"105\":1,\"1372\":1}}],[\"会发布新的版本\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"会有什么影响\",{\"1\":{\"142\":1,\"1548\":1}}],[\"会签就是指在流程管理中发起人可以同时对多个人发起会签\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"会签所有待办权限只支持个人类型\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"会签中任意一待办人进行\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"会签票签\",{\"1\":{\"157\":1,\"1563\":1}}],[\"会签节点委派\",{\"1\":{\"148\":1,\"1554\":1}}],[\"会签和票签通过率策略\",{\"1\":{\"142\":1,\"1548\":1}}],[\"会签\",{\"0\":{\"236\":1,\"1455\":1},\"1\":{\"102\":1,\"115\":1,\"152\":1,\"157\":1,\"158\":1,\"171\":1,\"231\":1,\"232\":1,\"276\":1,\"277\":1,\"416\":1,\"423\":1,\"428\":1,\"429\":1,\"601\":1,\"608\":1,\"613\":1,\"614\":1,\"787\":1,\"794\":1,\"799\":1,\"800\":1,\"980\":1,\"987\":1,\"992\":1,\"993\":1,\"1200\":1,\"1207\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1219\":1,\"1369\":1,\"1382\":1,\"1450\":1,\"1451\":1,\"1495\":1,\"1496\":1,\"1558\":1,\"1563\":1,\"1564\":1,\"1577\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"把如上代码\",{\"1\":{\"1621\":1,\"1681\":1}}],[\"把它转历史记录\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"把设计器打包的jar包中\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"把不能退回到开始节点去掉\",{\"1\":{\"142\":1,\"1548\":1}}],[\"把打包后的文件dist复制到nginx的html目录下\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"把打包后的文件dist复制到业务系统src\",{\"1\":{\"66\":1,\"943\":1,\"1144\":1,\"1333\":1}}],[\"未完成过任务\",{\"1\":{\"155\":2,\"1561\":2}}],[\"未删除办理人信息\",{\"1\":{\"148\":1,\"1554\":1}}],[\"未来发布计划\",{\"0\":{\"141\":1,\"1547\":1}}],[\"未加载\",{\"0\":{\"133\":1,\"1539\":1},\"1\":{\"133\":1,\"1539\":1}}],[\"错误结束流程的问题\",{\"1\":{\"154\":1,\"1560\":1}}],[\"错误\",{\"0\":{\"138\":1,\"1544\":1}}],[\"导出流程定义xml的document对象\",{\"1\":{\"315\":1,\"669\":1}}],[\"导出流程定义\",{\"0\":{\"179\":1,\"189\":1,\"315\":1,\"484\":1,\"669\":1,\"855\":1,\"1050\":1,\"1398\":1,\"1408\":1},\"1\":{\"179\":1,\"189\":1,\"484\":1,\"855\":1,\"1050\":1,\"1398\":1,\"1408\":1}}],[\"导入流程方法拆成两个方法\",{\"1\":{\"1551\":1}}],[\"导入流程定义xml的输入流is\",{\"1\":{\"313\":1,\"666\":1}}],[\"导入流程定义xml的输入流\",{\"1\":{\"176\":1,\"481\":1,\"852\":1,\"1047\":1,\"1395\":1}}],[\"导入流程定义\",{\"0\":{\"176\":1,\"313\":1,\"666\":1,\"852\":1,\"1047\":1,\"1395\":1}}],[\"导入sql\",{\"0\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"导入依赖包失败\",{\"0\":{\"137\":1,\"1543\":1}}],[\"导致流程图渲染异常\",{\"1\":{\"152\":1,\"1558\":1}}],[\"导致flowautoconfig\",{\"1\":{\"133\":1,\"1539\":1}}],[\"y是\",{\"1\":{\"303\":1,\"304\":1,\"306\":2,\"308\":1,\"452\":1,\"453\":1,\"455\":2,\"457\":1,\"638\":1,\"639\":1,\"641\":2,\"643\":1,\"823\":1,\"824\":1,\"826\":2,\"828\":1,\"1017\":1,\"1018\":1,\"1020\":2,\"1022\":1,\"1241\":1,\"1242\":1,\"1244\":2,\"1246\":1,\"1522\":1,\"1523\":1,\"1525\":2,\"1527\":1}}],[\"yml中配置warm\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"yml中配置mybatis改为mybatis\",{\"1\":{\"136\":1,\"1542\":1}}],[\"yml控制开关\",{\"1\":{\"155\":1,\"1561\":1}}],[\"yyyy\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"yyy\",{\"1\":{\"149\":2,\"1555\":2,\"1654\":2,\"1726\":2}}],[\"yaml配置方式\",{\"0\":{\"35\":1,\"242\":1,\"245\":1,\"251\":1,\"366\":1,\"369\":1,\"379\":1,\"464\":1,\"535\":1,\"538\":1,\"548\":1,\"650\":1,\"720\":1,\"723\":1,\"733\":1,\"835\":1,\"906\":1,\"909\":1,\"919\":1,\"1029\":1,\"1105\":1,\"1108\":1,\"1118\":1,\"1253\":1,\"1302\":1,\"1461\":1,\"1464\":1,\"1470\":1}}],[\"条\",{\"1\":{\"136\":1,\"1542\":1}}],[\"条件表达式原本太繁琐\",{\"1\":{\"1551\":1}}],[\"条件表达式新增默认策略default|$\",{\"1\":{\"1551\":1}}],[\"条件表达式等于\",{\"1\":{\"56\":1,\"1162\":1,\"1323\":1}}],[\"条件表达式实现类\",{\"0\":{\"56\":1,\"1162\":1,\"1323\":1}}],[\"条件表达式抽象类\",{\"0\":{\"55\":1,\"1161\":1,\"1322\":1},\"1\":{\"55\":1,\"1161\":1,\"1322\":1}}],[\"条件表达式策略实现类map\",{\"1\":{\"54\":1,\"1160\":1,\"1321\":1}}],[\"条件表达式接口\",{\"0\":{\"54\":1,\"1160\":1,\"1321\":1},\"1\":{\"54\":1,\"1160\":1,\"1321\":1}}],[\"条件表达式\",{\"0\":{\"53\":1,\"237\":1,\"381\":1,\"566\":1,\"752\":1,\"945\":1,\"1100\":1,\"1146\":1,\"1159\":1,\"1320\":1,\"1456\":1},\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"条件表达式扩展\",{\"0\":{\"50\":1,\"1317\":1,\"1676\":1,\"1722\":1}}],[\"阻断插件\",{\"1\":{\"136\":1,\"1542\":1}}],[\"乐观锁插件\",{\"1\":{\"136\":2,\"1542\":2}}],[\"根pom\",{\"1\":{\"136\":1,\"1542\":1}}],[\"根据跳转条件\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"根据entity删除\",{\"0\":{\"220\":1,\"353\":1,\"522\":1,\"707\":1,\"893\":1,\"1089\":1,\"1439\":1},\"1\":{\"220\":1,\"353\":1,\"522\":1,\"707\":1,\"893\":1,\"1089\":1,\"1439\":1}}],[\"根据ids批量删除\",{\"0\":{\"221\":1,\"354\":1,\"523\":1,\"708\":1,\"894\":1,\"1090\":1,\"1440\":1},\"1\":{\"221\":1,\"354\":1,\"523\":1,\"708\":1,\"894\":1,\"1090\":1,\"1440\":1}}],[\"根据ids主键集合查询\",{\"0\":{\"210\":1,\"343\":1,\"512\":1,\"697\":1,\"883\":1,\"1079\":1,\"1429\":1},\"1\":{\"210\":1,\"343\":1,\"512\":1,\"697\":1,\"883\":1,\"1079\":1,\"1429\":1}}],[\"根据id删除\",{\"0\":{\"219\":1,\"352\":1,\"521\":1,\"706\":1,\"892\":1,\"1088\":1,\"1438\":1},\"1\":{\"219\":1,\"352\":1,\"521\":1,\"706\":1,\"892\":1,\"1088\":1,\"1438\":1}}],[\"根据id修改\",{\"0\":{\"218\":1,\"351\":1,\"520\":1,\"705\":1,\"891\":1,\"1087\":1,\"1437\":1},\"1\":{\"218\":1,\"351\":1,\"520\":1,\"705\":1,\"891\":1,\"1087\":1,\"1437\":1}}],[\"根据id查询\",{\"0\":{\"209\":1,\"342\":1,\"511\":1,\"696\":1,\"882\":1,\"1078\":1,\"1428\":1},\"1\":{\"209\":1,\"342\":1,\"511\":1,\"696\":1,\"882\":1,\"1078\":1,\"1428\":1}}],[\"根据流程定义和当前节点code获取下一节点\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"根据流程定义id集合\",{\"0\":{\"197\":1,\"1066\":1,\"1416\":1},\"1\":{\"197\":1,\"1066\":1,\"1416\":1}}],[\"根据实例ids\",{\"1\":{\"194\":1,\"328\":1,\"497\":1,\"682\":1,\"868\":1,\"1063\":1,\"1413\":1}}],[\"根据\",{\"1\":{\"131\":1,\"1537\":1}}],[\"同上\",{\"1\":{\"135\":1,\"1541\":1}}],[\"同时构建左侧部门树状结构\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"同时star也是作者前进的动力\",{\"1\":{\"86\":1,\"1353\":1}}],[\"同时具备企业erp级的协同功能\",{\"1\":{\"83\":1,\"1350\":1}}],[\"同时支持spring和solon\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"同时支持多对一的替换\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"同时支持功能强大的spel表达\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"检查是否使用热部署插件\",{\"1\":{\"134\":1,\"1540\":1}}],[\"删除标志\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"删除流程\",{\"1\":{\"194\":1,\"328\":1,\"497\":1,\"682\":1,\"868\":1,\"1063\":1,\"1413\":1}}],[\"删除流程实例\",{\"0\":{\"194\":1,\"328\":1,\"497\":1,\"682\":1,\"868\":1,\"1063\":1,\"1413\":1}}],[\"删除流程定义相关数据\",{\"1\":{\"181\":1,\"317\":1,\"486\":1,\"671\":1,\"857\":1,\"1052\":1,\"1400\":1}}],[\"删除多余的字段和代码\",{\"1\":{\"165\":1,\"1571\":1}}],[\"删除监听器自定义参数\",{\"1\":{\"157\":1,\"1563\":1}}],[\"删除不必要的\",{\"1\":{\"155\":1,\"1561\":1}}],[\"删除cooperateautopass方法\",{\"1\":{\"155\":1,\"1561\":1}}],[\"删除flowconfigutil多余的代码\",{\"1\":{\"155\":1,\"1561\":1}}],[\"删除校验是否任意跳转\",{\"1\":{\"155\":1,\"1561\":1}}],[\"删除数据填充默认实现类\",{\"1\":{\"152\":1,\"1558\":1}}],[\"删除重复代码\",{\"1\":{\"152\":1,\"1558\":1}}],[\"删除策略前缀\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1,\"1652\":1,\"1724\":1}}],[\"删除\",{\"0\":{\"181\":1,\"317\":1,\"486\":1,\"671\":1,\"857\":1,\"1052\":1,\"1400\":1},\"1\":{\"133\":1,\"1539\":1,\"1654\":2,\"1726\":2}}],[\"星\",{\"1\":{\"133\":1,\"1539\":1}}],[\"格调\",{\"1\":{\"132\":1,\"1538\":1}}],[\"添加中文字体即可\",{\"1\":{\"132\":1,\"1538\":1}}],[\"添加到jre的lib\",{\"1\":{\"132\":1,\"1538\":1}}],[\"添加jacksonconfig配置全局序列化\",{\"1\":{\"131\":1,\"1537\":1}}],[\"宋体\",{\"1\":{\"132\":1,\"1538\":1}}],[\"生成的流程图中文乱码或者报错internalerror\",{\"1\":{\"132\":1,\"1538\":1}}],[\"安装中文字体\",{\"1\":{\"132\":2,\"1538\":2}}],[\"安徽数智建造研究院有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"继承填充器接口\",{\"1\":{\"131\":1,\"1537\":1}}],[\"key\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"修正pg的sql文件名\",{\"1\":{\"157\":1,\"1563\":1}}],[\"修復开始节点直连网关\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复等\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"修复solon版本业务系统可不用单独加载warm\",{\"1\":{\"170\":1,\"1576\":1}}],[\"修复并行网关流程流程图显示错误问题\",{\"1\":{\"167\":1,\"1573\":1}}],[\"修复并行网关后面没有中间节点\",{\"1\":{\"162\":1,\"1568\":1}}],[\"修复xml脚本中遗漏伪命的问题\",{\"1\":{\"166\":1,\"1572\":1}}],[\"修复监听器部分判空bug\",{\"1\":{\"163\":1,\"1569\":1}}],[\"修复开始任务记录待办\",{\"1\":{\"162\":1,\"1568\":1}}],[\"修复已经设置后续节点动态权限后\",{\"1\":{\"162\":1,\"1568\":1}}],[\"修复已办任务查询审批想起无效问题\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复java17以上\",{\"1\":{\"161\":1,\"1567\":1}}],[\"修复终止流程bug\",{\"1\":{\"160\":1,\"1566\":1}}],[\"修复设置默认填充器时候\",{\"1\":{\"159\":1,\"1565\":1}}],[\"修复usermapper\",{\"1\":{\"157\":1,\"1563\":1}}],[\"修复填充器不接收外部设置的时间\",{\"1\":{\"157\":1,\"1563\":1}}],[\"修复保存流程xml报错问题\",{\"1\":{\"156\":1,\"1562\":1}}],[\"修复更新拼上了多余的条件\",{\"1\":{\"156\":1,\"1562\":1}}],[\"修复postgresql与mysql关键词符号问题\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复流程流转异常\",{\"1\":{\"161\":1,\"1567\":1}}],[\"修复流程已完成\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复流程定义和流程实例相同\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复流程监听器导出失败的问题\",{\"1\":{\"153\":1,\"1559\":1}}],[\"修复不能退回\",{\"1\":{\"155\":2,\"1561\":2}}],[\"修复查看流程图模糊的问题\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复taskserviceimpl\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复加签批量提交报错\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修复\",{\"1\":{\"154\":2,\"155\":1,\"1560\":2,\"1561\":1}}],[\"修复deletebytaskids\",{\"1\":{\"154\":1,\"1560\":1}}],[\"修复历史记录创建时间相等\",{\"1\":{\"152\":1,\"1558\":1}}],[\"修复历史记录表\",{\"1\":{\"149\":1,\"1555\":1}}],[\"修复mybatis逻辑删除变成真实删除的缺陷\",{\"1\":{\"152\":1,\"1558\":1}}],[\"修复mybatis\",{\"1\":{\"151\":1,\"1557\":1}}],[\"修复mybatis扩展包中\",{\"1\":{\"150\":1,\"1556\":1}}],[\"修复删除流程实例信息\",{\"1\":{\"148\":1,\"1554\":1}}],[\"修复问题\",{\"1\":{\"98\":1,\"1365\":1}}],[\"修改字段名称\",{\"1\":{\"1551\":1}}],[\"修改的任务id\",{\"1\":{\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1}}],[\"修改办理人\",{\"0\":{\"205\":1,\"338\":1,\"507\":1,\"692\":1,\"878\":1,\"1074\":1,\"1424\":1},\"1\":{\"205\":1,\"338\":1,\"507\":1,\"692\":1,\"878\":1,\"1074\":1,\"1424\":1}}],[\"修改办理人接口\",{\"1\":{\"153\":1,\"1559\":1}}],[\"修改flow\",{\"1\":{\"163\":1,\"1569\":1}}],[\"修改flowuserdao的bean名称\",{\"1\":{\"152\":1,\"1558\":1}}],[\"修改扩展字段名称\",{\"1\":{\"157\":1,\"1563\":1}}],[\"修改扩展字段ext注释\",{\"1\":{\"155\":1,\"1561\":1}}],[\"修改任务历史表时间定义\",{\"1\":{\"157\":1,\"1563\":1}}],[\"修改\",{\"1\":{\"148\":1,\"1554\":1}}],[\"修改项目的groupid\",{\"1\":{\"147\":1,\"1553\":1}}],[\"修改流程变量传递方式\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"修改id生成方式\",{\"1\":{\"131\":2,\"1537\":2}}],[\"丢失精度\",{\"1\":{\"131\":2,\"1537\":2}}],[\"防止\",{\"1\":{\"131\":2,\"1537\":2}}],[\"转历史任务\",{\"1\":{\"278\":1,\"281\":1,\"424\":1,\"427\":1,\"609\":1,\"612\":1,\"795\":1,\"798\":1,\"988\":1,\"991\":1,\"1208\":1,\"1211\":1,\"1215\":1,\"1218\":1,\"1497\":1,\"1500\":1}}],[\"转成组件内部左侧树列表能够显示的数据\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"转成组件内部能够显示的数据\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"转为\",{\"1\":{\"131\":2,\"1537\":2}}],[\"转办对象\",{\"1\":{\"201\":1,\"503\":1,\"874\":1,\"1070\":1,\"1420\":1}}],[\"转办后\",{\"1\":{\"201\":1,\"334\":1,\"335\":1,\"503\":1,\"688\":1,\"689\":1,\"874\":1,\"1070\":1,\"1420\":1}}],[\"转办忽略权限校验\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"338\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"692\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"转办完善\",{\"1\":{\"158\":1,\"1564\":1}}],[\"转办\",{\"0\":{\"201\":1,\"334\":1,\"503\":1,\"688\":1,\"874\":1,\"1070\":1,\"1420\":1},\"1\":{\"102\":1,\"147\":1,\"201\":1,\"205\":1,\"273\":1,\"275\":2,\"276\":1,\"277\":1,\"334\":2,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"423\":1,\"429\":1,\"503\":1,\"507\":1,\"608\":1,\"614\":1,\"688\":2,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"794\":1,\"800\":1,\"874\":1,\"878\":1,\"987\":1,\"993\":1,\"1070\":1,\"1074\":1,\"1207\":1,\"1213\":1,\"1214\":1,\"1369\":1,\"1420\":1,\"1424\":1,\"1492\":1,\"1494\":2,\"1495\":1,\"1496\":1,\"1553\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1613\":1,\"1614\":1,\"1648\":1,\"1654\":1,\"1668\":1,\"1708\":1,\"1714\":1,\"1726\":1}}],[\"得来\",{\"1\":{\"131\":1,\"1537\":1}}],[\"与\",{\"1\":{\"131\":1,\"245\":1,\"369\":1,\"428\":1,\"538\":1,\"613\":1,\"723\":1,\"799\":1,\"909\":1,\"992\":1,\"1108\":1,\"1212\":1,\"1219\":1,\"1464\":1,\"1537\":1}}],[\"超出范围\",{\"1\":{\"131\":1,\"1537\":1}}],[\"超出\",{\"1\":{\"131\":1,\"1537\":1}}],[\"👇点击👇\",{\"1\":{\"131\":1,\"1537\":1}}],[\"👇\",{\"1\":{\"131\":4,\"136\":2,\"1537\":4,\"1542\":2}}],[\"👍友情链接\",{\"1\":{\"0\":1}}],[\"方便区分表达式类型\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1}}],[\"方便链式写法\",{\"1\":{\"162\":1,\"1568\":1}}],[\"方便保存历史过程数据\",{\"1\":{\"157\":1,\"1563\":1}}],[\"方便开始监听器全局传递参数\",{\"1\":{\"152\":1,\"1558\":1}}],[\"方便扩展其他orm框架\",{\"1\":{\"169\":1,\"1575\":1}}],[\"方便扩展不同orm和数据\",{\"1\":{\"167\":1,\"1573\":1}}],[\"方便扩展\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"方法赋值\",{\"1\":{\"149\":1,\"1555\":1,\"1654\":1,\"1726\":1}}],[\"方法\",{\"1\":{\"149\":1,\"1555\":1,\"1654\":1,\"1726\":1}}],[\"方案4\",{\"1\":{\"131\":1,\"1537\":1}}],[\"方案3\",{\"1\":{\"131\":1,\"1537\":1}}],[\"方案2\",{\"1\":{\"131\":1,\"1537\":1}}],[\"方案1\",{\"1\":{\"131\":1,\"1537\":1}}],[\"方式二\",{\"1\":{\"131\":1,\"1537\":1}}],[\"方式一\",{\"1\":{\"131\":1,\"1537\":1}}],[\"团队\",{\"0\":{\"129\":1,\"1535\":1}}],[\"联系我\",{\"1\":{\"128\":1,\"1534\":1}}],[\"包名\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"包名2\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"包含\",{\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"包含节点和跳转\",{\"1\":{\"188\":1,\"1407\":1}}],[\"包容网关\",{\"1\":{\"142\":1,\"1548\":1}}],[\"包括但不限于\",{\"1\":{\"127\":1,\"1533\":1}}],[\"关闭逻辑删除\",{\"1\":{\"1286\":2}}],[\"关闭按钮\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"关系型\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"关于dromara\",{\"1\":{\"127\":1,\"1533\":1}}],[\"关键质量特性\",{\"1\":{\"83\":1,\"1350\":1}}],[\"私人服务\",{\"0\":{\"127\":1,\"1533\":1}}],[\"让办理流程像喝水一样简单的事情\",{\"1\":{\"1670\":1,\"1716\":1}}],[\"让你感受作者有多话痨\",{\"1\":{\"126\":1,\"1532\":1}}],[\"让好的项目能够被更多人看到\",{\"1\":{\"86\":1,\"1353\":1}}],[\"看见必回复\",{\"1\":{\"126\":1,\"1532\":1}}],[\"承诺\",{\"1\":{\"126\":1,\"1532\":1}}],[\"早进群早接触更多的问题\",{\"1\":{\"126\":1,\"1532\":1}}],[\"听作者解答问题等于习题讲解\",{\"1\":{\"126\":1,\"1532\":1}}],[\"问问题等于做习题\",{\"1\":{\"126\":1,\"1532\":1}}],[\"邀请进入vip群\",{\"1\":{\"126\":1,\"1532\":1}}],[\"支付后加微信号\",{\"1\":{\"126\":1,\"1532\":1}}],[\"支持角色\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"支持五种监听器\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"支持顺序按顺序加载一种\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"支持表达式扩展\",{\"1\":{\"1621\":1,\"1681\":1}}],[\"支持动态指定一群人\",{\"1\":{\"1621\":1,\"1681\":1}}],[\"支持四种监听器\",{\"1\":{\"1586\":1,\"1597\":1,\"1608\":1,\"1648\":1,\"1708\":1}}],[\"支持四种监听器和不同颗粒的的作用范围\",{\"1\":{\"102\":1,\"1369\":1,\"1614\":1}}],[\"支持设置排序字段\",{\"1\":{\"211\":1,\"213\":1,\"344\":1,\"346\":1,\"513\":1,\"515\":1,\"698\":1,\"700\":1,\"884\":1,\"886\":1,\"1080\":1,\"1082\":1,\"1430\":1,\"1432\":1}}],[\"支持待办任务和已办任务\",{\"1\":{\"171\":1,\"1577\":1}}],[\"支持生成流程图\",{\"1\":{\"171\":1,\"1577\":1}}],[\"支持自定义填充\",{\"1\":{\"162\":1,\"1568\":1}}],[\"支持转办功能\",{\"1\":{\"161\":1,\"1567\":1}}],[\"支持第二个节点为网关节点的情况\",{\"1\":{\"160\":1,\"1566\":1}}],[\"支持代办任务中办理人等动态修改\",{\"1\":{\"155\":1,\"1561\":1}}],[\"支持流程状态扩展\",{\"1\":{\"155\":1,\"1561\":1}}],[\"支持接收外部流程状态\",{\"1\":{\"155\":1,\"1561\":1}}],[\"支持orm默认策略\",{\"1\":{\"152\":1,\"1558\":1}}],[\"支持orm框架类型\",{\"0\":{\"107\":1,\"440\":1,\"625\":1,\"811\":1,\"1004\":1,\"1374\":1},\"1\":{\"1640\":1,\"1700\":1}}],[\"支持$\",{\"1\":{\"152\":1,\"1558\":1}}],[\"支持多token\",{\"1\":{\"148\":1,\"1554\":1}}],[\"支持数据库类型\",{\"0\":{\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1373\":1}}],[\"支持solon和便捷性提升\",{\"0\":{\"1611\":1}}],[\"支持solon和springboot\",{\"1\":{\"102\":1,\"1369\":1,\"1614\":1}}],[\"支持solon\",{\"1\":{\"171\":1,\"1577\":1}}],[\"支持spel表达式\",{\"1\":{\"102\":1,\"1369\":1,\"1614\":1,\"1621\":1,\"1681\":1}}],[\"支持通过\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"支持一对一替换\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"支持扩展\",{\"1\":{\"4\":1,\"39\":1,\"142\":1,\"1170\":1,\"1258\":1,\"1271\":1,\"1306\":1,\"1548\":1}}],[\"支持配置类包名和表达式\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"支持类包名配置和表达式配置\",{\"1\":{\"1\":1,\"1167\":1,\"1268\":1}}],[\"遵循开源协议\",{\"1\":{\"126\":1,\"1532\":1}}],[\"均开源免费可商用\",{\"1\":{\"126\":1,\"1532\":1}}],[\"文档地址\",{\"1\":{\"296\":1,\"626\":1,\"1005\":1,\"1234\":1,\"1515\":1,\"1647\":1,\"1707\":1}}],[\"文档\",{\"1\":{\"126\":1,\"1532\":1}}],[\"文斌\",{\"1\":{\"123\":1,\"1390\":1}}],[\"飞鸿\",{\"1\":{\"123\":1,\"1390\":1}}],[\"荒\",{\"1\":{\"123\":1,\"1390\":1}}],[\"姜杰\",{\"1\":{\"123\":1,\"1390\":1}}],[\"剑\",{\"1\":{\"123\":1,\"1390\":1}}],[\"敏\",{\"1\":{\"123\":1,\"1390\":1}}],[\"巴\",{\"1\":{\"123\":1,\"1390\":1}}],[\"热部署插件jrebel或者devtools导致问题\",{\"1\":{\"134\":1,\"1540\":1}}],[\"热\",{\"1\":{\"123\":1,\"1390\":1}}],[\"马\",{\"1\":{\"123\":1,\"1390\":1}}],[\"梁\",{\"1\":{\"123\":1,\"1390\":1}}],[\"梁小梁\",{\"1\":{\"121\":1,\"1388\":1}}],[\"入库前要拼接前缀\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1}}],[\"入\",{\"1\":{\"123\":1,\"1390\":1}}],[\"自己不再处理\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"自研条件表达式\",{\"1\":{\"171\":1,\"1577\":1}}],[\"自动获取\",{\"1\":{\"159\":1,\"1565\":1}}],[\"自动识别数据库类型\",{\"1\":{\"136\":1,\"1542\":1}}],[\"自定义填充器\",{\"0\":{\"248\":1,\"376\":1,\"545\":1,\"730\":1,\"916\":1,\"1115\":1,\"1467\":1}}],[\"自定义填充\",{\"1\":{\"243\":1,\"246\":1,\"367\":1,\"370\":1,\"536\":1,\"539\":1,\"721\":1,\"724\":1,\"907\":1,\"910\":1,\"1106\":1,\"1109\":1,\"1462\":1,\"1465\":1,\"1673\":1,\"1719\":1}}],[\"自定义表达式\",{\"0\":{\"384\":1,\"569\":1,\"755\":1,\"948\":1,\"1149\":1},\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"自定义id生成策略\",{\"1\":{\"131\":1,\"1537\":1}}],[\"自定义流程状态扩展\",{\"1\":{\"58\":1,\"59\":2,\"372\":1,\"373\":2,\"541\":1,\"542\":2,\"726\":1,\"727\":2,\"912\":1,\"913\":2,\"1111\":1,\"1112\":2,\"1325\":1,\"1326\":2}}],[\"自定义流程状态\",{\"0\":{\"57\":1,\"371\":1,\"540\":1,\"725\":1,\"911\":1,\"1110\":1,\"1324\":1},\"1\":{\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1}}],[\"自由飞翔\",{\"1\":{\"123\":1,\"1390\":1}}],[\"致敬\",{\"1\":{\"123\":1,\"1390\":1}}],[\"准备试用\",{\"1\":{\"123\":1,\"1390\":1}}],[\"子流程\",{\"1\":{\"142\":1,\"1548\":1}}],[\"子\",{\"1\":{\"123\":1,\"1390\":1}}],[\"希望某些人不参与办理\",{\"1\":{\"273\":1,\"276\":1,\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1492\":1,\"1495\":1,\"1496\":1}}],[\"希望其他人一起参与办理\",{\"1\":{\"273\":1,\"276\":1,\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1492\":1,\"1495\":1,\"1496\":1}}],[\"希望能发展壮大\",{\"1\":{\"123\":1,\"1390\":1}}],[\"希望有交流机会\",{\"1\":{\"123\":1,\"1390\":1}}],[\"希望一键三连\",{\"1\":{\"102\":1,\"1369\":1}}],[\"佳\",{\"1\":{\"123\":2,\"1390\":2}}],[\"李\",{\"1\":{\"123\":1,\"1390\":1}}],[\"感谢\",{\"1\":{\"131\":1,\"132\":2,\"137\":1,\"163\":1,\"164\":1,\"165\":3,\"1537\":1,\"1538\":2,\"1543\":1,\"1569\":1,\"1570\":1,\"1571\":3}}],[\"感谢您对开源项目的支持\",{\"1\":{\"123\":17,\"1390\":17}}],[\"感谢所有捐赠者\",{\"1\":{\"122\":1,\"1389\":1}}],[\"时间\",{\"1\":{\"123\":1,\"1390\":1}}],[\"留言\",{\"1\":{\"123\":1,\"1390\":1}}],[\"元\",{\"1\":{\"123\":1,\"1390\":1}}],[\"金额\",{\"1\":{\"123\":1,\"1390\":1}}],[\"域名和相关服务的费用\",{\"1\":{\"122\":1,\"1389\":1}}],[\"这可能需要深入理解其内部工作原理和源代码\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"这两个路径需要放行\",{\"1\":{\"737\":1,\"1591\":1}}],[\"这个路径需要放行\",{\"1\":{\"257\":1,\"552\":1,\"923\":1,\"1124\":1,\"1476\":1,\"1580\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"这些费用将用于服务器\",{\"1\":{\"122\":1,\"1389\":1}}],[\"这里返回系统中的当前办理人的租户id\",{\"1\":{\"37\":1,\"466\":1,\"652\":1,\"837\":1,\"1031\":1,\"1255\":1,\"1304\":1}}],[\"这里就不用更新了\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"应用程序\",{\"1\":{\"121\":1,\"1388\":1}}],[\"应用场景\",{\"0\":{\"105\":1,\"1372\":1}}],[\"该流程实例无法继续流转\",{\"1\":{\"196\":1,\"330\":1,\"499\":1,\"684\":1,\"870\":1,\"1065\":1,\"1415\":1}}],[\"该流程所有节点任务都会执行\",{\"1\":{\"2\":1,\"1168\":1,\"1269\":1}}],[\"该系统可以帮助企业快速开发和部署高质量的\",{\"1\":{\"121\":1,\"1388\":1}}],[\"zzz\",{\"1\":{\"239\":1,\"1102\":1}}],[\"zip将文件解压至\",{\"1\":{\"132\":1,\"1538\":1}}],[\"zhfonts\",{\"1\":{\"132\":5,\"1538\":5}}],[\"zhen\",{\"1\":{\"121\":2,\"144\":1,\"150\":1,\"1388\":2,\"1550\":1,\"1556\":1}}],[\"zyflzz\",{\"1\":{\"83\":1,\"1350\":1}}],[\"平台\",{\"1\":{\"121\":1,\"1388\":1}}],[\"晓华\",{\"1\":{\"121\":2,\"144\":1,\"145\":3,\"1388\":2,\"1550\":4}}],[\"描述\",{\"1\":{\"121\":1,\"1388\":1}}],[\"由分派监听器实现替换\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"由于各数据库sql语句存在差异\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"由于服务器上缺少中文字体\",{\"1\":{\"132\":1,\"1538\":1}}],[\"由社区\",{\"1\":{\"133\":1,\"1539\":1}}],[\"由流程设计中的对应权限人去办理\",{\"1\":{\"118\":1,\"419\":1,\"604\":1,\"790\":1,\"983\":1,\"1203\":1,\"1385\":1}}],[\"由作者与团队成员判定\",{\"1\":{\"90\":1,\"1357\":1}}],[\"点击待办时候获取这个路径\",{\"1\":{\"113\":1,\"414\":1,\"599\":1,\"785\":1,\"978\":1,\"1198\":1,\"1380\":1}}],[\"确实有门槛\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"确保演练按计划推进\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"确保项目按计划进行\",{\"1\":{\"105\":1,\"1372\":1}}],[\"确定唯一\",{\"1\":{\"113\":1,\"414\":1,\"599\":1,\"785\":1,\"978\":1,\"1198\":1,\"1380\":1}}],[\"功能开发\",{\"1\":{\"171\":1,\"1577\":1}}],[\"功能演示\",{\"0\":{\"110\":1,\"412\":1,\"597\":1,\"783\":1,\"976\":1,\"1196\":1,\"1377\":1}}],[\"功能增强\",{\"1\":{\"1\":1,\"389\":1,\"574\":1,\"760\":1,\"953\":1,\"1167\":1,\"1268\":1}}],[\"捐献者\",{\"1\":{\"123\":1,\"1390\":1}}],[\"捐献红包和群主不定时红包\",{\"1\":{\"91\":1,\"1358\":1}}],[\"捐赠列表\",{\"0\":{\"123\":1,\"1390\":1}}],[\"捐赠\",{\"0\":{\"122\":1,\"1389\":1}}],[\"捐赠地址\",{\"1\":{\"109\":1,\"1376\":1}}],[\"你们的支持是我最大的动力\",{\"1\":{\"122\":1,\"1389\":1}}],[\"你可以请作者喝杯咖啡表示鼓励\",{\"0\":{\"109\":1,\"1376\":1}}],[\"你的⭐️\",{\"1\":{\"102\":1,\"1369\":1}}],[\"特别赞助\",{\"0\":{\"108\":1,\"128\":1,\"1375\":1,\"1534\":1}}],[\"特点\",{\"0\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"q\",{\"1\":{\"133\":1,\"1539\":1}}],[\"quick\",{\"1\":{\"121\":2,\"1388\":2}}],[\"query框架支持\",{\"1\":{\"155\":1,\"1561\":1}}],[\"query\",{\"0\":{\"290\":1,\"438\":1,\"623\":1,\"809\":1,\"1002\":1,\"1228\":1,\"1509\":1},\"1\":{\"107\":1,\"213\":2,\"269\":2,\"270\":14,\"290\":2,\"346\":2,\"438\":2,\"440\":1,\"515\":2,\"564\":2,\"565\":14,\"623\":2,\"625\":1,\"700\":2,\"750\":2,\"751\":14,\"809\":2,\"811\":1,\"886\":2,\"935\":2,\"936\":14,\"1002\":2,\"1004\":1,\"1082\":2,\"1136\":2,\"1137\":14,\"1228\":2,\"1374\":1,\"1432\":2,\"1488\":2,\"1489\":14,\"1509\":2,\"1585\":2,\"1596\":2,\"1607\":2,\"1638\":2,\"1640\":1,\"1698\":2,\"1700\":1}}],[\"qq群\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"qq\",{\"1\":{\"104\":2,\"1371\":2}}],[\"人员类型\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"人大金仓\",{\"1\":{\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1373\":1}}],[\"人力资源管理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"帮助不同部门之间更好地协调工作\",{\"1\":{\"105\":1,\"1372\":1}}],[\"帮助企业在遵守法规和标准的同时\",{\"1\":{\"105\":1,\"1372\":1}}],[\"跨部门协作\",{\"1\":{\"105\":1,\"1372\":1}}],[\"系统变更管理等\",{\"1\":{\"105\":1,\"1372\":1}}],[\"管理风险和合规流程\",{\"1\":{\"105\":1,\"1372\":1}}],[\"管理财务审批流程\",{\"1\":{\"105\":1,\"1372\":1}}],[\"管理项目流程\",{\"1\":{\"105\":1,\"1372\":1}}],[\"财务和会计流程\",{\"1\":{\"105\":1,\"1372\":1}}],[\"绩效评估等流程的管理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"培训\",{\"1\":{\"105\":1,\"1372\":1}}],[\"售后服务等\",{\"1\":{\"105\":1,\"1372\":1}}],[\"投诉处理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"客户服务流程\",{\"1\":{\"105\":1,\"1372\":1}}],[\"办公自动化\",{\"1\":{\"105\":1,\"1372\":1}}],[\"办理任务动态设置权限\",{\"1\":{\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1}}],[\"办理中途\",{\"1\":{\"273\":2,\"276\":2,\"277\":2,\"423\":2,\"608\":2,\"794\":2,\"987\":2,\"1207\":2,\"1214\":2,\"1492\":2,\"1495\":2,\"1496\":2}}],[\"办理中动态设置权限\",{\"1\":{\"164\":1,\"1570\":1}}],[\"办理时未生效问题\",{\"1\":{\"162\":1,\"1568\":1}}],[\"办理时会校验的该权限集合\",{\"1\":{\"28\":1,\"1194\":1,\"1295\":1}}],[\"办理时会校验的该权限是否是可审批人员\",{\"1\":{\"27\":1,\"1193\":1,\"1294\":1}}],[\"办理流程\",{\"0\":{\"119\":1,\"420\":1,\"605\":1,\"791\":1,\"984\":1,\"1204\":1,\"1386\":1}}],[\"办理完成会生成本节点任务\",{\"1\":{\"42\":1,\"1261\":1,\"1309\":1,\"1620\":1,\"1680\":1}}],[\"办理人变更\",{\"0\":{\"272\":1,\"1491\":1}}],[\"办理人变量设置\",{\"0\":{\"468\":1,\"654\":1,\"839\":1,\"1033\":1}}],[\"办理人变量和监听器表达式不满足业务需求时\",{\"1\":{\"50\":1,\"71\":1,\"77\":1,\"1150\":1,\"1317\":1,\"1338\":1,\"1344\":1}}],[\"办理人变量表达式实现类\",{\"0\":{\"82\":1,\"1155\":1,\"1349\":1}}],[\"办理人变量表达式策略实现类集合\",{\"1\":{\"81\":1,\"1154\":1,\"1348\":1}}],[\"办理人变量表达式策略\",{\"1\":{\"81\":1,\"477\":1,\"663\":1,\"848\":1,\"1042\":1,\"1154\":1,\"1348\":1}}],[\"办理人变量表达式接口\",{\"0\":{\"81\":1,\"1154\":1,\"1348\":1}}],[\"办理人变量表达式扩展\",{\"0\":{\"77\":1,\"1344\":1}}],[\"办理人变量表达式测试\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"办理人变量表达式\",{\"0\":{\"38\":1,\"80\":1,\"1153\":1,\"1257\":1,\"1305\":1,\"1347\":1},\"1\":{\"102\":1,\"147\":1,\"1369\":1,\"1553\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1613\":1,\"1614\":1,\"1648\":1,\"1652\":1,\"1708\":1,\"1724\":1}}],[\"办理人唯一标识\",{\"1\":{\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"205\":1,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"338\":1,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"507\":1,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"692\":1,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"878\":1,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1074\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1424\":1}}],[\"办理人选择tabs切换\",{\"1\":{\"148\":1,\"1554\":1}}],[\"办理人选择项接口\",{\"0\":{\"49\":1,\"1316\":1}}],[\"办理人\",{\"1\":{\"48\":1,\"476\":1,\"662\":1,\"847\":1,\"1041\":1,\"1267\":1,\"1315\":1}}],[\"办理人权限选择弹框页面\",{\"0\":{\"267\":1,\"562\":1,\"748\":1,\"933\":1,\"1134\":1,\"1486\":1,\"1583\":1,\"1594\":1,\"1605\":1,\"1636\":1,\"1696\":1}}],[\"办理人权限标识\",{\"1\":{\"29\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"326\":1,\"332\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1195\":1,\"1296\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1}}],[\"办理人权限处理器\",{\"0\":{\"27\":1,\"1193\":1,\"1294\":1},\"1\":{\"28\":1,\"29\":1,\"1194\":1,\"1195\":1,\"1295\":1,\"1296\":1}}],[\"采购审批等\",{\"1\":{\"105\":1,\"1372\":1}}],[\"报销\",{\"1\":{\"105\":1,\"1372\":1}}],[\"企业可以利用dromara\",{\"1\":{\"105\":1,\"1372\":1}}],[\"企业可以实现办公流程的自动化\",{\"1\":{\"105\":1,\"1372\":1}}],[\"企业内部流程管理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"企业综合办公管理系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"尤其是针对中小型项目\",{\"1\":{\"105\":1,\"1372\":1}}],[\"若您的项目无法满足以上几点\",{\"1\":{\"104\":1,\"1371\":1}}],[\"若愚\",{\"1\":{\"83\":1,\"1350\":1}}],[\"不再需要\",{\"1\":{\"1654\":2,\"1726\":2}}],[\"不需要在为引入设计器而烦恼了\",{\"1\":{\"1578\":1,\"1589\":1,\"1600\":1,\"1631\":1,\"1691\":1}}],[\"不需要代理\",{\"1\":{\"746\":1}}],[\"不需要搬运并且适配等工作\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"不迷路\",{\"1\":{\"283\":1,\"1221\":1,\"1502\":1}}],[\"不可保存\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"不可二次分发开源参与同类竞品\",{\"1\":{\"104\":1,\"1371\":1}}],[\"不符合业务要求\",{\"1\":{\"247\":1,\"375\":1,\"544\":1,\"729\":1,\"915\":1,\"1114\":1,\"1466\":1}}],[\"不包含\",{\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"不等于\",{\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"不传不校验权限\",{\"1\":{\"193\":1,\"200\":1,\"496\":1,\"502\":1,\"681\":1,\"687\":1,\"867\":1,\"873\":1,\"1062\":1,\"1069\":1,\"1412\":1,\"1419\":1}}],[\"不忽略\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"338\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"692\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"不校验是否有审批人\",{\"1\":{\"157\":1,\"1563\":1}}],[\"不做权限校验\",{\"1\":{\"153\":1,\"1559\":1}}],[\"不是创建时间\",{\"1\":{\"150\":1,\"1556\":1}}],[\"不接收外部设置\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"不受限制\",{\"1\":{\"136\":1,\"1542\":1}}],[\"不填默认为orm扩展自带生成器或者warm\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"不代表着项目收费\",{\"1\":{\"126\":1,\"1532\":1}}],[\"不同情况对应不同协作类型\",{\"1\":{\"231\":1,\"1450\":1}}],[\"不同节点也支持配置审批表单路径\",{\"1\":{\"155\":1,\"1561\":1}}],[\"不同的操作\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"不同实体类\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"商业使用请保留源码和相关描述文件的项目出处\",{\"1\":{\"104\":1,\"1371\":1}}],[\"需执行1\",{\"1\":{\"1652\":1,\"1724\":1}}],[\"需高版本比如3\",{\"1\":{\"1286\":1}}],[\"需要单独使用\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"需要增加排除\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"需要增加他人参与审批\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"需要查看\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"需要注意\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"需要注意以下几点\",{\"1\":{\"104\":1,\"1371\":1}}],[\"需要动态指定办理人的节点\",{\"1\":{\"1620\":1,\"1680\":1}}],[\"需要减少他人参与审批\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"需要制定任务计划\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"需要保存草稿功能\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"需要插入的集合数据\",{\"1\":{\"223\":1,\"356\":1,\"525\":1,\"710\":1,\"896\":1,\"1092\":1,\"1442\":1}}],[\"需要更多功能代码\",{\"1\":{\"104\":1,\"1371\":1}}],[\"需求确定了以后就可以开始专注的写代码了\",{\"1\":{\"89\":1,\"1356\":1}}],[\"您如果需要源码开发方式\",{\"1\":{\"104\":1,\"1371\":1}}],[\"您可以\",{\"1\":{\"0\":4}}],[\"⭐️是我持续开发的动力\",{\"1\":{\"102\":1,\"1369\":1}}],[\"很实用\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"兼容java8和java17\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"兼有传统tms的竞标\",{\"1\":{\"83\":1,\"1350\":1}}],[\"和配置可能需要一些耐心和实践\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"和部分人一起审批\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"和其他人一起审批通过\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"和\",{\"1\":{\"121\":1,\"1388\":1}}],[\"和postgresql\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"和spel格式的表达式\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"动态表单支持\",{\"1\":{\"145\":1,\"1550\":1}}],[\"动态加载这个页面\",{\"1\":{\"113\":1,\"414\":1,\"599\":1,\"785\":1,\"978\":1,\"1198\":1,\"1380\":1}}],[\"动态权限\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"动态修改代办任务信息\",{\"1\":{\"3\":1,\"8\":1,\"16\":1,\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1,\"1169\":1,\"1174\":1,\"1182\":1,\"1270\":1,\"1275\":1,\"1283\":1}}],[\"参照如下文章\",{\"1\":{\"131\":1,\"1537\":1}}],[\"参数传递\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"参与贡献\",{\"0\":{\"85\":1,\"1352\":1}}],[\"票签必填\",{\"1\":{\"1551\":1}}],[\"票签所有待办权限只支持个人\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"票签通过率\",{\"1\":{\"428\":2,\"613\":2,\"799\":2,\"992\":2,\"1212\":2,\"1219\":2}}],[\"票签签\",{\"0\":{\"235\":1,\"1454\":1}}],[\"票签等\",{\"0\":{\"231\":1,\"1450\":1}}],[\"票签和或签\",{\"1\":{\"115\":1,\"231\":1,\"416\":1,\"601\":1,\"787\":1,\"980\":1,\"1200\":1,\"1382\":1,\"1450\":1}}],[\"票签\",{\"1\":{\"102\":1,\"152\":1,\"157\":1,\"158\":1,\"232\":1,\"277\":1,\"423\":1,\"428\":1,\"608\":1,\"613\":1,\"794\":1,\"799\":1,\"987\":1,\"992\":1,\"1207\":1,\"1212\":1,\"1214\":1,\"1219\":1,\"1369\":1,\"1451\":1,\"1496\":1,\"1558\":1,\"1563\":1,\"1564\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"任意跳转\",{\"1\":{\"102\":1,\"276\":2,\"993\":2,\"1213\":2,\"1369\":1,\"1495\":2,\"1551\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1670\":1,\"1708\":1,\"1714\":1,\"1716\":1}}],[\"任务总人数\",{\"1\":{\"428\":2,\"613\":2,\"799\":2,\"992\":2,\"1212\":2,\"1219\":2}}],[\"任务表id\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"任务变量\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"任务变量就当前任务触发的监听器时可以获取\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"任务的需要分配执行人\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"任务的需要有先后顺序\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"任务转给其他人办理\",{\"1\":{\"273\":1,\"276\":1,\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1492\":1,\"1495\":1,\"1496\":1}}],[\"任务转办给别人等\",{\"1\":{\"272\":1,\"1491\":1}}],[\"任务自动流转到创建人\",{\"1\":{\"161\":1,\"1567\":1}}],[\"任务审批通过\",{\"1\":{\"157\":1,\"1563\":1}}],[\"任务开始\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"任务开始办理时执行\",{\"1\":{\"3\":1,\"8\":1,\"16\":1,\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1,\"1169\":1,\"1174\":1,\"1182\":1,\"1270\":1,\"1275\":1,\"1283\":1,\"1672\":1,\"1718\":1}}],[\"任务创建时执行\",{\"1\":{\"3\":1,\"8\":1,\"16\":1,\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1,\"1169\":1,\"1174\":1,\"1182\":1,\"1270\":1,\"1275\":1,\"1283\":1,\"1672\":1,\"1718\":1}}],[\"退回不校验是否办理过\",{\"1\":{\"1551\":1}}],[\"退回不能选择通过类型\",{\"1\":{\"116\":1,\"417\":1,\"602\":1,\"788\":1,\"981\":1,\"1201\":1,\"1383\":1}}],[\"退回\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"审批任务的办理人\",{\"1\":{\"1619\":1,\"1679\":1}}],[\"审批者\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"审批表单是否自定义\",{\"1\":{\"303\":1,\"304\":1,\"306\":1,\"308\":1,\"452\":1,\"453\":1,\"455\":1,\"457\":1,\"638\":1,\"639\":1,\"641\":1,\"643\":1,\"823\":1,\"824\":1,\"826\":1,\"828\":1,\"1017\":1,\"1018\":1,\"1020\":1,\"1022\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1246\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1527\":1}}],[\"审批表单路径\",{\"1\":{\"113\":1,\"303\":1,\"304\":1,\"306\":1,\"308\":1,\"414\":1,\"452\":1,\"453\":1,\"455\":1,\"457\":1,\"599\":1,\"638\":1,\"639\":1,\"641\":1,\"643\":1,\"785\":1,\"823\":1,\"824\":1,\"826\":1,\"828\":1,\"978\":1,\"1017\":1,\"1018\":1,\"1020\":1,\"1022\":1,\"1198\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1246\":1,\"1380\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1527\":1}}],[\"审批中\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"审批通过率\",{\"1\":{\"428\":2,\"613\":2,\"799\":2,\"992\":2,\"1212\":2,\"1219\":2}}],[\"审批通过\",{\"1\":{\"277\":1,\"279\":1,\"304\":1,\"305\":1,\"423\":1,\"425\":1,\"453\":1,\"454\":1,\"608\":1,\"610\":1,\"639\":1,\"640\":1,\"794\":1,\"796\":1,\"824\":1,\"825\":1,\"987\":1,\"989\":1,\"1018\":1,\"1019\":1,\"1207\":1,\"1209\":1,\"1214\":1,\"1216\":1,\"1242\":1,\"1243\":1,\"1496\":1,\"1498\":1,\"1523\":1,\"1524\":1}}],[\"审批\",{\"1\":{\"276\":1,\"428\":5,\"429\":1,\"613\":5,\"614\":1,\"799\":5,\"800\":1,\"992\":5,\"993\":1,\"1212\":5,\"1213\":1,\"1219\":5,\"1495\":1}}],[\"审批业务中经常会出现办理人中途变更的情况\",{\"1\":{\"272\":1,\"1491\":1}}],[\"审批节点才会通过\",{\"1\":{\"232\":3,\"276\":3,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1451\":3,\"1495\":3}}],[\"审批过程中可能存在\",{\"1\":{\"231\":1,\"1450\":1}}],[\"审批意见\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"304\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"453\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"639\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"824\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"1018\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1242\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1523\":1}}],[\"审批页面中包含业务详情页面\",{\"1\":{\"171\":1,\"1577\":1}}],[\"审批功能\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"审批前获取当前办理人\",{\"1\":{\"28\":1,\"1194\":1,\"1295\":1}}],[\"审批前通常需要获取当前办理人所拥有的权限\",{\"1\":{\"27\":1,\"1193\":1,\"1294\":1}}],[\"简洁易用\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"简易工作流\",{\"1\":{\"83\":1,\"1350\":1}}],[\"五脏俱全\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"其中可能包含功能改进\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"其中yyy为变量名\",{\"1\":{\"1458\":1}}],[\"其中yyy为变量\",{\"1\":{\"239\":1,\"1102\":1}}],[\"其设计简洁轻量但功能全面\",{\"1\":{\"105\":1,\"1372\":1}}],[\"其特点简洁轻量但又不简单\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"其特点简洁轻量\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"其他的扩展包可忽略\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"其他不变\",{\"1\":{\"741\":1,\"1592\":1}}],[\"其他配置\",{\"1\":{\"131\":2,\"1537\":2}}],[\"其他修改\",{\"1\":{\"98\":1,\"1365\":1}}],[\"其他请查阅核心api\",{\"0\":{\"60\":1,\"374\":1,\"543\":1,\"728\":1,\"914\":1,\"1113\":1,\"1327\":1}}],[\"介绍\",{\"0\":{\"101\":1,\"1368\":1}}],[\"直到没有问题后被作者合并\",{\"0\":{\"100\":1,\"1367\":1}}],[\"此工作流持续开发一年了\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"此工作流已经持续开发有一年有余\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"此代码拦截所有仓库\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"此配置上传到本地的路径\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"此时根据\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"此时办理人变量表达式就派上用场了\",{\"1\":{\"38\":1,\"1257\":1,\"1305\":1}}],[\"此处填写数据源名称\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"此处属于固定配置\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"此操作在自己仓库或者要pr的仓库都可以\",{\"0\":{\"99\":1,\"1366\":1}}],[\"性能提升\",{\"1\":{\"98\":1,\"1365\":1}}],[\"优先执行节点监听器\",{\"1\":{\"391\":1,\"576\":1,\"762\":1,\"955\":1}}],[\"优先级最高\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"优化表实体类链式赋值\",{\"1\":{\"162\":1,\"1568\":1}}],[\"优化\",{\"1\":{\"98\":1,\"1365\":1}}],[\"优秀开源集成案例\",{\"1\":{\"0\":1}}],[\"增加办理人\",{\"1\":{\"203\":1,\"205\":1,\"334\":1,\"335\":1,\"336\":2,\"337\":1,\"338\":1,\"505\":1,\"507\":1,\"688\":1,\"689\":1,\"690\":2,\"691\":1,\"692\":1,\"876\":1,\"878\":1,\"1072\":1,\"1074\":1,\"1422\":1,\"1424\":1}}],[\"增加办理人变量表达式\",{\"1\":{\"152\":1,\"1558\":1}}],[\"增加监听器\",{\"1\":{\"167\":1,\"1573\":1}}],[\"增加全局变量\",{\"1\":{\"167\":1,\"1573\":1}}],[\"增加全局监听器\",{\"1\":{\"147\":1,\"1553\":1,\"1612\":1,\"1613\":1}}],[\"增加软删除可以配置化\",{\"1\":{\"159\":1,\"1565\":1}}],[\"增加组件加载\",{\"1\":{\"155\":1,\"1561\":1}}],[\"增加基于流程定义id获取流程图\",{\"1\":{\"154\":1,\"1560\":1}}],[\"增加获取下个节点集合api\",{\"1\":{\"154\":1,\"1560\":1}}],[\"增加参数合法性校验\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"增加新功能\",{\"1\":{\"98\":1,\"1365\":1}}],[\"增加默认选项比如发起人\",{\"1\":{\"49\":1,\"1316\":1}}],[\"切换到新建的功能分支\",{\"0\":{\"96\":1,\"1363\":1}}],[\"步骤八\",{\"0\":{\"100\":1,\"1367\":1}}],[\"步骤七\",{\"0\":{\"99\":1,\"1366\":1}}],[\"步骤六\",{\"0\":{\"98\":1,\"1365\":1}}],[\"步骤五\",{\"0\":{\"97\":1,\"1364\":1}}],[\"步骤四\",{\"0\":{\"96\":1,\"1363\":1}}],[\"步骤三\",{\"0\":{\"95\":1,\"1362\":1}}],[\"步骤二\",{\"0\":{\"94\":1,\"1361\":1}}],[\"步骤一\",{\"0\":{\"93\":1,\"1360\":1}}],[\"视情况而定\",{\"1\":{\"91\":1,\"1358\":1}}],[\"持续为社区优化文档或处理issue若干\",{\"1\":{\"90\":1,\"1357\":1}}],[\"持续完成社区发布的简单任务若干\",{\"1\":{\"90\":1,\"1357\":1}}],[\"持久化保存数据\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"但是这样对一般的项目会是好事吗\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"但是由于不同orm框架的数据库操作的\",{\"1\":{\"408\":1,\"593\":1,\"779\":1,\"972\":1}}],[\"但在开始写代码之前\",{\"1\":{\"89\":1,\"1356\":1}}],[\"但一群人会走的更远\",{\"1\":{\"0\":1}}],[\"觉得自己能做的可以在issue里跟作者讨论\",{\"1\":{\"89\":1,\"1356\":1}}],[\"觉得哪应该详细说明\",{\"1\":{\"88\":1,\"1355\":1}}],[\"觉得哪看不懂\",{\"1\":{\"88\":1,\"1355\":1}}],[\"贡献代码\",{\"0\":{\"89\":1,\"1356\":1}}],[\"有多个演练环节\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"有多租户需要\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1}}],[\"有想扩展其他orm框架和数据库的可加qq群联系群主\",{\"1\":{\"290\":1,\"440\":1,\"625\":1,\"811\":1,\"1004\":1,\"1228\":1,\"1509\":1}}],[\"有一个完成\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"有偿服务\",{\"0\":{\"125\":1,\"1531\":1}}],[\"有时候作者把文档写完了也不知道用户是什么感觉\",{\"1\":{\"88\":1,\"1355\":1}}],[\"有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"使精力全部投入到项目设计研发中\",{\"1\":{\"87\":1,\"1354\":1}}],[\"使用简单的解决方案可能更合适\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"使用设计器\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"使用演示\",{\"0\":{\"233\":1,\"1452\":1}}],[\"使用jar引入方式引入设计器\",{\"1\":{\"150\":1,\"1556\":1}}],[\"使用方式在类上面写上\",{\"1\":{\"97\":1,\"1364\":1}}],[\"使用idea打开项目\",{\"0\":{\"96\":1,\"1363\":1}}],[\"使用git工具\",{\"0\":{\"95\":1,\"1362\":1}}],[\"使用下面方法\",{\"1\":{\"32\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1299\":1}}],[\"使用mybaits\",{\"1\":{\"24\":1,\"26\":1,\"409\":1,\"411\":1,\"594\":1,\"596\":1,\"780\":1,\"782\":1,\"973\":1,\"975\":1,\"1190\":1,\"1192\":1,\"1291\":1,\"1293\":1}}],[\"而且可以降低社区人员的精力分散\",{\"1\":{\"87\":1,\"1354\":1}}],[\"屏幕截图\",{\"1\":{\"87\":2,\"93\":1,\"95\":1,\"96\":1,\"98\":1,\"99\":1,\"100\":1,\"113\":1,\"118\":1,\"120\":1,\"385\":2,\"414\":1,\"419\":1,\"421\":1,\"570\":2,\"599\":1,\"604\":1,\"606\":1,\"756\":2,\"785\":1,\"790\":1,\"792\":1,\"949\":2,\"978\":1,\"983\":1,\"985\":1,\"1163\":2,\"1198\":1,\"1203\":1,\"1205\":1,\"1354\":2,\"1360\":1,\"1362\":1,\"1363\":1,\"1365\":1,\"1366\":1,\"1367\":1,\"1380\":1,\"1385\":1,\"1387\":1,\"1671\":1,\"1672\":1,\"1675\":1,\"1717\":1,\"1718\":1,\"1721\":1}}],[\"提供流程配置界面\",{\"1\":{\"171\":1,\"1577\":1}}],[\"提供角色\",{\"1\":{\"171\":1,\"1577\":1}}],[\"提供待办任务\",{\"1\":{\"171\":1,\"1577\":1}}],[\"提供集成方式\",{\"1\":{\"171\":1,\"1577\":1}}],[\"提供\",{\"1\":{\"133\":1,\"1539\":1}}],[\"提供的方案\",{\"1\":{\"132\":2,\"1538\":2}}],[\"提供实例\",{\"1\":{\"131\":1,\"1537\":1}}],[\"提供解决方案\",{\"1\":{\"131\":1,\"1537\":1}}],[\"提供问题答疑服务和技术分享等服务\",{\"1\":{\"126\":1,\"1532\":1}}],[\"提示语增加流程编码\",{\"1\":{\"155\":1,\"1561\":1}}],[\"提示\",{\"1\":{\"113\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"133\":1,\"134\":1,\"136\":1,\"138\":1,\"139\":1,\"1380\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1539\":1,\"1540\":1,\"1542\":1,\"1544\":1,\"1545\":1}}],[\"提高业务效率\",{\"1\":{\"105\":1,\"1372\":1}}],[\"提高工作效率\",{\"1\":{\"105\":1,\"1372\":1}}],[\"提问的规范在issue的模板里已经写好了\",{\"1\":{\"87\":1,\"1354\":1}}],[\"提交审批后的状态\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"提交流程后\",{\"1\":{\"118\":1,\"419\":1,\"604\":1,\"790\":1,\"983\":1,\"1203\":1,\"1385\":1}}],[\"提交流程\",{\"0\":{\"118\":1,\"419\":1,\"604\":1,\"790\":1,\"983\":1,\"1203\":1,\"1385\":1}}],[\"提交到自己的远程仓库\",{\"0\":{\"98\":1,\"1365\":1}}],[\"提交pr\",{\"0\":{\"92\":1,\"1359\":1}}],[\"提交\",{\"1\":{\"0\":2}}],[\"大于等于流程设计时指定的\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"大于等于\",{\"1\":{\"238\":1,\"382\":1,\"567\":1,\"753\":1,\"946\":1,\"1101\":1,\"1147\":1,\"1457\":1}}],[\"大于\",{\"1\":{\"238\":1,\"382\":1,\"428\":1,\"567\":1,\"613\":1,\"753\":1,\"799\":1,\"946\":1,\"992\":1,\"1101\":1,\"1147\":1,\"1212\":1,\"1219\":1,\"1457\":1}}],[\"大大缩短了学习成本\",{\"1\":{\"121\":1,\"1388\":1}}],[\"大家好\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"大家也可以对文档进行改进后提交pr修改申请\",{\"1\":{\"88\":1,\"1355\":1}}],[\"大家可以在issue提出观后感\",{\"1\":{\"88\":1,\"1355\":1}}],[\"大家都知道\",{\"1\":{\"88\":1,\"1355\":1}}],[\"大家会在这里提出自己的问题\",{\"1\":{\"87\":1,\"1354\":1}}],[\"大家在寻找开源项目的时候\",{\"1\":{\"86\":1,\"1353\":1}}],[\"大多数情况也是会先看star比较多的项目\",{\"1\":{\"86\":1,\"1353\":1}}],[\"跌了会失落\",{\"1\":{\"86\":1,\"1353\":1}}],[\"涨了会开心\",{\"1\":{\"86\":1,\"1353\":1}}],[\"本次升级\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"本次的版本大大提升了工作流的使用便捷性\",{\"1\":{\"1612\":1}}],[\"本实例采用iframe方式嵌入设计器\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"本项目代码可免费商业使用\",{\"1\":{\"104\":1,\"1371\":1}}],[\"本科毕业设计\",{\"1\":{\"83\":1,\"1350\":1}}],[\"本节点配置办理人变量表达式\",{\"1\":{\"42\":1,\"1261\":1,\"1309\":1}}],[\"南山客\",{\"1\":{\"83\":1,\"1350\":1}}],[\"毕业设计\",{\"1\":{\"83\":2,\"1350\":2}}],[\"基于\",{\"1\":{\"121\":1,\"1388\":1}}],[\"基于ruoyi\",{\"1\":{\"121\":3,\"1388\":3}}],[\"基于dev分支\",{\"0\":{\"94\":1,\"1361\":1}}],[\"基于springboot的财务管理系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"基于ssm的职工管理系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"基于机器学习的只能停车管理系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"基于工业互联网的数字化安全与质量管理平台\",{\"1\":{\"83\":1,\"1350\":1}}],[\"数据类型\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"数据表\",{\"1\":{\"301\":1,\"450\":1,\"636\":1,\"821\":1,\"1015\":1,\"1239\":1,\"1520\":1}}],[\"数据库\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"数据库支持\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"数据填充器\",{\"0\":{\"247\":1,\"1114\":1,\"1466\":1}}],[\"数据共享等等\",{\"1\":{\"83\":1,\"1350\":1}}],[\"数据源绑定\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"数据源\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"暗影\",{\"1\":{\"83\":1,\"1350\":1}}],[\"雨巷\",{\"1\":{\"83\":1,\"1350\":1}}],[\"政务系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"智慧政务\",{\"1\":{\"83\":1,\"1350\":1}}],[\"智慧燃气平台\",{\"1\":{\"83\":2,\"1350\":2}}],[\"湖北建科工程\",{\"1\":{\"83\":1,\"1350\":1}}],[\"图灵谷\",{\"1\":{\"83\":1,\"1350\":1}}],[\"节水信息管理系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"节点详情进入改为双击\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"节点全部改成节点\",{\"1\":{\"1551\":1}}],[\"节点名称\",{\"1\":{\"308\":1,\"457\":1,\"643\":1,\"828\":1,\"1022\":1,\"1246\":1,\"1527\":1}}],[\"节点跳转关联表\",{\"1\":{\"301\":1,\"450\":1,\"636\":1,\"821\":1,\"1015\":1,\"1239\":1,\"1520\":1}}],[\"节点类型\",{\"1\":{\"277\":1,\"305\":1,\"306\":1,\"308\":1,\"423\":1,\"454\":1,\"455\":1,\"457\":1,\"608\":1,\"640\":1,\"641\":1,\"643\":1,\"794\":1,\"825\":1,\"826\":1,\"828\":1,\"987\":1,\"1019\":1,\"1020\":1,\"1022\":1,\"1207\":1,\"1214\":1,\"1243\":1,\"1244\":1,\"1246\":1,\"1496\":1,\"1524\":1,\"1525\":1,\"1527\":1}}],[\"节点编码\",{\"1\":{\"192\":1,\"199\":1,\"308\":1,\"326\":1,\"332\":1,\"457\":1,\"495\":1,\"501\":1,\"643\":1,\"680\":1,\"686\":1,\"828\":1,\"866\":1,\"872\":1,\"1022\":1,\"1061\":1,\"1068\":1,\"1246\":1,\"1411\":1,\"1418\":1,\"1527\":1}}],[\"节点线条保存关联名称\",{\"1\":{\"150\":1,\"1556\":1}}],[\"节点权限\",{\"1\":{\"115\":1,\"416\":1,\"601\":1,\"787\":1,\"980\":1,\"1200\":1,\"1382\":1}}],[\"节点和流程监听器\",{\"0\":{\"7\":1,\"1173\":1,\"1274\":1}}],[\"节点监听器和某个节点有关\",{\"1\":{\"391\":1,\"576\":1,\"762\":1,\"955\":1}}],[\"节点监听器\",{\"0\":{\"14\":1,\"400\":1,\"585\":1,\"771\":1,\"964\":1,\"1180\":1,\"1281\":1},\"1\":{\"2\":2,\"391\":1,\"576\":1,\"762\":1,\"955\":1,\"1168\":2,\"1269\":2}}],[\"海狼oa系统\",{\"1\":{\"83\":2,\"1350\":2}}],[\"对于英文不好的人来说\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"对于简单的工作流程来说\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"对于初学者来说\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"对于时效要求高的流程\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"对当前流程节点进行审核操作\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"对应flow\",{\"1\":{\"304\":3,\"305\":1,\"308\":2,\"453\":3,\"454\":1,\"457\":2,\"639\":3,\"640\":1,\"643\":2,\"824\":3,\"825\":1,\"828\":2,\"1018\":3,\"1019\":1,\"1022\":2,\"1242\":3,\"1243\":1,\"1246\":2,\"1523\":3,\"1524\":1,\"1527\":2}}],[\"对应版本号\",{\"1\":{\"140\":1,\"1546\":1}}],[\"对应数据库类型\",{\"1\":{\"140\":1,\"1546\":1}}],[\"对框架有重大贡献者\",{\"1\":{\"90\":1,\"1357\":1}}],[\"对各类事项进行检查\",{\"1\":{\"83\":1,\"1350\":1}}],[\"对象\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"合规性和风险管理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"合规管控系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"合法性校验\",{\"1\":{\"55\":1,\"1161\":1,\"1322\":1}}],[\"某某公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"半月无霜个人项目\",{\"1\":{\"83\":1,\"1350\":1}}],[\"半月无霜\",{\"1\":{\"83\":1,\"1350\":1}}],[\"仿钉钉界面的开源工作流平台\",{\"1\":{\"83\":1,\"1350\":1}}],[\"武汉数演科技有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"行内人员使用\",{\"1\":{\"83\":1,\"1350\":1}}],[\"外围管理平台\",{\"1\":{\"83\":1,\"1350\":1}}],[\"抚顺银行\",{\"1\":{\"83\":1,\"1350\":1}}],[\"打包附带api文档\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"打包附带源码\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"打包项目\",{\"1\":{\"66\":1,\"67\":1,\"943\":1,\"944\":1,\"1144\":1,\"1145\":1,\"1333\":1,\"1334\":1}}],[\"打开新的页签\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"打造免费开源低代码平台\",{\"1\":{\"83\":2,\"1350\":2}}],[\"陕西物联达智能科技有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"签收等功能\",{\"1\":{\"83\":1,\"1350\":1}}],[\"跟踪\",{\"1\":{\"83\":1,\"1350\":1}}],[\"派车\",{\"1\":{\"83\":1,\"1350\":1}}],[\"融运力tms是基于移动互联网的面向货主侧需求的订单履约类的tms系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"融运力tms\",{\"1\":{\"83\":1,\"1350\":1}}],[\"山东融佑信息科技有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"郑州如阳科技有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"端到端全生命周期数字化安全与质量管理\",{\"1\":{\"83\":1,\"1350\":1}}],[\"质量和安全为一体\",{\"1\":{\"83\":1,\"1350\":1}}],[\"质量管理系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"集团军要对某个区域进行长期的军事演练\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"集合数据\",{\"1\":{\"224\":1,\"357\":1,\"526\":1,\"711\":1,\"897\":1,\"1093\":1,\"1443\":1}}],[\"集风险\",{\"1\":{\"83\":1,\"1350\":1}}],[\"集成工作流引擎\",{\"1\":{\"83\":1,\"1350\":1}}],[\"杭州三之一智联科技有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"进销存运营平台\",{\"1\":{\"83\":1,\"1350\":1}}],[\"进行绘制流程的进度和状态\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"进行精简\",{\"1\":{\"1551\":1}}],[\"进行不同的军事演练任务\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"进行控制\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"进行保存或者校验\",{\"1\":{\"27\":1,\"1193\":1,\"1294\":1}}],[\"进行业务处理\",{\"1\":{\"1\":1,\"389\":1,\"574\":1,\"760\":1,\"953\":1,\"1167\":1,\"1268\":1}}],[\"极点oa智慧网络办公系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"重新加载依赖\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"重新定义监听器名称\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"重走流程\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"重启idea\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"重启流程\",{\"1\":{\"142\":1,\"1548\":1}}],[\"重启服务\",{\"1\":{\"132\":1,\"1538\":1}}],[\"重构流程开启流程和流程办理代码\",{\"1\":{\"163\":1,\"1569\":1}}],[\"重构代码\",{\"1\":{\"162\":1,\"167\":1,\"169\":1,\"1568\":1,\"1573\":1,\"1575\":1}}],[\"重构solon和插件模块\",{\"1\":{\"155\":1,\"1561\":1}}],[\"重构skip等方法通用校验\",{\"1\":{\"149\":1,\"1555\":1}}],[\"重构测试模块\",{\"1\":{\"155\":1,\"1561\":1}}],[\"重构id生成器\",{\"1\":{\"152\":1,\"1558\":1}}],[\"重构条件表达式和办理人变量表达式\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"重构test项目\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"重构\",{\"1\":{\"98\":1,\"1365\":1}}],[\"重点来了\",{\"1\":{\"89\":1,\"1356\":1}}],[\"重庆\",{\"1\":{\"83\":1,\"1350\":1}}],[\"重要\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"19\":1,\"23\":1,\"27\":1,\"31\":1,\"38\":1,\"50\":1,\"51\":1,\"57\":1,\"61\":1,\"69\":1,\"71\":1,\"72\":1,\"77\":1,\"78\":1,\"102\":1,\"110\":1,\"140\":1,\"231\":1,\"237\":1,\"247\":1,\"253\":1,\"272\":1,\"282\":1,\"300\":1,\"310\":1,\"371\":1,\"375\":1,\"387\":1,\"389\":1,\"390\":1,\"391\":1,\"404\":1,\"412\":1,\"430\":1,\"449\":1,\"460\":1,\"467\":1,\"540\":1,\"544\":1,\"550\":1,\"572\":1,\"574\":1,\"575\":1,\"576\":1,\"589\":1,\"597\":1,\"615\":1,\"635\":1,\"646\":1,\"653\":1,\"725\":1,\"729\":1,\"735\":1,\"758\":1,\"760\":1,\"761\":1,\"762\":1,\"775\":1,\"783\":1,\"801\":1,\"820\":1,\"831\":1,\"838\":1,\"911\":1,\"915\":1,\"921\":1,\"951\":1,\"953\":1,\"954\":1,\"955\":1,\"968\":1,\"976\":1,\"994\":1,\"1014\":1,\"1025\":1,\"1032\":1,\"1100\":1,\"1110\":1,\"1114\":1,\"1120\":1,\"1139\":1,\"1150\":1,\"1151\":1,\"1165\":1,\"1167\":1,\"1168\":1,\"1169\":1,\"1185\":1,\"1189\":1,\"1193\":1,\"1196\":1,\"1220\":1,\"1238\":1,\"1249\":1,\"1256\":1,\"1257\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1286\":1,\"1290\":1,\"1294\":1,\"1298\":1,\"1305\":1,\"1317\":1,\"1318\":1,\"1324\":1,\"1328\":1,\"1336\":1,\"1338\":1,\"1339\":1,\"1344\":1,\"1345\":1,\"1369\":1,\"1377\":1,\"1450\":1,\"1456\":1,\"1466\":1,\"1472\":1,\"1491\":1,\"1501\":1,\"1519\":1,\"1529\":1,\"1546\":1,\"1591\":1,\"1592\":1,\"1593\":1,\"1597\":1,\"1668\":1,\"1714\":1}}],[\"新群\",{\"0\":{\"1612\":1}}],[\"新手教学视频\",{\"1\":{\"448\":1,\"634\":1,\"819\":1,\"1013\":1,\"1237\":1}}],[\"新宋体\",{\"1\":{\"132\":1,\"1538\":1}}],[\"新闻公告\",{\"0\":{\"124\":1,\"1530\":1}}],[\"新增oa\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"新增\",{\"0\":{\"217\":1,\"350\":1,\"519\":1,\"704\":1,\"890\":1,\"1086\":1,\"1436\":1},\"1\":{\"217\":1,\"350\":1,\"519\":1,\"704\":1,\"890\":1,\"1086\":1,\"1436\":1}}],[\"新增后需要通过savexml接口保存流程节点和流程跳转数据\",{\"0\":{\"174\":1,\"480\":1,\"851\":1,\"1045\":1,\"1393\":1}}],[\"新增多租户模式\",{\"1\":{\"171\":1,\"1577\":1}}],[\"新增vue3版本\",{\"1\":{\"171\":1,\"1577\":1}}],[\"新增代码示例\",{\"1\":{\"167\":1,\"1573\":1}}],[\"新增根据流程定义和当前节点code获取下一节点api接口\",{\"1\":{\"165\":1,\"1571\":1}}],[\"新增根据流程定义id集合\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"新增权限监听器\",{\"1\":{\"164\":1,\"1570\":1}}],[\"新增监听器生命周期概念\",{\"1\":{\"163\":1,\"1569\":1}}],[\"新增监听器spel表达式\",{\"1\":{\"147\":1,\"1553\":1,\"1612\":1,\"1613\":1}}],[\"新增创建任务监听器\",{\"1\":{\"163\":1,\"1569\":1}}],[\"新增创建流程定义\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"新增赋值流程记录创建更新时间\",{\"1\":{\"162\":1,\"1568\":1}}],[\"新增历史任务记录结束节点\",{\"1\":{\"162\":1,\"1568\":1}}],[\"新增链式查询排序提供id排序\",{\"1\":{\"162\":1,\"1568\":1}}],[\"新增配置文件\",{\"1\":{\"162\":1,\"1568\":1}}],[\"新增三个测试模块\",{\"1\":{\"159\":1,\"1565\":1}}],[\"新增用户表\",{\"1\":{\"158\":1,\"1564\":1}}],[\"新增1\",{\"1\":{\"157\":1,\"1563\":1}}],[\"新增测试模块\",{\"1\":{\"157\":1,\"1563\":1}}],[\"新增抄送演示案例\",{\"1\":{\"157\":1,\"1563\":1}}],[\"新增抄送人方法\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"新增jpa的solon扩展包\",{\"1\":{\"155\":1,\"1561\":1}}],[\"新增mybatis\",{\"1\":{\"155\":1,\"157\":1,\"1551\":1,\"1561\":1,\"1563\":1}}],[\"新增mybatisplusconfig\",{\"1\":{\"136\":1,\"1542\":1}}],[\"新增easy\",{\"1\":{\"155\":1,\"1561\":1}}],[\"新增分派监听器\",{\"1\":{\"155\":1,\"1561\":1}}],[\"新增可通过spi机制加载条件表达式\",{\"1\":{\"155\":1,\"1561\":1}}],[\"新增spel条件表达式\",{\"1\":{\"155\":1,\"1561\":1}}],[\"新增方法\",{\"1\":{\"150\":1,\"1556\":1}}],[\"新增办理人变量表达式流程案例\",{\"1\":{\"150\":1,\"1556\":1}}],[\"新增办理人选择项接口\",{\"1\":{\"145\":1,\"1550\":1}}],[\"新增转办\",{\"1\":{\"149\":1,\"1555\":1}}],[\"新增流程定义\",{\"0\":{\"175\":1,\"481\":1,\"1046\":1,\"1394\":1}}],[\"新增流程定义表数据\",{\"0\":{\"174\":1,\"480\":1,\"851\":1,\"1045\":1,\"1393\":1}}],[\"新增流程状态枚举\",{\"1\":{\"149\":1,\"1555\":1}}],[\"新增流程图元数据\",{\"1\":{\"144\":1,\"1550\":1}}],[\"新增boot3+java17支持\",{\"1\":{\"149\":1,\"1555\":1}}],[\"新增支持条件表达式\",{\"1\":{\"171\":1,\"1577\":1}}],[\"新增支持接入业务系统token\",{\"1\":{\"148\":1,\"1554\":1}}],[\"新增支持solon\",{\"1\":{\"147\":1,\"1553\":1,\"1612\":1,\"1613\":1}}],[\"新增审批前获取当前办理人接口\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"新增定义\",{\"0\":{\"113\":1,\"414\":1,\"599\":1,\"785\":1,\"978\":1,\"1198\":1,\"1380\":1}}],[\"新创建的类使用这个模板生成注释\",{\"1\":{\"97\":1,\"1364\":1}}],[\"新建一个此pr功能点的专属分支\",{\"0\":{\"94\":1,\"1361\":1}}],[\"新理益智慧网络科技\",{\"1\":{\"83\":1,\"1350\":1}}],[\"内部已实现自动获取\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"内部有默认实现\",{\"1\":{\"242\":1,\"245\":1,\"251\":1,\"366\":1,\"369\":1,\"379\":1,\"535\":1,\"538\":1,\"548\":1,\"720\":1,\"723\":1,\"733\":1,\"906\":1,\"909\":1,\"919\":1,\"1105\":1,\"1108\":1,\"1118\":1,\"1461\":1,\"1464\":1,\"1470\":1}}],[\"内部oa\",{\"1\":{\"83\":4,\"1350\":4}}],[\"内部系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"内置json库snack3方式\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"内置$\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"内置常见的条件表达式\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"内置常见的和spel条件表达式\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"内置常见表达式\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"内置表达式类型\",{\"0\":{\"1457\":1}}],[\"内置表达式\",{\"0\":{\"40\":1,\"238\":1,\"382\":1,\"469\":1,\"567\":1,\"655\":1,\"753\":1,\"840\":1,\"946\":1,\"1034\":1,\"1101\":1,\"1147\":1,\"1259\":1,\"1307\":1}}],[\"项目功能模块\",{\"0\":{\"1669\":1,\"1715\":1}}],[\"项目地址\",{\"1\":{\"298\":1,\"447\":1,\"633\":1,\"818\":1,\"1012\":1,\"1236\":1,\"1517\":1}}],[\"项目上传中央仓库\",{\"1\":{\"171\":1,\"1577\":1}}],[\"项目代码\",{\"1\":{\"126\":1,\"1532\":1}}],[\"项目管理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"项目也活的更长\",{\"1\":{\"102\":1,\"1369\":1}}],[\"项目贡献者待遇\",{\"0\":{\"91\":1,\"1358\":1}}],[\"项目介绍\",{\"0\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1639\":1,\"1648\":1,\"1699\":1,\"1708\":1},\"1\":{\"83\":1,\"1350\":1}}],[\"项目名称\",{\"1\":{\"83\":1,\"121\":1,\"1350\":1,\"1388\":1}}],[\"说明匹配上监听器表达式\",{\"1\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"说明是新增\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"恒返回true\",{\"1\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"实体集合\",{\"1\":{\"222\":1,\"355\":1,\"524\":1,\"709\":1,\"895\":1,\"1091\":1,\"1441\":1}}],[\"实体\",{\"1\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"519\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":1,\"704\":1,\"705\":1,\"706\":1,\"707\":1,\"708\":1,\"890\":1,\"891\":1,\"892\":1,\"893\":1,\"894\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1090\":1,\"1436\":1,\"1437\":1,\"1438\":1,\"1439\":1,\"1440\":1}}],[\"实体类支持序列化\",{\"1\":{\"161\":1,\"1567\":1}}],[\"实例\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"实现接口获取以上页面办理人权限数据\",{\"0\":{\"268\":1,\"563\":1,\"749\":1,\"934\":1,\"1135\":1,\"1487\":1,\"1584\":1,\"1595\":1,\"1606\":1,\"1637\":1,\"1697\":1}}],[\"实现接口提供给设计器\",{\"1\":{\"266\":1,\"561\":1,\"747\":1,\"932\":1,\"1133\":1,\"1485\":1,\"1582\":1,\"1593\":1,\"1604\":1,\"1635\":1,\"1695\":1}}],[\"实现流程控制\",{\"1\":{\"121\":1,\"1388\":1}}],[\"实现\",{\"1\":{\"121\":1,\"1388\":1}}],[\"实现gettype和eval方法\",{\"1\":{\"80\":1,\"477\":1,\"663\":1,\"848\":1,\"1042\":1,\"1153\":1,\"1347\":1}}],[\"实现以下接口\",{\"0\":{\"8\":1,\"394\":1,\"579\":1,\"765\":1,\"958\":1,\"1174\":1,\"1275\":1}}],[\"实现全局监听器接口\",{\"1\":{\"2\":1,\"1168\":1,\"1269\":1}}],[\"创建人\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"创建者\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"创建时间\",{\"1\":{\"303\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"创建时间和更新时间自动生成规则\",{\"1\":{\"247\":1,\"375\":1,\"544\":1,\"729\":1,\"915\":1,\"1114\":1,\"1466\":1}}],[\"创建时间和更新时间一样的问题\",{\"1\":{\"149\":1,\"1555\":1}}],[\"创建时间设置正序排列\",{\"0\":{\"226\":1,\"359\":1,\"528\":1,\"713\":1,\"899\":1,\"1095\":1,\"1445\":1},\"1\":{\"226\":1,\"359\":1,\"528\":1,\"713\":1,\"899\":1,\"1095\":1,\"1445\":1}}],[\"创建一个bignumberserializer\",{\"1\":{\"131\":1,\"1537\":1}}],[\"创建pr申请\",{\"0\":{\"99\":1,\"1366\":1}}],[\"创建\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"创建监听器结束\",{\"1\":{\"17\":1,\"402\":1,\"587\":1,\"773\":1,\"966\":1,\"1183\":1,\"1284\":1}}],[\"创建监听器\",{\"0\":{\"12\":1,\"398\":1,\"583\":1,\"769\":1,\"962\":1,\"1178\":1,\"1279\":1},\"1\":{\"3\":1,\"8\":1,\"16\":1,\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1,\"1169\":1,\"1174\":1,\"1182\":1,\"1270\":1,\"1275\":1,\"1283\":1,\"1672\":1,\"1718\":1}}],[\"将操作权限转给别人处理\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"将自己的主办或者经办权限转移委派至别的用户代为处理\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"将自己仓库的项目拉去到本地做代码编写\",{\"0\":{\"95\":1,\"1362\":1}}],[\"将工作流中的某个任务退回给之前的执行者\",{\"1\":{\"276\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"将流程驳回至之前已经处理过的任务节点\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"将待办任务的创建时间赋予历史任务开始时间\",{\"1\":{\"157\":2,\"1563\":2}}],[\"将编写好的代码\",{\"0\":{\"98\":1,\"1365\":1}}],[\"将map转为字符串\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"将字符串转为map\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"配置管理\",{\"0\":{\"1673\":1,\"1719\":1}}],[\"配置介绍\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"配置办理人变量表达式$\",{\"1\":{\"1620\":1,\"1680\":1}}],[\"配置配置\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"配置文件目前支持banner图和填充器配置\",{\"1\":{\"1673\":1,\"1719\":1}}],[\"配置文件可以让工作流使用更加方便\",{\"1\":{\"1673\":1,\"1719\":1}}],[\"配置文件\",{\"0\":{\"240\":1,\"364\":1,\"533\":1,\"718\":1,\"904\":1,\"1103\":1,\"1459\":1}}],[\"配置了其他id策略不生效的问题\",{\"1\":{\"151\":1,\"1557\":1}}],[\"配置\",{\"1\":{\"136\":1,\"1542\":1}}],[\"配置跳转名称\",{\"1\":{\"116\":1,\"417\":1,\"602\":1,\"788\":1,\"981\":1,\"1201\":1,\"1383\":1}}],[\"配置节点名称\",{\"1\":{\"115\":1,\"416\":1,\"601\":1,\"787\":1,\"980\":1,\"1200\":1,\"1382\":1}}],[\"配置实现类的全限定名\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"配置数据源对应的\",{\"1\":{\"21\":1,\"406\":1,\"591\":1,\"777\":1,\"970\":1,\"1187\":1,\"1288\":1}}],[\"并由当前处理人处理完后进入下一节点\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"并在该文件夹下新建文件com\",{\"1\":{\"388\":1,\"759\":1}}],[\"并在该文件夹下新建文件org\",{\"1\":{\"70\":1,\"573\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"并快速接入业务系统\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"并继承datafillhandler\",{\"0\":{\"248\":1,\"376\":1,\"545\":1,\"730\":1,\"916\":1,\"1115\":1,\"1467\":1}}],[\"并初始化流程节点和流程跳转数据\",{\"0\":{\"175\":1,\"1046\":1,\"1394\":1}}],[\"并行网关范围内还存在待办任务未完成\",{\"1\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"并行网关规则\",{\"0\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"并行网关返回多个节点\",{\"1\":{\"207\":2,\"340\":2,\"509\":2,\"694\":2,\"880\":2,\"1076\":2,\"1426\":2}}],[\"并行网关\",{\"1\":{\"171\":1,\"1577\":1}}],[\"并行网关三个任务分支的时候\",{\"1\":{\"154\":1,\"1560\":1}}],[\"并支持扩展\",{\"1\":{\"152\":1,\"1558\":1}}],[\"并且流程表的逻辑删除字段都更新为0\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"并且目前只实现了这四种\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"并且按照官网流程设计器引入进行设置\",{\"1\":{\"1653\":1,\"1725\":1}}],[\"并且通过这个方法进行注册variableutil\",{\"1\":{\"477\":1,\"663\":1,\"848\":1,\"1042\":1}}],[\"并且通过这个方法进行注册expressionutil\",{\"1\":{\"384\":1,\"569\":1,\"755\":1,\"948\":1,\"1149\":1}}],[\"并且保持事务与业务系统一致\",{\"1\":{\"171\":1,\"1577\":1}}],[\"并且支持规则扩展\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"并且支持扩展\",{\"1\":{\"147\":1,\"152\":1,\"1553\":1,\"1558\":1,\"1612\":1,\"1613\":1}}],[\"并且支持自定义扩展\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"并且两个字段对应\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"并通过spi机制加载\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"并实现strtomap和maptostr方法\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"扩展支持\",{\"0\":{\"1674\":1,\"1720\":1}}],[\"扩展\",{\"0\":{\"477\":1,\"663\":1,\"848\":1,\"1042\":1}}],[\"扩展字段\",{\"1\":{\"191\":1,\"305\":1,\"325\":1,\"454\":1,\"494\":1,\"640\":1,\"679\":1,\"825\":1,\"865\":1,\"1019\":1,\"1060\":1,\"1243\":1,\"1410\":1,\"1524\":1}}],[\"扩展方便\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"扩展需要实现expressionstrategy接口或者继承expressionstrategyabstract抽象类2\",{\"1\":{\"384\":1,\"569\":1,\"755\":1,\"948\":1,\"1149\":1}}],[\"扩展需要实现variablestrategy接口\",{\"1\":{\"80\":1,\"477\":1,\"663\":1,\"848\":1,\"1042\":1,\"1153\":1,\"1347\":1}}],[\"扩展需要实现conditionstrategy接口或者继承conditionstrategyabstract抽象类\",{\"1\":{\"53\":1,\"1159\":1,\"1320\":1}}],[\"扩展策略也一定要返回true\",{\"1\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"扩展json库需要实现jsonconvert接口\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"待提交\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"待完善\",{\"1\":{\"264\":1,\"559\":1,\"745\":1,\"930\":1,\"1131\":1,\"1483\":1}}],[\"待判断的字符串\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"待办任务所有待办人都进行\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"待办任务有一个\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"待办任务表\",{\"1\":{\"300\":2,\"301\":1,\"449\":2,\"450\":1,\"635\":2,\"636\":1,\"820\":2,\"821\":1,\"1014\":2,\"1015\":1,\"1238\":2,\"1239\":1,\"1519\":2,\"1520\":1}}],[\"待办任务转为历史记录\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"待办已办查询标记为即将删除\",{\"1\":{\"162\":1,\"1568\":1}}],[\"待办表解偶用户\",{\"1\":{\"158\":1,\"1564\":1}}],[\"待补充\",{\"1\":{\"68\":1,\"1335\":1}}],[\"待开发\",{\"1\":{\"49\":1,\"1316\":1}}],[\"xdoclint\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"xiaoxiaoliu889\",{\"1\":{\"154\":4,\"155\":1,\"1560\":4,\"1561\":1}}],[\"xiarigang\",{\"1\":{\"145\":2,\"148\":1,\"152\":1,\"154\":2,\"155\":1,\"157\":1,\"1550\":2,\"1554\":1,\"1558\":1,\"1560\":2,\"1561\":1,\"1563\":1}}],[\"xml的project目录下新增如下配置\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"xml的document对象\",{\"1\":{\"179\":1,\"484\":1,\"855\":1,\"1050\":1,\"1398\":1}}],[\"xmlstring\",{\"1\":{\"177\":1,\"178\":2,\"180\":1,\"316\":1,\"482\":1,\"483\":2,\"485\":1,\"667\":1,\"668\":2,\"670\":1,\"853\":1,\"854\":2,\"856\":1,\"1048\":1,\"1049\":2,\"1051\":1,\"1396\":1,\"1397\":2,\"1399\":1}}],[\"xml中updatelogic的某个负值错误\",{\"1\":{\"157\":1,\"1563\":1}}],[\"xml加载\",{\"1\":{\"157\":1,\"1563\":1}}],[\"xml\",{\"1\":{\"136\":2,\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1542\":2,\"1643\":1,\"1670\":1,\"1703\":1,\"1716\":1}}],[\"x中dockerfile为例\",{\"1\":{\"132\":1,\"1538\":1}}],[\"xr\",{\"1\":{\"132\":2,\"1538\":2}}],[\"xxx为表达式类型\",{\"1\":{\"1458\":1}}],[\"xxx为表达式策略\",{\"1\":{\"239\":1,\"1102\":1}}],[\"xxx|yyy|zzz\",{\"1\":{\"1458\":1}}],[\"xxx\",{\"1\":{\"152\":1,\"239\":2,\"291\":1,\"441\":1,\"627\":1,\"655\":1,\"812\":1,\"840\":1,\"1006\":1,\"1034\":1,\"1102\":2,\"1229\":1,\"1510\":1,\"1558\":1,\"1670\":1,\"1716\":1}}],[\"xx单位综合信息服务系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"xx自来水股份有限公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"x\",{\"0\":{\"142\":2,\"1548\":2},\"1\":{\"67\":3,\"132\":2,\"283\":3,\"431\":3,\"616\":3,\"802\":3,\"944\":3,\"995\":3,\"1145\":3,\"1221\":3,\"1334\":3,\"1502\":3,\"1538\":2}}],[\"88<\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"8进行编码文档\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"8进行编码代码\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"8读取文件\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"8<\",{\"1\":{\"1629\":3,\"1689\":3}}],[\"80\",{\"1\":{\"309\":2,\"458\":2,\"644\":2,\"742\":1,\"829\":2,\"1023\":2,\"1247\":2,\"1528\":2,\"1592\":1}}],[\"8080`\",{\"1\":{\"744\":1}}],[\"8080\",{\"1\":{\"67\":1,\"741\":1,\"742\":1,\"743\":1,\"944\":1,\"1145\":1,\"1334\":1,\"1592\":2}}],[\"8已完成\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"84px\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"8\",{\"0\":{\"109\":1,\"138\":1,\"152\":1,\"181\":1,\"216\":1,\"217\":1,\"320\":1,\"349\":1,\"350\":1,\"443\":1,\"488\":1,\"518\":1,\"519\":1,\"632\":1,\"633\":1,\"634\":1,\"673\":1,\"703\":1,\"704\":1,\"814\":1,\"859\":1,\"889\":1,\"890\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1052\":1,\"1085\":1,\"1086\":1,\"1376\":1,\"1400\":1,\"1435\":1,\"1436\":1,\"1544\":1,\"1558\":1,\"1657\":1,\"1729\":1},\"1\":{\"132\":1,\"137\":1,\"238\":1,\"276\":1,\"300\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"382\":1,\"429\":1,\"449\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"567\":1,\"614\":1,\"635\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"753\":1,\"800\":1,\"820\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"946\":1,\"993\":1,\"1014\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1101\":1,\"1147\":1,\"1213\":1,\"1238\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1457\":1,\"1495\":1,\"1519\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1538\":1,\"1543\":1}}],[\"82\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"81\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"请尽快使用新的接口\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"请使用自定义流程状态\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"请先了解表结构\",{\"1\":{\"283\":1,\"1221\":1,\"1502\":1}}],[\"请假天数小于4\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"请假申请\",{\"1\":{\"239\":2,\"383\":2,\"568\":2,\"754\":2,\"947\":2,\"1102\":2,\"1148\":2,\"1458\":2}}],[\"请求中的token的名称或者key\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"请加微信号\",{\"1\":{\"128\":1,\"1534\":1}}],[\"请联系我\",{\"1\":{\"123\":1,\"1390\":1}}],[\"请注意\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"请注意地址少了\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"请注明软件出处\",{\"1\":{\"104\":1,\"1371\":1}}],[\"请不要删除和修改warm\",{\"1\":{\"104\":1,\"1371\":1}}],[\"请不要删除和修改根目录下的license文件\",{\"1\":{\"104\":1,\"1371\":1}}],[\"请参考如下配置文件中进行修改\",{\"1\":{\"19\":1,\"404\":1,\"589\":1,\"775\":1,\"968\":1,\"1185\":1,\"1286\":1}}],[\"访问地址改为\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"独立使用的\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"独立设计器放行路径增加\",{\"1\":{\"1653\":1,\"1725\":1}}],[\"独立服务\",{\"1\":{\"66\":1,\"943\":1,\"1144\":1,\"1333\":1}}],[\"独立启动该设计器\",{\"1\":{\"63\":1,\"940\":1,\"1141\":1,\"1330\":1}}],[\"改成arrays\",{\"1\":{\"1621\":1,\"1681\":1}}],[\"改成退回选择目标节点\",{\"1\":{\"1551\":1}}],[\"改用taskservice\",{\"1\":{\"162\":1,\"1568\":1}}],[\"改为通过mybatis\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"改为通过task表新增的form\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"改为spi方式加载\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"改为vue\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"改为org\",{\"1\":{\"1652\":1,\"1654\":2,\"1724\":1,\"1726\":2}}],[\"改为如下\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"改为只放行一个\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"改为跳转类型\",{\"1\":{\"155\":1,\"1561\":1}}],[\"改为有上层jar加载\",{\"1\":{\"154\":1,\"1560\":1}}],[\"改为匿名类\",{\"1\":{\"152\":1,\"1558\":1}}],[\"改为xxx\",{\"1\":{\"149\":1,\"1555\":1,\"1654\":1,\"1726\":1}}],[\"改名为warm\",{\"1\":{\"66\":1,\"67\":1,\"943\":1,\"944\":1,\"1144\":1,\"1145\":1,\"1333\":1,\"1334\":1}}],[\"改造\",{\"0\":{\"62\":1,\"939\":1,\"1140\":1,\"1329\":1}}],[\"withlogicdelete\",{\"1\":{\"1286\":1}}],[\"window\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"width=\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"width\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"writestring\",{\"1\":{\"131\":1,\"1537\":1}}],[\"writevalueasstring\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"ww💪\",{\"1\":{\"123\":1,\"1390\":1}}],[\"www\",{\"1\":{\"83\":1,\"103\":1,\"104\":1,\"111\":1,\"1350\":1,\"1370\":1,\"1371\":1,\"1378\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1615\":1,\"1649\":1,\"1709\":1}}],[\"webmvcconfigurer\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"web\",{\"1\":{\"121\":1,\"133\":1,\"1388\":1,\"1539\":1}}],[\"web<\",{\"1\":{\"65\":1,\"255\":1,\"256\":1,\"551\":1,\"736\":1,\"922\":1,\"942\":1,\"1122\":1,\"1123\":1,\"1143\":1,\"1332\":1,\"1474\":1,\"1475\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1632\":1,\"1647\":1,\"1692\":1,\"1707\":1}}],[\"warm<\",{\"1\":{\"65\":2,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":2,\"1122\":1,\"1123\":1,\"1143\":2,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1332\":2,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":2,\"1647\":1,\"1707\":1}}],[\"warmflow工作流动态指定办理人\",{\"0\":{\"1618\":1,\"1678\":1}}],[\"warmflowcontroller\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"warmflowconfig\",{\"1\":{\"33\":1,\"36\":1,\"243\":1,\"246\":1,\"252\":1,\"367\":1,\"370\":1,\"380\":1,\"462\":1,\"465\":1,\"536\":1,\"539\":1,\"549\":1,\"648\":1,\"651\":1,\"721\":1,\"724\":1,\"734\":1,\"833\":1,\"836\":1,\"907\":1,\"910\":1,\"920\":1,\"1027\":1,\"1030\":1,\"1106\":1,\"1109\":1,\"1119\":1,\"1251\":1,\"1254\":1,\"1300\":1,\"1303\":1,\"1462\":1,\"1465\":1,\"1471\":1,\"1673\":1,\"1719\":1}}],[\"warmflow\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"warmflowinitiator\",{\"1\":{\"11\":2,\"397\":2,\"582\":2,\"768\":2,\"961\":2,\"1177\":2,\"1278\":2,\"1660\":1,\"1732\":1}}],[\"warm\",{\"0\":{\"1611\":1,\"1668\":1,\"1714\":1},\"1\":{\"0\":3,\"16\":1,\"17\":1,\"22\":2,\"25\":10,\"35\":3,\"37\":1,\"51\":1,\"54\":1,\"55\":1,\"56\":1,\"67\":4,\"70\":2,\"72\":1,\"75\":1,\"76\":1,\"78\":1,\"81\":1,\"82\":1,\"102\":1,\"104\":2,\"105\":5,\"121\":1,\"123\":1,\"126\":1,\"127\":1,\"128\":2,\"131\":3,\"134\":1,\"136\":2,\"242\":2,\"243\":1,\"245\":6,\"251\":2,\"257\":1,\"258\":2,\"259\":2,\"260\":2,\"261\":1,\"262\":1,\"263\":1,\"265\":5,\"269\":1,\"270\":1,\"271\":5,\"283\":1,\"288\":3,\"291\":1,\"366\":2,\"367\":1,\"369\":6,\"379\":2,\"388\":2,\"402\":1,\"407\":2,\"410\":10,\"431\":1,\"436\":3,\"441\":1,\"464\":3,\"466\":1,\"477\":2,\"535\":2,\"536\":1,\"538\":6,\"548\":2,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"560\":5,\"564\":1,\"565\":1,\"573\":2,\"587\":1,\"592\":2,\"595\":10,\"616\":1,\"621\":3,\"627\":1,\"650\":3,\"652\":1,\"663\":2,\"720\":2,\"721\":1,\"723\":6,\"733\":2,\"737\":2,\"738\":2,\"739\":2,\"740\":2,\"741\":1,\"742\":2,\"743\":4,\"744\":3,\"746\":5,\"750\":1,\"751\":1,\"759\":2,\"773\":1,\"778\":2,\"781\":10,\"802\":1,\"807\":3,\"812\":1,\"835\":3,\"837\":1,\"848\":2,\"906\":2,\"907\":1,\"909\":6,\"919\":2,\"923\":1,\"924\":2,\"925\":2,\"926\":2,\"927\":1,\"928\":1,\"929\":1,\"931\":5,\"935\":1,\"936\":1,\"937\":5,\"944\":4,\"952\":2,\"966\":1,\"971\":2,\"974\":10,\"995\":1,\"1000\":3,\"1006\":1,\"1029\":3,\"1031\":1,\"1042\":2,\"1105\":2,\"1106\":1,\"1108\":6,\"1118\":2,\"1124\":1,\"1125\":2,\"1126\":2,\"1127\":2,\"1128\":1,\"1129\":1,\"1130\":1,\"1132\":5,\"1136\":1,\"1137\":1,\"1138\":5,\"1145\":4,\"1151\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1166\":2,\"1182\":1,\"1183\":1,\"1188\":2,\"1191\":10,\"1221\":1,\"1226\":3,\"1229\":1,\"1253\":3,\"1255\":1,\"1283\":1,\"1284\":1,\"1286\":1,\"1289\":2,\"1292\":10,\"1302\":3,\"1304\":1,\"1318\":1,\"1321\":1,\"1322\":1,\"1323\":1,\"1334\":4,\"1337\":2,\"1339\":1,\"1342\":1,\"1343\":1,\"1345\":1,\"1348\":1,\"1349\":1,\"1369\":1,\"1371\":2,\"1372\":5,\"1388\":1,\"1390\":1,\"1461\":2,\"1462\":1,\"1464\":6,\"1470\":2,\"1476\":1,\"1477\":2,\"1478\":2,\"1479\":2,\"1480\":1,\"1481\":1,\"1482\":1,\"1484\":5,\"1488\":1,\"1489\":1,\"1490\":5,\"1502\":1,\"1507\":3,\"1510\":1,\"1532\":1,\"1533\":1,\"1534\":2,\"1537\":3,\"1540\":1,\"1542\":2,\"1580\":2,\"1581\":1,\"1585\":1,\"1586\":1,\"1588\":1,\"1591\":4,\"1592\":3,\"1596\":1,\"1597\":1,\"1599\":1,\"1602\":2,\"1603\":1,\"1607\":1,\"1608\":1,\"1610\":1,\"1614\":1,\"1616\":1,\"1625\":1,\"1628\":1,\"1629\":2,\"1630\":2,\"1633\":2,\"1634\":1,\"1638\":1,\"1641\":1,\"1648\":1,\"1650\":1,\"1652\":3,\"1653\":1,\"1654\":6,\"1655\":1,\"1659\":1,\"1660\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1666\":3,\"1668\":1,\"1671\":1,\"1673\":2,\"1685\":1,\"1688\":1,\"1689\":2,\"1690\":2,\"1693\":2,\"1694\":1,\"1698\":1,\"1701\":1,\"1708\":1,\"1710\":1,\"1712\":3,\"1714\":1,\"1717\":1,\"1719\":2,\"1724\":3,\"1725\":1,\"1726\":6,\"1727\":1,\"1731\":1,\"1732\":1,\"1734\":1,\"1735\":1,\"1736\":1}}],[\"部分审批人审批通过\",{\"1\":{\"232\":1,\"276\":1,\"1451\":1,\"1495\":1}}],[\"部分功能可配置\",{\"1\":{\"162\":1,\"1568\":1}}],[\"部署流程\",{\"0\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1703\":1},\"1\":{\"1670\":1,\"1716\":1}}],[\"部署方案二\",{\"0\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"部署方案一\",{\"0\":{\"66\":1,\"943\":1,\"1144\":1,\"1333\":1}}],[\"部署\",{\"0\":{\"64\":1,\"941\":1,\"1142\":1,\"1331\":1}}],[\"部门和用户等权限配置\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"部门的主键重复\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"部门列表等\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"部门领导审批之类的\",{\"1\":{\"49\":1,\"1316\":1}}],[\"部门领导审批等\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"部门等权限配置\",{\"1\":{\"171\":1,\"1577\":1}}],[\"部门等\",{\"1\":{\"29\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"326\":1,\"332\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1195\":1,\"1296\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1}}],[\"部门\",{\"1\":{\"9\":1,\"270\":2,\"395\":1,\"428\":1,\"565\":2,\"580\":1,\"613\":1,\"751\":2,\"766\":1,\"799\":1,\"936\":2,\"959\":1,\"992\":1,\"1137\":2,\"1175\":1,\"1212\":1,\"1219\":1,\"1276\":1,\"1489\":2}}],[\"源码调试\",{\"0\":{\"63\":1,\"940\":1,\"1141\":1,\"1330\":1}}],[\"下载依赖\",{\"0\":{\"1630\":1,\"1690\":1}}],[\"下载此项目\",{\"0\":{\"1628\":1,\"1688\":1}}],[\"下载设计器源码\",{\"0\":{\"62\":1,\"939\":1,\"1140\":1,\"1329\":1}}],[\"下面介绍如何使用设计器\",{\"1\":{\"1589\":1}}],[\"下面才是需要排除的地址\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"下一个节点任务生成时即可获取替换\",{\"1\":{\"470\":1,\"656\":1,\"841\":1,\"1035\":1}}],[\"下一个节点类型\",{\"1\":{\"307\":1,\"456\":1,\"642\":1,\"827\":1,\"1021\":1,\"1245\":1,\"1526\":1}}],[\"下一个节点是网关需要判断跳转条件\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"下一个流程节点的编码\",{\"1\":{\"307\":1,\"456\":1,\"642\":1,\"827\":1,\"1021\":1,\"1245\":1,\"1526\":1}}],[\"下个节点配置权限策略\",{\"1\":{\"11\":2,\"397\":2,\"582\":2,\"768\":2,\"961\":2,\"1177\":2,\"1278\":2}}],[\"设计原理采取不分离的方式\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"设计器后端放行地址\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"设计器页面入口地址为\",{\"1\":{\"741\":1,\"1592\":1}}],[\"设计器页面入口是访问后端地址\",{\"1\":{\"261\":1,\"556\":1,\"927\":1,\"1128\":1,\"1480\":1,\"1581\":1,\"1603\":1,\"1634\":1,\"1694\":1}}],[\"设计器办理人权限数据接入\",{\"0\":{\"266\":1,\"561\":1,\"747\":1,\"932\":1,\"1133\":1,\"1485\":1,\"1582\":1,\"1593\":1,\"1604\":1,\"1635\":1,\"1695\":1}}],[\"设计器集成\",{\"0\":{\"253\":1,\"1472\":1}}],[\"设计器独立\",{\"1\":{\"150\":1,\"1556\":1}}],[\"设计器独立部署\",{\"0\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"设计器引入优化\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"设计器引入\",{\"0\":{\"296\":1,\"550\":1,\"626\":1,\"735\":1,\"921\":1,\"1005\":1,\"1120\":1,\"1234\":1,\"1515\":1,\"1647\":1,\"1707\":1},\"1\":{\"147\":1,\"1553\":1,\"1612\":1,\"1613\":1}}],[\"设计器不分离部署\",{\"0\":{\"66\":1,\"943\":1,\"1144\":1,\"1333\":1}}],[\"设计器需要配置业务系统的代理地址\",{\"1\":{\"63\":1,\"940\":1,\"1141\":1,\"1330\":1}}],[\"设计器配置该接口地址\",{\"1\":{\"62\":1,\"939\":1,\"1140\":1,\"1329\":1}}],[\"设计器二开\",{\"0\":{\"61\":1,\"938\":1,\"1139\":1,\"1328\":1}}],[\"设置倒序排列\",{\"0\":{\"229\":1,\"362\":1,\"531\":1,\"716\":1,\"902\":1,\"1098\":1,\"1448\":1},\"1\":{\"229\":1,\"362\":1,\"531\":1,\"716\":1,\"902\":1,\"1098\":1,\"1448\":1}}],[\"设置正序排列\",{\"0\":{\"228\":1,\"361\":1,\"530\":1,\"715\":1,\"901\":1,\"1097\":1,\"1447\":1},\"1\":{\"228\":1,\"361\":1,\"530\":1,\"715\":1,\"901\":1,\"1097\":1,\"1447\":1}}],[\"设置开始节点\",{\"1\":{\"155\":1,\"1561\":1}}],[\"设置最大单页限制数量\",{\"1\":{\"136\":1,\"1542\":1}}],[\"设置数据库类型为mysql\",{\"1\":{\"136\":1,\"1542\":1}}],[\"设置创建类的模板\",{\"0\":{\"97\":1,\"1364\":1}}],[\"设置表达式\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"设置新增的表达式\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"设置办理人所拥有的权限\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"设置办理人id\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"设置当前办理人id\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"设置节点表的listener\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"过程状态记录\",{\"1\":{\"57\":1,\"371\":1,\"540\":1,\"725\":1,\"911\":1,\"1110\":1,\"1324\":1}}],[\"复杂性\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"复杂表单\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"复杂查询语句通过\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"复制流程版本号支持自动递增\",{\"1\":{\"1551\":1}}],[\"复制流程定义\",{\"1\":{\"184\":1,\"320\":1,\"489\":1,\"674\":1,\"860\":1,\"1055\":1,\"1403\":1}}],[\"复制流程\",{\"0\":{\"184\":1,\"320\":1,\"489\":1,\"674\":1,\"860\":1,\"1055\":1,\"1403\":1}}],[\"复用部分代码\",{\"1\":{\"55\":1,\"1161\":1,\"1322\":1}}],[\"截取\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"|$\",{\"1\":{\"469\":1,\"470\":1,\"472\":2,\"477\":1,\"655\":1,\"656\":1,\"658\":2,\"663\":1,\"840\":1,\"841\":1,\"843\":2,\"848\":1,\"1034\":1,\"1035\":1,\"1037\":2,\"1042\":1}}],[\"|yyy\",{\"1\":{\"239\":1,\"1102\":1}}],[\"|flag\",{\"1\":{\"56\":1,\"238\":8,\"1101\":8,\"1162\":1,\"1323\":1,\"1551\":1}}],[\"|\",{\"1\":{\"51\":2,\"72\":2,\"78\":2,\"86\":2,\"238\":1,\"239\":1,\"383\":1,\"469\":1,\"475\":1,\"568\":1,\"655\":1,\"661\":1,\"754\":1,\"840\":1,\"846\":1,\"947\":1,\"1034\":1,\"1040\":1,\"1101\":1,\"1102\":1,\"1148\":1,\"1151\":2,\"1318\":2,\"1339\":2,\"1345\":2,\"1353\":2}}],[\"||\",{\"1\":{\"32\":1,\"33\":1,\"82\":1,\"461\":1,\"462\":1,\"477\":1,\"647\":1,\"648\":1,\"663\":1,\"832\":1,\"833\":1,\"848\":1,\"1026\":1,\"1027\":1,\"1042\":1,\"1155\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1,\"1349\":1}}],[\"然后检查是否正确\",{\"1\":{\"1652\":1,\"1724\":1}}],[\"然后执行流程监听器\",{\"1\":{\"391\":1,\"576\":1,\"762\":1,\"955\":1}}],[\"然后参照他的意见决定是否审批通过\",{\"1\":{\"273\":1,\"276\":1,\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1492\":1,\"1495\":1,\"1496\":1}}],[\"然后按回车会自动生成\",{\"1\":{\"97\":1,\"1364\":1}}],[\"然后在进行执行\",{\"1\":{\"51\":2,\"72\":2,\"78\":2,\"1151\":2,\"1318\":2,\"1339\":2,\"1345\":2}}],[\"然后再去尝试加载类路径\",{\"1\":{\"5\":1,\"1171\":1,\"1272\":1}}],[\"也在此版本得到解决\",{\"1\":{\"1578\":1,\"1600\":1,\"1631\":1,\"1691\":1}}],[\"也是表达式的前缀\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"也可使用对应orm框架的实现方式\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"也可用\",{\"1\":{\"29\":1,\"35\":1,\"36\":1,\"37\":1,\"243\":3,\"245\":1,\"246\":2,\"367\":3,\"369\":1,\"370\":2,\"464\":1,\"465\":1,\"466\":1,\"536\":3,\"538\":1,\"539\":2,\"650\":1,\"651\":1,\"652\":1,\"721\":3,\"723\":1,\"724\":2,\"835\":1,\"836\":1,\"837\":1,\"907\":3,\"909\":1,\"910\":2,\"1029\":1,\"1030\":1,\"1031\":1,\"1106\":3,\"1108\":1,\"1109\":2,\"1195\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1296\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1462\":3,\"1464\":1,\"1465\":2,\"1673\":4,\"1719\":4}}],[\"也可发送通知\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"也可以放到业务代码中办理完成后\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"也可以放到业务代码中办理前设置\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"当然业务系统可以不集成设计器\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"当然是可以能脱离流程设计器\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"当然了\",{\"1\":{\"88\":1,\"1355\":1}}],[\"当由于各种原因\",{\"1\":{\"1624\":1,\"1684\":1}}],[\"当上一个任务办理时\",{\"1\":{\"1620\":1,\"1680\":1}}],[\"当流程完成\",{\"1\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"当流程有多个结束节点\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"当使用jpa时指定jpapersistenceprovider\",{\"1\":{\"242\":1,\"288\":1,\"366\":1,\"436\":1,\"535\":1,\"621\":1,\"720\":1,\"807\":1,\"906\":1,\"1000\":1,\"1105\":1,\"1226\":1,\"1461\":1,\"1507\":1,\"1673\":1,\"1719\":1}}],[\"当未设置办理人时\",{\"1\":{\"153\":1,\"1559\":1}}],[\"当地节水系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"当内置的设计器和接口不满足业务需求时\",{\"1\":{\"61\":1,\"1139\":1,\"1328\":1}}],[\"当内置的条件\",{\"1\":{\"50\":1,\"71\":1,\"77\":1,\"1150\":1,\"1317\":1,\"1338\":1,\"1344\":1}}],[\"当前任务执行\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"当前任务完成后执行\",{\"1\":{\"3\":1,\"8\":1,\"16\":1,\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1,\"1169\":1,\"1174\":1,\"1182\":1,\"1270\":1,\"1275\":1,\"1283\":1,\"1672\":1,\"1718\":1}}],[\"当前流程节点的编码\",{\"1\":{\"307\":1,\"456\":1,\"642\":1,\"827\":1,\"1021\":1,\"1245\":1,\"1526\":1}}],[\"当前流程状态\",{\"1\":{\"57\":1,\"371\":1,\"540\":1,\"725\":1,\"911\":1,\"1110\":1,\"1324\":1}}],[\"当前节点上一节点处理人操作\",{\"1\":{\"429\":1}}],[\"当前节点类型\",{\"1\":{\"307\":1,\"456\":1,\"642\":1,\"827\":1,\"1021\":1,\"1245\":1,\"1526\":1}}],[\"当前节点处理人还未处理\",{\"1\":{\"429\":1}}],[\"当前节点处理人\",{\"1\":{\"276\":4,\"429\":8,\"614\":8,\"800\":8,\"993\":8,\"1213\":8,\"1495\":4}}],[\"当前节点code\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"当前办理不可办理\",{\"1\":{\"201\":1,\"202\":1,\"334\":1,\"335\":1,\"503\":1,\"504\":1,\"688\":1,\"689\":1,\"874\":1,\"875\":1,\"1070\":1,\"1071\":1,\"1420\":1,\"1421\":1}}],[\"当前办理人唯一标识\",{\"1\":{\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1}}],[\"当前办理人\",{\"1\":{\"28\":1,\"29\":1,\"1194\":1,\"1195\":1,\"1295\":1,\"1296\":1}}],[\"后端放行路径\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"后端放行部分路径\",{\"0\":{\"257\":1,\"552\":1,\"737\":1,\"923\":1,\"1124\":1,\"1476\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"后端请求\",{\"1\":{\"258\":1,\"259\":1,\"553\":1,\"554\":1,\"738\":1,\"739\":1,\"924\":1,\"925\":1,\"1125\":1,\"1126\":1,\"1477\":1,\"1478\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"后端接收流程xml部分丢失\",{\"0\":{\"139\":1,\"1545\":1}}],[\"后端基于国产工作流dromara\",{\"1\":{\"121\":1,\"1388\":1}}],[\"后端代码设置变量\",{\"0\":{\"45\":1,\"48\":1,\"473\":1,\"476\":1,\"659\":1,\"662\":1,\"844\":1,\"847\":1,\"1038\":1,\"1041\":1,\"1264\":1,\"1267\":1,\"1312\":1,\"1315\":1},\"1\":{\"1620\":1,\"1680\":1}}],[\"后续还会增加多租户和软删除等\",{\"1\":{\"1673\":1,\"1719\":1}}],[\"后续不建议用\",{\"1\":{\"390\":1,\"575\":1,\"761\":1,\"954\":1}}],[\"后续有时间再做校验\",{\"1\":{\"138\":1,\"1544\":1}}],[\"后续会根据不同情况\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"后续会继续支持其他数据库或者国产数据库\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"后续会由社区提供其他支持\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"后续在\",{\"1\":{\"28\":1,\"1194\":1,\"1295\":1}}],[\"后再执行\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"前后端端口一致\",{\"1\":{\"746\":1}}],[\"前后端不分离项目\",{\"1\":{\"746\":1}}],[\"前后端不分离版本\",{\"0\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"前后端不分离\",{\"1\":{\"261\":1,\"556\":1,\"927\":1,\"1128\":1,\"1480\":1,\"1581\":1,\"1603\":1,\"1634\":1,\"1694\":1}}],[\"前面的任务路线必须都完成即可往下执行\",{\"1\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"前面拼接dept\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"前面拼接role\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"前端地址的前缀如dev\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"前端加载设计器代理配置\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"前端加载设计器\",{\"0\":{\"261\":1,\"556\":1,\"741\":1,\"927\":1,\"1128\":1,\"1480\":1,\"1581\":1,\"1592\":1,\"1603\":1,\"1634\":1,\"1694\":1}}],[\"前端配置如\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1}}],[\"前端页面就不会丢失精度了\",{\"1\":{\"131\":1,\"1537\":1}}],[\"前端页面设置变量\",{\"0\":{\"44\":1,\"47\":1,\"472\":1,\"475\":1,\"658\":1,\"661\":1,\"843\":1,\"846\":1,\"1037\":1,\"1040\":1,\"1263\":1,\"1266\":1,\"1311\":1,\"1314\":1}}],[\"前端使用\",{\"1\":{\"121\":1,\"1388\":1}}],[\"前缀表示spel办理人变量策略\",{\"1\":{\"40\":1,\"1259\":1,\"1307\":1}}],[\"则整个任务执行\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"则可跳转anynodecode节点\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"则必传\",{\"1\":{\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"338\":1,\"507\":1,\"692\":1,\"878\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"则c节点办理人变量为100\",{\"1\":{\"42\":1,\"470\":1,\"656\":1,\"841\":1,\"1035\":1,\"1261\":1,\"1309\":1}}],[\"则需要动态替换权限标识\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"即可替换完成\",{\"1\":{\"42\":1,\"1261\":1,\"1309\":1,\"1620\":1,\"1680\":1}}],[\"上传命令\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"上传私库的到本地\",{\"0\":{\"1629\":1,\"1689\":1}}],[\"上一节点处理人可以将其退回自己手中重新操作\",{\"1\":{\"429\":1}}],[\"上一个节点任务办理时\",{\"1\":{\"42\":1,\"470\":1,\"656\":1,\"841\":1,\"1035\":1,\"1261\":1,\"1309\":1}}],[\"上下一一对应\",{\"1\":{\"400\":1,\"585\":1,\"771\":1,\"964\":1}}],[\"上报不合规的地方来审批整改\",{\"1\":{\"83\":1,\"1350\":1}}],[\"上个节点分派监听器修改\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"匹配上就执行\",{\"1\":{\"41\":1,\"1260\":1,\"1308\":1}}],[\"匹配规则\",{\"0\":{\"5\":1,\"41\":1,\"239\":1,\"1102\":1,\"1171\":1,\"1260\":1,\"1272\":1,\"1308\":1,\"1458\":1}}],[\"倒叙匹配\",{\"1\":{\"41\":1,\"1260\":1,\"1308\":1}}],[\"90\",{\"1\":{\"1664\":1,\"1736\":1}}],[\"9007199254740991l\",{\"1\":{\"131\":2,\"1537\":2}}],[\"9已退回\",{\"1\":{\"304\":1,\"305\":1,\"453\":1,\"454\":1,\"639\":1,\"640\":1,\"824\":1,\"825\":1,\"1018\":1,\"1019\":1,\"1242\":1,\"1243\":1,\"1523\":1,\"1524\":1}}],[\"9失效\",{\"1\":{\"303\":1,\"452\":1,\"638\":1,\"823\":1,\"1017\":1,\"1241\":1,\"1522\":1}}],[\"94\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"99元\",{\"1\":{\"126\":1,\"1532\":1}}],[\"9\",{\"0\":{\"139\":1,\"159\":1,\"182\":1,\"218\":1,\"321\":1,\"351\":1,\"444\":1,\"489\":1,\"520\":1,\"674\":1,\"705\":1,\"815\":1,\"860\":1,\"891\":1,\"1053\":1,\"1087\":1,\"1401\":1,\"1437\":1,\"1545\":1,\"1565\":1,\"1664\":1,\"1736\":1},\"1\":{\"39\":1,\"137\":1,\"238\":1,\"276\":1,\"300\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"382\":1,\"429\":1,\"449\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"567\":1,\"614\":1,\"635\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"753\":1,\"800\":1,\"820\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"946\":1,\"993\":1,\"1014\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1101\":1,\"1147\":1,\"1213\":1,\"1238\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1258\":1,\"1306\":1,\"1457\":1,\"1495\":1,\"1519\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1543\":1}}],[\"就得有相应表达式\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"就可以动态指定一群人\",{\"1\":{\"1621\":1,\"1681\":1}}],[\"就可以后续就可以根据租户id过来任务\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"就是点击驳回后的状态\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"就是在下一个任务生成前执行\",{\"1\":{\"12\":1,\"398\":1,\"583\":1,\"769\":1,\"962\":1,\"1178\":1,\"1279\":1}}],[\"就会终止该操作\",{\"1\":{\"136\":1,\"1542\":1}}],[\"就先遍历spel策略\",{\"1\":{\"41\":1,\"1260\":1,\"1308\":1}}],[\"就需要后续能够动态设置办理人功能\",{\"1\":{\"38\":1,\"1257\":1,\"1305\":1}}],[\"经常会出现设计流程时\",{\"1\":{\"38\":1,\"1257\":1,\"1305\":1}}],[\"业务项目中存在哪种json就会使用哪种的实现\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"业务id\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"业务详情\",{\"1\":{\"303\":1,\"304\":1,\"452\":1,\"453\":1,\"638\":1,\"639\":1,\"823\":1,\"824\":1,\"1017\":1,\"1018\":1,\"1241\":1,\"1242\":1,\"1522\":1,\"1523\":1}}],[\"业务系统再次导入即可\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"业务系统需要对应修改\",{\"1\":{\"1659\":1,\"1731\":1}}],[\"业务系统机构\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"业务系统数据\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"业务系统配置设计器的地址\",{\"1\":{\"63\":1,\"1330\":1}}],[\"业务流程优化\",{\"1\":{\"105\":1,\"1372\":1}}],[\"业务中\",{\"1\":{\"38\":1,\"1257\":1,\"1305\":1}}],[\"业务表新增或者更新操作\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"一个自带流程设计器的工作流引擎\",{\"0\":{\"1578\":1,\"1589\":1,\"1600\":1,\"1631\":1,\"1640\":1,\"1691\":1,\"1700\":1}}],[\"一个人接触的问题有限\",{\"1\":{\"126\":1,\"1532\":1}}],[\"一个人或许能走的更快\",{\"1\":{\"0\":1}}],[\"一名负责人通过即可通过审批节点\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"一名办理人审批通过\",{\"1\":{\"232\":1,\"276\":1,\"1451\":1,\"1495\":1}}],[\"一票否决\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"一次性填写不完\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"一人或者多人审批的情况\",{\"1\":{\"231\":1,\"1450\":1}}],[\"一般以消息通知方式提醒处理人\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"一般是xxs过滤导致\",{\"1\":{\"139\":1,\"1545\":1}}],[\"一般会有工具类获取\",{\"1\":{\"37\":1,\"466\":1,\"652\":1,\"837\":1,\"1031\":1,\"1255\":1,\"1304\":1}}],[\"一下两种方式任选其一\",{\"1\":{\"131\":1,\"1537\":1}}],[\"一群人接触的问题无限\",{\"1\":{\"126\":1,\"1532\":1}}],[\"一骑\",{\"1\":{\"123\":1,\"1390\":1}}],[\"一拳打爆常大宝\",{\"1\":{\"123\":1,\"137\":1,\"1390\":1,\"1543\":1}}],[\"一定要先看一下如何正确的提交pr\",{\"1\":{\"89\":1,\"1356\":1}}],[\"$tab\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"$proxy\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"$remote\",{\"1\":{\"67\":2,\"944\":2,\"1145\":2,\"1334\":2}}],[\"$http\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"$uri\",{\"1\":{\"67\":2,\"944\":2,\"1145\":2,\"1334\":2}}],[\"$前缀表示默认办理人变量策略\",{\"1\":{\"40\":1,\"1259\":1,\"1307\":1}}],[\"$\",{\"1\":{\"33\":1,\"39\":2,\"40\":1,\"44\":1,\"82\":3,\"265\":1,\"462\":1,\"477\":1,\"560\":1,\"648\":1,\"663\":1,\"741\":1,\"743\":1,\"744\":1,\"746\":1,\"833\":1,\"848\":1,\"931\":1,\"1027\":1,\"1042\":1,\"1132\":1,\"1155\":3,\"1251\":1,\"1258\":2,\"1259\":1,\"1263\":1,\"1300\":1,\"1306\":2,\"1307\":1,\"1311\":1,\"1349\":3,\"1484\":1,\"1592\":1,\"1654\":1,\"1726\":1}}],[\"height=\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"height\",{\"1\":{\"262\":4,\"263\":1,\"557\":4,\"558\":1,\"743\":4,\"744\":1,\"928\":4,\"929\":1,\"1129\":4,\"1130\":1,\"1481\":4,\"1482\":1}}],[\"header\",{\"1\":{\"67\":4,\"944\":4,\"1145\":4,\"1334\":4}}],[\"hbm2ddl\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"huangjian\",{\"1\":{\"147\":2,\"1553\":2,\"1613\":2}}],[\"hh\",{\"0\":{\"136\":1,\"1542\":1},\"1\":{\"117\":1,\"121\":1,\"270\":3,\"292\":2,\"418\":1,\"442\":2,\"565\":3,\"603\":1,\"628\":2,\"751\":3,\"789\":1,\"813\":2,\"936\":3,\"982\":1,\"1007\":2,\"1137\":3,\"1202\":1,\"1230\":2,\"1384\":1,\"1388\":1,\"1489\":3,\"1511\":2,\"1643\":2,\"1703\":2}}],[\"hhzai\",{\"1\":{\"103\":1,\"111\":1,\"1370\":1,\"1378\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1615\":1,\"1649\":1,\"1709\":1}}],[\"houhou\",{\"1\":{\"126\":1,\"128\":1,\"1532\":1,\"1534\":1,\"1666\":1,\"1712\":1}}],[\"holly\",{\"1\":{\"83\":1,\"162\":1,\"163\":1,\"164\":1,\"165\":3,\"1350\":1,\"1568\":1,\"1569\":1,\"1570\":1,\"1571\":3}}],[\"host\",{\"1\":{\"67\":3,\"944\":3,\"1145\":3,\"1334\":3}}],[\"h5ve团队\",{\"1\":{\"83\":1,\"1350\":1}}],[\"htm\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"html\",{\"1\":{\"67\":7,\"136\":3,\"262\":1,\"263\":1,\"265\":3,\"557\":1,\"558\":1,\"560\":3,\"928\":1,\"929\":1,\"931\":3,\"944\":7,\"1129\":1,\"1130\":1,\"1132\":3,\"1145\":7,\"1334\":7,\"1481\":1,\"1482\":1,\"1484\":3,\"1542\":3,\"1654\":1,\"1726\":1}}],[\"httpsecurity\",{\"1\":{\"258\":3,\"553\":3,\"738\":3,\"924\":3,\"1125\":3,\"1477\":3,\"1580\":3,\"1591\":3,\"1602\":3,\"1633\":3,\"1693\":3}}],[\"https\",{\"1\":{\"83\":1,\"136\":3,\"1350\":1,\"1542\":3,\"1625\":1,\"1641\":1,\"1685\":1,\"1701\":1}}],[\"http\",{\"1\":{\"67\":2,\"103\":1,\"104\":1,\"111\":1,\"742\":1,\"944\":2,\"1145\":2,\"1334\":2,\"1370\":1,\"1371\":1,\"1378\":1,\"1587\":1,\"1588\":1,\"1592\":1,\"1598\":1,\"1599\":1,\"1609\":1,\"1610\":1,\"1615\":1,\"1616\":1,\"1649\":1,\"1650\":1,\"1709\":1,\"1710\":1}}],[\"handledepute方法中删除受托人传参数错误\",{\"1\":{\"155\":1,\"1561\":1}}],[\"handle\",{\"1\":{\"35\":1,\"242\":2,\"245\":2,\"251\":1,\"260\":1,\"366\":2,\"369\":2,\"379\":1,\"464\":1,\"535\":2,\"538\":2,\"548\":1,\"555\":1,\"650\":1,\"720\":2,\"723\":2,\"733\":1,\"740\":1,\"835\":1,\"906\":2,\"909\":2,\"919\":1,\"926\":1,\"1029\":1,\"1105\":2,\"1108\":2,\"1118\":1,\"1127\":1,\"1253\":1,\"1302\":1,\"1461\":2,\"1464\":2,\"1470\":1,\"1479\":1,\"1673\":2,\"1719\":2}}],[\"handlerfundto<sysuser>\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"handlerfundto<sysdept>\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"handlerfundto<sysrole>\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"handlerfundto<>\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"handlerfundto\",{\"1\":{\"270\":6,\"565\":6,\"751\":6,\"936\":6,\"1137\":6,\"1489\":6}}],[\"handlerselectvo\",{\"1\":{\"270\":8,\"565\":8,\"751\":8,\"936\":8,\"1137\":8,\"1489\":8}}],[\"handlerselectserviceimpl\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"handlerselectserviceimpl实现类\",{\"0\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"handlerselectservice\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"handlerselectservice接口\",{\"0\":{\"269\":1,\"564\":1,\"750\":1,\"935\":1,\"1136\":1,\"1488\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"handlerquery\",{\"1\":{\"269\":1,\"270\":4,\"564\":1,\"565\":4,\"750\":1,\"751\":4,\"935\":1,\"936\":4,\"1136\":1,\"1137\":4,\"1488\":1,\"1489\":4,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"handler5\",{\"1\":{\"39\":2,\"1258\":2,\"1306\":2}}],[\"handler4\",{\"1\":{\"39\":2,\"1258\":2,\"1306\":2}}],[\"handler3\",{\"1\":{\"39\":2,\"1258\":2,\"1306\":2}}],[\"handler2是方法入参变量\",{\"1\":{\"47\":1,\"475\":1,\"661\":1,\"846\":1,\"1040\":1,\"1266\":1,\"1314\":1}}],[\"handler2\",{\"1\":{\"39\":2,\"40\":1,\"47\":1,\"48\":4,\"469\":1,\"475\":2,\"476\":4,\"655\":1,\"661\":2,\"662\":4,\"840\":1,\"846\":2,\"847\":4,\"1034\":1,\"1040\":2,\"1041\":4,\"1258\":2,\"1259\":1,\"1266\":1,\"1267\":4,\"1306\":2,\"1307\":1,\"1314\":1,\"1315\":4}}],[\"handler1是需要被流程变量中替换的标识\",{\"1\":{\"44\":1,\"472\":1,\"658\":1,\"843\":1,\"1037\":1,\"1263\":1,\"1311\":1}}],[\"handler1\",{\"1\":{\"39\":2,\"40\":1,\"42\":1,\"44\":1,\"45\":1,\"469\":1,\"470\":1,\"472\":2,\"473\":1,\"655\":1,\"656\":1,\"658\":2,\"659\":1,\"840\":1,\"841\":1,\"843\":2,\"844\":1,\"1034\":1,\"1035\":1,\"1037\":2,\"1038\":1,\"1258\":2,\"1259\":1,\"1261\":1,\"1263\":1,\"1264\":1,\"1306\":2,\"1307\":1,\"1309\":1,\"1311\":1,\"1312\":1,\"1620\":3,\"1621\":1,\"1680\":3,\"1681\":1}}],[\"handler\",{\"1\":{\"35\":1,\"58\":1,\"102\":1,\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"242\":2,\"245\":2,\"251\":1,\"275\":4,\"306\":2,\"310\":1,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"366\":2,\"369\":2,\"372\":1,\"379\":1,\"455\":2,\"464\":1,\"467\":1,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"535\":2,\"538\":2,\"541\":1,\"548\":1,\"641\":2,\"650\":1,\"653\":1,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"720\":2,\"723\":2,\"726\":1,\"733\":1,\"826\":2,\"835\":1,\"838\":1,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"906\":2,\"909\":2,\"912\":1,\"919\":1,\"1020\":2,\"1029\":1,\"1032\":1,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1105\":2,\"1108\":2,\"1111\":1,\"1118\":1,\"1244\":2,\"1253\":1,\"1256\":1,\"1302\":1,\"1325\":1,\"1369\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1461\":2,\"1464\":2,\"1470\":1,\"1494\":4,\"1525\":2,\"1529\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1673\":2,\"1708\":1,\"1719\":2}}],[\"hashmap<>\",{\"1\":{\"39\":1,\"45\":1,\"48\":1,\"54\":1,\"70\":1,\"239\":1,\"310\":1,\"383\":1,\"388\":1,\"467\":1,\"473\":1,\"476\":1,\"568\":1,\"573\":1,\"653\":1,\"659\":1,\"662\":1,\"754\":1,\"759\":1,\"838\":1,\"844\":1,\"847\":1,\"947\":1,\"952\":1,\"1032\":1,\"1038\":1,\"1041\":1,\"1102\":1,\"1148\":1,\"1160\":1,\"1166\":1,\"1256\":1,\"1258\":1,\"1264\":1,\"1267\":1,\"1306\":1,\"1312\":1,\"1315\":1,\"1321\":1,\"1337\":1,\"1458\":1,\"1529\":1,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"hashmap\",{\"1\":{\"17\":3,\"402\":3,\"587\":3,\"773\":3,\"966\":3,\"1183\":3,\"1284\":3}}],[\"hibernate\",{\"1\":{\"245\":3,\"369\":3,\"538\":3,\"723\":3,\"909\":3,\"1108\":3,\"1464\":3}}],[\"hikaridatasource\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"hisstatus\",{\"1\":{\"57\":1,\"58\":1,\"59\":2,\"371\":1,\"372\":1,\"373\":2,\"540\":1,\"541\":1,\"542\":2,\"725\":1,\"726\":1,\"727\":2,\"911\":1,\"912\":1,\"913\":2,\"1110\":1,\"1111\":1,\"1112\":2,\"1324\":1,\"1325\":1,\"1326\":2}}],[\"his\",{\"1\":{\"32\":1,\"301\":1,\"450\":1,\"461\":1,\"636\":1,\"647\":1,\"821\":1,\"832\":1,\"1015\":1,\"1026\":1,\"1239\":1,\"1250\":1,\"1286\":1,\"1299\":1,\"1520\":1}}],[\"指定节点\",{\"1\":{\"276\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"指定流程表才开启\",{\"1\":{\"32\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1299\":1}}],[\"指定租户字段\",{\"1\":{\"32\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1299\":1}}],[\"表字段明细\",{\"0\":{\"302\":1,\"451\":1,\"637\":1,\"822\":1,\"1016\":1,\"1240\":1,\"1521\":1}}],[\"表清单\",{\"0\":{\"301\":1,\"450\":1,\"636\":1,\"821\":1,\"1015\":1,\"1239\":1,\"1520\":1}}],[\"表描述\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"表结构\",{\"0\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"表单管理\",{\"0\":{\"68\":1,\"386\":1,\"571\":1,\"757\":1,\"950\":1,\"1164\":1,\"1335\":1}}],[\"表示默认办理人变量策略\",{\"1\":{\"44\":1,\"472\":1,\"658\":1,\"843\":1,\"1037\":1,\"1263\":1,\"1311\":1}}],[\"表名\",{\"1\":{\"32\":2,\"461\":2,\"647\":2,\"832\":2,\"1026\":2,\"1250\":2,\"1299\":2}}],[\"表达式扩展\",{\"0\":{\"1150\":1}}],[\"表达式后缀\",{\"1\":{\"55\":1,\"1161\":1,\"1322\":1}}],[\"表达式\",{\"1\":{\"51\":2,\"55\":1,\"72\":2,\"78\":2,\"239\":1,\"383\":1,\"477\":1,\"568\":1,\"663\":1,\"754\":1,\"848\":1,\"947\":1,\"1042\":1,\"1102\":1,\"1148\":1,\"1151\":2,\"1161\":1,\"1318\":2,\"1322\":1,\"1339\":2,\"1345\":2,\"1458\":1}}],[\"表达式策略类接口\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"表达式策略类型\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"表达式公共接口\",{\"0\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"表达式2等\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"表达式1\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"类中配置增加类型接口\",{\"1\":{\"147\":1,\"1553\":1}}],[\"类似satoken方式\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"类型转换异常\",{\"0\":{\"135\":1,\"1541\":1}}],[\"类型\",{\"1\":{\"51\":2,\"72\":2,\"78\":2,\"1151\":2,\"1318\":2,\"1339\":2,\"1345\":2}}],[\"类型的\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"类的属性一一对应\",{\"1\":{\"21\":1,\"406\":1,\"591\":1,\"777\":1,\"970\":1,\"1187\":1,\"1288\":1}}],[\"是warm\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"是不是通过warmflow工作流可以很简单的管理你的审批业务呢\",{\"1\":{\"1622\":1,\"1682\":1}}],[\"是任务完成后\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"是针对并行流程\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"是为了防止用户\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"是一款\",{\"1\":{\"121\":1,\"1388\":1}}],[\"是一个可通过jar引入设计器的工作流\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"是否可以退回任意节点\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"是否发布\",{\"1\":{\"303\":1,\"452\":1,\"638\":1,\"823\":1,\"1017\":1,\"1241\":1,\"1522\":1}}],[\"是否显示banner图\",{\"1\":{\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"535\":1,\"538\":1,\"720\":1,\"723\":1,\"906\":1,\"909\":1,\"1105\":1,\"1108\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"是否开启设计器ui\",{\"1\":{\"242\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1}}],[\"是否开启工作流\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"是否开启逻辑删除\",{\"1\":{\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"407\":1,\"535\":1,\"538\":1,\"592\":1,\"720\":1,\"723\":1,\"778\":1,\"906\":1,\"909\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"是否设置为退回类型\",{\"1\":{\"138\":1,\"1544\":1}}],[\"是否任意调整\",{\"1\":{\"115\":1,\"416\":1,\"601\":1,\"787\":1,\"980\":1,\"1200\":1,\"1382\":1}}],[\"是否能看懂\",{\"1\":{\"88\":1,\"1355\":1}}],[\"是否截取表达式前缀\",{\"1\":{\"51\":2,\"72\":2,\"78\":2,\"1151\":2,\"1318\":2,\"1339\":2,\"1345\":2}}],[\"是表达式策略类接口\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"是spel表达式\",{\"1\":{\"47\":1,\"475\":1,\"661\":1,\"846\":1,\"1040\":1,\"1266\":1,\"1314\":1}}],[\"是\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"返回流程定义对象\",{\"1\":{\"313\":1,\"666\":1}}],[\"返回租户id的表达式\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"返回当前用户权限集合\",{\"1\":{\"28\":1,\"1194\":1,\"1295\":1}}],[\"按需求执行\",{\"0\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"按需传输\",{\"1\":{\"29\":1,\"191\":3,\"192\":6,\"193\":4,\"199\":6,\"200\":4,\"201\":3,\"202\":3,\"203\":3,\"204\":3,\"205\":7,\"207\":2,\"325\":3,\"326\":4,\"327\":2,\"332\":4,\"333\":2,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":7,\"340\":2,\"494\":3,\"495\":5,\"496\":4,\"501\":5,\"502\":4,\"503\":2,\"504\":2,\"505\":2,\"506\":2,\"507\":7,\"509\":2,\"679\":3,\"680\":4,\"681\":3,\"686\":4,\"687\":3,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":7,\"694\":2,\"865\":3,\"866\":6,\"867\":4,\"872\":6,\"873\":4,\"874\":2,\"875\":2,\"876\":2,\"877\":2,\"878\":7,\"880\":2,\"1060\":3,\"1061\":6,\"1062\":4,\"1068\":6,\"1069\":4,\"1070\":3,\"1071\":3,\"1072\":3,\"1073\":3,\"1074\":7,\"1076\":2,\"1195\":1,\"1296\":1,\"1410\":3,\"1411\":6,\"1412\":4,\"1418\":6,\"1419\":4,\"1420\":3,\"1421\":3,\"1422\":3,\"1423\":3,\"1424\":7,\"1426\":2}}],[\"按业务需求决定\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"按要求更改\",{\"0\":{\"100\":1,\"1367\":1}}],[\"按照mybatis方式扩展其他的orm或者数据库类型即可\",{\"1\":{\"1675\":1,\"1721\":1}}],[\"按照以下前四点\",{\"1\":{\"1589\":1}}],[\"按照以下四点\",{\"1\":{\"1578\":1,\"1600\":1,\"1631\":1,\"1691\":1}}],[\"按照任务计划\",{\"1\":{\"300\":1,\"449\":1,\"635\":1,\"820\":1,\"1014\":1,\"1238\":1,\"1519\":1}}],[\"按照模板填写有助于作者或者其他社区人员快速有效的回答问题\",{\"1\":{\"87\":1,\"1354\":1}}],[\"按照自身业务要求\",{\"1\":{\"57\":1,\"371\":1,\"540\":1,\"725\":1,\"911\":1,\"1110\":1,\"1324\":1}}],[\"按照实际业务需求选择实现一个方法或者多个方法\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"角色及用户自定义类型\",{\"1\":{\"428\":1,\"613\":1,\"799\":1,\"992\":1,\"1212\":1,\"1219\":1}}],[\"角色权限控制\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"角色的主键重复\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"角色列表\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"角色和部门等\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"角色\",{\"1\":{\"29\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"270\":2,\"326\":1,\"332\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"565\":2,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"751\":2,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"936\":2,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1137\":2,\"1195\":1,\"1296\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1489\":2}}],[\"编写permissionhandler实现类\",{\"0\":{\"29\":1,\"1195\":1,\"1296\":1}}],[\"获取变量替换类型\",{\"1\":{\"477\":1,\"663\":1,\"848\":1,\"1042\":1}}],[\"获取角色列表\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"获取用户列表\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"获取办理人权限设置列表结果\",{\"1\":{\"269\":1,\"564\":1,\"750\":1,\"935\":1,\"1136\":1,\"1488\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"获取办理人权限设置列表tabs页签\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"获取办理人权限设置列表接口实现类\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"获取办理人权限设置列表接口\",{\"1\":{\"269\":1,\"564\":1,\"750\":1,\"935\":1,\"1136\":1,\"1488\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"获取总数量\",{\"0\":{\"215\":1,\"348\":1,\"517\":1,\"702\":1,\"888\":1,\"1084\":1,\"1434\":1},\"1\":{\"215\":1,\"348\":1,\"517\":1,\"702\":1,\"888\":1,\"1084\":1,\"1434\":1}}],[\"获取下一个节点列表\",{\"0\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"获取流程图的图片流\",{\"1\":{\"185\":1,\"321\":1,\"490\":1,\"675\":1,\"861\":1,\"1056\":1,\"1404\":1}}],[\"获取流程图\",{\"0\":{\"185\":1,\"321\":1,\"490\":1,\"675\":1,\"861\":1,\"1056\":1,\"1404\":1}}],[\"获取流程定义全部数据\",{\"1\":{\"188\":1,\"1407\":1}}],[\"获取流程定义xml的字符串\",{\"1\":{\"316\":1,\"670\":1}}],[\"获取流程定义xml\",{\"1\":{\"180\":1,\"485\":1,\"856\":1,\"1051\":1,\"1399\":1}}],[\"获取流程定义\",{\"0\":{\"180\":1,\"188\":1,\"316\":1,\"485\":1,\"670\":1,\"856\":1,\"1051\":1,\"1399\":1,\"1407\":1}}],[\"获取流程变量的map类型\",{\"1\":{\"150\":1,\"1556\":1}}],[\"获取可找作者定制化开发\",{\"1\":{\"104\":1,\"1371\":1}}],[\"获取策略类型\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"获取表字段\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"获取当前操作用户所有权限\",{\"1\":{\"29\":1,\"1195\":1,\"1296\":1}}],[\"获取当前办理人\",{\"1\":{\"28\":1,\"29\":1,\"1194\":1,\"1195\":1,\"1295\":1,\"1296\":1}}],[\"获取组件中的mapper\",{\"1\":{\"24\":1,\"26\":1,\"409\":1,\"411\":1,\"594\":1,\"596\":1,\"780\":1,\"782\":1,\"973\":1,\"975\":1,\"1190\":1,\"1192\":1,\"1291\":1,\"1293\":1}}],[\"中调用\",{\"1\":{\"1194\":1}}],[\"中\",{\"1\":{\"472\":1,\"658\":1,\"843\":1,\"1037\":1}}],[\"中间和网关节点必须有跳转条件\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"中间节点不可通过或者驳回到多个中间节点\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"中间节点\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"中间节点拆分为或签\",{\"1\":{\"152\":1,\"1558\":1}}],[\"中的根据无法正确删除user数据\",{\"1\":{\"154\":1,\"1560\":1}}],[\"中铁四局集团全资子公司\",{\"1\":{\"83\":1,\"1350\":1}}],[\"中交武汉智行国际\",{\"1\":{\"83\":1,\"1350\":1}}],[\"中表示\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"中获取\",{\"1\":{\"28\":1,\"1295\":1}}],[\"中更新了\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"为此耗时一年时间自研warm\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"为此抽取出这个接口\",{\"1\":{\"27\":1,\"1193\":1,\"1294\":1}}],[\"为是否可编辑\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"为需要查询的流程定义id\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"为了方便业务系统快速引入设计器\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"为保存流程状态\",{\"1\":{\"162\":1,\"1568\":1}}],[\"为springutil指定bean\",{\"1\":{\"155\":1,\"1561\":1}}],[\"为提出问题的小伙伴答疑\",{\"1\":{\"87\":1,\"1354\":1}}],[\"为社区处理问题\",{\"0\":{\"87\":1,\"1354\":1}}],[\"为开源项目点一个star\",{\"0\":{\"86\":1,\"1353\":1}}],[\"为中心\",{\"1\":{\"83\":1,\"1350\":1}}],[\"为往圣继绝学\",{\"1\":{\"0\":1}}],[\"以确保平稳过渡和兼容性\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"以满足特定的需求\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"以并行网关结尾\",{\"1\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"以并行网关开头\",{\"1\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"以串行网关结尾\",{\"1\":{\"280\":1,\"426\":1,\"611\":1,\"797\":1,\"990\":1,\"1210\":1,\"1217\":1,\"1499\":1}}],[\"以串行网关开头\",{\"1\":{\"280\":1,\"426\":1,\"611\":1,\"797\":1,\"990\":1,\"1210\":1,\"1217\":1,\"1499\":1}}],[\"以便进行修改或重新处理\",{\"1\":{\"276\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"以上是sa\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"以上业务代码中会出现很多重复代码\",{\"1\":{\"27\":1,\"1193\":1,\"1294\":1}}],[\"以接口和静态资源的方式引入\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"以ruoyi\",{\"1\":{\"132\":1,\"1538\":1}}],[\"以及warm组织成员和贡献者的红包奖励\",{\"1\":{\"122\":1,\"1389\":1}}],[\"以及开启流程代码\",{\"1\":{\"117\":1,\"418\":1,\"603\":1,\"789\":1,\"982\":1,\"1202\":1,\"1384\":1}}],[\"以下代码再ruoyi不分离版中测试\",{\"1\":{\"746\":1}}],[\"以下为简短案例\",{\"0\":{\"1642\":1,\"1702\":1},\"1\":{\"291\":1,\"627\":1,\"1006\":1,\"1229\":1,\"1510\":1}}],[\"以下为主要接口示例\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"以下设置获取内置变量的function\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"以下是nginx代理示例\",{\"1\":{\"1592\":1}}],[\"以下是spring\",{\"1\":{\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"以下是错误示例\",{\"1\":{\"133\":1,\"1539\":1}}],[\"以下是存在的示例\",{\"1\":{\"132\":1,\"1538\":1}}],[\"以下是一些典型的应用场景\",{\"1\":{\"105\":1,\"1372\":1}}],[\"以下演示基于项目示例hh\",{\"1\":{\"110\":2,\"412\":2,\"597\":2,\"783\":2,\"976\":2,\"1196\":2,\"1377\":2}}],[\"以ctq\",{\"1\":{\"83\":1,\"1350\":1}}],[\"注册拦截器\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"注册表达式实现类\",{\"0\":{\"52\":1,\"73\":1,\"79\":1,\"1152\":1,\"1319\":1,\"1340\":1,\"1346\":1}}],[\"注解标记允许匿名访问的url\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"注入bean\",{\"0\":{\"249\":1,\"377\":1,\"546\":1,\"731\":1,\"917\":1,\"1116\":1,\"1468\":1}}],[\"注入\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"注意\",{\"1\":{\"11\":1,\"111\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1,\"1378\":1}}],[\"jar\",{\"1\":{\"134\":1,\"1540\":1}}],[\"javadocs<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"javadoc\",{\"1\":{\"1629\":3,\"1689\":3}}],[\"java注释掉\",{\"1\":{\"136\":1,\"1542\":1}}],[\"java\",{\"1\":{\"132\":1,\"282\":2,\"430\":2,\"615\":2,\"801\":2,\"994\":2,\"1220\":2,\"1501\":2,\"1538\":1}}],[\"javatimemodule\",{\"1\":{\"131\":7,\"1537\":7}}],[\"jackson2objectmapperbuilder\",{\"1\":{\"131\":2,\"1537\":2}}],[\"jackson2objectmapperbuildercustomizer\",{\"1\":{\"131\":1,\"1537\":1}}],[\"jackson2httpmessageconverter\",{\"1\":{\"131\":1,\"1537\":1}}],[\"jacksonconfig\",{\"1\":{\"131\":1,\"1537\":1}}],[\"jacksonstdimpl\",{\"1\":{\"131\":1,\"1537\":1}}],[\"jackson\",{\"1\":{\"69\":1,\"152\":1,\"387\":1,\"572\":1,\"758\":1,\"951\":1,\"1165\":1,\"1336\":1,\"1558\":1,\"1657\":1,\"1729\":1}}],[\"js或者nginx中的代理\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"js配置代码\",{\"1\":{\"743\":1}}],[\"js\",{\"1\":{\"131\":4,\"1537\":4}}],[\"json库支持snack3\",{\"1\":{\"152\":1,\"1558\":1}}],[\"json库扩展\",{\"0\":{\"69\":1,\"70\":1,\"387\":1,\"388\":1,\"572\":1,\"573\":1,\"758\":1,\"759\":1,\"951\":1,\"952\":1,\"1165\":1,\"1166\":1,\"1336\":1,\"1337\":1}}],[\"jsongenerator\",{\"1\":{\"131\":1,\"1537\":1}}],[\"json转换异常\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1337\":2}}],[\"json字符串\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1337\":2}}],[\"jsonstr\",{\"1\":{\"70\":4,\"388\":4,\"573\":4,\"759\":4,\"952\":4,\"1166\":4,\"1337\":4}}],[\"jsonconvertjackson\",{\"1\":{\"70\":3,\"388\":3,\"573\":3,\"759\":3,\"952\":3,\"1166\":3,\"1337\":3}}],[\"jsonconvert\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1337\":2}}],[\"json\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1337\":2}}],[\"json模块\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"jsonobject\",{\"1\":{\"17\":2,\"402\":2,\"587\":2,\"773\":2,\"966\":2,\"1183\":2,\"1284\":2}}],[\"jsqlparser\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"jpa配置\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"jpa扩展\",{\"1\":{\"158\":1,\"1564\":1}}],[\"jpa涉及持久化操作必须开启事务\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"jpa注意事项\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"jpa\",{\"0\":{\"25\":1,\"288\":1,\"410\":1,\"436\":1,\"595\":1,\"621\":1,\"781\":1,\"807\":1,\"974\":1,\"1000\":1,\"1191\":1,\"1226\":1,\"1292\":1,\"1507\":1},\"1\":{\"25\":4,\"107\":1,\"154\":1,\"155\":1,\"242\":2,\"245\":3,\"288\":3,\"366\":2,\"369\":3,\"410\":4,\"436\":3,\"440\":1,\"535\":2,\"538\":3,\"595\":4,\"621\":4,\"625\":1,\"720\":2,\"723\":3,\"781\":4,\"807\":3,\"811\":1,\"906\":2,\"909\":3,\"974\":4,\"1000\":3,\"1004\":1,\"1105\":2,\"1108\":3,\"1191\":4,\"1226\":3,\"1292\":4,\"1374\":1,\"1461\":2,\"1464\":3,\"1507\":3,\"1560\":1,\"1561\":1,\"1640\":1,\"1673\":2,\"1700\":1,\"1719\":2}}],[\"第二种\",{\"1\":{\"408\":1,\"593\":1,\"779\":1,\"972\":1}}],[\"第二种方式\",{\"1\":{\"24\":1,\"26\":1,\"409\":1,\"411\":1,\"594\":1,\"596\":1,\"780\":1,\"782\":1,\"973\":1,\"975\":1,\"1190\":1,\"1192\":1,\"1291\":1,\"1293\":1}}],[\"第一种\",{\"1\":{\"408\":1,\"593\":1,\"779\":1,\"972\":1}}],[\"第一种方式\",{\"1\":{\"24\":1,\"26\":1,\"409\":1,\"411\":1,\"594\":1,\"596\":1,\"780\":1,\"782\":1,\"973\":1,\"975\":1,\"1190\":1,\"1192\":1,\"1291\":1,\"1293\":1}}],[\"开始时间\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"开始时间记录代表任务的创建时间\",{\"1\":{\"157\":1,\"1563\":1}}],[\"开始学习前\",{\"1\":{\"283\":1,\"1221\":1,\"1502\":1}}],[\"开始节点类型\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"开始节点名称\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"开始节点编码\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"开始节点必须有且只有一个跳转条件\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"开始节点和结束节点必须有\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"开始节点\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"开始节点的暂存\",{\"1\":{\"276\":1,\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"开始节点也能记录到历史任务记录中\",{\"1\":{\"163\":1,\"1569\":1}}],[\"开始监听器和完成监听器新增返回当前任务和新建任务集合\",{\"1\":{\"160\":1,\"1566\":1}}],[\"开始监听器实现类例子\",{\"0\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"开始监听器\",{\"1\":{\"3\":1,\"8\":1,\"16\":1,\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1,\"1169\":1,\"1174\":1,\"1182\":1,\"1270\":1,\"1275\":1,\"1283\":1,\"1672\":1,\"1718\":1}}],[\"开发中计划\",{\"0\":{\"143\":1,\"1549\":1}}],[\"开源组织成员\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"开源仿钉钉工作流\",{\"1\":{\"121\":1,\"1388\":1}}],[\"开源集成案例\",{\"0\":{\"121\":1,\"1388\":1}}],[\"开源协议\",{\"0\":{\"104\":1,\"1371\":1}}],[\"开源工作流\",{\"1\":{\"83\":1,\"1350\":1}}],[\"开放生态\",{\"1\":{\"83\":2,\"1350\":2}}],[\"开启流程后的状态\",{\"1\":{\"279\":1,\"425\":1,\"610\":1,\"796\":1,\"989\":1,\"1209\":1,\"1216\":1,\"1498\":1}}],[\"开启流程是传入租户id\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"开启流程可以不默认执行到中间节点\",{\"1\":{\"145\":1,\"1550\":1}}],[\"开启流程会直接执行到开始节点后一个节点\",{\"1\":{\"117\":1,\"418\":1,\"603\":1,\"789\":1,\"982\":1,\"1202\":1,\"1384\":1}}],[\"开启流程实例\",{\"0\":{\"117\":1,\"418\":1,\"603\":1,\"789\":1,\"982\":1,\"1202\":1,\"1384\":1},\"1\":{\"191\":1,\"325\":1,\"494\":1,\"679\":1,\"865\":1,\"1060\":1,\"1410\":1}}],[\"开启流程\",{\"0\":{\"58\":1,\"191\":1,\"294\":1,\"325\":1,\"372\":1,\"444\":1,\"494\":1,\"541\":1,\"630\":1,\"679\":1,\"726\":1,\"815\":1,\"865\":1,\"912\":1,\"1009\":1,\"1060\":1,\"1111\":1,\"1232\":1,\"1325\":1,\"1410\":1,\"1513\":1,\"1645\":1,\"1705\":1},\"1\":{\"1670\":1,\"1716\":1}}],[\"开启后默认为0\",{\"1\":{\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"407\":1,\"535\":1,\"538\":1,\"592\":1,\"720\":1,\"723\":1,\"778\":1,\"906\":1,\"909\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"开启后默认为2\",{\"1\":{\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"407\":1,\"535\":1,\"538\":1,\"592\":1,\"720\":1,\"723\":1,\"778\":1,\"906\":1,\"909\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"通常是在流程设计器中预先设定好办理人\",{\"1\":{\"1619\":1,\"1679\":1}}],[\"通用规则\",{\"0\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"通用多租户\",{\"0\":{\"34\":1,\"463\":1,\"649\":1,\"834\":1,\"1028\":1,\"1252\":1,\"1301\":1}}],[\"通用逻辑删除\",{\"0\":{\"22\":1,\"407\":1,\"592\":1,\"778\":1,\"971\":1,\"1188\":1,\"1289\":1}}],[\"通过设计器获取坐标\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"通过设置id生成器类型\",{\"1\":{\"131\":1,\"1537\":1}}],[\"通过他的办理人变量表达式就能很好解决此问题\",{\"1\":{\"1619\":1,\"1679\":1}}],[\"通过逻辑\",{\"1\":{\"428\":2,\"613\":2,\"799\":2,\"992\":2,\"1212\":2,\"1219\":2}}],[\"通过后端graphics2d进行绘制\",{\"1\":{\"385\":1,\"570\":1,\"756\":1,\"949\":1,\"1163\":1}}],[\"通过jar包引入\",{\"1\":{\"296\":1,\"626\":1,\"1005\":1,\"1234\":1,\"1515\":1,\"1647\":1,\"1707\":1}}],[\"通过任务id流转\",{\"1\":{\"295\":1,\"445\":1,\"631\":1,\"816\":1,\"1010\":1,\"1233\":1,\"1514\":1}}],[\"通过实例id流转\",{\"1\":{\"295\":1,\"445\":1,\"631\":1,\"816\":1,\"1010\":1,\"1233\":1,\"1514\":1,\"1646\":1,\"1706\":1}}],[\"通过或者退回\",{\"1\":{\"276\":1,\"993\":1,\"1213\":1,\"1495\":1}}],[\"通过此配置兼容\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"通过此接口可以给办理人选择\",{\"1\":{\"49\":1,\"1316\":1}}],[\"通过权限标识过滤数据\",{\"1\":{\"171\":1,\"1577\":1}}],[\"通过$和\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1,\"1652\":1,\"1724\":1}}],[\"通过接口接入方式\",{\"1\":{\"147\":1,\"1553\":1,\"1612\":1,\"1613\":1}}],[\"通过检查fc\",{\"1\":{\"132\":1,\"1538\":1}}],[\"通过yml配置\",{\"1\":{\"131\":1,\"1537\":1}}],[\"通过还是退回\",{\"1\":{\"116\":1,\"417\":1,\"602\":1,\"788\":1,\"981\":1,\"1201\":1,\"1383\":1}}],[\"通过warm\",{\"1\":{\"105\":1,\"1372\":1}}],[\"通过这个方法进行注册expressionutil\",{\"1\":{\"52\":1,\"73\":1,\"79\":1,\"1152\":1,\"1319\":1,\"1340\":1,\"1346\":1}}],[\"通过主键查找数据\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"通过上述注解获取工作流组件内各entity访问能力\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"通过\",{\"0\":{\"250\":1,\"378\":1,\"547\":1,\"732\":1,\"918\":1,\"1117\":1,\"1469\":1},\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"通过监听器\",{\"1\":{\"1\":1,\"389\":1,\"574\":1,\"760\":1,\"953\":1,\"1167\":1,\"1268\":1}}],[\"的值\",{\"1\":{\"1620\":1,\"1680\":1}}],[\"的hibernate\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"的字符串\",{\"1\":{\"180\":1,\"485\":1,\"856\":1,\"1051\":1,\"1399\":1}}],[\"的低代码系统的设计和实现\",{\"1\":{\"121\":1,\"1388\":1}}],[\"的名字对上\",{\"1\":{\"21\":1,\"406\":1,\"591\":1,\"777\":1,\"970\":1,\"1187\":1,\"1288\":1}}],[\"的企业\",{\"1\":{\"0\":1}}],[\"信息\",{\"1\":{\"21\":1,\"406\":1,\"591\":1,\"777\":1,\"970\":1,\"1187\":1,\"1288\":1}}],[\"逻辑\",{\"1\":{\"428\":2,\"613\":2,\"799\":2,\"992\":2,\"1212\":2,\"1219\":2}}],[\"逻辑未删除字段\",{\"1\":{\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"407\":1,\"535\":1,\"538\":1,\"592\":1,\"720\":1,\"723\":1,\"778\":1,\"906\":1,\"909\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"逻辑未删除值\",{\"1\":{\"20\":1,\"21\":1,\"405\":1,\"406\":1,\"590\":1,\"591\":1,\"776\":1,\"777\":1,\"969\":1,\"970\":1,\"1186\":1,\"1187\":1,\"1287\":1,\"1288\":1}}],[\"逻辑已删除值\",{\"1\":{\"19\":1,\"20\":1,\"21\":1,\"404\":1,\"405\":1,\"406\":1,\"589\":1,\"590\":1,\"591\":1,\"775\":1,\"776\":1,\"777\":1,\"968\":1,\"969\":1,\"970\":1,\"1185\":1,\"1186\":1,\"1187\":1,\"1286\":1,\"1287\":1,\"1288\":1}}],[\"逻辑删除字段值\",{\"1\":{\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"407\":1,\"535\":1,\"538\":1,\"592\":1,\"720\":1,\"723\":1,\"778\":1,\"906\":1,\"909\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"逻辑删除\",{\"0\":{\"18\":1,\"403\":1,\"588\":1,\"774\":1,\"967\":1,\"1184\":1,\"1285\":1}}],[\"mirrorof是否位\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"min290\",{\"1\":{\"1625\":1,\"1630\":1,\"1685\":1,\"1690\":1}}],[\"minliuhua<\",{\"1\":{\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"1590\":1}}],[\"minliuhua\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1654\":1,\"1703\":1,\"1726\":1}}],[\"min\",{\"1\":{\"131\":3,\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1537\":3,\"1628\":1,\"1629\":2,\"1643\":1,\"1688\":1,\"1689\":2,\"1703\":1}}],[\"mvn\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"mdata\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1703\":1}}],[\"mm\",{\"1\":{\"270\":6,\"565\":6,\"751\":6,\"936\":6,\"1137\":6,\"1489\":6}}],[\"mounted\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"modifyhandler\",{\"1\":{\"338\":1,\"692\":1}}],[\"modifyhandler增加链式调用\",{\"1\":{\"153\":1,\"1559\":1}}],[\"modal\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"modes\",{\"1\":{\"154\":1,\"1560\":1}}],[\"modules\",{\"1\":{\"131\":1,\"1537\":1}}],[\"method\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"methods\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"meta\",{\"1\":{\"66\":1,\"263\":2,\"558\":2,\"929\":2,\"943\":1,\"1130\":2,\"1144\":1,\"1333\":1,\"1482\":2}}],[\"message\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"275\":4,\"304\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"334\":2,\"335\":2,\"336\":2,\"337\":2,\"338\":1,\"453\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"639\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"688\":2,\"689\":2,\"690\":2,\"691\":2,\"692\":1,\"824\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"1018\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1242\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1494\":4,\"1523\":1}}],[\"mysql8dialect\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"mysql\",{\"1\":{\"106\":1,\"136\":1,\"242\":1,\"282\":1,\"366\":1,\"430\":1,\"439\":1,\"535\":1,\"615\":1,\"624\":1,\"720\":1,\"801\":1,\"810\":1,\"906\":1,\"994\":1,\"1003\":1,\"1105\":1,\"1220\":1,\"1373\":1,\"1461\":1,\"1501\":1,\"1542\":1,\"1673\":1,\"1719\":1}}],[\"mybatisconfig\",{\"1\":{\"136\":1,\"1542\":1}}],[\"mybatisconfiguration\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"mybatisplus\",{\"1\":{\"136\":5,\"1542\":5}}],[\"mybatisplus全局配置\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"32\":4,\"33\":2,\"136\":5,\"461\":4,\"462\":2,\"647\":4,\"648\":2,\"832\":4,\"833\":2,\"1026\":4,\"1027\":2,\"1250\":4,\"1251\":2,\"1299\":4,\"1300\":2,\"1542\":5}}],[\"mybatisplusconfig\",{\"1\":{\"32\":1,\"136\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1299\":1,\"1542\":1}}],[\"mybatis\",{\"0\":{\"19\":1,\"24\":1,\"26\":1,\"31\":1,\"286\":1,\"287\":1,\"289\":1,\"404\":1,\"409\":1,\"411\":1,\"434\":1,\"435\":1,\"437\":1,\"460\":1,\"589\":1,\"594\":1,\"596\":1,\"619\":1,\"620\":1,\"622\":1,\"646\":1,\"775\":1,\"780\":1,\"782\":1,\"805\":1,\"806\":1,\"808\":1,\"831\":1,\"968\":1,\"973\":1,\"975\":1,\"998\":1,\"999\":1,\"1001\":1,\"1025\":1,\"1185\":1,\"1190\":1,\"1192\":1,\"1224\":1,\"1225\":1,\"1227\":1,\"1249\":1,\"1286\":1,\"1291\":1,\"1293\":1,\"1298\":1,\"1505\":1,\"1506\":1,\"1508\":1},\"1\":{\"19\":1,\"20\":2,\"21\":2,\"31\":1,\"102\":2,\"107\":3,\"136\":5,\"286\":3,\"287\":3,\"288\":1,\"289\":3,\"404\":1,\"405\":2,\"406\":2,\"434\":2,\"435\":2,\"436\":1,\"437\":2,\"440\":3,\"460\":1,\"589\":1,\"590\":2,\"591\":2,\"619\":3,\"620\":3,\"621\":1,\"622\":3,\"625\":3,\"646\":1,\"775\":1,\"776\":2,\"777\":2,\"805\":2,\"806\":2,\"807\":1,\"808\":2,\"811\":3,\"831\":1,\"968\":1,\"969\":2,\"970\":2,\"998\":3,\"999\":3,\"1000\":1,\"1001\":3,\"1004\":3,\"1025\":1,\"1185\":1,\"1186\":2,\"1187\":2,\"1224\":3,\"1225\":3,\"1226\":1,\"1227\":3,\"1249\":1,\"1286\":1,\"1287\":2,\"1288\":2,\"1298\":1,\"1369\":2,\"1374\":3,\"1505\":3,\"1506\":3,\"1507\":1,\"1508\":3,\"1542\":5,\"1586\":2,\"1597\":2,\"1608\":2,\"1614\":2,\"1640\":4,\"1648\":2,\"1668\":2,\"1700\":4,\"1708\":2,\"1714\":2}}],[\"master\",{\"0\":{\"1739\":1}}],[\"maven依赖\",{\"0\":{\"285\":1,\"433\":1,\"618\":1,\"804\":1,\"997\":1,\"1223\":1,\"1504\":1}}],[\"maven\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1,\"1629\":4,\"1630\":1,\"1689\":4,\"1690\":1}}],[\"max\",{\"1\":{\"131\":3,\"1537\":3}}],[\"main\",{\"1\":{\"66\":2,\"132\":1,\"133\":1,\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"943\":2,\"1007\":1,\"1144\":2,\"1230\":1,\"1333\":2,\"1511\":1,\"1538\":1,\"1539\":1,\"1630\":1,\"1643\":1,\"1690\":1,\"1703\":1}}],[\"mathutil\",{\"1\":{\"56\":2,\"1162\":2,\"1323\":2}}],[\"map类型\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"mappingjackson2httpmessageconverter\",{\"1\":{\"131\":2,\"1537\":2}}],[\"map转换异常\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1337\":2}}],[\"maptostr\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"maputil\",{\"1\":{\"17\":1,\"70\":1,\"82\":1,\"388\":1,\"402\":1,\"477\":1,\"573\":1,\"587\":1,\"663\":1,\"759\":1,\"773\":1,\"848\":1,\"952\":1,\"966\":1,\"1042\":1,\"1155\":1,\"1166\":1,\"1183\":1,\"1284\":1,\"1337\":1,\"1349\":1}}],[\"map<string\",{\"1\":{\"10\":1,\"17\":2,\"39\":1,\"45\":1,\"48\":1,\"51\":1,\"54\":2,\"55\":2,\"70\":2,\"72\":1,\"76\":1,\"78\":1,\"82\":1,\"239\":1,\"310\":2,\"383\":1,\"388\":2,\"396\":1,\"402\":2,\"467\":2,\"473\":1,\"476\":1,\"477\":2,\"568\":1,\"573\":2,\"581\":1,\"587\":2,\"653\":2,\"659\":1,\"662\":1,\"663\":2,\"754\":1,\"759\":2,\"767\":1,\"773\":2,\"838\":2,\"844\":1,\"847\":1,\"848\":2,\"947\":1,\"952\":2,\"960\":1,\"966\":2,\"1032\":2,\"1038\":1,\"1041\":1,\"1042\":2,\"1102\":1,\"1148\":1,\"1151\":1,\"1155\":1,\"1158\":1,\"1160\":2,\"1161\":2,\"1166\":2,\"1176\":1,\"1183\":2,\"1256\":2,\"1258\":1,\"1264\":1,\"1267\":1,\"1277\":1,\"1284\":2,\"1306\":1,\"1312\":1,\"1315\":1,\"1318\":1,\"1321\":2,\"1322\":2,\"1337\":2,\"1339\":1,\"1343\":1,\"1345\":1,\"1349\":1,\"1458\":1,\"1529\":2,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"map\",{\"1\":{\"9\":1,\"54\":3,\"70\":3,\"388\":3,\"395\":1,\"573\":3,\"580\":1,\"759\":3,\"766\":1,\"952\":3,\"959\":1,\"1160\":3,\"1166\":3,\"1175\":1,\"1276\":1,\"1321\":3,\"1337\":3}}],[\"mptenanthandler\",{\"1\":{\"32\":4,\"33\":2,\"461\":4,\"462\":2,\"647\":4,\"648\":2,\"832\":4,\"833\":2,\"1026\":4,\"1027\":2,\"1250\":4,\"1251\":2,\"1299\":4,\"1300\":2}}],[\"拿到json后使用序列化可以拿到配置信息\",{\"1\":{\"17\":1,\"402\":1,\"587\":1,\"773\":1,\"966\":1,\"1183\":1,\"1284\":1}}],[\"页面配置监听器时加上类路径\",{\"1\":{\"17\":1,\"402\":1,\"587\":1,\"773\":1,\"966\":1,\"1183\":1,\"1284\":1}}],[\"页面配置全局或节点监听器\",{\"0\":{\"13\":1,\"399\":1,\"584\":1,\"770\":1,\"963\":1,\"1179\":1,\"1280\":1}}],[\"778470567\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"7取回\",{\"1\":{\"1019\":1}}],[\"7减签\",{\"1\":{\"205\":1,\"304\":1,\"338\":1,\"453\":1,\"507\":1,\"639\":1,\"692\":1,\"824\":1,\"878\":1,\"1018\":1,\"1074\":1,\"1242\":1,\"1424\":1,\"1523\":1}}],[\"7\",{\"0\":{\"17\":1,\"49\":1,\"108\":1,\"137\":1,\"153\":1,\"160\":1,\"180\":1,\"197\":1,\"205\":1,\"215\":1,\"319\":1,\"338\":1,\"348\":1,\"442\":1,\"487\":1,\"507\":1,\"517\":1,\"627\":1,\"628\":1,\"629\":1,\"630\":1,\"631\":1,\"672\":1,\"692\":1,\"702\":1,\"813\":1,\"858\":1,\"878\":1,\"888\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1010\":1,\"1051\":1,\"1066\":1,\"1074\":1,\"1084\":1,\"1183\":1,\"1284\":1,\"1316\":1,\"1375\":1,\"1399\":1,\"1416\":1,\"1424\":1,\"1434\":1,\"1543\":1,\"1559\":1,\"1566\":1,\"1588\":1,\"1599\":1,\"1610\":1,\"1616\":1,\"1658\":1,\"1730\":1},\"1\":{\"238\":1,\"276\":1,\"300\":1,\"301\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"382\":1,\"429\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"567\":1,\"614\":1,\"635\":1,\"636\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"753\":1,\"800\":1,\"820\":1,\"821\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"946\":1,\"993\":1,\"1014\":1,\"1015\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1101\":1,\"1147\":1,\"1213\":1,\"1238\":1,\"1239\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1457\":1,\"1495\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"gson\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"goals>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"goal>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"gt|flag|4\",{\"1\":{\"1457\":1}}],[\"gt\",{\"1\":{\"238\":2,\"1101\":2}}],[\"guide\",{\"0\":{\"1744\":1,\"1746\":1,\"1748\":1,\"1750\":1,\"1752\":1,\"1767\":1,\"1773\":1},\"1\":{\"136\":3,\"1542\":3}}],[\"ge|flag|4\",{\"1\":{\"1457\":1}}],[\"ge\",{\"1\":{\"238\":2,\"1101\":2}}],[\"gen\",{\"1\":{\"131\":3,\"1537\":3}}],[\"getkey\",{\"1\":{\"295\":3,\"445\":3,\"631\":3,\"816\":3,\"1010\":3,\"1233\":3,\"1514\":3,\"1646\":2,\"1670\":2,\"1706\":2,\"1716\":2}}],[\"getparentid\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"getpermissionlist\",{\"1\":{\"11\":1,\"39\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1258\":1,\"1278\":1,\"1306\":1}}],[\"getpermissionflag\",{\"1\":{\"9\":1,\"28\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1,\"1295\":1}}],[\"getmapping\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"getupdatetime\",{\"1\":{\"248\":1,\"376\":1,\"545\":1,\"730\":1,\"916\":1,\"1115\":1,\"1467\":1}}],[\"getusername\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"getuserid\",{\"1\":{\"9\":2,\"29\":4,\"58\":1,\"270\":1,\"310\":1,\"372\":1,\"395\":2,\"467\":1,\"541\":1,\"565\":1,\"580\":2,\"653\":1,\"726\":1,\"751\":1,\"766\":2,\"838\":1,\"912\":1,\"936\":1,\"959\":2,\"1032\":1,\"1111\":1,\"1137\":1,\"1175\":2,\"1195\":4,\"1256\":1,\"1276\":2,\"1296\":4,\"1325\":1,\"1489\":1,\"1529\":1}}],[\"getuser\",{\"1\":{\"9\":4,\"29\":2,\"58\":1,\"270\":2,\"294\":1,\"295\":3,\"310\":1,\"372\":1,\"395\":4,\"444\":1,\"445\":3,\"467\":1,\"541\":1,\"565\":2,\"580\":4,\"630\":1,\"631\":3,\"653\":1,\"726\":1,\"751\":2,\"766\":4,\"815\":1,\"816\":3,\"838\":1,\"912\":1,\"936\":2,\"959\":4,\"1009\":1,\"1010\":3,\"1032\":1,\"1111\":1,\"1137\":2,\"1175\":4,\"1195\":2,\"1232\":1,\"1233\":3,\"1256\":1,\"1276\":4,\"1296\":2,\"1325\":1,\"1489\":2,\"1513\":1,\"1514\":3,\"1529\":1,\"1645\":1,\"1646\":2,\"1670\":4,\"1705\":1,\"1706\":2,\"1716\":4}}],[\"getdeclaredfields\",{\"1\":{\"1286\":1}}],[\"getdeptname\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"getdept\",{\"1\":{\"270\":4,\"565\":4,\"751\":4,\"936\":4,\"1137\":4,\"1489\":4}}],[\"getdeptid\",{\"1\":{\"9\":1,\"29\":2,\"270\":2,\"395\":1,\"565\":2,\"580\":1,\"751\":2,\"766\":1,\"936\":2,\"959\":1,\"1137\":2,\"1175\":1,\"1195\":2,\"1276\":1,\"1296\":2,\"1489\":2}}],[\"getday\",{\"1\":{\"239\":1,\"310\":1,\"383\":1,\"467\":1,\"568\":1,\"653\":1,\"754\":1,\"838\":1,\"947\":1,\"1032\":1,\"1102\":1,\"1148\":1,\"1256\":1,\"1458\":1,\"1529\":1}}],[\"getone\",{\"1\":{\"214\":1,\"347\":1,\"516\":1,\"701\":1,\"887\":1,\"1083\":1,\"1433\":1}}],[\"getalldatadefinition\",{\"1\":{\"188\":1,\"189\":1,\"1407\":1,\"1408\":1}}],[\"getadditionalhandler\",{\"1\":{\"10\":2,\"396\":2,\"581\":2,\"767\":2,\"960\":2,\"1176\":2,\"1277\":2}}],[\"get赋值\",{\"1\":{\"149\":1,\"1555\":1}}],[\"getexpressionmap\",{\"1\":{\"54\":1,\"1160\":1,\"1321\":1}}],[\"getclass\",{\"1\":{\"1286\":1}}],[\"getcurrentinstance\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"getcreatetime\",{\"1\":{\"248\":3,\"270\":3,\"376\":3,\"545\":3,\"565\":3,\"730\":3,\"751\":3,\"916\":3,\"936\":3,\"1115\":3,\"1137\":3,\"1467\":3,\"1489\":3}}],[\"getcreateby\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"getcolumn\",{\"1\":{\"32\":5,\"33\":3,\"461\":5,\"462\":3,\"647\":5,\"648\":3,\"832\":5,\"833\":3,\"1026\":5,\"1027\":3,\"1250\":5,\"1251\":3,\"1299\":5,\"1300\":3}}],[\"getfieldlist\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"getflowtype\",{\"1\":{\"58\":1,\"239\":1,\"310\":1,\"372\":1,\"383\":1,\"467\":1,\"541\":1,\"568\":1,\"653\":1,\"726\":1,\"754\":1,\"838\":1,\"912\":1,\"947\":1,\"1032\":1,\"1102\":1,\"1111\":1,\"1148\":1,\"1256\":1,\"1325\":1,\"1458\":1,\"1529\":1}}],[\"getflowstatus\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"getflowparams\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"gettaskid\",{\"1\":{\"275\":4,\"1494\":4}}],[\"gettablename\",{\"1\":{\"32\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1286\":1,\"1299\":1}}],[\"gettableinfo\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"gettotal\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"gettypevalue\",{\"1\":{\"124\":1,\"1530\":1}}],[\"gettype\",{\"1\":{\"51\":2,\"54\":1,\"56\":1,\"72\":2,\"76\":1,\"78\":2,\"82\":1,\"477\":2,\"663\":2,\"848\":2,\"1042\":2,\"1151\":2,\"1155\":1,\"1158\":1,\"1160\":1,\"1162\":1,\"1318\":2,\"1321\":1,\"1323\":1,\"1339\":2,\"1343\":1,\"1345\":2,\"1349\":1}}],[\"gettenantidcolumn\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"gettenantid\",{\"1\":{\"32\":1,\"33\":1,\"37\":1,\"243\":1,\"367\":1,\"461\":1,\"462\":1,\"466\":1,\"536\":1,\"647\":1,\"648\":1,\"652\":1,\"721\":1,\"832\":1,\"833\":1,\"837\":1,\"907\":1,\"1026\":1,\"1027\":1,\"1031\":1,\"1106\":1,\"1250\":1,\"1251\":1,\"1255\":1,\"1299\":1,\"1300\":1,\"1304\":1,\"1462\":1}}],[\"gethandlerselectvo\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"gethandlerselect\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"gethandlertype\",{\"1\":{\"269\":1,\"270\":4,\"564\":1,\"565\":4,\"750\":1,\"751\":4,\"935\":1,\"936\":4,\"1136\":1,\"1137\":4,\"1488\":1,\"1489\":4,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"gethandler\",{\"1\":{\"28\":1,\"29\":1,\"1194\":1,\"1195\":1,\"1295\":1,\"1296\":1}}],[\"getresultlist\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"getrolename\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"getrolekey\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"getrole\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"getroleid\",{\"1\":{\"9\":1,\"29\":1,\"270\":1,\"395\":1,\"565\":1,\"580\":1,\"751\":1,\"766\":1,\"936\":1,\"959\":1,\"1137\":1,\"1175\":1,\"1195\":1,\"1276\":1,\"1296\":1,\"1489\":1}}],[\"getroles\",{\"1\":{\"9\":1,\"29\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1195\":1,\"1276\":1,\"1296\":1}}],[\"getbyids\",{\"1\":{\"210\":1,\"343\":1,\"512\":1,\"697\":1,\"883\":1,\"1079\":1,\"1429\":1}}],[\"getbyid\",{\"1\":{\"209\":1,\"211\":1,\"342\":1,\"344\":1,\"511\":1,\"513\":1,\"696\":1,\"698\":1,\"882\":1,\"884\":1,\"1078\":1,\"1080\":1,\"1428\":1,\"1430\":1}}],[\"getbean\",{\"1\":{\"24\":1,\"26\":1,\"409\":1,\"411\":1,\"594\":1,\"596\":1,\"780\":1,\"782\":1,\"973\":1,\"975\":1,\"1190\":1,\"1192\":1,\"1291\":1,\"1293\":1}}],[\"getbusinessid\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"getname\",{\"1\":{\"1286\":1}}],[\"getnickname\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"getnextnodelist\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"getnexttasks\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"getnowdate\",{\"1\":{\"10\":2,\"396\":2,\"581\":2,\"767\":2,\"960\":2,\"1176\":2,\"1277\":2}}],[\"getnodetype\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"getnodename\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"getnodecode\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"getid\",{\"1\":{\"10\":2,\"248\":1,\"292\":1,\"294\":1,\"376\":1,\"396\":2,\"442\":1,\"444\":1,\"545\":1,\"581\":2,\"628\":1,\"630\":1,\"730\":1,\"767\":2,\"813\":1,\"815\":1,\"916\":1,\"960\":2,\"1007\":1,\"1009\":1,\"1115\":1,\"1176\":2,\"1230\":1,\"1232\":1,\"1277\":2,\"1467\":1,\"1511\":1,\"1513\":1,\"1643\":1,\"1645\":1,\"1703\":1,\"1705\":1}}],[\"getinstanceid\",{\"1\":{\"10\":1,\"45\":1,\"48\":1,\"59\":1,\"373\":1,\"396\":1,\"473\":1,\"476\":1,\"542\":1,\"581\":1,\"659\":1,\"662\":1,\"727\":1,\"767\":1,\"844\":1,\"847\":1,\"913\":1,\"960\":1,\"1038\":1,\"1041\":1,\"1112\":1,\"1176\":1,\"1264\":1,\"1267\":1,\"1277\":1,\"1312\":1,\"1315\":1,\"1326\":1,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"getinstance\",{\"1\":{\"10\":1,\"11\":1,\"17\":1,\"310\":1,\"396\":1,\"397\":1,\"402\":1,\"467\":1,\"581\":1,\"582\":1,\"587\":1,\"653\":1,\"767\":1,\"768\":1,\"773\":1,\"838\":1,\"960\":1,\"961\":1,\"966\":1,\"1032\":1,\"1176\":1,\"1177\":1,\"1183\":1,\"1256\":1,\"1277\":1,\"1278\":1,\"1284\":1,\"1529\":1}}],[\"get\",{\"1\":{\"10\":2,\"11\":1,\"17\":1,\"32\":2,\"33\":1,\"55\":2,\"82\":1,\"396\":1,\"397\":1,\"402\":1,\"461\":2,\"462\":1,\"477\":1,\"581\":1,\"582\":1,\"587\":1,\"647\":2,\"648\":1,\"663\":1,\"767\":1,\"768\":1,\"773\":1,\"832\":2,\"833\":1,\"848\":1,\"960\":1,\"961\":1,\"966\":1,\"1026\":2,\"1027\":1,\"1042\":1,\"1155\":1,\"1161\":2,\"1176\":2,\"1177\":1,\"1183\":1,\"1250\":2,\"1251\":1,\"1277\":2,\"1278\":1,\"1284\":1,\"1299\":2,\"1300\":1,\"1322\":2,\"1349\":1}}],[\"getvariable\",{\"1\":{\"10\":1,\"17\":2,\"310\":1,\"396\":1,\"402\":2,\"467\":1,\"581\":1,\"587\":2,\"653\":1,\"767\":1,\"773\":2,\"838\":1,\"960\":1,\"966\":2,\"1032\":1,\"1176\":1,\"1183\":2,\"1256\":1,\"1277\":1,\"1284\":2,\"1529\":1}}],[\"getloginuser\",{\"1\":{\"9\":2,\"29\":2,\"58\":1,\"310\":1,\"372\":1,\"395\":2,\"467\":1,\"541\":1,\"580\":2,\"653\":1,\"726\":1,\"766\":2,\"838\":1,\"912\":1,\"959\":2,\"1032\":1,\"1111\":1,\"1175\":2,\"1195\":2,\"1256\":1,\"1276\":2,\"1296\":2,\"1325\":1,\"1529\":1}}],[\"getlogger\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"16\":1,\"70\":1,\"310\":1,\"388\":1,\"395\":1,\"396\":1,\"397\":1,\"467\":1,\"573\":1,\"580\":1,\"581\":1,\"582\":1,\"653\":1,\"759\":1,\"766\":1,\"767\":1,\"768\":1,\"838\":1,\"952\":1,\"959\":1,\"960\":1,\"961\":1,\"1032\":1,\"1166\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":1,\"1256\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":1,\"1337\":1,\"1529\":1}}],[\"gaussdb\",{\"1\":{\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1373\":1}}],[\"gitee|github\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"gitee\",{\"1\":{\"1625\":1,\"1629\":1,\"1630\":2,\"1641\":1,\"1685\":1,\"1689\":1,\"1690\":2,\"1701\":1}}],[\"gitee建新的仓库\",{\"0\":{\"1625\":1,\"1685\":1}}],[\"gitee变成maven私库\",{\"0\":{\"1623\":1,\"1683\":1}}],[\"gitee地址\",{\"1\":{\"86\":1,\"1353\":1}}],[\"github\",{\"1\":{\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"1590\":1,\"1654\":1,\"1726\":1}}],[\"github地址\",{\"1\":{\"86\":1,\"1353\":1}}],[\"git\",{\"1\":{\"162\":1,\"163\":1,\"1568\":1,\"1569\":1,\"1625\":1,\"1685\":1}}],[\"git提交规范\",{\"1\":{\"98\":1,\"1365\":1}}],[\"gitcode地址\",{\"1\":{\"86\":1,\"1353\":1}}],[\"groupid>\",{\"1\":{\"65\":2,\"136\":1,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":4,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":4,\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":4,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":4,\"922\":1,\"942\":2,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":4,\"1122\":1,\"1123\":1,\"1143\":2,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":4,\"1332\":2,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":4,\"1542\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1629\":2,\"1632\":1,\"1640\":1,\"1647\":1,\"1657\":1,\"1689\":2,\"1692\":1,\"1700\":1,\"1707\":1,\"1729\":1}}],[\"globalconfig\",{\"1\":{\"21\":2,\"33\":3,\"406\":2,\"462\":3,\"591\":2,\"648\":3,\"777\":2,\"833\":3,\"970\":2,\"1027\":3,\"1187\":2,\"1251\":3,\"1288\":2,\"1300\":3}}],[\"global\",{\"1\":{\"20\":1,\"405\":1,\"590\":1,\"776\":1,\"969\":1,\"1186\":1,\"1287\":1}}],[\"globallistener\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"只支持mybatis和msyql\",{\"1\":{\"1675\":1,\"1721\":1}}],[\"只针对mybatis\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"只会必须执行后面的所有任务路线\",{\"1\":{\"281\":1,\"427\":1,\"612\":1,\"798\":1,\"991\":1,\"1211\":1,\"1218\":1,\"1500\":1}}],[\"只会执行后面的一条任务路线\",{\"1\":{\"280\":1,\"426\":1,\"611\":1,\"797\":1,\"990\":1,\"1210\":1,\"1217\":1,\"1499\":1}}],[\"只需前面的一条路线完成即可往下执行\",{\"1\":{\"280\":1,\"426\":1,\"611\":1,\"797\":1,\"990\":1,\"1210\":1,\"1217\":1,\"1499\":1}}],[\"只需要实现globallistener接口\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"只处理长度过长的long类型\",{\"1\":{\"131\":1,\"1537\":1}}],[\"只有所有负责人审批通过\",{\"1\":{\"429\":1,\"614\":1,\"800\":1,\"993\":1,\"1213\":1}}],[\"只有未设置办理人时可不传\",{\"1\":{\"326\":1,\"332\":1,\"495\":1,\"501\":1,\"680\":1,\"686\":1}}],[\"只有7张表\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"只有指定节点任务才会执行\",{\"1\":{\"2\":1,\"391\":1,\"576\":1,\"762\":1,\"955\":1,\"1168\":1,\"1269\":1}}],[\"6撤销\",{\"1\":{\"1019\":1}}],[\"64\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"6加签\",{\"1\":{\"205\":1,\"304\":1,\"338\":1,\"453\":1,\"507\":1,\"639\":1,\"692\":1,\"824\":1,\"878\":1,\"1018\":1,\"1074\":1,\"1242\":1,\"1424\":1,\"1523\":1}}],[\"6切换为低版本3\",{\"1\":{\"137\":1,\"1543\":1}}],[\"68\",{\"1\":{\"123\":1,\"1390\":1}}],[\"6\",{\"0\":{\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"46\":1,\"107\":1,\"120\":1,\"136\":1,\"144\":1,\"154\":1,\"161\":1,\"179\":1,\"196\":1,\"204\":1,\"214\":1,\"297\":1,\"298\":1,\"299\":1,\"318\":1,\"330\":1,\"337\":1,\"347\":1,\"399\":1,\"400\":1,\"401\":1,\"421\":1,\"428\":1,\"441\":1,\"486\":1,\"499\":1,\"506\":1,\"516\":1,\"584\":1,\"585\":1,\"586\":1,\"606\":1,\"613\":1,\"626\":1,\"671\":1,\"684\":1,\"691\":1,\"701\":1,\"770\":1,\"771\":1,\"772\":1,\"792\":1,\"799\":1,\"812\":1,\"857\":1,\"870\":1,\"877\":1,\"887\":1,\"938\":1,\"939\":1,\"940\":1,\"941\":1,\"942\":1,\"943\":1,\"944\":1,\"963\":1,\"964\":1,\"965\":1,\"985\":1,\"992\":1,\"1005\":1,\"1050\":1,\"1065\":1,\"1073\":1,\"1083\":1,\"1179\":1,\"1180\":1,\"1181\":1,\"1182\":1,\"1205\":1,\"1212\":1,\"1219\":1,\"1235\":1,\"1236\":1,\"1237\":1,\"1265\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1313\":1,\"1374\":1,\"1387\":1,\"1398\":1,\"1415\":1,\"1423\":1,\"1433\":1,\"1516\":1,\"1517\":1,\"1518\":1,\"1542\":1,\"1550\":1,\"1560\":1,\"1567\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1650\":1,\"1659\":1,\"1710\":1,\"1731\":1},\"1\":{\"238\":1,\"300\":1,\"301\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":2,\"307\":1,\"308\":1,\"309\":1,\"382\":1,\"429\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":2,\"456\":1,\"457\":1,\"458\":1,\"567\":1,\"614\":1,\"635\":1,\"636\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":2,\"642\":1,\"643\":1,\"644\":1,\"753\":1,\"800\":1,\"820\":1,\"821\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":2,\"827\":1,\"828\":1,\"829\":1,\"946\":1,\"1014\":1,\"1015\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":2,\"1021\":1,\"1022\":1,\"1023\":1,\"1101\":1,\"1147\":1,\"1238\":1,\"1239\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":2,\"1245\":1,\"1246\":1,\"1247\":1,\"1457\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":2,\"1526\":1,\"1527\":1,\"1528\":1,\"1659\":1,\"1731\":1}}],[\"<=\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"<url>https\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"<url>file\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<repositories>\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"<repository>\",{\"1\":{\"1629\":1,\"1630\":1,\"1689\":1,\"1690\":1}}],[\"<name>releases<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<encoding>utf\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<execution>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<executions>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<exclusion>\",{\"1\":{\"65\":1,\"290\":2,\"438\":2,\"623\":2,\"809\":2,\"942\":1,\"1002\":2,\"1143\":1,\"1228\":2,\"1332\":1,\"1509\":2}}],[\"<exclusions>\",{\"1\":{\"65\":1,\"290\":1,\"438\":1,\"623\":1,\"809\":1,\"942\":1,\"1002\":1,\"1143\":1,\"1228\":1,\"1332\":1,\"1509\":1}}],[\"<aggregate>true<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<additionalparam>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<artifactid>snack3<\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"<artifactid>solon\",{\"1\":{\"290\":2,\"438\":2,\"623\":2,\"809\":2,\"1002\":2,\"1228\":2,\"1509\":2}}],[\"<artifactid>maven\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<artifactid>mybatis\",{\"1\":{\"136\":1,\"1542\":1}}],[\"<artifactid>warm\",{\"1\":{\"65\":2,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":2,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"922\":1,\"942\":2,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2,\"1122\":1,\"1123\":1,\"1143\":2,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1332\":2,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":2,\"1579\":1,\"1590\":1,\"1601\":1,\"1632\":1,\"1640\":1,\"1647\":1,\"1692\":1,\"1700\":1,\"1707\":1}}],[\"<charset>utf\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<configuration>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<class>com\",{\"1\":{\"410\":7,\"781\":7}}],[\"<class>org\",{\"1\":{\"25\":7,\"595\":7,\"974\":7,\"1191\":7,\"1292\":7}}],[\"<goal>jar<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<goal>jar\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<goals>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<groupid>io\",{\"1\":{\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"1590\":1}}],[\"<groupid>com\",{\"1\":{\"136\":1,\"1542\":1}}],[\"<groupid>org\",{\"1\":{\"65\":2,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":4,\"438\":2,\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":4,\"809\":2,\"922\":1,\"942\":2,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":4,\"1122\":1,\"1123\":1,\"1143\":2,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":4,\"1332\":2,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":4,\"1579\":1,\"1601\":1,\"1629\":2,\"1632\":1,\"1640\":1,\"1647\":1,\"1657\":1,\"1689\":2,\"1692\":1,\"1700\":1,\"1707\":1,\"1729\":1}}],[\"<build>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<id>gitee\",{\"1\":{\"1629\":2,\"1630\":1,\"1689\":2,\"1690\":1}}],[\"<id>gitee<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<id>attach\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<iframe\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"<plugin>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<plugins>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<profile>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<persistence\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"<snapshotrepository>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<style\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"<script\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"<script>\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"<distributionmanagement>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<div\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"<docencoding>utf\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"<dependency>\",{\"1\":{\"65\":1,\"136\":1,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":2,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"922\":1,\"942\":1,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2,\"1122\":1,\"1123\":1,\"1143\":1,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1332\":1,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":2,\"1542\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1632\":1,\"1640\":1,\"1647\":1,\"1657\":1,\"1692\":1,\"1700\":1,\"1707\":1,\"1729\":1}}],[\"<template>\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"<version>2\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"<version>1\",{\"1\":{\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1579\":1,\"1590\":1,\"1601\":1,\"1632\":1,\"1640\":1,\"1692\":1,\"1700\":1}}],[\"<version>最新版本<\",{\"1\":{\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":2,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":2,\"1647\":1,\"1707\":1}}],[\"<version>版本号<\",{\"1\":{\"255\":1,\"256\":1,\"551\":1,\"736\":1,\"922\":1,\"1122\":1,\"1123\":1,\"1474\":1,\"1475\":1}}],[\"<version>3\",{\"1\":{\"136\":1,\"1542\":1,\"1657\":1,\"1729\":1}}],[\"<\",{\"1\":{\"11\":1,\"25\":1,\"65\":3,\"131\":1,\"136\":1,\"255\":1,\"256\":1,\"262\":3,\"263\":4,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":5,\"397\":1,\"410\":1,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":5,\"551\":1,\"557\":3,\"558\":4,\"582\":1,\"595\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":5,\"736\":1,\"743\":3,\"744\":4,\"768\":1,\"781\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":5,\"922\":1,\"928\":3,\"929\":4,\"942\":3,\"961\":1,\"974\":1,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":5,\"1122\":1,\"1123\":1,\"1129\":3,\"1130\":4,\"1143\":3,\"1177\":1,\"1191\":1,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":5,\"1278\":1,\"1292\":1,\"1332\":3,\"1474\":1,\"1475\":1,\"1481\":3,\"1482\":4,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":5,\"1537\":1,\"1542\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1629\":19,\"1630\":2,\"1632\":1,\"1640\":1,\"1647\":1,\"1657\":1,\"1676\":1,\"1689\":19,\"1690\":2,\"1692\":1,\"1700\":1,\"1707\":1,\"1722\":1,\"1729\":1}}],[\"0<\",{\"1\":{\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"1590\":1}}],[\"0待提交\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"0开始节点\",{\"1\":{\"304\":1,\"305\":1,\"306\":1,\"307\":2,\"308\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":2,\"457\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":2,\"643\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":2,\"828\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":2,\"1022\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":2,\"1527\":1}}],[\"0开源协议\",{\"1\":{\"104\":1,\"1371\":1}}],[\"0挂起\",{\"1\":{\"303\":1,\"305\":1,\"452\":1,\"454\":1,\"638\":1,\"640\":1,\"823\":1,\"825\":1,\"1017\":1,\"1019\":1,\"1241\":1,\"1243\":1,\"1522\":1,\"1524\":1}}],[\"0未发布\",{\"1\":{\"303\":1,\"452\":1,\"638\":1,\"823\":1,\"1017\":1,\"1241\":1,\"1522\":1}}],[\"04\",{\"0\":{\"160\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"1566\":1,\"1567\":1,\"1568\":1,\"1569\":1,\"1570\":1}}],[\"05\",{\"0\":{\"159\":1,\"169\":1,\"1565\":1,\"1575\":1,\"1664\":1,\"1736\":1}}],[\"09\",{\"0\":{\"151\":1,\"152\":1,\"153\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1656\":1,\"1657\":1,\"1658\":1,\"1728\":1,\"1729\":1,\"1730\":1}}],[\"00\",{\"1\":{\"132\":1,\"1538\":1}}],[\"000000\",{\"1\":{\"37\":1,\"243\":1,\"367\":1,\"466\":1,\"536\":1,\"652\":1,\"721\":1,\"837\":1,\"907\":1,\"1031\":1,\"1106\":1,\"1255\":1,\"1304\":1,\"1462\":1}}],[\"06\",{\"0\":{\"156\":1,\"157\":1,\"158\":1,\"168\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1574\":1,\"1661\":1,\"1662\":1,\"1663\":1,\"1733\":1,\"1734\":1,\"1735\":1},\"1\":{\"123\":14,\"1390\":14}}],[\"03\",{\"0\":{\"153\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"1559\":1,\"1571\":1,\"1572\":1,\"1573\":1,\"1574\":1,\"1575\":1,\"1658\":1,\"1730\":1},\"1\":{\"123\":1,\"1390\":1}}],[\"07\",{\"0\":{\"163\":1,\"1569\":1},\"1\":{\"123\":3,\"1390\":3}}],[\"01\",{\"0\":{\"149\":1,\"1555\":1,\"1654\":1,\"1726\":1},\"1\":{\"123\":1,\"1390\":1}}],[\"02\",{\"0\":{\"164\":1,\"1570\":1},\"1\":{\"123\":1,\"1390\":1}}],[\"08\",{\"0\":{\"154\":1,\"155\":1,\"159\":1,\"1560\":1,\"1561\":1,\"1565\":1,\"1659\":1,\"1660\":1,\"1664\":1,\"1731\":1,\"1732\":1,\"1736\":1},\"1\":{\"123\":4,\"1390\":4}}],[\"0\",{\"0\":{\"150\":1,\"158\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":2,\"1556\":1,\"1564\":1,\"1573\":1,\"1574\":1,\"1575\":1,\"1576\":1,\"1577\":2,\"1655\":1,\"1663\":1,\"1727\":1,\"1735\":1,\"1749\":1},\"1\":{\"11\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"55\":2,\"56\":1,\"239\":2,\"242\":1,\"245\":1,\"263\":1,\"277\":1,\"303\":2,\"304\":2,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"366\":1,\"369\":1,\"383\":2,\"397\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"423\":1,\"452\":2,\"453\":2,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"535\":1,\"538\":1,\"558\":1,\"568\":2,\"582\":1,\"589\":1,\"590\":1,\"591\":1,\"592\":1,\"608\":1,\"638\":2,\"639\":2,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"720\":1,\"723\":1,\"744\":1,\"754\":2,\"768\":1,\"775\":1,\"776\":1,\"777\":1,\"778\":1,\"794\":1,\"823\":2,\"824\":2,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"906\":1,\"909\":1,\"929\":1,\"947\":2,\"961\":1,\"968\":1,\"969\":1,\"970\":1,\"971\":1,\"987\":1,\"1017\":2,\"1018\":2,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1102\":2,\"1105\":1,\"1108\":1,\"1130\":1,\"1148\":2,\"1161\":2,\"1162\":1,\"1177\":1,\"1185\":1,\"1186\":1,\"1187\":1,\"1188\":1,\"1207\":1,\"1214\":1,\"1241\":2,\"1242\":2,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1278\":1,\"1286\":1,\"1287\":1,\"1288\":1,\"1289\":1,\"1322\":2,\"1323\":1,\"1458\":2,\"1461\":1,\"1464\":1,\"1482\":1,\"1496\":1,\"1522\":2,\"1523\":2,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1589\":1,\"1655\":1,\"1663\":1,\"1673\":1,\"1719\":1,\"1727\":1,\"1735\":1}}],[\"可满足中小项目的组件\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"可满足不同场景\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"可参考官网文章逻辑删除和多租户\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"可参照warm\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"可不增加\",{\"1\":{\"1653\":1,\"1725\":1}}],[\"可不设置入参\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"可能需要对进行定制化开发\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"可能需要处理跨域问题\",{\"1\":{\"741\":1,\"1592\":1}}],[\"可能缓存原因\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"可应对不同场景\",{\"1\":{\"1586\":1,\"1597\":1,\"1608\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"可传递\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"可追加多个token\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"可匿名访问\",{\"1\":{\"258\":1,\"259\":1,\"553\":1,\"554\":1,\"738\":1,\"739\":1,\"924\":1,\"925\":1,\"1125\":1,\"1126\":1,\"1477\":1,\"1478\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"可重复度\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"可配置文件注入\",{\"1\":{\"243\":1,\"246\":1,\"367\":1,\"370\":1,\"536\":1,\"539\":1,\"721\":1,\"724\":1,\"907\":1,\"910\":1,\"1106\":1,\"1109\":1,\"1462\":1,\"1465\":1,\"1673\":1,\"1719\":1}}],[\"可排序\",{\"0\":{\"213\":1,\"346\":1,\"515\":1,\"700\":1,\"886\":1,\"1082\":1,\"1432\":1},\"1\":{\"213\":1,\"346\":1,\"515\":1,\"700\":1,\"886\":1,\"1082\":1,\"1432\":1}}],[\"可任意跳转到对应节点\",{\"1\":{\"192\":1,\"199\":1,\"326\":1,\"332\":1,\"495\":1,\"501\":1,\"680\":1,\"686\":1,\"866\":1,\"872\":1,\"1061\":1,\"1068\":1,\"1411\":1,\"1418\":1}}],[\"可退回到任意节点\",{\"1\":{\"171\":1,\"1577\":1}}],[\"可多个网关直连\",{\"1\":{\"145\":1,\"1550\":1}}],[\"可尝试切换maven版本\",{\"1\":{\"137\":1,\"1543\":1}}],[\"可解决问题\",{\"1\":{\"133\":1,\"1539\":1}}],[\"可在作者提供的demo项目中设计好导出xml\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"可在不集成流程设计器情况下使用\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"可在业务系统中增加接口\",{\"1\":{\"62\":1,\"939\":1,\"1140\":1,\"1329\":1}}],[\"可快速上手和集成\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"可扩展\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1657\":1,\"1668\":1,\"1708\":1,\"1714\":1,\"1729\":1}}],[\"可进行二开设计器\",{\"1\":{\"61\":1,\"1139\":1,\"1328\":1}}],[\"可进行扩展\",{\"1\":{\"50\":1,\"71\":1,\"77\":1,\"1150\":1,\"1317\":1,\"1338\":1,\"1344\":1}}],[\"可通过填充器覆盖\",{\"1\":{\"247\":1,\"375\":1,\"544\":1,\"729\":1,\"915\":1,\"1114\":1,\"1466\":1}}],[\"可通过此配置自定义实现\",{\"1\":{\"242\":1,\"245\":1,\"251\":1,\"366\":1,\"369\":1,\"379\":1,\"535\":1,\"538\":1,\"548\":1,\"720\":1,\"723\":1,\"733\":1,\"906\":1,\"909\":1,\"919\":1,\"1105\":1,\"1108\":1,\"1118\":1,\"1461\":1,\"1464\":1,\"1470\":1}}],[\"可通过办理人变量表达式或者分派监听器\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"可通过jar包形式快速集成到项目\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1708\":1}}],[\"可通过配置文件注入\",{\"1\":{\"29\":1,\"35\":1,\"36\":1,\"37\":1,\"243\":2,\"245\":1,\"246\":1,\"367\":2,\"369\":1,\"370\":1,\"464\":1,\"465\":1,\"466\":1,\"536\":2,\"538\":1,\"539\":1,\"650\":1,\"651\":1,\"652\":1,\"721\":2,\"723\":1,\"724\":1,\"835\":1,\"836\":1,\"837\":1,\"907\":2,\"909\":1,\"910\":1,\"1029\":1,\"1030\":1,\"1031\":1,\"1106\":2,\"1108\":1,\"1109\":1,\"1195\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1296\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1462\":2,\"1464\":1,\"1465\":1,\"1673\":3,\"1719\":3}}],[\"可通过这种方式开启\",{\"1\":{\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"407\":1,\"535\":1,\"538\":1,\"592\":1,\"720\":1,\"723\":1,\"778\":1,\"906\":1,\"909\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"可以采用此法建立私库\",{\"1\":{\"1624\":1,\"1684\":1}}],[\"可以快速接入业务系统\",{\"1\":{\"1589\":1}}],[\"可以快速集成\",{\"1\":{\"1578\":1,\"1600\":1,\"1631\":1,\"1691\":1}}],[\"可以撤销当前流程\",{\"1\":{\"429\":1}}],[\"可以获取流程变量\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"可以设置流程变量\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"可以多个\",{\"1\":{\"277\":1,\"306\":1,\"423\":1,\"455\":1,\"608\":1,\"641\":1,\"794\":1,\"826\":1,\"987\":1,\"1020\":1,\"1207\":1,\"1214\":1,\"1244\":1,\"1496\":1,\"1525\":1}}],[\"可以返回其中一种或者多种\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"可以直接访问后端接口加载页面\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"可以按照本文中介绍的\",{\"1\":{\"253\":1,\"550\":1,\"735\":1,\"921\":1,\"1120\":1,\"1472\":1}}],[\"可以配置自定义实现\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1}}],[\"可以通过条件表达式来判断\",{\"1\":{\"237\":1,\"1100\":1,\"1456\":1}}],[\"可以通过这种方式动态切换\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"可以跳转指定节点\",{\"1\":{\"167\":1,\"1573\":1}}],[\"可以把插件关了\",{\"1\":{\"134\":1,\"1540\":1}}],[\"可以有效降的帮助别人\",{\"1\":{\"87\":1,\"1354\":1}}],[\"可以语流程实例状态不同\",{\"1\":{\"57\":1,\"371\":1,\"540\":1,\"725\":1,\"911\":1,\"1110\":1,\"1324\":1}}],[\"可以不设置\",{\"1\":{\"47\":1,\"475\":1,\"661\":1,\"846\":1,\"1040\":1,\"1266\":1,\"1314\":1}}],[\"可以使用orm自身的api\",{\"1\":{\"23\":1,\"1189\":1,\"1290\":1}}],[\"可以统一使用一个流程监听器\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"可设置自定义权限策略\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"执行不同的任务\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"执行升级脚本\",{\"1\":{\"1655\":1,\"1659\":1,\"1660\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1727\":1,\"1731\":1,\"1732\":1,\"1734\":1,\"1735\":1,\"1736\":1}}],[\"执行\",{\"1\":{\"283\":2,\"428\":2,\"431\":2,\"613\":2,\"616\":2,\"799\":2,\"802\":2,\"992\":2,\"995\":2,\"1212\":2,\"1219\":2,\"1221\":2,\"1502\":2}}],[\"执行结果\",{\"1\":{\"51\":1,\"55\":2,\"72\":1,\"78\":1,\"477\":1,\"663\":1,\"848\":1,\"1042\":1,\"1151\":1,\"1161\":2,\"1318\":1,\"1322\":2,\"1339\":1,\"1345\":1}}],[\"执行表达式后置方法\",{\"1\":{\"55\":1,\"1161\":1,\"1322\":1}}],[\"执行表达式前置方法\",{\"1\":{\"55\":1,\"1161\":1,\"1322\":1}}],[\"执行表达式\",{\"1\":{\"51\":2,\"55\":1,\"72\":2,\"78\":2,\"477\":1,\"663\":1,\"848\":1,\"1042\":1,\"1151\":2,\"1161\":1,\"1318\":2,\"1322\":1,\"1339\":2,\"1345\":2}}],[\"执行表达式之前\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"执行时修改\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"执行顺序\",{\"1\":{\"2\":1,\"391\":1,\"576\":1,\"762\":1,\"955\":1,\"1168\":1,\"1269\":1}}],[\"utf\",{\"1\":{\"1629\":3,\"1689\":3}}],[\"utilexception高版本不兼容\",{\"1\":{\"155\":1,\"1561\":1}}],[\"url>\",{\"1\":{\"1629\":2,\"1630\":1,\"1689\":2,\"1690\":1}}],[\"url\",{\"1\":{\"262\":3,\"265\":1,\"557\":3,\"560\":1,\"743\":3,\"746\":1,\"928\":3,\"931\":1,\"1129\":3,\"1132\":1,\"1481\":3,\"1484\":1}}],[\"unsigned\",{\"1\":{\"303\":1,\"304\":1,\"306\":1,\"307\":1,\"309\":1,\"452\":1,\"453\":1,\"455\":1,\"456\":1,\"458\":1,\"638\":1,\"639\":1,\"641\":1,\"642\":1,\"644\":1,\"823\":1,\"824\":1,\"826\":1,\"827\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1020\":1,\"1021\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1245\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1526\":1,\"1528\":1}}],[\"unactive\",{\"1\":{\"187\":1,\"196\":1,\"323\":1,\"330\":1,\"492\":1,\"499\":1,\"677\":1,\"684\":1,\"863\":1,\"870\":1,\"1058\":1,\"1065\":1,\"1406\":1,\"1415\":1}}],[\"unpublish\",{\"1\":{\"183\":1,\"319\":1,\"488\":1,\"673\":1,\"859\":1,\"1054\":1,\"1402\":1}}],[\"unit>\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"unit\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"unitname\",{\"1\":{\"25\":2,\"410\":2,\"595\":2,\"781\":2,\"974\":2,\"1191\":2,\"1292\":2}}],[\"unitname=warm\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"usr\",{\"1\":{\"132\":3,\"1538\":3}}],[\"userlist\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"usermapper\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"userservice\",{\"1\":{\"10\":2,\"396\":2,\"581\":2,\"767\":2,\"960\":2,\"1176\":2,\"1277\":2}}],[\"users\",{\"1\":{\"10\":2,\"292\":1,\"396\":2,\"442\":1,\"581\":2,\"628\":1,\"767\":2,\"813\":1,\"960\":2,\"1007\":1,\"1176\":2,\"1230\":1,\"1277\":2,\"1511\":1,\"1643\":1,\"1703\":1}}],[\"user\",{\"1\":{\"9\":4,\"32\":1,\"39\":3,\"40\":1,\"47\":1,\"48\":2,\"51\":2,\"58\":2,\"72\":2,\"76\":1,\"78\":2,\"238\":1,\"239\":4,\"270\":7,\"275\":4,\"301\":1,\"310\":2,\"372\":2,\"383\":4,\"395\":4,\"450\":1,\"461\":1,\"467\":2,\"469\":1,\"475\":2,\"476\":2,\"541\":2,\"565\":7,\"568\":4,\"580\":4,\"636\":1,\"647\":1,\"653\":2,\"655\":1,\"661\":2,\"662\":2,\"726\":2,\"751\":7,\"754\":4,\"766\":4,\"821\":1,\"832\":1,\"838\":2,\"840\":1,\"846\":2,\"847\":2,\"912\":2,\"936\":7,\"947\":4,\"959\":4,\"1015\":1,\"1026\":1,\"1032\":2,\"1034\":1,\"1040\":2,\"1041\":2,\"1101\":1,\"1102\":4,\"1111\":2,\"1137\":7,\"1148\":4,\"1151\":2,\"1158\":1,\"1175\":4,\"1239\":1,\"1250\":1,\"1256\":2,\"1258\":3,\"1259\":1,\"1266\":1,\"1267\":2,\"1276\":4,\"1286\":1,\"1299\":1,\"1306\":3,\"1307\":1,\"1314\":1,\"1315\":2,\"1318\":2,\"1325\":2,\"1339\":2,\"1343\":1,\"1345\":2,\"1457\":1,\"1458\":3,\"1489\":7,\"1494\":4,\"1520\":1,\"1529\":2}}],[\"upgrade\",{\"0\":{\"1767\":1,\"1773\":1},\"1\":{\"98\":1,\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1365\":1,\"1502\":1}}],[\"updatefill\",{\"1\":{\"248\":1,\"376\":1,\"545\":1,\"730\":1,\"916\":1,\"1115\":1,\"1467\":1}}],[\"updatebatch\",{\"1\":{\"224\":1,\"357\":1,\"526\":1,\"711\":1,\"897\":1,\"1093\":1,\"1443\":1}}],[\"updatebyid\",{\"1\":{\"218\":1,\"351\":1,\"520\":1,\"705\":1,\"891\":1,\"1087\":1,\"1437\":1}}],[\"updatehandler\",{\"1\":{\"205\":1,\"338\":1,\"507\":1,\"692\":1,\"878\":1,\"1074\":1,\"1424\":1}}],[\"update\",{\"0\":{\"1760\":1,\"1761\":1,\"1762\":1,\"1763\":1},\"1\":{\"98\":1,\"147\":9,\"148\":2,\"149\":2,\"150\":1,\"152\":4,\"153\":3,\"154\":4,\"155\":9,\"157\":7,\"168\":1,\"169\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1365\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1551\":3,\"1553\":9,\"1554\":2,\"1555\":2,\"1556\":1,\"1558\":4,\"1559\":3,\"1560\":4,\"1561\":9,\"1563\":7,\"1574\":1,\"1575\":1,\"1613\":8}}],[\"updatetestleave\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"ui`\",{\"1\":{\"743\":1}}],[\"ui<\",{\"1\":{\"65\":1,\"942\":1,\"1143\":1,\"1332\":1}}],[\"ui\",{\"1\":{\"65\":1,\"66\":1,\"67\":5,\"242\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1,\"261\":1,\"262\":1,\"263\":1,\"265\":4,\"271\":2,\"535\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"560\":4,\"720\":1,\"736\":1,\"737\":1,\"738\":1,\"739\":1,\"740\":1,\"741\":1,\"742\":2,\"743\":3,\"744\":3,\"746\":2,\"906\":1,\"922\":1,\"923\":1,\"924\":1,\"925\":1,\"926\":1,\"927\":1,\"928\":1,\"929\":1,\"931\":4,\"937\":2,\"942\":1,\"943\":1,\"944\":5,\"1105\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1125\":1,\"1126\":1,\"1127\":1,\"1128\":1,\"1129\":1,\"1130\":1,\"1132\":4,\"1138\":2,\"1143\":1,\"1144\":1,\"1145\":5,\"1332\":1,\"1333\":1,\"1334\":5,\"1461\":1,\"1474\":1,\"1475\":1,\"1476\":1,\"1477\":1,\"1478\":1,\"1479\":1,\"1480\":1,\"1481\":1,\"1482\":1,\"1484\":4,\"1490\":2,\"1579\":1,\"1580\":2,\"1581\":1,\"1590\":1,\"1591\":2,\"1592\":3,\"1601\":1,\"1602\":2,\"1603\":1,\"1632\":1,\"1633\":2,\"1634\":1,\"1647\":1,\"1654\":3,\"1692\":1,\"1693\":2,\"1694\":1,\"1707\":1,\"1726\":3}}],[\"event\",{\"1\":{\"262\":3,\"263\":2,\"557\":3,\"558\":2,\"743\":3,\"744\":2,\"928\":3,\"929\":2,\"1129\":3,\"1130\":2,\"1481\":3,\"1482\":2}}],[\"eval\",{\"1\":{\"51\":2,\"55\":1,\"72\":2,\"76\":2,\"78\":2,\"82\":1,\"238\":1,\"239\":3,\"383\":3,\"477\":2,\"568\":3,\"663\":2,\"754\":3,\"848\":2,\"947\":3,\"1042\":2,\"1101\":1,\"1102\":3,\"1148\":3,\"1151\":2,\"1155\":1,\"1158\":2,\"1161\":1,\"1318\":2,\"1322\":1,\"1339\":2,\"1343\":2,\"1345\":2,\"1349\":1,\"1457\":1,\"1458\":2}}],[\"evalvariable\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"evalvarentity\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"evalvar\",{\"1\":{\"39\":2,\"40\":1,\"47\":1,\"48\":1,\"51\":2,\"72\":2,\"78\":2,\"469\":1,\"475\":2,\"476\":1,\"655\":1,\"661\":2,\"662\":1,\"840\":1,\"846\":2,\"847\":1,\"1034\":1,\"1040\":2,\"1041\":1,\"1151\":2,\"1258\":2,\"1259\":1,\"1266\":1,\"1267\":1,\"1306\":2,\"1307\":1,\"1314\":1,\"1315\":1,\"1318\":2,\"1339\":2,\"1345\":2}}],[\"enhance\",{\"0\":{\"1740\":1,\"1756\":1}}],[\"encoding><\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"end\",{\"1\":{\"394\":1,\"579\":1,\"765\":1,\"958\":1}}],[\"env\",{\"1\":{\"262\":2,\"263\":2,\"557\":2,\"558\":2,\"928\":2,\"929\":2,\"1129\":2,\"1130\":2,\"1481\":2,\"1482\":2}}],[\"enabled\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"enabletransactionmanagement\",{\"1\":{\"136\":2,\"1542\":2}}],[\"entfrm\",{\"1\":{\"83\":2,\"1350\":2}}],[\"entity\",{\"1\":{\"25\":10,\"211\":2,\"212\":2,\"213\":2,\"214\":2,\"215\":2,\"216\":2,\"217\":2,\"218\":2,\"220\":2,\"248\":15,\"344\":2,\"345\":2,\"346\":2,\"347\":2,\"348\":2,\"349\":2,\"350\":2,\"351\":2,\"353\":2,\"376\":15,\"410\":10,\"513\":2,\"514\":2,\"515\":2,\"516\":2,\"517\":2,\"518\":2,\"519\":2,\"520\":2,\"522\":2,\"545\":15,\"595\":10,\"698\":2,\"699\":2,\"700\":2,\"701\":2,\"702\":2,\"703\":2,\"704\":2,\"705\":2,\"707\":2,\"730\":15,\"781\":10,\"884\":2,\"885\":2,\"886\":2,\"887\":2,\"888\":2,\"889\":2,\"890\":2,\"891\":2,\"893\":2,\"916\":15,\"974\":10,\"1080\":2,\"1081\":2,\"1082\":2,\"1083\":2,\"1084\":2,\"1085\":2,\"1086\":2,\"1087\":2,\"1089\":2,\"1115\":15,\"1191\":10,\"1292\":10,\"1430\":2,\"1431\":2,\"1432\":2,\"1433\":2,\"1434\":2,\"1435\":2,\"1436\":2,\"1437\":2,\"1439\":2,\"1467\":15}}],[\"entitymanager\",{\"1\":{\"25\":11,\"410\":11,\"595\":11,\"781\":11,\"974\":11,\"1191\":11,\"1292\":11}}],[\"email\",{\"1\":{\"129\":2,\"1535\":2}}],[\"easy\",{\"0\":{\"290\":1,\"438\":1,\"623\":1,\"809\":1,\"1002\":1,\"1228\":1,\"1509\":1},\"1\":{\"107\":1,\"290\":2,\"438\":2,\"440\":1,\"623\":2,\"625\":1,\"809\":2,\"811\":1,\"1002\":2,\"1004\":1,\"1228\":2,\"1374\":1,\"1509\":2,\"1640\":1,\"1700\":1}}],[\"erfeijiadao\",{\"1\":{\"155\":1,\"1561\":1}}],[\"erp\",{\"1\":{\"83\":2,\"1350\":2}}],[\"error\",{\"1\":{\"67\":1,\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"944\":1,\"952\":2,\"1145\":1,\"1166\":2,\"1334\":1,\"1337\":2}}],[\"e\",{\"1\":{\"70\":4,\"388\":4,\"573\":4,\"759\":4,\"952\":4,\"1166\":4,\"1286\":1,\"1337\":4}}],[\"eq|flag|5\",{\"1\":{\"1551\":1}}],[\"eq|flag|4\",{\"1\":{\"1457\":1}}],[\"eq\",{\"1\":{\"55\":2,\"56\":3,\"238\":2,\"1101\":2,\"1161\":2,\"1162\":3,\"1322\":2,\"1323\":3,\"1551\":2}}],[\"equals\",{\"1\":{\"10\":1,\"32\":3,\"33\":2,\"56\":1,\"270\":3,\"461\":3,\"462\":2,\"565\":3,\"647\":3,\"648\":2,\"751\":3,\"832\":3,\"833\":2,\"936\":3,\"1026\":3,\"1027\":2,\"1137\":3,\"1162\":1,\"1176\":1,\"1250\":3,\"1251\":2,\"1277\":1,\"1286\":1,\"1299\":3,\"1300\":2,\"1323\":1,\"1489\":3}}],[\"executions>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"execution>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"executeupdate\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"exists\",{\"1\":{\"216\":1,\"349\":1,\"518\":1,\"703\":1,\"889\":1,\"1085\":1,\"1435\":1}}],[\"existentity\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"ext\",{\"1\":{\"191\":1,\"303\":1,\"304\":1,\"305\":1,\"325\":1,\"452\":1,\"453\":1,\"454\":1,\"494\":1,\"638\":1,\"639\":1,\"640\":1,\"679\":1,\"823\":1,\"824\":1,\"825\":1,\"865\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1060\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1410\":1,\"1522\":1,\"1523\":1,\"1524\":1}}],[\"extension\",{\"1\":{\"136\":4,\"1542\":4}}],[\"extends\",{\"1\":{\"8\":1,\"54\":1,\"56\":1,\"75\":1,\"81\":1,\"131\":2,\"394\":1,\"579\":1,\"765\":1,\"958\":1,\"1154\":1,\"1157\":1,\"1160\":1,\"1162\":1,\"1174\":1,\"1275\":1,\"1321\":1,\"1323\":1,\"1342\":1,\"1348\":1,\"1537\":2}}],[\"experience\",{\"0\":{\"1764\":1,\"1769\":1}}],[\"export\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"exportxml\",{\"1\":{\"179\":1,\"315\":1,\"484\":1,\"669\":1,\"855\":1,\"1050\":1,\"1398\":1}}],[\"expressionstrategylist\",{\"1\":{\"75\":2,\"81\":2,\"1154\":2,\"1157\":2,\"1342\":2,\"1348\":2}}],[\"expressionstrategy<list<string>>\",{\"1\":{\"81\":2,\"1154\":2,\"1348\":2}}],[\"expressionstrategy<boolean>>\",{\"1\":{\"54\":2,\"1160\":2,\"1321\":2}}],[\"expressionstrategy<boolean>\",{\"1\":{\"54\":2,\"75\":2,\"1157\":2,\"1160\":2,\"1321\":2,\"1342\":2}}],[\"expressionstrategy<t>\",{\"1\":{\"51\":2,\"72\":2,\"78\":2,\"1151\":2,\"1318\":2,\"1339\":2,\"1345\":2}}],[\"expressionstrategyeq\",{\"1\":{\"52\":1,\"73\":1,\"79\":1,\"1152\":1,\"1319\":1,\"1340\":1,\"1346\":1}}],[\"expressionstrategy\",{\"1\":{\"51\":2,\"54\":3,\"72\":2,\"75\":2,\"78\":2,\"81\":2,\"1151\":2,\"1154\":2,\"1157\":2,\"1160\":3,\"1318\":2,\"1321\":3,\"1339\":2,\"1342\":2,\"1345\":2,\"1348\":2}}],[\"expressionstrategy接口\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"expressionutil\",{\"1\":{\"39\":1,\"52\":1,\"73\":1,\"79\":1,\"1152\":1,\"1258\":1,\"1306\":1,\"1319\":1,\"1340\":1,\"1346\":1}}],[\"expression\",{\"0\":{\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1148\":1},\"1\":{\"32\":1,\"33\":1,\"51\":2,\"55\":3,\"72\":2,\"76\":2,\"78\":2,\"82\":3,\"239\":1,\"461\":1,\"462\":1,\"477\":5,\"647\":1,\"648\":1,\"663\":5,\"832\":1,\"833\":1,\"848\":5,\"1026\":1,\"1027\":1,\"1042\":5,\"1102\":1,\"1151\":2,\"1155\":3,\"1158\":2,\"1161\":3,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1,\"1318\":2,\"1322\":3,\"1339\":2,\"1343\":2,\"1345\":2,\"1349\":3,\"1458\":1,\"1652\":2,\"1724\":2}}],[\"excludepathpatterns\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"exclusions>\",{\"1\":{\"65\":1,\"290\":1,\"438\":1,\"623\":1,\"809\":1,\"942\":1,\"1002\":1,\"1143\":1,\"1228\":1,\"1332\":1,\"1509\":1}}],[\"exclusion>\",{\"1\":{\"65\":1,\"290\":2,\"438\":2,\"623\":2,\"809\":2,\"942\":1,\"1002\":2,\"1143\":1,\"1228\":2,\"1332\":1,\"1509\":2}}],[\"exception\",{\"1\":{\"70\":1,\"258\":1,\"292\":1,\"293\":1,\"295\":2,\"388\":1,\"442\":1,\"443\":1,\"445\":2,\"553\":1,\"573\":1,\"628\":1,\"629\":1,\"631\":2,\"738\":1,\"759\":1,\"813\":1,\"814\":1,\"816\":2,\"924\":1,\"952\":1,\"1007\":1,\"1008\":1,\"1010\":2,\"1125\":1,\"1166\":1,\"1230\":1,\"1231\":1,\"1233\":2,\"1337\":1,\"1477\":1,\"1511\":1,\"1512\":1,\"1514\":2,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1643\":1,\"1644\":1,\"1646\":2,\"1670\":1,\"1693\":1,\"1703\":1,\"1704\":1,\"1706\":2,\"1716\":1}}],[\"exceptioncons\",{\"1\":{\"55\":2,\"1161\":2,\"1322\":2}}],[\"else\",{\"1\":{\"10\":1,\"56\":1,\"131\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1162\":1,\"1176\":1,\"1277\":1,\"1323\":1,\"1537\":1}}],[\"更新时间\",{\"1\":{\"303\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"更新时间设置正序排列\",{\"0\":{\"227\":1,\"360\":1,\"529\":1,\"714\":1,\"900\":1,\"1096\":1,\"1446\":1},\"1\":{\"227\":1,\"360\":1,\"529\":1,\"714\":1,\"900\":1,\"1096\":1,\"1446\":1}}],[\"更新时间有值时\",{\"1\":{\"150\":1,\"1556\":1}}],[\"更新脚本在项目里面的sql文件下\",{\"1\":{\"140\":1,\"1546\":1}}],[\"更新日志\",{\"0\":{\"140\":1,\"146\":1,\"1546\":1,\"1552\":1},\"1\":{\"1578\":1,\"1600\":1,\"1613\":1,\"1631\":1,\"1691\":1}}],[\"更新操作使用\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"更新业务数据\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"更多接口请参考\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"更多使用企业\",{\"1\":{\"0\":1}}],[\"更多开源项目详情\",{\"1\":{\"0\":1}}],[\"b任务办理时传入变量handler1=100\",{\"1\":{\"470\":1,\"656\":1,\"841\":1,\"1035\":1}}],[\"b任务或者之前任务办理时传入变量handler1=100\",{\"1\":{\"42\":1,\"1261\":1,\"1309\":1}}],[\"by\",{\"1\":{\"305\":1,\"309\":2,\"454\":1,\"458\":2,\"640\":1,\"644\":2,\"825\":1,\"829\":2,\"1019\":1,\"1023\":2,\"1243\":1,\"1247\":2,\"1524\":1,\"1528\":2}}],[\"bit\",{\"1\":{\"303\":2,\"304\":2,\"305\":2,\"306\":1,\"307\":2,\"308\":1,\"452\":2,\"453\":2,\"454\":2,\"455\":1,\"456\":2,\"457\":1,\"638\":2,\"639\":2,\"640\":2,\"641\":1,\"642\":2,\"643\":1,\"823\":2,\"824\":2,\"825\":2,\"826\":1,\"827\":2,\"828\":1,\"1017\":2,\"1018\":2,\"1019\":2,\"1020\":1,\"1021\":2,\"1022\":1,\"1241\":2,\"1242\":2,\"1243\":2,\"1244\":1,\"1245\":2,\"1246\":1,\"1522\":2,\"1523\":2,\"1524\":2,\"1525\":1,\"1526\":2,\"1527\":1}}],[\"bigdecimal\",{\"1\":{\"239\":4,\"383\":4,\"568\":4,\"754\":4,\"947\":4,\"1102\":4,\"1148\":4,\"1458\":4}}],[\"bignumberserializer\",{\"1\":{\"131\":10,\"1537\":10}}],[\"biginteger\",{\"1\":{\"131\":4,\"1537\":4}}],[\"bigint\",{\"1\":{\"32\":1,\"33\":1,\"303\":1,\"304\":4,\"305\":2,\"306\":2,\"307\":2,\"308\":3,\"309\":2,\"452\":1,\"453\":4,\"454\":2,\"455\":2,\"456\":2,\"457\":3,\"458\":2,\"461\":1,\"462\":1,\"638\":1,\"639\":4,\"640\":2,\"641\":2,\"642\":2,\"643\":3,\"644\":2,\"647\":1,\"648\":1,\"823\":1,\"824\":4,\"825\":2,\"826\":2,\"827\":2,\"828\":3,\"829\":2,\"832\":1,\"833\":1,\"1017\":1,\"1018\":4,\"1019\":2,\"1020\":2,\"1021\":2,\"1022\":3,\"1023\":2,\"1026\":1,\"1027\":1,\"1241\":1,\"1242\":4,\"1243\":2,\"1244\":2,\"1245\":2,\"1246\":3,\"1247\":2,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1,\"1522\":1,\"1523\":4,\"1524\":2,\"1525\":2,\"1526\":2,\"1527\":3,\"1528\":2}}],[\"break\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"b\",{\"1\":{\"239\":2,\"383\":2,\"568\":2,\"754\":2,\"947\":2,\"1102\":2,\"1148\":2,\"1458\":2}}],[\"block\",{\"1\":{\"136\":1,\"1542\":1}}],[\"blockattackinnerinterceptor\",{\"1\":{\"136\":5,\"1542\":5}}],[\"base\",{\"1\":{\"262\":2,\"263\":2,\"557\":2,\"558\":2,\"928\":2,\"929\":2,\"1129\":2,\"1130\":2,\"1481\":2,\"1482\":2,\"1654\":2,\"1726\":2}}],[\"batchsize\",{\"1\":{\"223\":2,\"356\":2,\"525\":2,\"710\":2,\"896\":2,\"1092\":2,\"1442\":2}}],[\"baomidou\",{\"1\":{\"136\":8,\"1542\":8}}],[\"baomidou<\",{\"1\":{\"136\":1,\"1542\":1}}],[\"banmoon\",{\"1\":{\"83\":2,\"1350\":2}}],[\"banner\",{\"1\":{\"21\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"406\":1,\"535\":1,\"538\":1,\"591\":1,\"720\":1,\"723\":1,\"777\":1,\"906\":1,\"909\":1,\"970\":1,\"1105\":1,\"1108\":1,\"1187\":1,\"1288\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"boot或者solon\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"boot\",{\"1\":{\"83\":2,\"121\":2,\"136\":1,\"1350\":2,\"1388\":2,\"1542\":1}}],[\"boolean\",{\"1\":{\"32\":2,\"33\":1,\"51\":1,\"54\":1,\"55\":2,\"56\":1,\"72\":1,\"76\":1,\"78\":1,\"239\":2,\"265\":1,\"383\":2,\"461\":2,\"462\":1,\"560\":1,\"568\":2,\"647\":2,\"648\":1,\"746\":1,\"754\":2,\"832\":2,\"833\":1,\"931\":1,\"947\":2,\"1026\":2,\"1027\":1,\"1102\":2,\"1132\":1,\"1148\":2,\"1151\":1,\"1158\":1,\"1160\":1,\"1161\":2,\"1162\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1,\"1318\":1,\"1321\":1,\"1322\":2,\"1323\":1,\"1339\":1,\"1343\":1,\"1345\":1,\"1458\":2,\"1484\":1}}],[\"bug\",{\"1\":{\"98\":1,\"148\":1,\"155\":1,\"1365\":1,\"1554\":1,\"1561\":1,\"1667\":1,\"1713\":1}}],[\"build>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"builder\",{\"1\":{\"131\":4,\"1537\":4}}],[\"build\",{\"1\":{\"58\":1,\"131\":1,\"239\":1,\"258\":1,\"310\":1,\"372\":1,\"383\":1,\"467\":1,\"541\":1,\"553\":1,\"568\":1,\"653\":1,\"726\":1,\"738\":1,\"754\":1,\"838\":1,\"912\":1,\"924\":1,\"947\":1,\"1032\":1,\"1102\":1,\"1111\":1,\"1125\":1,\"1148\":1,\"1256\":1,\"1325\":1,\"1458\":1,\"1477\":1,\"1529\":1,\"1537\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"business\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"businessdata\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"businesstype\",{\"1\":{\"10\":3,\"1176\":3,\"1277\":3}}],[\"businessid\",{\"1\":{\"10\":2,\"191\":1,\"325\":1,\"494\":1,\"679\":1,\"865\":1,\"1060\":1,\"1176\":2,\"1277\":2,\"1410\":1}}],[\"bean配置方式\",{\"0\":{\"36\":1,\"243\":1,\"246\":1,\"252\":1,\"367\":1,\"370\":1,\"380\":1,\"465\":1,\"536\":1,\"539\":1,\"549\":1,\"651\":1,\"721\":1,\"724\":1,\"734\":1,\"836\":1,\"907\":1,\"910\":1,\"920\":1,\"1030\":1,\"1106\":1,\"1109\":1,\"1119\":1,\"1254\":1,\"1303\":1,\"1462\":1,\"1465\":1,\"1471\":1}}],[\"bean\",{\"1\":{\"21\":1,\"29\":1,\"32\":1,\"33\":2,\"35\":1,\"36\":2,\"37\":1,\"131\":2,\"133\":1,\"136\":2,\"243\":5,\"245\":1,\"246\":4,\"252\":1,\"258\":1,\"259\":1,\"367\":5,\"369\":1,\"370\":4,\"380\":1,\"406\":1,\"461\":1,\"462\":2,\"464\":1,\"465\":2,\"466\":1,\"536\":5,\"538\":1,\"539\":4,\"549\":1,\"553\":1,\"554\":1,\"591\":1,\"647\":1,\"648\":2,\"650\":1,\"651\":2,\"652\":1,\"721\":5,\"723\":1,\"724\":4,\"734\":1,\"738\":1,\"739\":1,\"777\":1,\"832\":1,\"833\":2,\"835\":1,\"836\":2,\"837\":1,\"907\":5,\"909\":1,\"910\":4,\"920\":1,\"924\":1,\"925\":1,\"970\":1,\"1026\":1,\"1027\":2,\"1029\":1,\"1030\":2,\"1031\":1,\"1106\":5,\"1108\":1,\"1109\":4,\"1119\":1,\"1125\":1,\"1126\":1,\"1187\":1,\"1195\":1,\"1250\":1,\"1251\":2,\"1253\":1,\"1254\":2,\"1255\":1,\"1288\":1,\"1296\":1,\"1299\":1,\"1300\":2,\"1302\":1,\"1303\":2,\"1304\":1,\"1462\":5,\"1464\":1,\"1465\":4,\"1471\":1,\"1477\":1,\"1478\":1,\"1537\":2,\"1539\":1,\"1542\":2,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1673\":6,\"1693\":1,\"1719\":6}}],[\"bean注解注入到容器\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"raw\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"rawtype\",{\"1\":{\"131\":2,\"1537\":2}}],[\"ratio\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"rootentity\",{\"1\":{\"248\":6,\"376\":6,\"545\":6,\"730\":6,\"916\":6,\"1115\":6,\"1467\":6}}],[\"root\",{\"1\":{\"67\":2,\"132\":6,\"944\":2,\"1145\":2,\"1334\":2,\"1538\":6}}],[\"rolelist\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"rolemapper\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"role\",{\"1\":{\"9\":3,\"29\":3,\"39\":1,\"129\":2,\"270\":5,\"275\":8,\"277\":4,\"278\":4,\"295\":6,\"395\":3,\"423\":4,\"424\":4,\"445\":6,\"472\":2,\"565\":5,\"580\":3,\"608\":4,\"609\":4,\"631\":6,\"751\":5,\"766\":3,\"794\":4,\"795\":4,\"816\":6,\"936\":5,\"959\":3,\"987\":4,\"988\":4,\"1010\":6,\"1137\":5,\"1175\":3,\"1195\":3,\"1207\":4,\"1208\":4,\"1214\":4,\"1215\":4,\"1233\":6,\"1258\":1,\"1276\":3,\"1296\":3,\"1306\":1,\"1489\":5,\"1494\":8,\"1496\":4,\"1497\":4,\"1514\":6,\"1535\":2,\"1646\":4,\"1670\":4,\"1706\":4,\"1716\":4}}],[\"roles\",{\"1\":{\"9\":3,\"29\":2,\"395\":3,\"580\":3,\"766\":3,\"959\":3,\"1175\":3,\"1195\":2,\"1276\":3,\"1296\":2}}],[\"releases<\",{\"1\":{\"1629\":2,\"1630\":1,\"1689\":2,\"1690\":1}}],[\"repositories>\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"repository\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"repository>\",{\"1\":{\"1629\":1,\"1630\":1,\"1689\":1,\"1690\":1}}],[\"repo\",{\"1\":{\"1625\":1,\"1628\":1,\"1629\":2,\"1685\":1,\"1688\":1,\"1689\":2}}],[\"replace\",{\"1\":{\"11\":1,\"82\":2,\"397\":1,\"477\":2,\"582\":1,\"663\":2,\"768\":1,\"848\":2,\"961\":1,\"1042\":2,\"1155\":2,\"1177\":1,\"1278\":1,\"1349\":2}}],[\"reject\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"reject退回\",{\"1\":{\"192\":1,\"199\":1,\"207\":1,\"304\":1,\"307\":1,\"326\":1,\"332\":1,\"340\":1,\"453\":1,\"456\":1,\"495\":1,\"501\":1,\"509\":1,\"639\":1,\"642\":1,\"680\":1,\"686\":1,\"694\":1,\"824\":1,\"827\":1,\"866\":1,\"872\":1,\"880\":1,\"1018\":1,\"1021\":1,\"1061\":1,\"1068\":1,\"1076\":1,\"1242\":1,\"1245\":1,\"1411\":1,\"1418\":1,\"1426\":1,\"1523\":1,\"1526\":1}}],[\"redirect\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"reduction\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"reductionhandlers\",{\"1\":{\"204\":1,\"205\":1,\"275\":1,\"338\":1,\"506\":1,\"507\":1,\"692\":1,\"877\":1,\"878\":1,\"1073\":1,\"1074\":1,\"1423\":1,\"1424\":1,\"1494\":1}}],[\"reductionsignature\",{\"1\":{\"204\":1,\"275\":2,\"337\":1,\"506\":1,\"691\":1,\"877\":1,\"1073\":1,\"1423\":1,\"1494\":2}}],[\"requestmapping\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"requests\",{\"1\":{\"258\":2,\"553\":2,\"738\":2,\"924\":2,\"1125\":2,\"1477\":2,\"1580\":2,\"1591\":2,\"1602\":2,\"1633\":2,\"1693\":2}}],[\"removebyids\",{\"1\":{\"221\":1,\"354\":1,\"523\":1,\"708\":1,\"894\":1,\"1090\":1,\"1440\":1}}],[\"removebyid\",{\"1\":{\"219\":1,\"352\":1,\"521\":1,\"706\":1,\"892\":1,\"1088\":1,\"1438\":1}}],[\"removedef\",{\"1\":{\"181\":1,\"317\":1,\"486\":1,\"671\":1,\"857\":1,\"1052\":1,\"1400\":1}}],[\"remove\",{\"1\":{\"147\":1,\"149\":1,\"155\":2,\"157\":1,\"194\":1,\"220\":1,\"328\":1,\"353\":1,\"497\":1,\"522\":1,\"682\":1,\"707\":1,\"868\":1,\"893\":1,\"1063\":1,\"1089\":1,\"1413\":1,\"1439\":1,\"1553\":1,\"1555\":1,\"1561\":2,\"1563\":1,\"1613\":1}}],[\"remote\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"registry\",{\"1\":{\"260\":2,\"555\":2,\"740\":2,\"926\":2,\"1127\":2,\"1479\":2}}],[\"registermodule\",{\"1\":{\"131\":1,\"1537\":1}}],[\"regular\",{\"1\":{\"132\":2,\"1538\":2}}],[\"ref\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"ref=\",{\"1\":{\"263\":2,\"558\":2,\"744\":2,\"929\":2,\"1130\":2,\"1482\":2}}],[\"reflect\",{\"1\":{\"132\":1,\"1538\":1}}],[\"refactor\",{\"1\":{\"98\":1,\"147\":1,\"149\":1,\"152\":1,\"154\":1,\"155\":2,\"1365\":1,\"1551\":3,\"1553\":1,\"1555\":1,\"1558\":1,\"1560\":1,\"1561\":2,\"1613\":1}}],[\"revert\",{\"1\":{\"98\":1,\"1365\":1}}],[\"restart\",{\"1\":{\"134\":1,\"1540\":1}}],[\"result\",{\"1\":{\"82\":2,\"477\":2,\"663\":2,\"848\":2,\"1042\":2,\"1155\":2,\"1349\":2}}],[\"resource包路径变更的问题\",{\"1\":{\"161\":1,\"1567\":1}}],[\"resources目录下都可以\",{\"1\":{\"66\":1,\"943\":1,\"1144\":1,\"1333\":1}}],[\"resources\",{\"1\":{\"66\":1,\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"943\":1,\"1007\":1,\"1144\":1,\"1230\":1,\"1333\":1,\"1511\":1,\"1643\":1,\"1703\":1}}],[\"resource\",{\"1\":{\"10\":1,\"24\":1,\"25\":1,\"26\":1,\"32\":1,\"396\":1,\"408\":1,\"409\":1,\"410\":1,\"411\":1,\"461\":1,\"581\":1,\"593\":1,\"594\":1,\"595\":1,\"596\":1,\"647\":1,\"767\":1,\"779\":1,\"780\":1,\"781\":1,\"782\":1,\"832\":1,\"960\":1,\"972\":1,\"973\":1,\"974\":1,\"975\":1,\"1026\":1,\"1176\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1250\":1,\"1277\":1,\"1291\":1,\"1292\":1,\"1293\":1,\"1299\":1}}],[\"react版本\",{\"0\":{\"264\":1,\"559\":1,\"745\":1,\"930\":1,\"1131\":1,\"1483\":1}}],[\"react\",{\"1\":{\"121\":1,\"1388\":1}}],[\"readvalue\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"real\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"return\",{\"1\":{\"28\":1,\"29\":4,\"32\":7,\"33\":5,\"36\":1,\"37\":1,\"48\":2,\"51\":4,\"54\":2,\"55\":3,\"56\":3,\"70\":6,\"72\":4,\"76\":2,\"78\":4,\"82\":5,\"131\":2,\"136\":4,\"239\":4,\"243\":3,\"246\":2,\"252\":1,\"258\":1,\"259\":1,\"262\":1,\"265\":1,\"269\":2,\"270\":13,\"367\":3,\"370\":2,\"380\":1,\"383\":4,\"388\":6,\"461\":7,\"462\":5,\"465\":1,\"466\":1,\"476\":2,\"477\":7,\"536\":3,\"539\":2,\"549\":1,\"553\":1,\"554\":1,\"557\":1,\"560\":1,\"564\":2,\"565\":13,\"568\":4,\"573\":6,\"647\":7,\"648\":5,\"651\":1,\"652\":1,\"662\":2,\"663\":7,\"721\":3,\"724\":2,\"734\":1,\"738\":1,\"739\":1,\"743\":1,\"746\":1,\"750\":2,\"751\":13,\"754\":4,\"759\":6,\"832\":7,\"833\":5,\"836\":1,\"837\":1,\"847\":2,\"848\":7,\"907\":3,\"910\":2,\"920\":1,\"924\":1,\"925\":1,\"928\":1,\"931\":1,\"935\":2,\"936\":13,\"947\":4,\"952\":6,\"1026\":7,\"1027\":5,\"1030\":1,\"1031\":1,\"1041\":2,\"1042\":7,\"1102\":4,\"1106\":3,\"1109\":2,\"1119\":1,\"1125\":1,\"1126\":1,\"1129\":1,\"1132\":1,\"1136\":2,\"1137\":13,\"1148\":4,\"1151\":4,\"1155\":5,\"1158\":2,\"1160\":2,\"1161\":3,\"1162\":3,\"1166\":6,\"1194\":1,\"1195\":4,\"1250\":7,\"1251\":5,\"1254\":1,\"1255\":1,\"1267\":2,\"1295\":1,\"1296\":4,\"1299\":7,\"1300\":5,\"1303\":1,\"1304\":1,\"1315\":2,\"1318\":4,\"1321\":2,\"1322\":3,\"1323\":3,\"1337\":6,\"1339\":4,\"1343\":2,\"1345\":4,\"1349\":5,\"1458\":4,\"1462\":3,\"1465\":2,\"1471\":1,\"1477\":1,\"1478\":1,\"1481\":1,\"1484\":1,\"1488\":2,\"1489\":13,\"1537\":2,\"1542\":4,\"1580\":1,\"1585\":2,\"1591\":1,\"1596\":2,\"1602\":1,\"1607\":2,\"1633\":1,\"1638\":2,\"1673\":2,\"1693\":1,\"1698\":2,\"1719\":2}}],[\"ruoyi\",{\"1\":{\"10\":1,\"121\":3,\"136\":5,\"242\":2,\"251\":1,\"366\":2,\"379\":1,\"535\":2,\"548\":1,\"720\":2,\"733\":1,\"906\":2,\"919\":1,\"1105\":2,\"1118\":1,\"1176\":1,\"1277\":1,\"1388\":3,\"1461\":2,\"1470\":1,\"1542\":5,\"1673\":2,\"1719\":2}}],[\"+vue3\",{\"1\":{\"121\":1,\"1388\":1}}],[\"+\",{\"1\":{\"9\":2,\"29\":2,\"56\":2,\"262\":3,\"263\":1,\"265\":5,\"270\":2,\"292\":1,\"294\":1,\"295\":3,\"395\":2,\"442\":1,\"444\":1,\"445\":3,\"477\":2,\"557\":3,\"558\":1,\"560\":5,\"565\":2,\"580\":2,\"628\":1,\"630\":1,\"631\":3,\"663\":2,\"743\":2,\"746\":5,\"751\":2,\"766\":2,\"813\":1,\"815\":1,\"816\":3,\"848\":2,\"928\":3,\"929\":1,\"931\":5,\"936\":2,\"959\":2,\"1007\":1,\"1009\":1,\"1010\":3,\"1042\":2,\"1129\":3,\"1130\":1,\"1132\":5,\"1137\":2,\"1162\":2,\"1175\":2,\"1195\":2,\"1230\":1,\"1232\":1,\"1233\":3,\"1276\":2,\"1296\":2,\"1323\":2,\"1481\":3,\"1482\":1,\"1484\":5,\"1489\":2,\"1511\":1,\"1513\":1,\"1514\":3,\"1643\":1,\"1645\":1,\"1646\":2,\"1654\":1,\"1703\":1,\"1705\":1,\"1706\":2,\"1726\":1}}],[\"other\",{\"0\":{\"1742\":1,\"1759\":1}}],[\"opentab\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"optimistic\",{\"1\":{\"136\":1,\"1542\":1}}],[\"optimisticlockerinnerinterceptor\",{\"1\":{\"136\":5,\"1542\":5}}],[\"onmounted\",{\"1\":{\"263\":2,\"558\":2,\"744\":2,\"929\":2,\"1130\":2,\"1482\":2}}],[\"onmessage\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"obj\",{\"1\":{\"262\":2,\"263\":2,\"557\":2,\"558\":2,\"743\":2,\"744\":2,\"928\":2,\"929\":2,\"1129\":2,\"1130\":2,\"1481\":2,\"1482\":2}}],[\"objectmapper\",{\"1\":{\"70\":9,\"131\":4,\"388\":9,\"573\":9,\"759\":9,\"952\":9,\"1166\":9,\"1337\":9,\"1537\":4}}],[\"objectutil\",{\"1\":{\"10\":2,\"82\":1,\"248\":5,\"376\":5,\"396\":2,\"477\":1,\"545\":5,\"581\":2,\"663\":1,\"730\":5,\"767\":2,\"848\":1,\"916\":5,\"960\":2,\"1042\":1,\"1115\":5,\"1155\":1,\"1176\":2,\"1277\":2,\"1349\":1,\"1467\":5}}],[\"object\",{\"1\":{\"10\":1,\"17\":1,\"39\":1,\"55\":1,\"70\":1,\"82\":1,\"248\":9,\"376\":9,\"388\":1,\"396\":1,\"402\":1,\"477\":1,\"545\":9,\"573\":1,\"581\":1,\"587\":1,\"663\":1,\"730\":9,\"759\":1,\"767\":1,\"773\":1,\"848\":1,\"916\":9,\"952\":1,\"960\":1,\"966\":1,\"1042\":1,\"1115\":9,\"1155\":1,\"1161\":1,\"1166\":1,\"1176\":1,\"1183\":1,\"1258\":1,\"1277\":1,\"1284\":1,\"1306\":1,\"1322\":1,\"1337\":1,\"1349\":1,\"1467\":9}}],[\"object>\",{\"1\":{\"10\":1,\"17\":2,\"39\":1,\"45\":1,\"48\":1,\"51\":1,\"55\":2,\"70\":2,\"72\":1,\"76\":1,\"78\":1,\"82\":1,\"239\":1,\"310\":2,\"383\":1,\"388\":2,\"396\":1,\"402\":2,\"467\":2,\"473\":1,\"476\":1,\"477\":2,\"568\":1,\"573\":2,\"581\":1,\"587\":2,\"653\":2,\"659\":1,\"662\":1,\"663\":2,\"754\":1,\"759\":2,\"767\":1,\"773\":2,\"838\":2,\"844\":1,\"847\":1,\"848\":2,\"947\":1,\"952\":2,\"960\":1,\"966\":2,\"1032\":2,\"1038\":1,\"1041\":1,\"1042\":2,\"1102\":1,\"1148\":1,\"1151\":1,\"1155\":1,\"1158\":1,\"1161\":2,\"1166\":2,\"1176\":1,\"1183\":2,\"1256\":2,\"1258\":1,\"1264\":1,\"1267\":1,\"1277\":1,\"1284\":2,\"1306\":1,\"1312\":1,\"1315\":1,\"1318\":1,\"1322\":2,\"1337\":2,\"1339\":1,\"1343\":1,\"1345\":1,\"1349\":1,\"1458\":1,\"1529\":2,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"objects\",{\"1\":{\"9\":1,\"58\":1,\"59\":2,\"248\":1,\"372\":1,\"373\":2,\"376\":1,\"395\":1,\"541\":1,\"542\":2,\"545\":1,\"580\":1,\"726\":1,\"727\":2,\"730\":1,\"766\":1,\"912\":1,\"913\":2,\"916\":1,\"959\":1,\"1111\":1,\"1112\":2,\"1115\":1,\"1175\":1,\"1276\":1,\"1325\":1,\"1326\":2,\"1467\":1}}],[\"overriding\",{\"1\":{\"133\":1,\"1539\":1}}],[\"override\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"29\":2,\"32\":4,\"33\":3,\"37\":1,\"55\":1,\"56\":2,\"70\":2,\"76\":2,\"82\":2,\"131\":1,\"239\":1,\"243\":1,\"248\":3,\"260\":1,\"270\":2,\"310\":1,\"367\":1,\"376\":3,\"383\":1,\"388\":2,\"395\":1,\"396\":1,\"397\":1,\"461\":4,\"462\":3,\"466\":1,\"467\":1,\"477\":2,\"536\":1,\"545\":3,\"555\":1,\"565\":2,\"568\":1,\"573\":2,\"580\":1,\"581\":1,\"582\":1,\"647\":4,\"648\":3,\"652\":1,\"653\":1,\"663\":2,\"721\":1,\"730\":3,\"740\":1,\"751\":2,\"754\":1,\"759\":2,\"766\":1,\"767\":1,\"768\":1,\"832\":4,\"833\":3,\"837\":1,\"838\":1,\"848\":2,\"907\":1,\"916\":3,\"926\":1,\"936\":2,\"947\":1,\"952\":2,\"959\":1,\"960\":1,\"961\":1,\"1026\":4,\"1027\":3,\"1031\":1,\"1032\":1,\"1042\":2,\"1102\":1,\"1106\":1,\"1115\":3,\"1127\":1,\"1137\":2,\"1148\":1,\"1155\":2,\"1158\":2,\"1161\":1,\"1162\":2,\"1166\":2,\"1175\":1,\"1176\":1,\"1177\":1,\"1195\":2,\"1250\":4,\"1251\":3,\"1255\":1,\"1256\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1286\":1,\"1296\":2,\"1299\":4,\"1300\":3,\"1304\":1,\"1322\":1,\"1323\":2,\"1337\":2,\"1343\":2,\"1349\":2,\"1458\":1,\"1462\":1,\"1467\":3,\"1479\":1,\"1489\":2,\"1529\":1,\"1537\":1}}],[\"oceanbase\",{\"1\":{\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1373\":1}}],[\"oa\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"oa办公\",{\"1\":{\"83\":1,\"1350\":1}}],[\"oa审批系统\",{\"1\":{\"83\":1,\"1350\":1}}],[\"out\",{\"1\":{\"39\":1,\"292\":1,\"294\":1,\"295\":3,\"442\":1,\"444\":1,\"445\":3,\"628\":1,\"630\":1,\"631\":3,\"813\":1,\"815\":1,\"816\":3,\"1007\":1,\"1009\":1,\"1010\":3,\"1230\":1,\"1232\":1,\"1233\":3,\"1258\":1,\"1306\":1,\"1511\":1,\"1513\":1,\"1514\":3,\"1643\":1,\"1645\":1,\"1646\":2,\"1703\":1,\"1705\":1,\"1706\":2}}],[\"orderby\",{\"1\":{\"230\":1,\"363\":1,\"532\":1,\"717\":1,\"903\":1,\"1099\":1,\"1449\":1}}],[\"orderbydesc\",{\"1\":{\"229\":1,\"362\":1,\"531\":1,\"716\":1,\"902\":1,\"1098\":1,\"1448\":1}}],[\"orderbyfield\",{\"1\":{\"228\":2,\"229\":2,\"230\":2,\"361\":2,\"362\":2,\"363\":2,\"530\":2,\"531\":2,\"532\":2,\"715\":2,\"716\":2,\"717\":2,\"901\":2,\"902\":2,\"903\":2,\"1097\":2,\"1098\":2,\"1099\":2,\"1447\":2,\"1448\":2,\"1449\":2}}],[\"orderbyasc\",{\"1\":{\"228\":1,\"361\":1,\"530\":1,\"715\":1,\"901\":1,\"1097\":1,\"1447\":1}}],[\"orderbyupdatetime\",{\"1\":{\"227\":1,\"360\":1,\"529\":1,\"714\":1,\"900\":1,\"1096\":1,\"1446\":1}}],[\"orderbycreatetime\",{\"1\":{\"226\":1,\"359\":1,\"528\":1,\"713\":1,\"899\":1,\"1095\":1,\"1445\":1}}],[\"orderbyid\",{\"1\":{\"225\":1,\"358\":1,\"527\":1,\"712\":1,\"898\":1,\"1094\":1,\"1444\":1}}],[\"oracle适配\",{\"1\":{\"158\":1,\"1564\":1}}],[\"oracle\",{\"1\":{\"102\":1,\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1369\":1,\"1373\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"org\",{\"1\":{\"35\":1,\"134\":1,\"136\":3,\"242\":1,\"245\":3,\"288\":1,\"366\":1,\"369\":1,\"436\":1,\"535\":1,\"538\":3,\"621\":1,\"650\":1,\"720\":1,\"723\":1,\"807\":1,\"906\":1,\"909\":3,\"1000\":1,\"1029\":1,\"1105\":1,\"1108\":3,\"1226\":1,\"1253\":1,\"1302\":1,\"1461\":1,\"1464\":3,\"1507\":1,\"1540\":1,\"1542\":3,\"1652\":1,\"1673\":1,\"1719\":1,\"1724\":1}}],[\"orm和数据库扩展\",{\"0\":{\"1675\":1,\"1721\":1}}],[\"orm支持mybatis\",{\"1\":{\"159\":1,\"1565\":1}}],[\"orm框架扩展\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"orm框架本身不支持逻辑删除\",{\"1\":{\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"407\":1,\"535\":1,\"538\":1,\"592\":1,\"720\":1,\"723\":1,\"778\":1,\"906\":1,\"909\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"orm\",{\"1\":{\"25\":7,\"242\":1,\"288\":1,\"366\":1,\"410\":7,\"436\":1,\"535\":1,\"595\":7,\"621\":1,\"720\":1,\"781\":7,\"807\":1,\"906\":1,\"974\":7,\"1000\":1,\"1105\":1,\"1191\":7,\"1226\":1,\"1292\":7,\"1461\":1,\"1507\":1,\"1673\":1,\"1719\":1}}],[\"orm扩展包使用技巧\",{\"0\":{\"23\":1,\"408\":1,\"593\":1,\"779\":1,\"972\":1,\"1189\":1,\"1290\":1}}],[\"o\",{\"1\":{\"17\":2,\"55\":2,\"82\":3,\"396\":4,\"402\":2,\"477\":3,\"581\":4,\"587\":2,\"663\":3,\"767\":4,\"773\":2,\"848\":3,\"960\":4,\"966\":2,\"1042\":3,\"1155\":3,\"1161\":2,\"1183\":2,\"1284\":2,\"1322\":2,\"1349\":3}}],[\"n\",{\"1\":{\"303\":1,\"304\":1,\"306\":2,\"308\":1,\"452\":1,\"453\":1,\"455\":2,\"457\":1,\"638\":1,\"639\":1,\"641\":2,\"643\":1,\"823\":1,\"824\":1,\"826\":2,\"828\":1,\"1017\":1,\"1018\":1,\"1020\":2,\"1022\":1,\"1241\":1,\"1242\":1,\"1244\":2,\"1246\":1,\"1522\":1,\"1523\":1,\"1525\":2,\"1527\":1}}],[\"n否\",{\"1\":{\"303\":1,\"304\":1,\"306\":2,\"308\":1,\"452\":1,\"453\":1,\"455\":2,\"457\":1,\"638\":1,\"639\":1,\"641\":2,\"643\":1,\"823\":1,\"824\":1,\"826\":2,\"828\":1,\"1017\":1,\"1018\":1,\"1020\":2,\"1022\":1,\"1241\":1,\"1242\":1,\"1244\":2,\"1246\":1,\"1522\":1,\"1523\":1,\"1525\":2,\"1527\":1}}],[\"nsimsun\",{\"1\":{\"132\":1,\"1538\":1}}],[\"number>\",{\"1\":{\"131\":1,\"1537\":1}}],[\"number\",{\"1\":{\"131\":4,\"1537\":4}}],[\"numberserializer\",{\"1\":{\"131\":1,\"1537\":1}}],[\"null\",{\"1\":{\"29\":4,\"55\":2,\"70\":1,\"82\":3,\"239\":1,\"270\":1,\"383\":1,\"388\":1,\"477\":3,\"565\":1,\"568\":1,\"573\":1,\"663\":3,\"751\":1,\"754\":1,\"759\":1,\"848\":3,\"936\":1,\"947\":1,\"952\":1,\"1042\":3,\"1102\":1,\"1137\":1,\"1148\":1,\"1155\":3,\"1161\":2,\"1166\":1,\"1195\":4,\"1296\":4,\"1322\":2,\"1337\":1,\"1349\":3,\"1458\":1,\"1489\":1}}],[\"nacos\",{\"1\":{\"121\":1,\"1388\":1}}],[\"name>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"name\",{\"1\":{\"67\":1,\"129\":2,\"155\":1,\"242\":1,\"262\":1,\"271\":1,\"303\":1,\"304\":2,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"452\":1,\"453\":2,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"557\":1,\"638\":1,\"639\":2,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"742\":1,\"743\":1,\"823\":1,\"824\":2,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"906\":1,\"928\":1,\"937\":1,\"944\":1,\"1017\":1,\"1018\":2,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1105\":1,\"1129\":1,\"1138\":1,\"1145\":1,\"1241\":1,\"1242\":2,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1334\":1,\"1461\":1,\"1481\":1,\"1490\":1,\"1522\":1,\"1523\":2,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1535\":2,\"1561\":1,\"1592\":1}}],[\"name=authorization\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"name=\",{\"1\":{\"25\":1,\"263\":1,\"410\":1,\"558\":1,\"595\":1,\"744\":1,\"781\":1,\"929\":1,\"974\":1,\"1130\":1,\"1191\":1,\"1292\":1,\"1482\":1}}],[\"nginx\",{\"0\":{\"742\":1},\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"nginx配置示例\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"ne|flag|4\",{\"1\":{\"1457\":1}}],[\"next\",{\"1\":{\"307\":2,\"456\":2,\"642\":2,\"827\":2,\"1021\":2,\"1245\":2,\"1526\":2}}],[\"nextid\",{\"1\":{\"248\":1,\"376\":1,\"545\":1,\"730\":1,\"916\":1,\"1115\":1,\"1467\":1}}],[\"nextidstr\",{\"1\":{\"58\":1,\"310\":1,\"372\":1,\"467\":1,\"541\":1,\"653\":1,\"726\":1,\"838\":1,\"912\":1,\"1032\":1,\"1111\":1,\"1256\":1,\"1325\":1,\"1529\":1}}],[\"ne\",{\"1\":{\"238\":2,\"1101\":2}}],[\"news\",{\"0\":{\"1765\":1,\"1766\":1,\"1770\":1,\"1771\":1}}],[\"newtask\",{\"1\":{\"39\":2,\"1258\":2,\"1306\":2}}],[\"newentity\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"new\",{\"1\":{\"9\":1,\"32\":5,\"33\":5,\"36\":1,\"39\":4,\"45\":1,\"48\":1,\"52\":1,\"54\":1,\"70\":5,\"73\":1,\"75\":1,\"79\":1,\"81\":1,\"131\":5,\"136\":4,\"239\":3,\"243\":2,\"246\":2,\"248\":2,\"252\":1,\"259\":2,\"260\":1,\"270\":9,\"275\":4,\"292\":1,\"310\":1,\"367\":2,\"370\":2,\"376\":2,\"380\":1,\"383\":3,\"388\":5,\"395\":1,\"442\":1,\"461\":5,\"462\":5,\"465\":1,\"467\":1,\"473\":1,\"476\":1,\"536\":2,\"539\":2,\"545\":2,\"549\":1,\"554\":2,\"555\":1,\"565\":9,\"568\":3,\"573\":5,\"580\":1,\"628\":1,\"647\":5,\"648\":5,\"651\":1,\"653\":1,\"659\":1,\"662\":1,\"721\":2,\"724\":2,\"730\":2,\"734\":1,\"739\":2,\"740\":1,\"751\":9,\"754\":3,\"759\":5,\"766\":1,\"813\":1,\"832\":5,\"833\":5,\"836\":1,\"838\":1,\"844\":1,\"847\":1,\"907\":2,\"910\":2,\"916\":2,\"920\":1,\"925\":2,\"926\":1,\"936\":9,\"947\":3,\"952\":5,\"959\":1,\"1007\":1,\"1026\":5,\"1027\":5,\"1030\":1,\"1032\":1,\"1038\":1,\"1041\":1,\"1102\":3,\"1106\":2,\"1109\":2,\"1115\":2,\"1119\":1,\"1126\":2,\"1127\":1,\"1137\":9,\"1148\":3,\"1152\":1,\"1154\":1,\"1157\":1,\"1160\":1,\"1166\":5,\"1175\":1,\"1230\":1,\"1250\":5,\"1251\":5,\"1254\":1,\"1256\":1,\"1258\":4,\"1264\":1,\"1267\":1,\"1276\":1,\"1286\":1,\"1299\":5,\"1300\":5,\"1303\":1,\"1306\":4,\"1312\":1,\"1315\":1,\"1319\":1,\"1321\":1,\"1337\":5,\"1340\":1,\"1342\":1,\"1346\":1,\"1348\":1,\"1458\":3,\"1462\":2,\"1465\":2,\"1467\":2,\"1471\":1,\"1478\":2,\"1479\":1,\"1489\":9,\"1494\":4,\"1511\":1,\"1529\":1,\"1537\":5,\"1542\":4,\"1620\":1,\"1621\":1,\"1643\":1,\"1670\":1,\"1673\":2,\"1680\":1,\"1681\":1,\"1703\":1,\"1716\":1,\"1719\":2}}],[\"no\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"now\",{\"1\":{\"307\":2,\"456\":2,\"642\":2,\"827\":2,\"1021\":2,\"1245\":2,\"1526\":2}}],[\"nownodecode\",{\"1\":{\"207\":2,\"340\":2,\"509\":2,\"694\":2,\"880\":2,\"1076\":2,\"1426\":2}}],[\"noear<\",{\"1\":{\"290\":2,\"438\":2,\"623\":2,\"809\":2,\"1002\":2,\"1228\":2,\"1509\":2,\"1657\":1,\"1729\":1}}],[\"none<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"none无动作\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"none\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"nonnull\",{\"1\":{\"9\":1,\"58\":1,\"59\":2,\"372\":1,\"373\":2,\"395\":1,\"541\":1,\"542\":2,\"580\":1,\"726\":1,\"727\":2,\"766\":1,\"912\":1,\"913\":2,\"959\":1,\"1111\":1,\"1112\":2,\"1175\":1,\"1276\":1,\"1325\":1,\"1326\":2}}],[\"nodeservice节点接口\",{\"0\":{\"206\":1,\"339\":1,\"508\":1,\"693\":1,\"879\":1,\"1075\":1,\"1425\":1}}],[\"nodecode\",{\"1\":{\"192\":1,\"199\":1,\"295\":1,\"326\":1,\"332\":1,\"445\":1,\"495\":1,\"501\":1,\"631\":1,\"680\":1,\"686\":1,\"816\":1,\"866\":1,\"872\":1,\"1010\":1,\"1061\":1,\"1068\":1,\"1233\":1,\"1411\":1,\"1418\":1,\"1514\":1,\"1646\":1,\"1670\":1,\"1706\":1,\"1716\":1}}],[\"node监听类型和监听路径字段长度\",{\"1\":{\"163\":1,\"1569\":1}}],[\"node\",{\"1\":{\"32\":1,\"301\":1,\"304\":5,\"305\":3,\"306\":5,\"307\":4,\"308\":3,\"450\":1,\"453\":5,\"454\":3,\"455\":5,\"456\":4,\"457\":3,\"461\":1,\"636\":1,\"639\":5,\"640\":3,\"641\":5,\"642\":4,\"643\":3,\"647\":1,\"821\":1,\"824\":5,\"825\":3,\"826\":5,\"827\":4,\"828\":3,\"832\":1,\"1015\":1,\"1018\":5,\"1019\":3,\"1020\":5,\"1021\":4,\"1022\":3,\"1026\":1,\"1239\":1,\"1242\":5,\"1243\":3,\"1244\":5,\"1245\":4,\"1246\":3,\"1250\":1,\"1286\":1,\"1299\":1,\"1520\":1,\"1523\":5,\"1524\":3,\"1525\":5,\"1526\":4,\"1527\":3}}],[\"notice\",{\"0\":{\"1768\":1,\"1772\":1}}],[\"notify\",{\"1\":{\"4\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"17\":1,\"310\":1,\"394\":1,\"395\":1,\"396\":1,\"397\":1,\"402\":1,\"467\":1,\"579\":1,\"580\":1,\"581\":1,\"582\":1,\"587\":1,\"653\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"773\":1,\"838\":1,\"958\":1,\"959\":1,\"960\":1,\"961\":1,\"966\":1,\"1032\":1,\"1170\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1183\":1,\"1256\":1,\"1271\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1284\":1,\"1529\":1}}],[\"notnike|flag|4\",{\"1\":{\"1457\":1}}],[\"notnike\",{\"1\":{\"238\":2,\"1101\":2}}],[\"not\",{\"1\":{\"20\":1,\"22\":1,\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"405\":1,\"407\":1,\"535\":1,\"538\":1,\"590\":1,\"592\":1,\"720\":1,\"723\":1,\"776\":1,\"778\":1,\"906\":1,\"909\":1,\"969\":1,\"971\":1,\"1105\":1,\"1108\":1,\"1186\":1,\"1188\":1,\"1287\":1,\"1289\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1676\":1,\"1719\":1,\"1722\":1,\"1737\":1}}],[\"所属并行网关节点编码\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"所有节点任务都会执行\",{\"1\":{\"391\":1,\"576\":1,\"762\":1,\"955\":1}}],[\"所有审批人审批通过\",{\"1\":{\"232\":1,\"276\":1,\"1451\":1,\"1495\":1}}],[\"所有流程的节点任务都会执行\",{\"1\":{\"2\":1,\"1168\":1,\"1269\":1}}],[\"所以目前已经解偶数据库操作\",{\"1\":{\"1675\":1,\"1721\":1}}],[\"所以可以通过以下方式获取对应的使用入口\",{\"1\":{\"408\":1,\"593\":1,\"779\":1,\"972\":1}}],[\"所以参与社区文档建设绝对是一件意义重大的事情\",{\"1\":{\"88\":1,\"1355\":1}}],[\"所以请给您觉得好的开源项目点一个小小的star\",{\"1\":{\"86\":1,\"1353\":1}}],[\"所拥有的权限等操作\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"le|flag|4\",{\"1\":{\"1457\":1}}],[\"leaveflow\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1670\":1,\"1703\":1,\"1716\":1}}],[\"le\",{\"1\":{\"238\":2,\"1101\":2}}],[\"lt|flag|4\",{\"1\":{\"1457\":1}}],[\"lt\",{\"1\":{\"238\":2,\"1101\":2}}],[\"lazy\",{\"1\":{\"133\":2,\"1539\":2}}],[\"language\",{\"0\":{\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1148\":1},\"1\":{\"239\":1,\"1102\":1,\"1458\":1}}],[\"lang=zh\",{\"1\":{\"132\":1,\"1538\":1}}],[\"lang=zh是否包含中文字符集\",{\"1\":{\"132\":1,\"1538\":1}}],[\"lang\",{\"1\":{\"132\":1,\"1538\":1}}],[\"ll\",{\"1\":{\"132\":1,\"1538\":1}}],[\"lyq\",{\"1\":{\"83\":1,\"1350\":1}}],[\"locker\",{\"1\":{\"136\":1,\"1542\":1}}],[\"location\",{\"1\":{\"67\":3,\"742\":1,\"944\":3,\"1145\":3,\"1334\":3,\"1592\":1}}],[\"localcontainerentitymanagerfactorybean\",{\"1\":{\"155\":1,\"1561\":1}}],[\"localhost\",{\"1\":{\"67\":3,\"742\":2,\"743\":1,\"744\":1,\"944\":3,\"1145\":3,\"1334\":3,\"1592\":2}}],[\"local\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"long\",{\"1\":{\"131\":8,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"195\":1,\"196\":1,\"270\":3,\"322\":1,\"323\":1,\"329\":1,\"330\":1,\"491\":1,\"492\":1,\"498\":1,\"499\":1,\"565\":3,\"676\":1,\"677\":1,\"683\":1,\"684\":1,\"751\":3,\"862\":1,\"863\":1,\"869\":1,\"870\":1,\"936\":3,\"1057\":1,\"1058\":1,\"1064\":1,\"1065\":1,\"1137\":3,\"1405\":1,\"1406\":1,\"1407\":1,\"1408\":1,\"1414\":1,\"1415\":1,\"1489\":3,\"1537\":8}}],[\"longvalue\",{\"1\":{\"32\":2,\"33\":2,\"131\":2,\"461\":2,\"462\":2,\"647\":2,\"648\":2,\"832\":2,\"833\":2,\"1026\":2,\"1027\":2,\"1250\":2,\"1251\":2,\"1299\":2,\"1300\":2,\"1537\":2}}],[\"logging<\",{\"1\":{\"290\":1,\"438\":1,\"623\":1,\"809\":1,\"1002\":1,\"1228\":1,\"1509\":1}}],[\"loggerfactory\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"16\":1,\"70\":1,\"310\":1,\"388\":1,\"395\":1,\"396\":1,\"397\":1,\"467\":1,\"573\":1,\"580\":1,\"581\":1,\"582\":1,\"653\":1,\"759\":1,\"766\":1,\"767\":1,\"768\":1,\"838\":1,\"952\":1,\"959\":1,\"960\":1,\"961\":1,\"1032\":1,\"1166\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":1,\"1256\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":1,\"1337\":1,\"1529\":1}}],[\"logger\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"16\":1,\"70\":1,\"310\":1,\"388\":1,\"395\":1,\"396\":1,\"397\":1,\"467\":1,\"573\":1,\"580\":1,\"581\":1,\"582\":1,\"653\":1,\"759\":1,\"766\":1,\"767\":1,\"768\":1,\"838\":1,\"952\":1,\"959\":1,\"960\":1,\"961\":1,\"1032\":1,\"1166\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":1,\"1256\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":1,\"1337\":1,\"1529\":1}}],[\"logo\",{\"1\":{\"83\":1,\"1350\":1}}],[\"logicnotdeletevalue\",{\"1\":{\"21\":1,\"406\":1,\"591\":1,\"777\":1,\"970\":1,\"1187\":1,\"1288\":1}}],[\"logicdeletevalue\",{\"1\":{\"21\":1,\"406\":1,\"591\":1,\"777\":1,\"970\":1,\"1187\":1,\"1288\":1}}],[\"logic\",{\"1\":{\"20\":2,\"22\":3,\"242\":3,\"245\":3,\"366\":3,\"369\":3,\"405\":2,\"407\":3,\"535\":3,\"538\":3,\"590\":2,\"592\":3,\"720\":3,\"723\":3,\"776\":2,\"778\":3,\"906\":3,\"909\":3,\"969\":2,\"971\":3,\"1105\":3,\"1108\":3,\"1186\":2,\"1188\":3,\"1287\":2,\"1289\":3,\"1461\":3,\"1464\":3,\"1673\":3,\"1719\":3}}],[\"loginuser\",{\"1\":{\"9\":1,\"58\":1,\"310\":1,\"372\":1,\"395\":1,\"467\":1,\"541\":1,\"580\":1,\"653\":1,\"726\":1,\"766\":1,\"838\":1,\"912\":1,\"959\":1,\"1032\":1,\"1111\":1,\"1175\":1,\"1256\":1,\"1276\":1,\"1325\":1,\"1529\":1}}],[\"log\",{\"1\":{\"9\":3,\"10\":3,\"11\":3,\"16\":9,\"17\":1,\"70\":3,\"262\":1,\"310\":3,\"388\":3,\"395\":3,\"396\":3,\"397\":3,\"402\":1,\"467\":3,\"557\":1,\"573\":3,\"580\":3,\"581\":3,\"582\":3,\"587\":1,\"653\":3,\"743\":1,\"759\":3,\"766\":3,\"767\":3,\"768\":3,\"773\":1,\"838\":3,\"928\":1,\"952\":3,\"959\":3,\"960\":3,\"961\":3,\"966\":1,\"1032\":3,\"1129\":1,\"1166\":3,\"1175\":3,\"1176\":3,\"1177\":3,\"1182\":9,\"1183\":1,\"1256\":3,\"1276\":3,\"1277\":3,\"1278\":3,\"1283\":9,\"1284\":1,\"1337\":3,\"1481\":1,\"1529\":3}}],[\"like|flag|4\",{\"1\":{\"1457\":1}}],[\"like\",{\"1\":{\"238\":2,\"1101\":2,\"1676\":2,\"1722\":2}}],[\"liutao\",{\"1\":{\"157\":3,\"1563\":3}}],[\"liangli\",{\"1\":{\"155\":1,\"157\":1,\"1561\":1,\"1563\":1}}],[\"linux环境\",{\"1\":{\"132\":1,\"1538\":1}}],[\"linkedhashmap<>\",{\"1\":{\"259\":1,\"554\":1,\"739\":1,\"925\":1,\"1126\":1,\"1478\":1}}],[\"linkedhashmap<string\",{\"1\":{\"259\":1,\"554\":1,\"739\":1,\"925\":1,\"1126\":1,\"1478\":1}}],[\"link2fun\",{\"1\":{\"155\":1,\"1561\":1}}],[\"link\",{\"1\":{\"10\":1,\"28\":1,\"1176\":1,\"1194\":1,\"1277\":1,\"1295\":1}}],[\"license\",{\"1\":{\"104\":1,\"1371\":1}}],[\"listbydefids\",{\"1\":{\"197\":1,\"1066\":1,\"1416\":1}}],[\"list\",{\"1\":{\"132\":2,\"212\":1,\"213\":1,\"222\":2,\"223\":2,\"224\":2,\"345\":1,\"346\":1,\"355\":2,\"356\":2,\"357\":2,\"514\":1,\"515\":1,\"524\":2,\"525\":2,\"526\":2,\"699\":1,\"700\":1,\"709\":2,\"710\":2,\"711\":2,\"885\":1,\"886\":1,\"895\":2,\"896\":2,\"897\":2,\"1081\":1,\"1082\":1,\"1091\":2,\"1092\":2,\"1093\":2,\"1431\":1,\"1432\":1,\"1441\":2,\"1442\":2,\"1443\":2,\"1538\":2}}],[\"listen\",{\"1\":{\"67\":1,\"742\":1,\"944\":1,\"1145\":1,\"1334\":1,\"1592\":1}}],[\"listenerstrategyspel\",{\"1\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"listenerstrategy\",{\"1\":{\"75\":1,\"76\":1,\"1157\":1,\"1158\":1,\"1342\":1,\"1343\":1}}],[\"listenervariable监听器变量新增flowparams字段\",{\"1\":{\"152\":1,\"1558\":1}}],[\"listenervariable\",{\"1\":{\"4\":1,\"8\":1,\"9\":4,\"10\":5,\"11\":1,\"16\":12,\"17\":1,\"310\":1,\"394\":1,\"395\":4,\"396\":5,\"397\":1,\"402\":1,\"467\":1,\"579\":1,\"580\":4,\"581\":5,\"582\":1,\"587\":1,\"653\":1,\"765\":1,\"766\":4,\"767\":5,\"768\":1,\"773\":1,\"838\":1,\"958\":1,\"959\":4,\"960\":5,\"961\":1,\"966\":1,\"1032\":1,\"1170\":1,\"1174\":1,\"1175\":4,\"1176\":5,\"1177\":1,\"1182\":12,\"1183\":1,\"1256\":1,\"1271\":1,\"1275\":1,\"1276\":4,\"1277\":5,\"1278\":1,\"1283\":12,\"1284\":1,\"1529\":1}}],[\"listener\",{\"1\":{\"4\":2,\"8\":5,\"9\":1,\"10\":1,\"11\":1,\"17\":1,\"303\":2,\"306\":2,\"310\":1,\"394\":6,\"395\":1,\"396\":1,\"397\":1,\"402\":1,\"452\":2,\"455\":2,\"467\":1,\"579\":6,\"580\":1,\"581\":1,\"582\":1,\"587\":1,\"638\":2,\"641\":2,\"653\":1,\"765\":6,\"766\":1,\"767\":1,\"768\":1,\"773\":1,\"823\":2,\"826\":2,\"838\":1,\"958\":6,\"959\":1,\"960\":1,\"961\":1,\"966\":1,\"1017\":2,\"1020\":2,\"1032\":1,\"1170\":2,\"1174\":5,\"1175\":1,\"1176\":1,\"1177\":1,\"1183\":1,\"1241\":2,\"1244\":2,\"1256\":1,\"1271\":2,\"1275\":5,\"1276\":1,\"1277\":1,\"1278\":1,\"1284\":1,\"1522\":2,\"1525\":2,\"1529\":1}}],[\"list<handlerselectvo>\",{\"1\":{\"269\":1,\"564\":1,\"750\":1,\"935\":1,\"1136\":1,\"1488\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"list<expressionstrategy<list<string>>>\",{\"1\":{\"81\":1,\"1154\":1,\"1348\":1}}],[\"list<expressionstrategy<boolean>>\",{\"1\":{\"75\":1,\"1157\":1,\"1342\":1}}],[\"list<tablefieldinfo>\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"list<task>\",{\"1\":{\"11\":1,\"39\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1258\":1,\"1278\":1,\"1306\":1}}],[\"list<user>\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"list<sysuser>\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"list<sysdept>\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"list<sysrole>\",{\"1\":{\"9\":1,\"29\":1,\"270\":1,\"395\":1,\"565\":1,\"580\":1,\"751\":1,\"766\":1,\"936\":1,\"959\":1,\"1137\":1,\"1175\":1,\"1195\":1,\"1276\":1,\"1296\":1,\"1489\":1}}],[\"list<string>\",{\"1\":{\"9\":1,\"11\":1,\"28\":1,\"29\":2,\"32\":1,\"269\":1,\"270\":1,\"395\":1,\"397\":1,\"461\":1,\"564\":1,\"565\":1,\"580\":1,\"582\":1,\"647\":1,\"750\":1,\"751\":1,\"766\":1,\"768\":1,\"832\":1,\"935\":1,\"936\":1,\"959\":1,\"961\":1,\"1026\":1,\"1136\":1,\"1137\":1,\"1175\":1,\"1177\":1,\"1194\":1,\"1195\":2,\"1250\":1,\"1276\":1,\"1278\":1,\"1286\":1,\"1295\":1,\"1296\":2,\"1299\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"dd\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"distributionmanagement>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"distributionmanagement\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"disabled为是否可编辑\",{\"1\":{\"743\":1,\"744\":1}}],[\"disabled\",{\"1\":{\"261\":1,\"262\":2,\"263\":2,\"265\":3,\"556\":1,\"557\":2,\"558\":2,\"560\":3,\"741\":1,\"743\":1,\"744\":1,\"746\":2,\"927\":1,\"928\":2,\"929\":2,\"931\":3,\"1128\":1,\"1129\":2,\"1130\":2,\"1132\":3,\"1480\":1,\"1481\":2,\"1482\":2,\"1484\":3,\"1581\":1,\"1592\":1,\"1603\":1,\"1634\":1,\"1654\":2,\"1694\":1,\"1726\":2}}],[\"disabled=\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"disabled=$\",{\"1\":{\"261\":1,\"262\":1,\"263\":1,\"265\":1,\"556\":1,\"557\":1,\"558\":1,\"560\":1,\"741\":1,\"743\":1,\"744\":1,\"927\":1,\"928\":1,\"929\":1,\"931\":1,\"1128\":1,\"1129\":1,\"1130\":1,\"1132\":1,\"1480\":1,\"1481\":1,\"1482\":1,\"1484\":1,\"1581\":1,\"1592\":1,\"1603\":1,\"1634\":1,\"1654\":2,\"1694\":1,\"1726\":2}}],[\"disabled=false\",{\"1\":{\"67\":1,\"265\":2,\"560\":2,\"746\":3,\"931\":2,\"944\":1,\"1132\":2,\"1145\":1,\"1334\":1,\"1484\":2}}],[\"dictid\",{\"1\":{\"265\":2,\"560\":2,\"746\":2,\"931\":2,\"1132\":2,\"1484\":2}}],[\"div>\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"dialect\",{\"1\":{\"245\":2,\"369\":2,\"538\":2,\"723\":2,\"909\":2,\"1108\":2,\"1464\":2}}],[\"docencoding><\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"documentelement\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"document\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"docker环境\",{\"1\":{\"132\":1,\"1538\":1}}],[\"dotor\",{\"1\":{\"123\":1,\"1390\":1}}],[\"drwxr\",{\"1\":{\"132\":2,\"1538\":2}}],[\"dromara<\",{\"1\":{\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"922\":1,\"942\":2,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2,\"1579\":1,\"1601\":1,\"1632\":1,\"1640\":1,\"1692\":1,\"1700\":1}}],[\"dromara\",{\"0\":{\"1618\":1,\"1678\":1},\"1\":{\"0\":1,\"25\":7,\"35\":1,\"65\":2,\"70\":2,\"102\":1,\"104\":1,\"105\":3,\"123\":1,\"131\":1,\"134\":1,\"245\":2,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":2,\"538\":2,\"573\":2,\"595\":7,\"650\":1,\"909\":2,\"952\":2,\"974\":7,\"1029\":1,\"1108\":2,\"1122\":1,\"1123\":1,\"1143\":2,\"1166\":2,\"1191\":7,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1253\":1,\"1292\":7,\"1302\":1,\"1332\":2,\"1337\":2,\"1369\":1,\"1371\":1,\"1372\":3,\"1390\":1,\"1464\":2,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":2,\"1537\":1,\"1540\":1,\"1641\":1,\"1647\":1,\"1652\":4,\"1654\":2,\"1666\":2,\"1701\":1,\"1707\":1,\"1712\":2,\"1724\":4,\"1726\":2}}],[\"d\",{\"1\":{\"67\":1,\"123\":1,\"944\":1,\"1145\":1,\"1334\":1,\"1390\":1,\"1628\":1,\"1629\":2,\"1688\":1,\"1689\":2}}],[\"ds\",{\"1\":{\"33\":2,\"462\":2,\"648\":2,\"833\":2,\"1027\":2,\"1251\":2,\"1300\":2}}],[\"dao\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"datetime\",{\"1\":{\"303\":2,\"304\":2,\"305\":2,\"306\":2,\"307\":2,\"308\":2,\"309\":2,\"452\":2,\"453\":2,\"454\":2,\"455\":2,\"456\":2,\"457\":2,\"458\":2,\"638\":2,\"639\":2,\"640\":2,\"641\":2,\"642\":2,\"643\":2,\"644\":2,\"823\":2,\"824\":2,\"825\":2,\"826\":2,\"827\":2,\"828\":2,\"829\":2,\"1017\":2,\"1018\":2,\"1019\":2,\"1020\":2,\"1021\":2,\"1022\":2,\"1023\":2,\"1241\":2,\"1242\":2,\"1243\":2,\"1244\":2,\"1245\":2,\"1246\":2,\"1247\":2,\"1522\":2,\"1523\":2,\"1524\":2,\"1525\":2,\"1526\":2,\"1527\":2,\"1528\":2}}],[\"date\",{\"1\":{\"248\":6,\"376\":6,\"545\":6,\"730\":6,\"916\":6,\"1115\":6,\"1467\":6}}],[\"dateutils\",{\"1\":{\"10\":2,\"270\":6,\"396\":2,\"565\":6,\"581\":2,\"751\":6,\"767\":2,\"936\":6,\"960\":2,\"1137\":6,\"1176\":2,\"1277\":2,\"1489\":6}}],[\"data<\",{\"1\":{\"290\":1,\"438\":1,\"623\":1,\"809\":1,\"1002\":1,\"1228\":1,\"1509\":1}}],[\"datafillhandler\",{\"1\":{\"243\":2,\"246\":2,\"248\":1,\"252\":2,\"367\":2,\"370\":2,\"376\":1,\"380\":2,\"536\":2,\"539\":2,\"545\":1,\"549\":2,\"721\":2,\"724\":2,\"730\":1,\"734\":2,\"907\":2,\"910\":2,\"916\":1,\"920\":2,\"1106\":2,\"1109\":2,\"1115\":1,\"1119\":2,\"1462\":2,\"1465\":2,\"1467\":1,\"1471\":2,\"1673\":2,\"1719\":2}}],[\"data\",{\"1\":{\"242\":2,\"245\":1,\"251\":1,\"262\":2,\"263\":1,\"366\":2,\"369\":1,\"379\":1,\"535\":2,\"538\":1,\"548\":1,\"557\":2,\"558\":1,\"720\":2,\"723\":1,\"733\":1,\"743\":2,\"744\":1,\"906\":2,\"909\":1,\"919\":1,\"928\":2,\"929\":1,\"1105\":2,\"1108\":1,\"1118\":1,\"1129\":2,\"1130\":1,\"1461\":2,\"1464\":1,\"1470\":1,\"1481\":2,\"1482\":1,\"1673\":2,\"1719\":2}}],[\"datasource\",{\"1\":{\"21\":1,\"33\":1,\"245\":1,\"369\":1,\"406\":1,\"462\":1,\"538\":1,\"591\":1,\"648\":1,\"723\":1,\"777\":1,\"833\":1,\"909\":1,\"970\":1,\"1027\":1,\"1108\":1,\"1187\":1,\"1251\":1,\"1288\":1,\"1300\":1,\"1464\":1}}],[\"dbtype\",{\"1\":{\"136\":2,\"1542\":2}}],[\"db1\",{\"1\":{\"21\":1,\"33\":6,\"245\":1,\"369\":1,\"406\":1,\"462\":6,\"538\":1,\"591\":1,\"648\":6,\"723\":1,\"777\":1,\"833\":6,\"909\":1,\"970\":1,\"1027\":6,\"1108\":1,\"1187\":1,\"1251\":6,\"1288\":1,\"1300\":6,\"1464\":1}}],[\"db\",{\"1\":{\"20\":1,\"33\":2,\"405\":1,\"462\":2,\"590\":1,\"648\":2,\"776\":1,\"833\":2,\"969\":1,\"1027\":2,\"1186\":1,\"1251\":2,\"1287\":1,\"1300\":2}}],[\"decimal\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"del\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"delete\",{\"1\":{\"20\":2,\"22\":3,\"242\":3,\"245\":3,\"366\":3,\"369\":3,\"405\":2,\"407\":3,\"535\":3,\"538\":3,\"590\":2,\"592\":3,\"720\":3,\"723\":3,\"776\":2,\"778\":3,\"906\":3,\"909\":3,\"969\":2,\"971\":3,\"1105\":3,\"1108\":3,\"1186\":2,\"1188\":3,\"1287\":2,\"1289\":3,\"1461\":3,\"1464\":3,\"1673\":3,\"1719\":3}}],[\"desktop\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1703\":1}}],[\"detail\",{\"1\":{\"265\":2,\"560\":2,\"746\":2,\"931\":2,\"1132\":2,\"1484\":2}}],[\"determinesize\",{\"1\":{\"56\":1,\"1162\":1,\"1323\":1}}],[\"devtools\",{\"1\":{\"134\":2,\"1540\":2}}],[\"dejavu\",{\"1\":{\"132\":1,\"1538\":1}}],[\"deploy\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"deployflow\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1670\":1,\"1703\":1,\"1716\":1}}],[\"depute\",{\"1\":{\"202\":1,\"275\":1,\"277\":1,\"335\":1,\"423\":1,\"504\":1,\"608\":1,\"689\":1,\"794\":1,\"875\":1,\"987\":1,\"1071\":1,\"1207\":1,\"1214\":1,\"1421\":1,\"1494\":1,\"1496\":1}}],[\"dependency>\",{\"1\":{\"65\":1,\"136\":1,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":2,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"922\":1,\"942\":1,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2,\"1122\":1,\"1123\":1,\"1143\":1,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1332\":1,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":2,\"1542\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1632\":1,\"1640\":1,\"1647\":1,\"1657\":1,\"1692\":1,\"1700\":1,\"1707\":1,\"1729\":1}}],[\"deptlist\",{\"1\":{\"270\":5,\"565\":5,\"751\":5,\"936\":5,\"1137\":5,\"1489\":5}}],[\"deptmapper\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"dept\",{\"1\":{\"9\":1,\"29\":1,\"270\":9,\"277\":1,\"278\":1,\"395\":1,\"423\":1,\"424\":1,\"565\":9,\"580\":1,\"608\":1,\"609\":1,\"751\":9,\"766\":1,\"794\":1,\"795\":1,\"936\":9,\"959\":1,\"987\":1,\"988\":1,\"1137\":9,\"1175\":1,\"1195\":1,\"1207\":1,\"1208\":1,\"1214\":1,\"1215\":1,\"1276\":1,\"1296\":1,\"1489\":9,\"1496\":1,\"1497\":1}}],[\"demo\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"def包含如下字段\",{\"1\":{\"667\":1}}],[\"defids\",{\"1\":{\"197\":1,\"1066\":1,\"1416\":1}}],[\"definition表的id\",{\"1\":{\"304\":1,\"305\":1,\"308\":1,\"453\":1,\"454\":1,\"457\":1,\"639\":1,\"640\":1,\"643\":1,\"824\":1,\"825\":1,\"828\":1,\"1018\":1,\"1019\":1,\"1022\":1,\"1242\":1,\"1243\":1,\"1246\":1,\"1523\":1,\"1524\":1,\"1527\":1}}],[\"definitionid为需要查询的流程定义id\",{\"1\":{\"743\":1,\"744\":1}}],[\"definitionid\",{\"1\":{\"207\":2,\"261\":1,\"262\":2,\"263\":2,\"265\":3,\"340\":2,\"509\":2,\"556\":1,\"557\":2,\"558\":2,\"560\":3,\"694\":2,\"741\":1,\"743\":1,\"744\":1,\"746\":2,\"880\":2,\"927\":1,\"928\":2,\"929\":2,\"931\":3,\"1076\":2,\"1128\":1,\"1129\":2,\"1130\":2,\"1132\":3,\"1426\":2,\"1480\":1,\"1481\":2,\"1482\":2,\"1484\":3,\"1581\":1,\"1592\":1,\"1603\":1,\"1634\":1,\"1654\":2,\"1694\":1,\"1726\":2}}],[\"definition\",{\"1\":{\"32\":1,\"133\":1,\"174\":1,\"175\":1,\"262\":1,\"263\":1,\"301\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"450\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"461\":1,\"480\":1,\"557\":1,\"558\":1,\"636\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"647\":1,\"743\":1,\"744\":1,\"821\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"832\":1,\"851\":1,\"928\":1,\"929\":1,\"1015\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1026\":1,\"1045\":1,\"1046\":1,\"1129\":1,\"1130\":1,\"1239\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1250\":1,\"1286\":1,\"1299\":1,\"1393\":1,\"1394\":1,\"1481\":1,\"1482\":1,\"1520\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1539\":1}}],[\"definitionmapper\",{\"1\":{\"26\":1,\"411\":1,\"596\":1,\"782\":1,\"975\":1,\"1192\":1,\"1293\":1}}],[\"def\",{\"1\":{\"177\":1,\"314\":1,\"482\":1,\"667\":1,\"853\":1,\"1048\":1,\"1396\":1}}],[\"defservice\",{\"1\":{\"292\":1,\"293\":1,\"408\":3,\"442\":1,\"443\":1,\"593\":3,\"628\":1,\"629\":1,\"779\":3,\"813\":1,\"814\":1,\"972\":3,\"1007\":1,\"1008\":1,\"1230\":1,\"1231\":1,\"1511\":1,\"1512\":1,\"1643\":1,\"1644\":1,\"1670\":2,\"1703\":1,\"1704\":1,\"1716\":2}}],[\"defservice流程定义接口\",{\"0\":{\"173\":1,\"312\":1,\"479\":1,\"665\":1,\"850\":1,\"1044\":1,\"1392\":1}}],[\"defstartlistener\",{\"1\":{\"9\":2,\"395\":2,\"580\":2,\"766\":2,\"959\":2,\"1175\":2,\"1276\":2}}],[\"default|$\",{\"1\":{\"1457\":1}}],[\"defaultvariablestrategy\",{\"1\":{\"82\":1,\"477\":1,\"663\":1,\"848\":1,\"1042\":1,\"1155\":1,\"1349\":1}}],[\"defaultinstance\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"default\",{\"1\":{\"51\":1,\"54\":2,\"72\":1,\"75\":1,\"78\":1,\"81\":1,\"262\":1,\"469\":1,\"470\":1,\"472\":3,\"477\":2,\"557\":1,\"655\":1,\"656\":1,\"658\":3,\"663\":2,\"743\":1,\"840\":1,\"841\":1,\"843\":3,\"848\":2,\"928\":1,\"1034\":1,\"1035\":1,\"1037\":3,\"1042\":2,\"1129\":1,\"1151\":1,\"1154\":1,\"1157\":1,\"1160\":2,\"1318\":1,\"1321\":2,\"1339\":1,\"1342\":1,\"1345\":1,\"1348\":1,\"1481\":1}}],[\"deffinishlistener\",{\"1\":{\"10\":2,\"396\":2,\"581\":2,\"767\":2,\"960\":2,\"1176\":2,\"1277\":2}}],[\"c任务设置办理人变量为\",{\"1\":{\"470\":1,\"656\":1,\"841\":1,\"1035\":1}}],[\"c任务设置办理人变量为$\",{\"1\":{\"42\":1,\"1261\":1,\"1309\":1}}],[\"curuser\",{\"1\":{\"334\":2,\"335\":2,\"336\":2,\"337\":2,\"338\":1,\"688\":2,\"689\":2,\"690\":2,\"691\":2,\"692\":1}}],[\"custom和form\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"customshirofilterfactorybean\",{\"1\":{\"259\":2,\"554\":2,\"739\":2,\"925\":2,\"1126\":2,\"1478\":2}}],[\"customdatafillhandler\",{\"1\":{\"242\":1,\"243\":1,\"245\":1,\"246\":1,\"248\":1,\"251\":1,\"252\":1,\"366\":1,\"367\":1,\"369\":1,\"370\":1,\"376\":1,\"379\":1,\"380\":1,\"535\":1,\"536\":1,\"538\":1,\"539\":1,\"545\":1,\"548\":1,\"549\":1,\"720\":1,\"721\":1,\"723\":1,\"724\":1,\"730\":1,\"733\":1,\"734\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"916\":1,\"919\":1,\"920\":1,\"1105\":1,\"1106\":1,\"1108\":1,\"1109\":1,\"1115\":1,\"1118\":1,\"1119\":1,\"1461\":1,\"1462\":1,\"1464\":1,\"1465\":1,\"1467\":1,\"1470\":1,\"1471\":1,\"1673\":2,\"1719\":2}}],[\"custom\",{\"1\":{\"155\":1,\"303\":1,\"304\":1,\"306\":1,\"308\":1,\"452\":1,\"453\":1,\"455\":1,\"457\":1,\"638\":1,\"639\":1,\"641\":1,\"643\":1,\"823\":1,\"824\":1,\"826\":1,\"828\":1,\"1017\":1,\"1018\":1,\"1020\":1,\"1022\":1,\"1241\":1,\"1242\":1,\"1244\":1,\"1246\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1527\":1,\"1561\":1,\"1660\":1,\"1732\":1}}],[\"custom改为form\",{\"1\":{\"155\":1,\"1561\":1,\"1660\":1,\"1732\":1}}],[\"customizer\",{\"1\":{\"131\":1,\"1537\":1}}],[\"customtenanthandler\",{\"1\":{\"35\":1,\"36\":1,\"37\":1,\"242\":1,\"243\":2,\"245\":1,\"246\":1,\"366\":1,\"367\":2,\"369\":1,\"370\":1,\"464\":1,\"465\":1,\"466\":1,\"535\":1,\"536\":2,\"538\":1,\"539\":1,\"650\":1,\"651\":1,\"652\":1,\"720\":1,\"721\":2,\"723\":1,\"724\":1,\"835\":1,\"836\":1,\"837\":1,\"906\":1,\"907\":2,\"909\":1,\"910\":1,\"1029\":1,\"1030\":1,\"1031\":1,\"1105\":1,\"1106\":2,\"1108\":1,\"1109\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1461\":1,\"1462\":2,\"1464\":1,\"1465\":1,\"1673\":2,\"1719\":2}}],[\"custompermissionhandler\",{\"1\":{\"29\":1,\"1195\":1,\"1296\":1}}],[\"customgloballistener\",{\"1\":{\"16\":2,\"1182\":2,\"1283\":2}}],[\"calc\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"case\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"catch\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1286\":1,\"1337\":2}}],[\"changeorigin\",{\"1\":{\"743\":1,\"744\":1}}],[\"charset><\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"char\",{\"1\":{\"303\":2,\"304\":2,\"305\":1,\"306\":2,\"307\":1,\"308\":2,\"309\":2,\"452\":2,\"453\":2,\"454\":1,\"455\":2,\"456\":1,\"457\":2,\"458\":2,\"638\":2,\"639\":2,\"640\":1,\"641\":2,\"642\":1,\"643\":2,\"644\":2,\"823\":2,\"824\":2,\"825\":1,\"826\":2,\"827\":1,\"828\":2,\"829\":2,\"1017\":2,\"1018\":2,\"1019\":1,\"1020\":2,\"1021\":1,\"1022\":2,\"1023\":2,\"1241\":2,\"1242\":2,\"1243\":1,\"1244\":2,\"1245\":1,\"1246\":2,\"1247\":2,\"1522\":2,\"1523\":2,\"1524\":1,\"1525\":2,\"1526\":1,\"1527\":2,\"1528\":2}}],[\"checkauth\",{\"1\":{\"1194\":1}}],[\"checkandsave\",{\"1\":{\"174\":1,\"480\":1,\"851\":1,\"1045\":1,\"1393\":1}}],[\"checklogin\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"chore\",{\"1\":{\"155\":1,\"1561\":1}}],[\"clean\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"clazz\",{\"1\":{\"1286\":2}}],[\"class=\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"class<\",{\"1\":{\"131\":1,\"1286\":1,\"1537\":1}}],[\"class>\",{\"1\":{\"25\":7,\"410\":7,\"595\":7,\"781\":7,\"974\":7,\"1191\":7,\"1292\":7}}],[\"class\",{\"1\":{\"9\":2,\"10\":2,\"11\":2,\"16\":2,\"17\":1,\"24\":1,\"25\":1,\"26\":1,\"29\":1,\"32\":3,\"33\":3,\"36\":1,\"37\":1,\"39\":1,\"48\":1,\"55\":1,\"56\":1,\"70\":5,\"76\":1,\"82\":1,\"131\":7,\"136\":1,\"239\":1,\"243\":2,\"246\":1,\"248\":1,\"252\":1,\"259\":1,\"260\":1,\"265\":1,\"270\":1,\"310\":2,\"367\":2,\"370\":1,\"376\":1,\"380\":1,\"383\":1,\"388\":5,\"395\":2,\"396\":2,\"397\":2,\"402\":1,\"409\":1,\"410\":1,\"411\":1,\"461\":3,\"462\":3,\"465\":1,\"466\":1,\"467\":2,\"476\":1,\"477\":1,\"536\":2,\"539\":1,\"545\":1,\"549\":1,\"554\":1,\"555\":1,\"560\":1,\"565\":1,\"568\":1,\"573\":5,\"580\":2,\"581\":2,\"582\":2,\"587\":1,\"594\":1,\"595\":1,\"596\":1,\"647\":3,\"648\":3,\"651\":1,\"652\":1,\"653\":2,\"662\":1,\"663\":1,\"721\":2,\"724\":1,\"730\":1,\"734\":1,\"739\":1,\"740\":1,\"746\":1,\"751\":1,\"754\":1,\"759\":5,\"766\":2,\"767\":2,\"768\":2,\"773\":1,\"780\":1,\"781\":1,\"782\":1,\"832\":3,\"833\":3,\"836\":1,\"837\":1,\"838\":2,\"847\":1,\"848\":1,\"907\":2,\"910\":1,\"916\":1,\"920\":1,\"925\":1,\"926\":1,\"931\":1,\"936\":1,\"947\":1,\"952\":5,\"959\":2,\"960\":2,\"961\":2,\"966\":1,\"973\":1,\"974\":1,\"975\":1,\"1026\":3,\"1027\":3,\"1030\":1,\"1031\":1,\"1032\":2,\"1041\":1,\"1042\":1,\"1102\":1,\"1106\":2,\"1109\":1,\"1115\":1,\"1119\":1,\"1126\":1,\"1127\":1,\"1132\":1,\"1137\":1,\"1148\":1,\"1155\":1,\"1158\":1,\"1161\":1,\"1162\":1,\"1166\":5,\"1175\":2,\"1176\":2,\"1177\":2,\"1182\":2,\"1183\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1195\":1,\"1250\":3,\"1251\":3,\"1254\":1,\"1255\":1,\"1256\":2,\"1258\":1,\"1267\":1,\"1276\":2,\"1277\":2,\"1278\":2,\"1283\":2,\"1284\":1,\"1286\":1,\"1291\":1,\"1292\":1,\"1293\":1,\"1296\":1,\"1299\":3,\"1300\":3,\"1303\":1,\"1304\":1,\"1306\":1,\"1315\":1,\"1322\":1,\"1323\":1,\"1337\":5,\"1343\":1,\"1349\":1,\"1458\":1,\"1462\":2,\"1465\":1,\"1467\":1,\"1471\":1,\"1478\":1,\"1479\":1,\"1484\":1,\"1489\":1,\"1529\":2,\"1537\":7,\"1542\":1,\"1673\":1,\"1719\":1}}],[\"closeopenpage\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"close\",{\"1\":{\"262\":3,\"263\":3,\"557\":3,\"558\":3,\"743\":3,\"744\":3,\"928\":3,\"929\":3,\"1129\":3,\"1130\":3,\"1481\":3,\"1482\":3}}],[\"cloud集成的跑批系统\",{\"1\":{\"121\":1,\"1388\":1}}],[\"cloud\",{\"1\":{\"121\":3,\"1388\":3}}],[\"clientheight\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"cn\",{\"1\":{\"104\":1,\"1371\":1,\"1588\":1,\"1599\":1,\"1610\":1,\"1616\":1,\"1650\":1,\"1710\":1}}],[\"c\",{\"1\":{\"97\":1,\"1364\":1}}],[\"cfg\",{\"1\":{\"33\":3,\"462\":3,\"648\":3,\"833\":3,\"1027\":3,\"1251\":3,\"1300\":3}}],[\"criteriaupdate\",{\"1\":{\"25\":3,\"410\":3,\"595\":3,\"781\":3,\"974\":3,\"1191\":3,\"1292\":3}}],[\"criteriaupdate<t>\",{\"1\":{\"25\":2,\"410\":2,\"595\":2,\"781\":2,\"974\":2,\"1191\":2,\"1292\":2}}],[\"criteriaquery\",{\"1\":{\"25\":3,\"410\":3,\"595\":3,\"781\":3,\"974\":3,\"1191\":3,\"1292\":3}}],[\"criteriaquery<t>\",{\"1\":{\"25\":2,\"410\":2,\"595\":2,\"781\":2,\"974\":2,\"1191\":2,\"1292\":2}}],[\"createquery\",{\"1\":{\"25\":2,\"410\":2,\"595\":2,\"781\":2,\"974\":2,\"1191\":2,\"1292\":2}}],[\"create等\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"create\",{\"1\":{\"3\":1,\"8\":2,\"16\":1,\"303\":1,\"304\":1,\"305\":2,\"306\":1,\"307\":1,\"308\":1,\"309\":2,\"390\":1,\"394\":2,\"452\":1,\"453\":1,\"454\":2,\"455\":1,\"456\":1,\"457\":1,\"458\":2,\"575\":1,\"579\":2,\"638\":1,\"639\":1,\"640\":2,\"641\":1,\"642\":1,\"643\":1,\"644\":2,\"761\":1,\"765\":2,\"823\":1,\"824\":1,\"825\":2,\"826\":1,\"827\":1,\"828\":1,\"829\":2,\"954\":1,\"958\":2,\"1017\":1,\"1018\":1,\"1019\":2,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":2,\"1169\":1,\"1174\":2,\"1182\":1,\"1241\":1,\"1242\":1,\"1243\":2,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":2,\"1270\":1,\"1275\":2,\"1283\":1,\"1522\":1,\"1523\":1,\"1524\":2,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":2,\"1672\":1,\"1718\":1}}],[\"coordinate\",{\"1\":{\"306\":1,\"307\":1,\"455\":1,\"456\":1,\"641\":1,\"642\":1,\"826\":1,\"827\":1,\"1020\":1,\"1021\":1,\"1244\":1,\"1245\":1,\"1525\":1,\"1526\":1}}],[\"cooperate\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"cooperatetype\",{\"1\":{\"205\":1,\"338\":1,\"507\":1,\"692\":1,\"878\":1,\"1074\":1,\"1424\":1}}],[\"countersign\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"copydef\",{\"1\":{\"184\":1,\"320\":1,\"489\":1,\"674\":1,\"860\":1,\"1055\":1,\"1403\":1}}],[\"collaborator\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"collectors\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"collect\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"colin\",{\"1\":{\"131\":1,\"1537\":1}}],[\"cola\",{\"1\":{\"123\":1,\"1390\":1}}],[\"core\",{\"1\":{\"35\":1,\"70\":1,\"245\":2,\"369\":2,\"388\":1,\"464\":1,\"538\":2,\"573\":1,\"650\":1,\"723\":2,\"759\":1,\"835\":1,\"909\":2,\"952\":1,\"1029\":1,\"1108\":2,\"1166\":1,\"1253\":1,\"1302\":1,\"1337\":1,\"1464\":2,\"1652\":2,\"1724\":2}}],[\"code\",{\"1\":{\"32\":1,\"33\":1,\"303\":1,\"304\":2,\"305\":1,\"306\":1,\"307\":2,\"308\":1,\"452\":1,\"453\":2,\"454\":1,\"455\":1,\"456\":2,\"457\":1,\"461\":1,\"462\":1,\"638\":1,\"639\":2,\"640\":1,\"641\":1,\"642\":2,\"643\":1,\"647\":1,\"648\":1,\"823\":1,\"824\":2,\"825\":1,\"826\":1,\"827\":2,\"828\":1,\"832\":1,\"833\":1,\"1017\":1,\"1018\":2,\"1019\":1,\"1020\":1,\"1021\":2,\"1022\":1,\"1026\":1,\"1027\":1,\"1241\":1,\"1242\":2,\"1243\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1,\"1522\":1,\"1523\":2,\"1524\":1,\"1525\":1,\"1526\":2,\"1527\":1}}],[\"const\",{\"1\":{\"262\":1,\"263\":4,\"557\":1,\"558\":4,\"743\":1,\"744\":4,\"928\":1,\"929\":4,\"1129\":1,\"1130\":4,\"1481\":1,\"1482\":4}}],[\"constructmaptype\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"console\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"connection\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"controller\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"contributions\",{\"1\":{\"129\":2,\"1535\":2}}],[\"container\",{\"1\":{\"263\":3,\"558\":3,\"744\":3,\"929\":3,\"1130\":3,\"1482\":3}}],[\"contains\",{\"1\":{\"11\":1,\"32\":1,\"397\":1,\"461\":1,\"582\":1,\"647\":1,\"768\":1,\"832\":1,\"961\":1,\"1026\":1,\"1177\":1,\"1250\":1,\"1278\":1,\"1286\":1,\"1299\":1}}],[\"context\",{\"1\":{\"136\":2,\"1542\":2}}],[\"condition\",{\"1\":{\"307\":1,\"456\":1,\"642\":1,\"827\":1,\"1021\":1,\"1245\":1,\"1526\":1}}],[\"conditionvalue\",{\"1\":{\"55\":2,\"1161\":2,\"1322\":2}}],[\"conditionstrategyeq\",{\"1\":{\"56\":1,\"1162\":1,\"1323\":1}}],[\"conditionstrategyabstract\",{\"1\":{\"55\":1,\"56\":1,\"1161\":1,\"1162\":1,\"1322\":1,\"1323\":1}}],[\"conditionstrategy\",{\"1\":{\"54\":1,\"55\":1,\"1160\":1,\"1161\":1,\"1321\":1,\"1322\":1,\"1652\":1,\"1724\":1}}],[\"config调整\",{\"1\":{\"154\":1,\"1560\":1}}],[\"configuration>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"configuration+\",{\"0\":{\"252\":1,\"380\":1,\"549\":1,\"734\":1,\"920\":1,\"1119\":1,\"1471\":1}}],[\"configuration\",{\"1\":{\"32\":1,\"33\":1,\"36\":1,\"131\":1,\"136\":2,\"243\":1,\"246\":1,\"252\":1,\"259\":1,\"260\":1,\"367\":1,\"370\":1,\"380\":1,\"461\":1,\"462\":1,\"465\":1,\"536\":1,\"539\":1,\"549\":1,\"554\":1,\"555\":1,\"647\":1,\"648\":1,\"651\":1,\"721\":1,\"724\":1,\"734\":1,\"739\":1,\"740\":1,\"832\":1,\"833\":1,\"836\":1,\"907\":1,\"910\":1,\"920\":1,\"925\":1,\"926\":1,\"1026\":1,\"1027\":1,\"1030\":1,\"1106\":1,\"1109\":1,\"1119\":1,\"1126\":1,\"1127\":1,\"1250\":1,\"1251\":1,\"1254\":1,\"1286\":2,\"1299\":1,\"1300\":1,\"1303\":1,\"1462\":1,\"1465\":1,\"1471\":1,\"1478\":1,\"1479\":1,\"1537\":1,\"1542\":2,\"1673\":1,\"1719\":1}}],[\"config\",{\"1\":{\"20\":2,\"136\":1,\"405\":2,\"590\":2,\"743\":1,\"776\":2,\"969\":2,\"1186\":2,\"1287\":2,\"1542\":1,\"1654\":1,\"1726\":1}}],[\"compareto\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"component配置方式\",{\"0\":{\"37\":1,\"466\":1,\"652\":1,\"837\":1,\"1031\":1,\"1255\":1,\"1304\":1}}],[\"component方式注入\",{\"0\":{\"250\":1,\"378\":1,\"547\":1,\"732\":1,\"918\":1,\"1117\":1,\"1469\":1}}],[\"component方式\",{\"1\":{\"29\":1,\"35\":1,\"36\":1,\"37\":1,\"243\":3,\"245\":1,\"246\":2,\"367\":3,\"369\":1,\"370\":2,\"464\":1,\"465\":1,\"466\":1,\"536\":3,\"538\":1,\"539\":2,\"650\":1,\"651\":1,\"652\":1,\"721\":3,\"723\":1,\"724\":2,\"835\":1,\"836\":1,\"837\":1,\"907\":3,\"909\":1,\"910\":2,\"1029\":1,\"1030\":1,\"1031\":1,\"1106\":3,\"1108\":1,\"1109\":2,\"1195\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1296\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1462\":3,\"1464\":1,\"1465\":2,\"1673\":4,\"1719\":4}}],[\"component\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"16\":1,\"29\":1,\"32\":1,\"48\":1,\"239\":1,\"270\":1,\"310\":1,\"383\":1,\"395\":1,\"396\":1,\"397\":1,\"461\":1,\"466\":1,\"467\":1,\"476\":1,\"565\":1,\"568\":1,\"580\":1,\"581\":1,\"582\":1,\"647\":1,\"653\":1,\"662\":1,\"751\":1,\"754\":1,\"766\":1,\"767\":1,\"768\":1,\"832\":1,\"838\":1,\"847\":1,\"936\":1,\"947\":1,\"959\":1,\"960\":1,\"961\":1,\"1026\":1,\"1032\":1,\"1041\":1,\"1102\":1,\"1137\":1,\"1148\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":1,\"1195\":1,\"1250\":1,\"1256\":1,\"1267\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":1,\"1286\":1,\"1296\":1,\"1299\":1,\"1315\":1,\"1458\":1,\"1489\":1,\"1529\":1}}],[\"component或者\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"common增加依赖\",{\"1\":{\"136\":1,\"1542\":1}}],[\"com商议合作\",{\"1\":{\"104\":1,\"1371\":1}}],[\"com\",{\"1\":{\"10\":1,\"104\":1,\"136\":9,\"242\":2,\"251\":1,\"366\":2,\"369\":2,\"379\":1,\"464\":1,\"535\":2,\"548\":1,\"720\":2,\"723\":2,\"733\":1,\"835\":1,\"906\":2,\"919\":1,\"1105\":2,\"1118\":1,\"1176\":1,\"1277\":1,\"1371\":1,\"1461\":2,\"1470\":1,\"1542\":9,\"1625\":1,\"1630\":1,\"1641\":1,\"1654\":1,\"1673\":2,\"1685\":1,\"1690\":1,\"1701\":1,\"1719\":2,\"1726\":1}}],[\"vote\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"void\",{\"1\":{\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"16\":4,\"17\":1,\"33\":1,\"39\":1,\"51\":1,\"54\":1,\"55\":1,\"58\":1,\"72\":1,\"75\":1,\"78\":1,\"81\":1,\"131\":1,\"248\":3,\"260\":1,\"275\":4,\"292\":1,\"293\":1,\"294\":1,\"295\":2,\"310\":2,\"372\":1,\"376\":3,\"394\":1,\"395\":1,\"396\":1,\"397\":1,\"402\":1,\"442\":1,\"443\":1,\"444\":1,\"445\":2,\"462\":1,\"467\":2,\"541\":1,\"545\":3,\"555\":1,\"579\":1,\"580\":1,\"581\":1,\"582\":1,\"587\":1,\"628\":1,\"629\":1,\"630\":1,\"631\":2,\"648\":1,\"653\":2,\"726\":1,\"730\":3,\"740\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"773\":1,\"813\":1,\"814\":1,\"815\":1,\"816\":2,\"833\":1,\"838\":2,\"912\":1,\"916\":3,\"926\":1,\"958\":1,\"959\":1,\"960\":1,\"961\":1,\"966\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1010\":2,\"1027\":1,\"1032\":2,\"1111\":1,\"1115\":3,\"1127\":1,\"1151\":1,\"1154\":1,\"1157\":1,\"1160\":1,\"1161\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":4,\"1183\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":2,\"1251\":1,\"1256\":2,\"1258\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":4,\"1284\":1,\"1286\":1,\"1300\":1,\"1306\":1,\"1318\":1,\"1321\":1,\"1322\":1,\"1325\":1,\"1339\":1,\"1342\":1,\"1345\":1,\"1348\":1,\"1467\":3,\"1479\":1,\"1494\":4,\"1511\":1,\"1512\":1,\"1513\":1,\"1514\":2,\"1529\":2,\"1537\":1,\"1643\":1,\"1644\":1,\"1645\":1,\"1646\":2,\"1670\":6,\"1703\":1,\"1704\":1,\"1705\":1,\"1706\":2,\"1716\":6}}],[\"vite\",{\"1\":{\"263\":2,\"558\":2,\"929\":2,\"1130\":2,\"1482\":2}}],[\"vip群由四名后端与一名前端工程师组成\",{\"1\":{\"126\":1,\"1532\":1}}],[\"vip群\",{\"0\":{\"126\":1,\"1532\":1}}],[\"version\",{\"1\":{\"303\":1,\"306\":1,\"452\":1,\"455\":1,\"638\":1,\"641\":1,\"823\":1,\"826\":1,\"1017\":1,\"1020\":1,\"1241\":1,\"1244\":1,\"1522\":1,\"1525\":1}}],[\"version>\",{\"1\":{\"136\":1,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":2,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"922\":1,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2,\"1122\":1,\"1123\":1,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":2,\"1542\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1629\":2,\"1632\":1,\"1640\":1,\"1647\":1,\"1657\":1,\"1689\":2,\"1692\":1,\"1700\":1,\"1707\":1,\"1729\":1}}],[\"vendor\",{\"1\":{\"242\":1,\"288\":1,\"366\":1,\"436\":1,\"535\":1,\"621\":1,\"720\":1,\"807\":1,\"906\":1,\"1000\":1,\"1105\":1,\"1226\":1,\"1461\":1,\"1507\":1,\"1673\":1,\"1719\":1}}],[\"v1\",{\"0\":{\"144\":1,\"145\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"1550\":1,\"1551\":1,\"1553\":1,\"1554\":1,\"1555\":1,\"1556\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1560\":1,\"1561\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1565\":1,\"1566\":1,\"1567\":1,\"1568\":1,\"1569\":1,\"1570\":1,\"1571\":1,\"1572\":1,\"1573\":1,\"1574\":1,\"1575\":1,\"1576\":1,\"1577\":1,\"1652\":1,\"1653\":1,\"1654\":1,\"1655\":1,\"1656\":1,\"1657\":1,\"1658\":1,\"1659\":1,\"1660\":1,\"1661\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1724\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1735\":1,\"1736\":1,\"1745\":1,\"1747\":1,\"1749\":1,\"1751\":1,\"1753\":1,\"1755\":1}}],[\"vx\",{\"0\":{\"142\":1,\"1548\":1}}],[\"vue2\",{\"0\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"vue切换mybaits\",{\"0\":{\"136\":1,\"1542\":1}}],[\"vue集成\",{\"1\":{\"121\":1,\"1388\":1}}],[\"vue项目已经准备了七套流程\",{\"1\":{\"117\":1,\"418\":1,\"603\":1,\"789\":1,\"982\":1,\"1202\":1,\"1384\":1}}],[\"vue\",{\"0\":{\"298\":1,\"447\":1,\"633\":1,\"818\":1,\"1012\":1,\"1236\":1,\"1517\":1},\"1\":{\"110\":2,\"121\":1,\"132\":1,\"262\":2,\"263\":1,\"292\":1,\"412\":2,\"442\":1,\"557\":2,\"558\":1,\"597\":2,\"628\":1,\"744\":1,\"783\":2,\"813\":1,\"928\":2,\"929\":1,\"976\":2,\"1007\":1,\"1129\":2,\"1130\":1,\"1196\":2,\"1230\":1,\"1377\":2,\"1388\":1,\"1481\":2,\"1482\":1,\"1511\":1,\"1538\":1,\"1643\":1,\"1654\":2,\"1703\":1,\"1726\":2}}],[\"vue封装实战项目\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"vue3项目引入过程同上vue2\",{\"1\":{\"744\":1}}],[\"vue3集成前端\",{\"1\":{\"121\":1,\"1388\":1}}],[\"vue3+element\",{\"1\":{\"121\":1,\"1388\":1}}],[\"vue3\",{\"0\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1},\"1\":{\"65\":1,\"121\":2,\"942\":1,\"1143\":1,\"1332\":1,\"1388\":2}}],[\"varchar\",{\"1\":{\"303\":8,\"304\":12,\"305\":7,\"306\":12,\"307\":7,\"308\":4,\"309\":3,\"452\":8,\"453\":12,\"454\":7,\"455\":12,\"456\":7,\"457\":4,\"458\":3,\"638\":8,\"639\":12,\"640\":7,\"641\":12,\"642\":7,\"643\":4,\"644\":3,\"823\":8,\"824\":12,\"825\":7,\"826\":12,\"827\":7,\"828\":4,\"829\":3,\"1017\":8,\"1018\":12,\"1019\":7,\"1020\":12,\"1021\":7,\"1022\":4,\"1023\":3,\"1241\":8,\"1242\":12,\"1243\":7,\"1244\":12,\"1245\":7,\"1246\":4,\"1247\":3,\"1522\":8,\"1523\":12,\"1524\":7,\"1525\":12,\"1526\":7,\"1527\":4,\"1528\":3}}],[\"var\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"variablestr\",{\"1\":{\"82\":3,\"477\":3,\"663\":3,\"848\":3,\"1042\":3,\"1155\":3,\"1349\":3}}],[\"variablestrategy\",{\"1\":{\"81\":1,\"82\":1,\"477\":2,\"663\":2,\"848\":2,\"1042\":2,\"1154\":1,\"1155\":1,\"1348\":1,\"1349\":1}}],[\"variablevalue\",{\"1\":{\"55\":2,\"1161\":2,\"1322\":2}}],[\"variabletest\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"variablemap\",{\"1\":{\"17\":4,\"402\":4,\"587\":4,\"773\":4,\"966\":4,\"1183\":4,\"1284\":4}}],[\"variable\",{\"1\":{\"8\":1,\"10\":4,\"11\":3,\"17\":4,\"39\":7,\"45\":4,\"48\":4,\"51\":2,\"55\":8,\"70\":4,\"72\":2,\"76\":2,\"78\":2,\"82\":3,\"191\":1,\"192\":1,\"199\":1,\"207\":2,\"239\":4,\"305\":1,\"310\":9,\"325\":1,\"326\":1,\"332\":1,\"340\":2,\"383\":4,\"388\":4,\"394\":1,\"396\":2,\"397\":3,\"402\":4,\"454\":1,\"467\":9,\"473\":4,\"476\":4,\"477\":5,\"494\":1,\"495\":1,\"501\":1,\"509\":2,\"568\":4,\"573\":4,\"579\":1,\"581\":2,\"582\":3,\"587\":4,\"640\":1,\"653\":9,\"659\":4,\"662\":4,\"663\":5,\"679\":1,\"680\":1,\"686\":1,\"694\":2,\"754\":4,\"759\":4,\"765\":1,\"767\":2,\"768\":3,\"773\":4,\"825\":1,\"838\":9,\"844\":4,\"847\":4,\"848\":5,\"865\":1,\"866\":1,\"872\":1,\"880\":2,\"947\":4,\"952\":4,\"958\":1,\"960\":2,\"961\":3,\"966\":4,\"1019\":1,\"1032\":9,\"1038\":4,\"1041\":4,\"1042\":5,\"1060\":1,\"1061\":1,\"1068\":1,\"1076\":2,\"1102\":4,\"1148\":4,\"1151\":2,\"1155\":3,\"1158\":2,\"1161\":8,\"1166\":4,\"1174\":1,\"1176\":4,\"1177\":3,\"1183\":4,\"1243\":1,\"1256\":9,\"1258\":7,\"1264\":4,\"1267\":4,\"1275\":1,\"1277\":4,\"1278\":3,\"1284\":4,\"1306\":7,\"1312\":4,\"1315\":4,\"1318\":2,\"1322\":8,\"1337\":4,\"1339\":2,\"1343\":2,\"1345\":2,\"1349\":3,\"1410\":1,\"1411\":1,\"1418\":1,\"1426\":2,\"1458\":4,\"1524\":1,\"1529\":9,\"1620\":4,\"1621\":4,\"1680\":4,\"1681\":4}}],[\"vanlin\",{\"1\":{\"145\":1,\"148\":1,\"154\":1,\"155\":7,\"1550\":1,\"1554\":1,\"1560\":1,\"1561\":7}}],[\"valueof\",{\"1\":{\"29\":2,\"55\":1,\"239\":1,\"310\":1,\"383\":1,\"467\":1,\"568\":1,\"653\":1,\"754\":1,\"838\":1,\"947\":1,\"1032\":1,\"1102\":1,\"1148\":1,\"1161\":1,\"1195\":2,\"1256\":1,\"1296\":2,\"1322\":1,\"1458\":1,\"1529\":1}}],[\"value\",{\"1\":{\"20\":2,\"22\":2,\"33\":1,\"55\":2,\"56\":3,\"131\":5,\"242\":2,\"245\":2,\"366\":2,\"369\":2,\"405\":2,\"407\":2,\"462\":1,\"535\":2,\"538\":2,\"590\":2,\"592\":2,\"648\":1,\"720\":2,\"723\":2,\"776\":2,\"778\":2,\"833\":1,\"906\":2,\"909\":2,\"969\":2,\"971\":2,\"1027\":1,\"1105\":2,\"1108\":2,\"1161\":2,\"1162\":3,\"1186\":2,\"1188\":2,\"1251\":1,\"1287\":2,\"1289\":2,\"1300\":1,\"1322\":2,\"1323\":3,\"1461\":2,\"1464\":2,\"1537\":5,\"1673\":2,\"1719\":2}}],[\"=>\",{\"1\":{\"262\":1,\"263\":3,\"557\":1,\"558\":3,\"743\":1,\"744\":3,\"928\":1,\"929\":3,\"1129\":1,\"1130\":3,\"1481\":1,\"1482\":3}}],[\"==\",{\"1\":{\"56\":1,\"1162\":1,\"1323\":1,\"1457\":1,\"1551\":1}}],[\"=\",{\"1\":{\"8\":4,\"9\":6,\"10\":8,\"11\":6,\"16\":1,\"17\":5,\"24\":1,\"25\":6,\"26\":1,\"29\":7,\"32\":9,\"33\":6,\"39\":4,\"45\":2,\"48\":2,\"54\":1,\"55\":3,\"58\":4,\"59\":2,\"67\":1,\"70\":3,\"75\":1,\"81\":1,\"82\":3,\"131\":7,\"136\":3,\"155\":1,\"239\":6,\"248\":4,\"259\":2,\"262\":3,\"263\":5,\"265\":1,\"270\":12,\"292\":1,\"295\":3,\"310\":8,\"372\":4,\"373\":2,\"376\":4,\"383\":6,\"388\":3,\"394\":5,\"395\":6,\"396\":6,\"397\":6,\"402\":5,\"409\":1,\"410\":6,\"411\":1,\"442\":1,\"445\":3,\"461\":9,\"462\":6,\"467\":8,\"473\":2,\"476\":2,\"477\":3,\"541\":4,\"542\":2,\"545\":4,\"554\":2,\"557\":3,\"558\":5,\"560\":1,\"565\":12,\"568\":6,\"573\":3,\"579\":5,\"580\":6,\"581\":6,\"582\":6,\"587\":5,\"594\":1,\"595\":6,\"596\":1,\"628\":1,\"631\":3,\"647\":9,\"648\":6,\"653\":8,\"659\":2,\"662\":2,\"663\":3,\"726\":4,\"727\":2,\"730\":4,\"739\":2,\"743\":3,\"744\":5,\"746\":1,\"751\":12,\"754\":6,\"759\":3,\"765\":5,\"766\":6,\"767\":6,\"768\":6,\"773\":5,\"780\":1,\"781\":6,\"782\":1,\"813\":1,\"816\":3,\"832\":9,\"833\":6,\"838\":8,\"844\":2,\"847\":2,\"848\":3,\"912\":4,\"913\":2,\"916\":4,\"925\":2,\"928\":3,\"929\":5,\"931\":1,\"936\":12,\"944\":1,\"947\":6,\"952\":3,\"958\":5,\"959\":6,\"960\":6,\"961\":6,\"966\":5,\"973\":1,\"974\":6,\"975\":1,\"1007\":1,\"1010\":3,\"1026\":9,\"1027\":6,\"1032\":8,\"1038\":2,\"1041\":2,\"1042\":3,\"1102\":6,\"1111\":4,\"1112\":2,\"1115\":4,\"1126\":2,\"1129\":3,\"1130\":5,\"1132\":1,\"1137\":12,\"1145\":1,\"1148\":6,\"1154\":1,\"1155\":3,\"1157\":1,\"1160\":1,\"1161\":3,\"1166\":3,\"1174\":4,\"1175\":6,\"1176\":8,\"1177\":6,\"1182\":1,\"1183\":5,\"1190\":1,\"1191\":6,\"1192\":1,\"1195\":7,\"1230\":1,\"1233\":3,\"1250\":9,\"1251\":6,\"1256\":8,\"1258\":4,\"1264\":2,\"1267\":2,\"1275\":4,\"1276\":6,\"1277\":8,\"1278\":6,\"1283\":1,\"1284\":5,\"1286\":4,\"1291\":1,\"1292\":6,\"1293\":1,\"1296\":7,\"1299\":9,\"1300\":6,\"1306\":4,\"1312\":2,\"1315\":2,\"1321\":1,\"1322\":3,\"1325\":4,\"1326\":2,\"1334\":1,\"1337\":3,\"1342\":1,\"1348\":1,\"1349\":3,\"1458\":6,\"1467\":4,\"1478\":2,\"1481\":3,\"1482\":5,\"1484\":1,\"1489\":12,\"1511\":1,\"1514\":3,\"1529\":8,\"1537\":7,\"1542\":3,\"1561\":1,\"1620\":2,\"1621\":2,\"1643\":1,\"1646\":2,\"1670\":2,\"1676\":2,\"1680\":2,\"1681\":2,\"1703\":1,\"1706\":2,\"1716\":2,\"1722\":2}}],[\"snack3\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"snapshotrepository>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"snapshots<\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"snowflake19\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"snowid19\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"snowid15\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"snowid14\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"src\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1703\":1}}],[\"src=\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"ss\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"scoped>\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"script>\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"switch\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"sql\",{\"1\":{\"245\":2,\"283\":2,\"369\":2,\"431\":2,\"538\":2,\"616\":2,\"723\":2,\"802\":2,\"909\":2,\"995\":2,\"1108\":2,\"1221\":2,\"1464\":2,\"1502\":2,\"1655\":1,\"1659\":1,\"1660\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1727\":1,\"1731\":1,\"1732\":1,\"1734\":1,\"1735\":1,\"1736\":1}}],[\"sqlsessionfactory改为构造函数引入\",{\"1\":{\"155\":1,\"1561\":1}}],[\"sqlserver\",{\"1\":{\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1373\":1}}],[\"shirofilterfactorybean\",{\"1\":{\"259\":5,\"554\":5,\"739\":5,\"925\":5,\"1126\":5,\"1478\":5}}],[\"shiro过滤器配置\",{\"1\":{\"259\":1,\"554\":1,\"739\":1,\"925\":1,\"1126\":1,\"1478\":1}}],[\"shiroconfig\",{\"1\":{\"259\":1,\"554\":1,\"739\":1,\"925\":1,\"1126\":1,\"1478\":1}}],[\"shiro\",{\"0\":{\"259\":1,\"554\":1,\"739\":1,\"925\":1,\"1126\":1,\"1478\":1}}],[\"show\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"share\",{\"1\":{\"132\":3,\"1538\":3}}],[\"shadow\",{\"1\":{\"28\":1,\"29\":1,\"1194\":1,\"1195\":1,\"1295\":1,\"1296\":1}}],[\"super\",{\"1\":{\"131\":2,\"1537\":2}}],[\"sainterceptor\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"satokenconfigure\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"sa\",{\"0\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"save\",{\"1\":{\"217\":1,\"350\":1,\"519\":1,\"704\":1,\"890\":1,\"1086\":1,\"1436\":1}}],[\"savexml\",{\"1\":{\"177\":1,\"178\":1,\"314\":1,\"482\":1,\"483\":1,\"667\":1,\"668\":1,\"853\":1,\"854\":1,\"1048\":1,\"1049\":1,\"1396\":1,\"1397\":1}}],[\"saveandinitnode\",{\"1\":{\"175\":1,\"1046\":1,\"1394\":1}}],[\"savebatch\",{\"1\":{\"10\":1,\"222\":1,\"223\":1,\"355\":1,\"356\":1,\"396\":1,\"524\":1,\"525\":1,\"581\":1,\"709\":1,\"710\":1,\"767\":1,\"895\":1,\"896\":1,\"960\":1,\"1091\":1,\"1092\":1,\"1176\":1,\"1277\":1,\"1441\":1,\"1442\":1}}],[\"safe\",{\"1\":{\"131\":6,\"1537\":6}}],[\"sources<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"source\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1629\":3,\"1673\":1,\"1689\":3,\"1719\":1}}],[\"software\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"solon项目\",{\"1\":{\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"619\":1,\"620\":1,\"621\":1,\"622\":1,\"623\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1505\":1,\"1506\":1,\"1507\":1,\"1508\":1,\"1509\":1}}],[\"solon插件包增加usermapper\",{\"1\":{\"157\":1,\"1563\":1}}],[\"solon注解问题\",{\"1\":{\"154\":1,\"1560\":1}}],[\"solon版本yml弄错了\",{\"1\":{\"154\":1,\"1560\":1}}],[\"solon\",{\"0\":{\"21\":1,\"33\":1,\"244\":1,\"256\":1,\"368\":1,\"406\":1,\"462\":1,\"537\":1,\"591\":1,\"648\":1,\"722\":1,\"777\":1,\"833\":1,\"908\":1,\"970\":1,\"1027\":1,\"1107\":1,\"1123\":1,\"1187\":1,\"1251\":1,\"1288\":1,\"1300\":1,\"1463\":1,\"1475\":1},\"1\":{\"25\":1,\"256\":1,\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"410\":1,\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"595\":1,\"619\":1,\"620\":1,\"621\":1,\"622\":1,\"623\":1,\"781\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"974\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1123\":1,\"1191\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1292\":1,\"1475\":1,\"1505\":1,\"1506\":1,\"1507\":1,\"1508\":1,\"1509\":1,\"1640\":1,\"1700\":1}}],[\"sb3\",{\"1\":{\"286\":1,\"287\":1,\"289\":1,\"619\":1,\"620\":1,\"621\":1,\"622\":1,\"998\":1,\"999\":1,\"1001\":1,\"1224\":1,\"1225\":1,\"1227\":1,\"1505\":1,\"1506\":1,\"1508\":1}}],[\"sb删除加载配置文件\",{\"1\":{\"154\":1,\"1560\":1}}],[\"sb\",{\"1\":{\"65\":1,\"136\":4,\"255\":1,\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"551\":1,\"619\":1,\"620\":1,\"621\":1,\"622\":1,\"623\":1,\"736\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"922\":1,\"942\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1122\":1,\"1143\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1332\":1,\"1474\":1,\"1505\":1,\"1506\":1,\"1507\":1,\"1508\":1,\"1509\":1,\"1542\":4,\"1579\":1,\"1590\":1,\"1601\":1,\"1632\":1,\"1647\":1,\"1692\":1,\"1707\":1}}],[\"splitat\",{\"1\":{\"55\":1,\"56\":2,\"477\":2,\"663\":2,\"848\":2,\"1042\":2,\"1161\":1,\"1162\":2,\"1322\":1,\"1323\":2}}],[\"split\",{\"1\":{\"55\":10,\"56\":4,\"1161\":10,\"1162\":4,\"1322\":10,\"1323\":4}}],[\"spel条件表达\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"spelhelper\",{\"1\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"spel监听器表达式\",{\"1\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"spel\",{\"0\":{\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1148\":1},\"1\":{\"51\":2,\"72\":2,\"78\":2,\"238\":2,\"239\":2,\"382\":1,\"383\":1,\"469\":1,\"475\":1,\"567\":1,\"568\":1,\"655\":1,\"661\":1,\"753\":1,\"754\":1,\"840\":1,\"846\":1,\"946\":1,\"947\":1,\"1034\":1,\"1040\":1,\"1101\":2,\"1102\":2,\"1147\":1,\"1148\":1,\"1151\":2,\"1318\":2,\"1339\":2,\"1345\":2,\"1457\":1,\"1458\":1}}],[\"spel办理人变量表达式\",{\"1\":{\"48\":1,\"476\":1,\"662\":1,\"847\":1,\"1041\":1,\"1267\":1,\"1315\":1}}],[\"spel办理人变量策略\",{\"0\":{\"46\":1,\"474\":1,\"660\":1,\"845\":1,\"1039\":1,\"1265\":1,\"1313\":1},\"1\":{\"40\":1,\"469\":1,\"655\":1,\"840\":1,\"1034\":1,\"1259\":1,\"1307\":1}}],[\"springhibernatejpapersistenceprovider\",{\"1\":{\"242\":1,\"288\":1,\"366\":1,\"436\":1,\"535\":1,\"621\":1,\"720\":1,\"807\":1,\"906\":1,\"1000\":1,\"1105\":1,\"1226\":1,\"1461\":1,\"1507\":1,\"1673\":1,\"1719\":1}}],[\"springframework\",{\"1\":{\"136\":3,\"242\":1,\"288\":1,\"366\":1,\"436\":1,\"535\":1,\"621\":1,\"720\":1,\"807\":1,\"906\":1,\"1000\":1,\"1105\":1,\"1226\":1,\"1461\":1,\"1507\":1,\"1542\":3,\"1673\":1,\"1719\":1}}],[\"spring开启懒加载后\",{\"1\":{\"133\":1,\"1539\":1}}],[\"springboot项目\",{\"1\":{\"290\":1,\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"623\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"1002\":1,\"1228\":1,\"1509\":1}}],[\"springboot项目的条件表达式默认支持spel\",{\"1\":{\"152\":1,\"1558\":1}}],[\"springboot3项目\",{\"1\":{\"286\":1,\"287\":1,\"289\":1,\"619\":1,\"620\":1,\"621\":1,\"622\":1,\"998\":1,\"999\":1,\"1001\":1,\"1224\":1,\"1225\":1,\"1227\":1,\"1505\":1,\"1506\":1,\"1508\":1}}],[\"springboot2项目\",{\"1\":{\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"619\":1,\"620\":1,\"621\":1,\"622\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1505\":1,\"1506\":1,\"1507\":1,\"1508\":1}}],[\"springboot2+vue2\",{\"1\":{\"121\":1,\"1388\":1}}],[\"springboot\",{\"0\":{\"255\":1,\"1122\":1,\"1474\":1}}],[\"springboottest\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"spring\",{\"0\":{\"20\":1,\"32\":1,\"241\":1,\"258\":1,\"365\":1,\"383\":1,\"405\":1,\"461\":1,\"534\":1,\"553\":1,\"568\":1,\"590\":1,\"647\":1,\"719\":1,\"738\":1,\"754\":1,\"776\":1,\"832\":1,\"905\":1,\"924\":1,\"947\":1,\"969\":1,\"1026\":1,\"1104\":1,\"1125\":1,\"1148\":1,\"1186\":1,\"1250\":1,\"1287\":1,\"1299\":1,\"1460\":1,\"1477\":1},\"1\":{\"25\":1,\"121\":3,\"133\":1,\"239\":1,\"282\":1,\"410\":1,\"430\":1,\"595\":1,\"615\":1,\"781\":1,\"801\":1,\"974\":1,\"994\":1,\"1102\":1,\"1191\":1,\"1220\":1,\"1292\":1,\"1388\":3,\"1458\":1,\"1501\":1,\"1539\":1}}],[\"skipanynode\",{\"1\":{\"295\":1,\"445\":1,\"631\":1,\"816\":1,\"1010\":1,\"1233\":1,\"1514\":1,\"1646\":1,\"1670\":1,\"1706\":1,\"1716\":1}}],[\"skipflow\",{\"1\":{\"295\":1,\"445\":1,\"631\":1,\"816\":1,\"1010\":1,\"1233\":1,\"1514\":1,\"1646\":1,\"1670\":1,\"1706\":1,\"1716\":1}}],[\"skiptype\",{\"1\":{\"192\":1,\"199\":1,\"207\":2,\"295\":6,\"326\":1,\"332\":1,\"340\":2,\"445\":6,\"495\":1,\"501\":1,\"509\":2,\"631\":6,\"680\":1,\"686\":1,\"694\":2,\"816\":6,\"866\":1,\"872\":1,\"880\":2,\"1010\":6,\"1061\":1,\"1068\":1,\"1076\":2,\"1233\":6,\"1411\":1,\"1418\":1,\"1426\":2,\"1514\":6,\"1646\":4,\"1670\":4,\"1706\":4,\"1716\":4}}],[\"skip标识即将删除\",{\"1\":{\"162\":1,\"1568\":1}}],[\"skipbyinsid\",{\"1\":{\"45\":1,\"48\":1,\"59\":1,\"192\":1,\"295\":1,\"326\":1,\"373\":1,\"445\":1,\"473\":1,\"476\":1,\"495\":1,\"542\":1,\"631\":1,\"659\":1,\"662\":1,\"680\":1,\"727\":1,\"816\":1,\"844\":1,\"847\":1,\"866\":1,\"913\":1,\"1010\":1,\"1038\":1,\"1041\":1,\"1061\":1,\"1112\":1,\"1233\":1,\"1264\":1,\"1267\":1,\"1312\":1,\"1315\":1,\"1326\":1,\"1411\":1,\"1514\":1,\"1620\":1,\"1621\":1,\"1646\":1,\"1680\":1,\"1681\":1,\"1706\":1}}],[\"skip\",{\"1\":{\"32\":1,\"59\":1,\"155\":1,\"162\":1,\"199\":1,\"295\":2,\"301\":1,\"304\":1,\"306\":1,\"307\":3,\"332\":1,\"373\":1,\"445\":2,\"450\":1,\"453\":1,\"455\":1,\"456\":3,\"461\":1,\"501\":1,\"542\":1,\"631\":2,\"636\":1,\"639\":1,\"641\":1,\"642\":3,\"647\":1,\"686\":1,\"727\":1,\"816\":2,\"821\":1,\"824\":1,\"826\":1,\"827\":3,\"832\":1,\"872\":1,\"913\":1,\"1010\":2,\"1015\":1,\"1018\":1,\"1020\":1,\"1021\":3,\"1026\":1,\"1068\":1,\"1112\":1,\"1233\":2,\"1239\":1,\"1242\":1,\"1244\":1,\"1245\":3,\"1250\":1,\"1286\":1,\"1299\":1,\"1326\":1,\"1418\":1,\"1514\":2,\"1520\":1,\"1523\":1,\"1525\":1,\"1526\":3,\"1561\":1,\"1568\":1,\"1646\":1,\"1670\":2,\"1706\":1,\"1716\":2}}],[\"sysdept\",{\"1\":{\"270\":4,\"565\":4,\"751\":4,\"936\":4,\"1137\":4,\"1489\":4}}],[\"sysdeptmapper\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"sysrole\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"sysrolemapper\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"sysusermapper\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"sysuser\",{\"1\":{\"29\":11,\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1195\":11,\"1296\":11,\"1489\":3}}],[\"system\",{\"1\":{\"10\":1,\"39\":1,\"242\":2,\"251\":1,\"292\":1,\"294\":1,\"295\":3,\"366\":2,\"379\":1,\"442\":1,\"444\":1,\"445\":3,\"535\":2,\"548\":1,\"628\":1,\"630\":1,\"631\":3,\"720\":2,\"733\":1,\"813\":1,\"815\":1,\"816\":3,\"906\":2,\"919\":1,\"1007\":1,\"1009\":1,\"1010\":3,\"1105\":2,\"1118\":1,\"1176\":1,\"1230\":1,\"1232\":1,\"1233\":3,\"1258\":1,\"1277\":1,\"1306\":1,\"1461\":2,\"1470\":1,\"1511\":1,\"1513\":1,\"1514\":3,\"1643\":1,\"1645\":1,\"1646\":2,\"1673\":2,\"1703\":1,\"1705\":1,\"1706\":2,\"1719\":2}}],[\"signature\",{\"1\":{\"277\":2,\"423\":2,\"608\":2,\"794\":2,\"987\":2,\"1207\":2,\"1214\":2,\"1496\":2}}],[\"simsun\",{\"1\":{\"132\":3,\"1538\":3}}],[\"simplemodule\",{\"1\":{\"131\":7,\"1537\":7}}],[\"since\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"size\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"security放行配置示例\",{\"1\":{\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"securitymanager\",{\"1\":{\"259\":2,\"554\":2,\"739\":2,\"925\":2,\"1126\":2,\"1478\":2}}],[\"securityfilterchain\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"security\",{\"0\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1}}],[\"securityutils\",{\"1\":{\"9\":2,\"29\":2,\"58\":1,\"310\":1,\"372\":1,\"395\":2,\"467\":1,\"541\":1,\"580\":2,\"653\":1,\"726\":1,\"766\":2,\"838\":1,\"912\":1,\"959\":2,\"1032\":1,\"1111\":1,\"1175\":2,\"1195\":2,\"1256\":1,\"1276\":2,\"1296\":2,\"1325\":1,\"1529\":1}}],[\"seaflow\",{\"1\":{\"121\":2,\"1388\":2}}],[\"seven\",{\"1\":{\"121\":1,\"1388\":1}}],[\"selectuserlist\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"selectdeptlist\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"selectrolelist\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"selectcount\",{\"1\":{\"215\":1,\"348\":1,\"517\":1,\"702\":1,\"888\":1,\"1084\":1,\"1434\":1}}],[\"select语句获取结果\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"selecttestleavebyid\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"serial\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1670\":1,\"1703\":1,\"1716\":1}}],[\"serializerprovider\",{\"1\":{\"131\":1,\"1537\":1}}],[\"serialize\",{\"1\":{\"131\":2,\"1537\":2}}],[\"serializable\",{\"1\":{\"8\":1,\"394\":1,\"579\":1,\"765\":1,\"958\":1,\"1174\":1,\"1275\":1}}],[\"servlet\",{\"1\":{\"133\":1,\"1539\":1}}],[\"server\",{\"1\":{\"67\":2,\"742\":2,\"944\":2,\"1145\":2,\"1334\":2,\"1592\":2}}],[\"services文件夹\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"service\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"setaccessible\",{\"1\":{\"1286\":1}}],[\"set到headerauthorization上\",{\"1\":{\"937\":1}}],[\"set到header的authorization上\",{\"1\":{\"271\":1,\"1138\":1,\"1490\":1}}],[\"setvariable\",{\"1\":{\"477\":1,\"663\":1,\"848\":1,\"1042\":1}}],[\"setparentid\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"setpermissionlist\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"setpermissionflag\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"setname\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"setnodetype\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"setnodename\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"setnodecode\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"setgroupname\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"setstorageid\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"setup\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"setupdatetime\",{\"1\":{\"10\":1,\"248\":2,\"376\":2,\"396\":1,\"545\":2,\"581\":1,\"730\":2,\"767\":1,\"916\":2,\"960\":1,\"1115\":2,\"1176\":1,\"1277\":1,\"1467\":2}}],[\"setfilterchaindefinitionmap\",{\"1\":{\"259\":1,\"554\":1,\"739\":1,\"925\":1,\"1126\":1,\"1478\":1}}],[\"setflowstatus\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"setmaxlimit\",{\"1\":{\"136\":1,\"1542\":1}}],[\"setdbtype\",{\"1\":{\"136\":1,\"1542\":1}}],[\"setexpression\",{\"1\":{\"51\":2,\"52\":2,\"54\":1,\"72\":2,\"73\":2,\"75\":1,\"78\":2,\"79\":2,\"81\":1,\"384\":1,\"569\":1,\"755\":1,\"948\":1,\"1149\":1,\"1151\":2,\"1152\":2,\"1154\":1,\"1157\":1,\"1160\":1,\"1318\":2,\"1319\":2,\"1321\":1,\"1339\":2,\"1340\":2,\"1342\":1,\"1345\":2,\"1346\":2,\"1348\":1}}],[\"setid\",{\"1\":{\"39\":1,\"58\":1,\"248\":1,\"270\":1,\"310\":1,\"372\":1,\"376\":1,\"467\":1,\"541\":1,\"545\":1,\"565\":1,\"653\":1,\"726\":1,\"730\":1,\"751\":1,\"838\":1,\"912\":1,\"916\":1,\"936\":1,\"1032\":1,\"1111\":1,\"1115\":1,\"1137\":1,\"1256\":1,\"1258\":1,\"1306\":1,\"1325\":1,\"1467\":1,\"1489\":1,\"1529\":1}}],[\"setinstanceid\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"settenantlinehandler\",{\"1\":{\"32\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1299\":1}}],[\"set\",{\"1\":{\"11\":1,\"32\":3,\"33\":1,\"67\":4,\"397\":1,\"461\":3,\"462\":1,\"582\":1,\"647\":3,\"648\":1,\"768\":1,\"832\":3,\"833\":1,\"944\":4,\"961\":1,\"1026\":3,\"1027\":1,\"1145\":4,\"1177\":1,\"1250\":3,\"1251\":1,\"1278\":1,\"1286\":1,\"1299\":3,\"1300\":1,\"1334\":4}}],[\"setcreatetime\",{\"1\":{\"10\":1,\"248\":1,\"270\":3,\"376\":1,\"396\":1,\"545\":1,\"565\":3,\"581\":1,\"730\":1,\"751\":3,\"767\":1,\"916\":1,\"936\":3,\"960\":1,\"1115\":1,\"1137\":3,\"1176\":1,\"1277\":1,\"1467\":1,\"1489\":3}}],[\"sethandlername\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"sethandlercode\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"sethandler\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"stputil\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"style>\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"style=\",{\"1\":{\"262\":2,\"557\":2,\"743\":2,\"928\":2,\"1129\":2,\"1481\":2}}],[\"style=常规\",{\"1\":{\"132\":2,\"1538\":2}}],[\"style\",{\"1\":{\"98\":1,\"1365\":1}}],[\"strtomap\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"structureuser\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"streamutils\",{\"1\":{\"29\":1,\"1195\":1,\"1296\":1}}],[\"stream\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"string>\",{\"1\":{\"259\":1,\"554\":1,\"739\":1,\"925\":1,\"1126\":1,\"1478\":1}}],[\"stringutils\",{\"1\":{\"9\":1,\"10\":2,\"11\":1,\"70\":1,\"82\":2,\"388\":1,\"395\":1,\"396\":1,\"397\":1,\"477\":2,\"573\":1,\"580\":1,\"581\":1,\"582\":1,\"663\":2,\"759\":1,\"766\":1,\"767\":1,\"768\":1,\"848\":2,\"952\":1,\"959\":1,\"960\":1,\"961\":1,\"1042\":2,\"1155\":2,\"1166\":1,\"1175\":1,\"1176\":2,\"1177\":1,\"1276\":1,\"1277\":2,\"1278\":1,\"1337\":1,\"1349\":2}}],[\"string\",{\"1\":{\"8\":4,\"10\":1,\"11\":1,\"28\":1,\"29\":3,\"32\":3,\"33\":2,\"37\":1,\"48\":3,\"51\":2,\"55\":7,\"56\":3,\"58\":1,\"70\":3,\"72\":2,\"76\":2,\"78\":2,\"82\":6,\"131\":2,\"239\":3,\"243\":1,\"265\":2,\"292\":1,\"310\":2,\"367\":1,\"372\":1,\"383\":3,\"388\":3,\"394\":5,\"397\":1,\"442\":1,\"461\":3,\"462\":2,\"466\":1,\"467\":2,\"476\":3,\"477\":9,\"536\":1,\"541\":1,\"560\":2,\"568\":3,\"573\":3,\"579\":5,\"582\":1,\"628\":1,\"647\":3,\"648\":2,\"652\":1,\"653\":2,\"662\":3,\"663\":9,\"721\":1,\"726\":1,\"746\":2,\"754\":3,\"759\":3,\"765\":5,\"768\":1,\"813\":1,\"832\":3,\"833\":2,\"837\":1,\"838\":2,\"847\":3,\"848\":9,\"907\":1,\"912\":1,\"931\":2,\"947\":3,\"952\":3,\"958\":5,\"961\":1,\"1007\":1,\"1026\":3,\"1027\":2,\"1031\":1,\"1032\":2,\"1041\":3,\"1042\":9,\"1102\":3,\"1106\":1,\"1111\":1,\"1132\":2,\"1148\":3,\"1151\":2,\"1155\":6,\"1158\":2,\"1161\":7,\"1162\":3,\"1166\":3,\"1174\":4,\"1176\":1,\"1177\":1,\"1194\":1,\"1195\":3,\"1230\":1,\"1250\":3,\"1251\":2,\"1255\":1,\"1256\":2,\"1267\":3,\"1275\":4,\"1277\":1,\"1278\":1,\"1286\":1,\"1295\":1,\"1296\":3,\"1299\":3,\"1300\":2,\"1304\":1,\"1315\":3,\"1318\":2,\"1322\":7,\"1323\":3,\"1325\":1,\"1337\":3,\"1339\":2,\"1343\":2,\"1345\":2,\"1349\":6,\"1458\":3,\"1462\":1,\"1484\":2,\"1511\":1,\"1529\":2,\"1537\":2,\"1643\":1,\"1703\":1}}],[\"status改为string类型\",{\"1\":{\"1659\":1,\"1731\":1}}],[\"status\",{\"1\":{\"303\":1,\"304\":1,\"305\":2,\"452\":1,\"453\":1,\"454\":2,\"638\":1,\"639\":1,\"640\":2,\"823\":1,\"824\":1,\"825\":2,\"1017\":1,\"1018\":1,\"1019\":2,\"1241\":1,\"1242\":1,\"1243\":2,\"1522\":1,\"1523\":1,\"1524\":2}}],[\"static\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"16\":1,\"54\":1,\"70\":1,\"131\":3,\"310\":1,\"388\":1,\"395\":1,\"396\":1,\"397\":1,\"467\":1,\"573\":1,\"580\":1,\"581\":1,\"582\":1,\"653\":1,\"759\":1,\"766\":1,\"767\":1,\"768\":1,\"838\":1,\"952\":1,\"959\":1,\"960\":1,\"961\":1,\"1032\":1,\"1160\":1,\"1166\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":1,\"1256\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":1,\"1321\":1,\"1337\":1,\"1529\":1,\"1537\":3}}],[\"stackoverflowerror\",{\"0\":{\"138\":1,\"1544\":1}}],[\"star\",{\"1\":{\"102\":1,\"1369\":1}}],[\"star的多少关系到项目能否被更多人看到\",{\"1\":{\"86\":1,\"1353\":1}}],[\"starrydesert\",{\"1\":{\"83\":1,\"1350\":1}}],[\"startlistener\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"startflow\",{\"1\":{\"294\":1,\"444\":1,\"630\":1,\"815\":1,\"1009\":1,\"1232\":1,\"1513\":1,\"1645\":1,\"1670\":1,\"1705\":1,\"1716\":1}}],[\"starter<\",{\"1\":{\"136\":1,\"286\":2,\"287\":2,\"288\":1,\"289\":2,\"290\":1,\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"619\":2,\"620\":2,\"621\":2,\"622\":2,\"623\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"998\":2,\"999\":2,\"1000\":1,\"1001\":2,\"1002\":1,\"1224\":2,\"1225\":2,\"1226\":1,\"1227\":2,\"1228\":1,\"1505\":2,\"1506\":2,\"1507\":1,\"1508\":2,\"1509\":1,\"1542\":1}}],[\"starter\",{\"1\":{\"136\":2,\"1542\":2}}],[\"starter改为warm\",{\"1\":{\"136\":2,\"1542\":2}}],[\"start\",{\"1\":{\"3\":1,\"8\":2,\"16\":1,\"58\":1,\"191\":1,\"239\":1,\"294\":1,\"310\":1,\"325\":1,\"372\":1,\"383\":1,\"390\":1,\"394\":2,\"444\":1,\"467\":1,\"494\":1,\"541\":1,\"568\":1,\"575\":1,\"579\":2,\"630\":1,\"653\":1,\"679\":1,\"726\":1,\"754\":1,\"761\":1,\"765\":2,\"815\":1,\"838\":1,\"865\":1,\"912\":1,\"947\":1,\"954\":1,\"958\":2,\"1009\":1,\"1032\":1,\"1060\":1,\"1102\":1,\"1111\":1,\"1148\":1,\"1169\":1,\"1174\":2,\"1182\":1,\"1232\":1,\"1256\":1,\"1270\":1,\"1275\":2,\"1283\":1,\"1325\":1,\"1410\":1,\"1458\":1,\"1513\":1,\"1529\":1,\"1645\":1,\"1670\":1,\"1672\":1,\"1705\":1,\"1716\":1,\"1718\":1}}],[\"px\",{\"1\":{\"262\":1,\"557\":1,\"743\":1,\"928\":1,\"1129\":1,\"1481\":1}}],[\"posttableinfo\",{\"1\":{\"1286\":1}}],[\"postinittableinfohandler\",{\"1\":{\"1286\":1}}],[\"postgresql\",{\"1\":{\"106\":1,\"439\":1,\"624\":1,\"810\":1,\"1003\":1,\"1373\":1}}],[\"port\",{\"1\":{\"261\":1,\"265\":1,\"556\":1,\"560\":1,\"927\":1,\"931\":1,\"1128\":1,\"1132\":1,\"1480\":1,\"1484\":1,\"1581\":1,\"1603\":1,\"1634\":1,\"1694\":1}}],[\"pg适配\",{\"1\":{\"158\":1,\"1564\":1}}],[\"plugin>\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"plugin<\",{\"1\":{\"286\":1,\"287\":1,\"288\":1,\"289\":1,\"290\":1,\"434\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"619\":1,\"620\":1,\"621\":1,\"622\":1,\"623\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1505\":1,\"1506\":1,\"1507\":1,\"1508\":1,\"1509\":1,\"1629\":2,\"1640\":1,\"1689\":2,\"1700\":1}}],[\"plugins>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"plugins<\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"plugins\",{\"1\":{\"136\":4,\"1542\":4}}],[\"plugin\",{\"1\":{\"65\":2,\"70\":2,\"255\":1,\"256\":1,\"388\":2,\"551\":1,\"573\":2,\"736\":1,\"759\":2,\"922\":1,\"942\":2,\"952\":2,\"1122\":1,\"1123\":1,\"1143\":2,\"1166\":2,\"1332\":2,\"1337\":2,\"1474\":1,\"1475\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1629\":2,\"1632\":1,\"1647\":1,\"1689\":2,\"1692\":1,\"1707\":1}}],[\"plus的自带的方式实现\",{\"1\":{\"1660\":1,\"1732\":1}}],[\"plus的自带方法\",{\"1\":{\"24\":1,\"409\":1,\"594\":1,\"780\":1,\"973\":1,\"1190\":1,\"1291\":1}}],[\"plus关闭逻辑删除示例\",{\"1\":{\"1551\":1}}],[\"pluspostinittableinfohandler\",{\"1\":{\"1286\":1}}],[\"plus扩展\",{\"1\":{\"159\":1,\"1565\":1}}],[\"plus扩展包\",{\"1\":{\"151\":1,\"1557\":1,\"1660\":1,\"1732\":1}}],[\"plus多租户和软件删除处理\",{\"1\":{\"157\":1,\"1563\":1}}],[\"plus多租户和逻辑删除使用方式\",{\"1\":{\"155\":1,\"1561\":1}}],[\"plus只支持自身的多租户方式\",{\"1\":{\"31\":1,\"460\":1,\"646\":1,\"831\":1,\"1025\":1,\"1249\":1,\"1298\":1}}],[\"plus只支持自身的逻辑删除方式\",{\"1\":{\"19\":1,\"404\":1,\"589\":1,\"775\":1,\"968\":1,\"1185\":1,\"1286\":1}}],[\"plus配置\",{\"1\":{\"20\":1,\"405\":1,\"590\":1,\"776\":1,\"969\":1,\"1186\":1,\"1287\":1}}],[\"plus\",{\"0\":{\"19\":1,\"24\":1,\"31\":1,\"136\":1,\"287\":1,\"404\":1,\"409\":1,\"435\":1,\"460\":1,\"589\":1,\"594\":1,\"620\":1,\"646\":1,\"775\":1,\"780\":1,\"806\":1,\"831\":1,\"968\":1,\"973\":1,\"999\":1,\"1025\":1,\"1185\":1,\"1190\":1,\"1225\":1,\"1249\":1,\"1286\":1,\"1291\":1,\"1298\":1,\"1506\":1,\"1542\":1},\"1\":{\"20\":1,\"102\":1,\"107\":1,\"121\":1,\"132\":1,\"136\":5,\"287\":3,\"288\":1,\"405\":1,\"435\":2,\"436\":1,\"440\":1,\"590\":1,\"620\":3,\"621\":1,\"625\":1,\"776\":1,\"806\":2,\"807\":1,\"811\":1,\"969\":1,\"999\":3,\"1000\":1,\"1004\":1,\"1186\":1,\"1225\":3,\"1226\":1,\"1287\":1,\"1369\":1,\"1374\":1,\"1388\":1,\"1506\":3,\"1507\":1,\"1538\":1,\"1542\":5,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1640\":1,\"1648\":1,\"1668\":1,\"1700\":1,\"1708\":1,\"1714\":1}}],[\"p\",{\"1\":{\"39\":2,\"1258\":2,\"1306\":2,\"1629\":1,\"1689\":1}}],[\"publish\",{\"1\":{\"182\":1,\"293\":2,\"303\":1,\"318\":1,\"443\":2,\"452\":1,\"487\":1,\"629\":2,\"638\":1,\"672\":1,\"814\":2,\"823\":1,\"858\":1,\"1008\":2,\"1017\":1,\"1053\":1,\"1231\":2,\"1241\":1,\"1401\":1,\"1512\":2,\"1522\":1,\"1644\":2,\"1670\":2,\"1704\":2,\"1716\":2}}],[\"public\",{\"1\":{\"8\":1,\"9\":2,\"10\":2,\"11\":2,\"16\":5,\"17\":1,\"28\":1,\"29\":3,\"32\":7,\"33\":8,\"36\":2,\"37\":2,\"39\":2,\"48\":2,\"51\":1,\"54\":1,\"55\":4,\"56\":3,\"58\":1,\"70\":3,\"72\":1,\"75\":1,\"76\":3,\"78\":1,\"81\":1,\"82\":3,\"131\":7,\"136\":5,\"239\":3,\"243\":5,\"246\":3,\"248\":4,\"252\":2,\"259\":2,\"260\":2,\"265\":2,\"269\":1,\"270\":3,\"275\":4,\"292\":1,\"293\":1,\"294\":1,\"295\":2,\"310\":3,\"367\":5,\"370\":3,\"372\":1,\"376\":4,\"380\":2,\"383\":3,\"388\":3,\"394\":1,\"395\":2,\"396\":2,\"397\":2,\"402\":1,\"442\":1,\"443\":1,\"444\":1,\"445\":2,\"461\":7,\"462\":8,\"465\":2,\"466\":2,\"467\":3,\"476\":2,\"477\":4,\"536\":5,\"539\":3,\"541\":1,\"545\":4,\"549\":2,\"554\":2,\"555\":2,\"560\":2,\"564\":1,\"565\":3,\"568\":3,\"573\":3,\"579\":1,\"580\":2,\"581\":2,\"582\":2,\"587\":1,\"628\":1,\"629\":1,\"630\":1,\"631\":2,\"647\":7,\"648\":8,\"651\":2,\"652\":2,\"653\":3,\"662\":2,\"663\":4,\"721\":5,\"724\":3,\"726\":1,\"730\":4,\"734\":2,\"739\":2,\"740\":2,\"746\":2,\"750\":1,\"751\":3,\"754\":3,\"759\":3,\"765\":1,\"766\":2,\"767\":2,\"768\":2,\"773\":1,\"813\":1,\"814\":1,\"815\":1,\"816\":2,\"832\":7,\"833\":8,\"836\":2,\"837\":2,\"838\":3,\"847\":2,\"848\":4,\"907\":5,\"910\":3,\"912\":1,\"916\":4,\"920\":2,\"925\":2,\"926\":2,\"931\":2,\"935\":1,\"936\":3,\"947\":3,\"952\":3,\"958\":1,\"959\":2,\"960\":2,\"961\":2,\"966\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1010\":2,\"1026\":7,\"1027\":8,\"1030\":2,\"1031\":2,\"1032\":3,\"1041\":2,\"1042\":4,\"1102\":3,\"1106\":5,\"1109\":3,\"1111\":1,\"1115\":4,\"1119\":2,\"1126\":2,\"1127\":2,\"1132\":2,\"1136\":1,\"1137\":3,\"1148\":3,\"1151\":1,\"1154\":1,\"1155\":3,\"1157\":1,\"1158\":3,\"1160\":1,\"1161\":4,\"1162\":3,\"1166\":3,\"1174\":1,\"1175\":2,\"1176\":2,\"1177\":2,\"1182\":5,\"1183\":1,\"1194\":1,\"1195\":3,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":2,\"1250\":7,\"1251\":8,\"1254\":2,\"1255\":2,\"1256\":3,\"1258\":2,\"1267\":2,\"1275\":1,\"1276\":2,\"1277\":2,\"1278\":2,\"1283\":5,\"1284\":1,\"1286\":2,\"1295\":1,\"1296\":3,\"1299\":7,\"1300\":8,\"1303\":2,\"1304\":2,\"1306\":2,\"1315\":2,\"1318\":1,\"1321\":1,\"1322\":4,\"1323\":3,\"1325\":1,\"1337\":3,\"1339\":1,\"1342\":1,\"1343\":3,\"1345\":1,\"1348\":1,\"1349\":3,\"1458\":3,\"1462\":5,\"1465\":3,\"1467\":4,\"1471\":2,\"1478\":2,\"1479\":2,\"1484\":2,\"1488\":1,\"1489\":3,\"1494\":4,\"1511\":1,\"1512\":1,\"1513\":1,\"1514\":2,\"1529\":3,\"1537\":7,\"1542\":5,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1643\":1,\"1644\":1,\"1645\":1,\"1646\":2,\"1670\":6,\"1673\":3,\"1698\":1,\"1703\":1,\"1704\":1,\"1705\":1,\"1706\":2,\"1716\":6,\"1719\":3}}],[\"pushtime\",{\"1\":{\"124\":1,\"1530\":1}}],[\"put\",{\"1\":{\"39\":5,\"45\":1,\"48\":1,\"54\":1,\"239\":1,\"259\":2,\"310\":2,\"383\":1,\"467\":2,\"473\":1,\"476\":1,\"554\":1,\"568\":1,\"653\":2,\"659\":1,\"662\":1,\"739\":2,\"754\":1,\"838\":2,\"844\":1,\"847\":1,\"925\":2,\"947\":1,\"1032\":2,\"1038\":1,\"1041\":1,\"1102\":1,\"1126\":2,\"1148\":1,\"1160\":1,\"1256\":2,\"1258\":5,\"1264\":1,\"1267\":1,\"1306\":5,\"1312\":1,\"1315\":1,\"1321\":1,\"1458\":1,\"1478\":2,\"1529\":2,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"prefix\",{\"1\":{\"265\":1,\"560\":1,\"746\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"preeval\",{\"1\":{\"55\":2,\"1161\":2,\"1322\":2}}],[\"profiles>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"profile>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"processed\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"process\",{\"1\":{\"262\":2,\"557\":2,\"928\":2,\"1129\":2,\"1481\":2}}],[\"properties\",{\"1\":{\"134\":1,\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1,\"1540\":1}}],[\"provider\",{\"1\":{\"131\":2,\"242\":1,\"288\":1,\"366\":1,\"436\":1,\"535\":1,\"621\":1,\"720\":1,\"807\":1,\"906\":1,\"1000\":1,\"1105\":1,\"1226\":1,\"1461\":1,\"1507\":1,\"1537\":2,\"1673\":1,\"1719\":1}}],[\"proxytargetclass\",{\"1\":{\"136\":1,\"1542\":1}}],[\"proxy\",{\"1\":{\"67\":5,\"263\":2,\"558\":2,\"742\":1,\"744\":2,\"929\":2,\"944\":5,\"1130\":2,\"1145\":5,\"1334\":5,\"1482\":2,\"1592\":1}}],[\"protected\",{\"1\":{\"25\":2,\"258\":1,\"410\":2,\"553\":1,\"595\":2,\"738\":1,\"781\":2,\"924\":1,\"974\":2,\"1125\":1,\"1191\":2,\"1292\":2,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"primary\",{\"0\":{\"1743\":1,\"1758\":1}}],[\"println\",{\"1\":{\"39\":1,\"292\":1,\"294\":1,\"295\":3,\"442\":1,\"444\":1,\"445\":3,\"628\":1,\"630\":1,\"631\":3,\"813\":1,\"815\":1,\"816\":3,\"1007\":1,\"1009\":1,\"1010\":3,\"1230\":1,\"1232\":1,\"1233\":3,\"1258\":1,\"1306\":1,\"1511\":1,\"1513\":1,\"1514\":3,\"1643\":1,\"1645\":1,\"1646\":2,\"1703\":1,\"1705\":1,\"1706\":2}}],[\"private\",{\"1\":{\"9\":1,\"10\":2,\"11\":1,\"16\":1,\"24\":1,\"26\":1,\"32\":1,\"70\":1,\"131\":2,\"270\":6,\"310\":1,\"388\":1,\"395\":1,\"396\":2,\"397\":1,\"408\":1,\"409\":1,\"411\":1,\"461\":1,\"467\":1,\"565\":6,\"573\":1,\"580\":1,\"581\":2,\"582\":1,\"593\":1,\"594\":1,\"596\":1,\"647\":1,\"653\":1,\"751\":6,\"759\":1,\"766\":1,\"767\":2,\"768\":1,\"779\":1,\"780\":1,\"782\":1,\"832\":1,\"838\":1,\"936\":6,\"952\":1,\"959\":1,\"960\":2,\"961\":1,\"972\":1,\"973\":1,\"975\":1,\"1026\":1,\"1032\":1,\"1137\":6,\"1166\":1,\"1175\":1,\"1176\":2,\"1177\":1,\"1182\":1,\"1190\":1,\"1192\":1,\"1250\":1,\"1256\":1,\"1276\":1,\"1277\":2,\"1278\":1,\"1283\":1,\"1291\":1,\"1293\":1,\"1299\":1,\"1337\":1,\"1489\":6,\"1529\":1,\"1537\":2}}],[\"permitall\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"permissionflag\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"275\":4,\"295\":3,\"326\":1,\"332\":1,\"334\":2,\"335\":2,\"336\":2,\"337\":2,\"338\":1,\"445\":3,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"631\":3,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"688\":2,\"689\":2,\"690\":2,\"691\":2,\"692\":1,\"816\":3,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"1010\":3,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1233\":3,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1494\":4,\"1514\":3,\"1646\":2,\"1670\":2,\"1706\":2,\"1716\":2}}],[\"permissions\",{\"1\":{\"28\":1,\"29\":1,\"1194\":1,\"1195\":1,\"1295\":1,\"1296\":1}}],[\"permissionhandler\",{\"1\":{\"28\":1,\"29\":1,\"1194\":1,\"1195\":1,\"1295\":1,\"1296\":1}}],[\"permissionhandler接口\",{\"0\":{\"28\":1,\"1194\":1,\"1295\":1}}],[\"permission\",{\"1\":{\"11\":4,\"306\":1,\"390\":1,\"394\":2,\"397\":4,\"455\":1,\"575\":1,\"579\":2,\"582\":4,\"641\":1,\"761\":1,\"765\":2,\"768\":4,\"826\":1,\"954\":1,\"958\":2,\"961\":4,\"1020\":1,\"1177\":4,\"1244\":1,\"1278\":4,\"1525\":1}}],[\"permissionlist\",{\"1\":{\"9\":7,\"11\":4,\"29\":4,\"395\":7,\"397\":4,\"580\":7,\"582\":4,\"766\":7,\"768\":4,\"959\":7,\"961\":4,\"1175\":7,\"1177\":4,\"1195\":4,\"1276\":7,\"1278\":4,\"1296\":4}}],[\"perf\",{\"1\":{\"98\":1,\"149\":1,\"1365\":1,\"1555\":1}}],[\"persist\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"persistence\",{\"1\":{\"25\":1,\"242\":1,\"288\":1,\"366\":1,\"410\":1,\"436\":1,\"535\":1,\"595\":1,\"621\":1,\"720\":1,\"781\":1,\"807\":1,\"906\":1,\"974\":1,\"1000\":1,\"1105\":1,\"1191\":1,\"1226\":1,\"1292\":1,\"1461\":1,\"1507\":1,\"1673\":1,\"1719\":1}}],[\"persistencecontext\",{\"1\":{\"25\":2,\"410\":2,\"595\":2,\"781\":2,\"974\":2,\"1191\":2,\"1292\":2}}],[\"pagination\",{\"1\":{\"136\":1,\"1542\":1}}],[\"paginationinnerinterceptor\",{\"1\":{\"136\":10,\"1542\":10}}],[\"pagenum=1\",{\"1\":{\"746\":1}}],[\"pageinfo<>\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"page\",{\"1\":{\"67\":1,\"211\":2,\"344\":2,\"513\":2,\"698\":2,\"884\":2,\"944\":1,\"1080\":2,\"1145\":1,\"1334\":1,\"1430\":2}}],[\"package\",{\"1\":{\"136\":1,\"1542\":1}}],[\"pass通过\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"pass审批通过\",{\"1\":{\"192\":1,\"199\":1,\"207\":1,\"307\":1,\"326\":1,\"332\":1,\"340\":1,\"456\":1,\"495\":1,\"501\":1,\"509\":1,\"642\":1,\"680\":1,\"686\":1,\"694\":1,\"827\":1,\"866\":1,\"872\":1,\"880\":1,\"1021\":1,\"1061\":1,\"1068\":1,\"1076\":1,\"1245\":1,\"1411\":1,\"1418\":1,\"1426\":1,\"1526\":1}}],[\"pass\",{\"1\":{\"67\":1,\"155\":1,\"277\":1,\"295\":3,\"423\":1,\"445\":3,\"608\":1,\"631\":3,\"742\":1,\"794\":1,\"816\":3,\"944\":1,\"987\":1,\"1010\":3,\"1145\":1,\"1207\":1,\"1214\":1,\"1233\":3,\"1334\":1,\"1496\":1,\"1514\":3,\"1561\":1,\"1592\":1,\"1646\":2,\"1670\":2,\"1706\":2,\"1716\":2}}],[\"parsedatetostr\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"parseexpression\",{\"1\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"parseobject\",{\"1\":{\"17\":1,\"402\":1,\"587\":1,\"773\":1,\"966\":1,\"1183\":1,\"1284\":1}}],[\"param\",{\"1\":{\"9\":1,\"10\":1,\"16\":4,\"17\":1,\"32\":2,\"33\":1,\"48\":1,\"51\":3,\"55\":6,\"70\":2,\"72\":3,\"78\":3,\"239\":2,\"269\":1,\"270\":4,\"383\":2,\"388\":2,\"395\":1,\"396\":1,\"402\":1,\"461\":2,\"462\":1,\"476\":1,\"477\":2,\"564\":1,\"565\":4,\"568\":2,\"573\":2,\"580\":1,\"581\":1,\"587\":1,\"647\":2,\"648\":1,\"662\":1,\"663\":2,\"750\":1,\"751\":4,\"754\":2,\"759\":2,\"766\":1,\"767\":1,\"773\":1,\"832\":2,\"833\":1,\"847\":1,\"848\":2,\"935\":1,\"936\":4,\"947\":2,\"952\":2,\"959\":1,\"960\":1,\"966\":1,\"1026\":2,\"1027\":1,\"1041\":1,\"1042\":2,\"1102\":2,\"1136\":1,\"1137\":4,\"1148\":2,\"1151\":3,\"1161\":6,\"1166\":2,\"1175\":1,\"1176\":1,\"1182\":4,\"1183\":1,\"1250\":2,\"1251\":1,\"1267\":1,\"1276\":1,\"1277\":1,\"1283\":4,\"1284\":1,\"1299\":2,\"1300\":1,\"1315\":1,\"1318\":3,\"1322\":6,\"1337\":2,\"1339\":3,\"1345\":3,\"1458\":2,\"1488\":1,\"1489\":4,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"pathrewrite\",{\"1\":{\"743\":1,\"744\":1}}],[\"path改为form\",{\"1\":{\"155\":1,\"1561\":1,\"1660\":1,\"1732\":1}}],[\"path\",{\"1\":{\"4\":1,\"35\":1,\"155\":1,\"242\":2,\"245\":2,\"251\":1,\"262\":1,\"263\":1,\"292\":2,\"303\":2,\"304\":1,\"306\":3,\"308\":1,\"366\":2,\"369\":2,\"379\":1,\"442\":2,\"452\":2,\"453\":1,\"455\":3,\"457\":1,\"464\":1,\"535\":2,\"538\":2,\"548\":1,\"557\":1,\"558\":1,\"628\":2,\"638\":2,\"639\":1,\"641\":3,\"643\":1,\"650\":1,\"720\":2,\"723\":2,\"733\":1,\"743\":1,\"744\":1,\"813\":2,\"823\":2,\"824\":1,\"826\":3,\"828\":1,\"835\":1,\"906\":2,\"909\":2,\"919\":1,\"928\":1,\"929\":1,\"1007\":2,\"1017\":2,\"1018\":1,\"1020\":3,\"1022\":1,\"1029\":1,\"1105\":2,\"1108\":2,\"1118\":1,\"1129\":1,\"1130\":1,\"1170\":1,\"1230\":2,\"1241\":2,\"1242\":1,\"1244\":3,\"1246\":1,\"1253\":1,\"1271\":1,\"1302\":1,\"1461\":2,\"1464\":2,\"1470\":1,\"1481\":1,\"1482\":1,\"1511\":2,\"1522\":2,\"1523\":1,\"1525\":3,\"1527\":1,\"1561\":1,\"1643\":2,\"1660\":1,\"1673\":2,\"1703\":2,\"1719\":2,\"1732\":1}}],[\"path字段\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1,\"1660\":1,\"1732\":1}}],[\"5作废\",{\"1\":{\"1019\":1}}],[\"5票签\",{\"1\":{\"304\":1,\"338\":1,\"453\":1,\"639\":1,\"692\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"5月\",{\"1\":{\"132\":2,\"1538\":2}}],[\"50\",{\"1\":{\"123\":2,\"1390\":2}}],[\"50x\",{\"1\":{\"67\":2,\"944\":2,\"1145\":2,\"1334\":2}}],[\"504\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"503\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"502\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"500\",{\"1\":{\"67\":1,\"136\":1,\"303\":1,\"304\":2,\"305\":1,\"452\":1,\"453\":2,\"454\":1,\"638\":1,\"639\":2,\"640\":1,\"823\":1,\"824\":2,\"825\":1,\"944\":1,\"1017\":1,\"1018\":2,\"1019\":1,\"1145\":1,\"1241\":1,\"1242\":2,\"1243\":1,\"1334\":1,\"1522\":1,\"1523\":2,\"1524\":1,\"1542\":1}}],[\"55l\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"5\",{\"0\":{\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":2,\"13\":1,\"14\":1,\"15\":1,\"43\":1,\"106\":1,\"119\":1,\"135\":1,\"145\":1,\"162\":1,\"178\":1,\"195\":1,\"203\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":2,\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"265\":1,\"271\":1,\"281\":1,\"290\":1,\"296\":1,\"317\":1,\"329\":1,\"336\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":2,\"347\":1,\"348\":1,\"349\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"362\":1,\"363\":1,\"398\":1,\"420\":1,\"427\":1,\"438\":1,\"440\":1,\"477\":1,\"485\":1,\"498\":1,\"505\":1,\"510\":1,\"511\":1,\"512\":1,\"513\":1,\"514\":1,\"515\":2,\"516\":1,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":1,\"524\":1,\"525\":1,\"526\":1,\"527\":1,\"528\":1,\"529\":1,\"530\":1,\"531\":1,\"532\":1,\"560\":1,\"583\":1,\"605\":1,\"612\":1,\"623\":1,\"625\":1,\"663\":1,\"670\":1,\"683\":1,\"690\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":2,\"701\":1,\"702\":1,\"703\":1,\"704\":1,\"705\":1,\"706\":1,\"707\":1,\"708\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"716\":1,\"717\":1,\"746\":1,\"769\":1,\"791\":1,\"798\":1,\"809\":1,\"811\":1,\"848\":1,\"856\":1,\"869\":1,\"876\":1,\"881\":1,\"882\":1,\"883\":1,\"884\":1,\"885\":1,\"886\":2,\"887\":1,\"888\":1,\"889\":1,\"890\":1,\"891\":1,\"892\":1,\"893\":1,\"894\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"903\":1,\"931\":1,\"937\":1,\"962\":1,\"984\":1,\"991\":1,\"1002\":1,\"1004\":1,\"1042\":1,\"1049\":1,\"1064\":1,\"1072\":1,\"1077\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1081\":1,\"1082\":2,\"1083\":1,\"1084\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1098\":1,\"1099\":1,\"1132\":1,\"1138\":1,\"1159\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1172\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1178\":2,\"1179\":1,\"1180\":1,\"1181\":1,\"1204\":1,\"1211\":1,\"1218\":1,\"1228\":1,\"1234\":1,\"1262\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":2,\"1280\":1,\"1281\":1,\"1282\":1,\"1310\":1,\"1373\":1,\"1386\":1,\"1397\":1,\"1414\":1,\"1422\":1,\"1427\":1,\"1428\":1,\"1429\":1,\"1430\":1,\"1431\":1,\"1432\":2,\"1433\":1,\"1434\":1,\"1435\":1,\"1436\":1,\"1437\":1,\"1438\":1,\"1439\":1,\"1440\":1,\"1441\":1,\"1442\":1,\"1443\":1,\"1444\":1,\"1445\":1,\"1446\":1,\"1447\":1,\"1448\":1,\"1449\":1,\"1484\":1,\"1490\":1,\"1500\":1,\"1509\":1,\"1515\":1,\"1541\":1,\"1551\":1,\"1568\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1630\":1,\"1639\":1,\"1649\":1,\"1690\":1,\"1699\":1,\"1709\":1,\"1755\":1},\"1\":{\"39\":1,\"136\":2,\"238\":1,\"262\":1,\"276\":1,\"300\":1,\"301\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"382\":1,\"429\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"557\":1,\"567\":1,\"614\":1,\"635\":1,\"636\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"743\":1,\"753\":1,\"800\":1,\"820\":1,\"821\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"928\":1,\"946\":1,\"993\":1,\"1014\":1,\"1015\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1101\":1,\"1129\":1,\"1147\":1,\"1213\":1,\"1238\":1,\"1239\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1258\":1,\"1286\":1,\"1306\":1,\"1457\":2,\"1481\":1,\"1495\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1542\":2,\"1551\":2,\"1621\":2,\"1681\":2}}],[\"默认值\",{\"1\":{\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"默认为mysql\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"默认authorization\",{\"1\":{\"242\":1,\"271\":1,\"906\":1,\"937\":1,\"1105\":1,\"1138\":1,\"1461\":1,\"1490\":1}}],[\"默认是\",{\"1\":{\"242\":1,\"245\":1,\"366\":1,\"369\":1,\"535\":1,\"538\":1,\"720\":1,\"723\":1,\"906\":1,\"909\":1,\"1105\":1,\"1108\":1,\"1461\":1,\"1464\":1,\"1673\":1,\"1719\":1}}],[\"默认true\",{\"1\":{\"242\":2,\"366\":1,\"535\":2,\"720\":2,\"906\":2,\"1105\":2,\"1461\":2,\"1673\":1,\"1719\":1}}],[\"默认删除当然办理用户权限\",{\"1\":{\"201\":1,\"202\":1,\"334\":1,\"335\":1,\"503\":1,\"504\":1,\"688\":1,\"689\":1,\"874\":1,\"875\":1,\"1070\":1,\"1071\":1,\"1420\":1,\"1421\":1}}],[\"默认不忽略\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1}}],[\"默认不截取\",{\"1\":{\"51\":2,\"72\":2,\"78\":2,\"1151\":2,\"1318\":2,\"1339\":2,\"1345\":2}}],[\"默认初始化节点\",{\"1\":{\"147\":1,\"1553\":1,\"1613\":1}}],[\"默认\",{\"1\":{\"136\":1,\"1457\":1,\"1542\":1}}],[\"默认办理人变量表达式策略\",{\"1\":{\"82\":1,\"477\":1,\"663\":1,\"848\":1,\"1042\":1,\"1155\":1,\"1349\":1}}],[\"默认办理人变量策略\",{\"0\":{\"43\":1,\"471\":1,\"657\":1,\"842\":1,\"1036\":1,\"1262\":1,\"1310\":1},\"1\":{\"40\":1,\"469\":1,\"655\":1,\"840\":1,\"1034\":1,\"1259\":1,\"1307\":1}}],[\"默认按照注入策略顺序\",{\"1\":{\"41\":1,\"1260\":1,\"1308\":1}}],[\"默认逻辑未删除值\",{\"1\":{\"19\":1,\"404\":1,\"589\":1,\"775\":1,\"968\":1,\"1185\":1,\"1286\":1}}],[\"默认开启\",{\"1\":{\"19\":1,\"404\":1,\"589\":1,\"775\":1,\"968\":1,\"1185\":1,\"1286\":1}}],[\"默认先判断是否是监听器表达式\",{\"1\":{\"5\":1,\"1171\":1,\"1272\":1}}],[\"默认支持内置spel表达式\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"4增量脚本sql\",{\"1\":{\"1652\":1,\"1724\":1}}],[\"4<\",{\"1\":{\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1629\":1,\"1640\":1,\"1689\":1,\"1700\":1}}],[\"4终止\",{\"1\":{\"1019\":1}}],[\"4版本后建议使用分派监听器修改办理人\",{\"1\":{\"394\":1,\"579\":1,\"765\":1,\"958\":1}}],[\"4会签\",{\"1\":{\"304\":1,\"338\":1,\"453\":1,\"639\":1,\"692\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"4并行网关\",{\"1\":{\"304\":1,\"305\":1,\"306\":1,\"307\":2,\"308\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":2,\"457\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":2,\"643\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":2,\"828\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":2,\"1022\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":2,\"1527\":1}}],[\"404\",{\"1\":{\"1737\":1}}],[\"400\",{\"1\":{\"303\":1,\"306\":2,\"452\":1,\"455\":2,\"638\":1,\"641\":2,\"823\":1,\"826\":2,\"1017\":1,\"1020\":2,\"1241\":1,\"1244\":2,\"1522\":1,\"1525\":2}}],[\"40\",{\"1\":{\"132\":1,\"303\":2,\"304\":3,\"305\":3,\"306\":1,\"307\":2,\"308\":1,\"309\":1,\"452\":2,\"453\":3,\"454\":3,\"455\":1,\"456\":2,\"457\":1,\"458\":1,\"638\":2,\"639\":3,\"640\":3,\"641\":1,\"642\":2,\"643\":1,\"644\":1,\"823\":2,\"824\":3,\"825\":3,\"826\":1,\"827\":2,\"828\":1,\"829\":1,\"1017\":2,\"1018\":3,\"1019\":3,\"1020\":1,\"1021\":2,\"1022\":1,\"1023\":1,\"1241\":2,\"1242\":3,\"1243\":3,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1522\":2,\"1523\":3,\"1524\":3,\"1525\":1,\"1526\":2,\"1527\":1,\"1528\":1,\"1538\":1}}],[\"4096\",{\"1\":{\"132\":2,\"1538\":2}}],[\"4\",{\"0\":{\"5\":1,\"11\":1,\"42\":1,\"105\":1,\"118\":1,\"134\":1,\"147\":1,\"155\":1,\"163\":1,\"168\":1,\"177\":1,\"194\":1,\"202\":1,\"206\":1,\"207\":1,\"212\":1,\"264\":1,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"280\":1,\"289\":1,\"291\":1,\"292\":1,\"293\":1,\"294\":1,\"295\":2,\"316\":1,\"328\":1,\"335\":1,\"339\":1,\"340\":1,\"345\":1,\"397\":1,\"402\":1,\"419\":1,\"426\":1,\"437\":1,\"439\":1,\"474\":1,\"484\":1,\"497\":1,\"504\":1,\"508\":1,\"509\":1,\"514\":1,\"559\":1,\"561\":1,\"562\":1,\"563\":1,\"564\":1,\"565\":1,\"582\":1,\"587\":1,\"604\":1,\"611\":1,\"622\":1,\"624\":1,\"631\":1,\"660\":1,\"669\":1,\"682\":1,\"689\":1,\"693\":1,\"694\":1,\"699\":1,\"745\":1,\"747\":1,\"748\":1,\"749\":1,\"750\":1,\"751\":1,\"768\":1,\"773\":1,\"790\":1,\"797\":1,\"808\":1,\"810\":1,\"845\":1,\"855\":1,\"868\":1,\"875\":1,\"879\":1,\"880\":1,\"885\":1,\"930\":1,\"932\":1,\"933\":1,\"934\":1,\"935\":1,\"936\":1,\"961\":1,\"966\":1,\"983\":1,\"990\":1,\"1001\":1,\"1003\":1,\"1010\":1,\"1039\":1,\"1048\":1,\"1063\":1,\"1071\":1,\"1075\":1,\"1076\":1,\"1081\":1,\"1131\":1,\"1133\":1,\"1134\":1,\"1135\":1,\"1136\":1,\"1137\":1,\"1156\":1,\"1157\":1,\"1158\":1,\"1171\":1,\"1177\":1,\"1203\":1,\"1210\":1,\"1217\":1,\"1227\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":2,\"1261\":1,\"1272\":1,\"1278\":1,\"1309\":1,\"1372\":1,\"1385\":1,\"1396\":1,\"1413\":1,\"1421\":1,\"1425\":1,\"1426\":1,\"1431\":1,\"1483\":1,\"1485\":1,\"1486\":1,\"1487\":1,\"1488\":1,\"1489\":1,\"1499\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1513\":1,\"1514\":2,\"1540\":1,\"1553\":1,\"1561\":1,\"1569\":1,\"1574\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1593\":1,\"1594\":1,\"1595\":1,\"1596\":1,\"1604\":1,\"1605\":1,\"1606\":1,\"1607\":1,\"1611\":1,\"1615\":1,\"1629\":1,\"1635\":1,\"1636\":1,\"1637\":1,\"1638\":1,\"1646\":1,\"1648\":1,\"1652\":1,\"1660\":1,\"1689\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1698\":1,\"1706\":1,\"1708\":1,\"1724\":1,\"1732\":1,\"1753\":1},\"1\":{\"10\":1,\"39\":1,\"51\":1,\"55\":2,\"56\":1,\"72\":1,\"78\":1,\"90\":1,\"132\":1,\"136\":1,\"238\":9,\"239\":1,\"245\":2,\"273\":1,\"276\":1,\"282\":1,\"295\":1,\"300\":1,\"301\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"369\":2,\"382\":1,\"383\":1,\"396\":1,\"429\":1,\"445\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"538\":2,\"567\":1,\"568\":1,\"581\":1,\"614\":1,\"615\":1,\"631\":1,\"635\":1,\"636\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"723\":2,\"753\":1,\"754\":1,\"767\":1,\"800\":1,\"801\":1,\"816\":1,\"820\":1,\"821\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"909\":2,\"946\":1,\"947\":1,\"960\":1,\"993\":1,\"994\":1,\"1010\":1,\"1014\":1,\"1015\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1101\":9,\"1102\":1,\"1108\":2,\"1147\":1,\"1148\":1,\"1151\":1,\"1161\":2,\"1162\":1,\"1176\":1,\"1213\":1,\"1220\":1,\"1233\":1,\"1238\":1,\"1239\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1258\":1,\"1277\":1,\"1306\":1,\"1318\":1,\"1322\":2,\"1323\":1,\"1339\":1,\"1345\":1,\"1357\":1,\"1457\":2,\"1458\":1,\"1464\":2,\"1492\":1,\"1495\":1,\"1501\":1,\"1514\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1538\":1,\"1542\":1,\"1551\":1,\"1592\":1,\"1621\":2,\"1646\":1,\"1660\":1,\"1670\":1,\"1681\":2,\"1706\":1,\"1716\":1,\"1732\":1}}],[\"比如token\",{\"1\":{\"1653\":1,\"1725\":1}}],[\"比如我的下载到\",{\"1\":{\"1628\":1,\"1688\":1}}],[\"比如网络\",{\"1\":{\"1624\":1,\"1684\":1}}],[\"比如80\",{\"1\":{\"741\":1,\"1592\":1}}],[\"比如xx\",{\"1\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"比如增加办理人\",{\"1\":{\"272\":1,\"1491\":1}}],[\"比如流程图渲染\",{\"0\":{\"189\":1,\"1408\":1},\"1\":{\"189\":1,\"1408\":1}}],[\"比如spring\",{\"1\":{\"134\":1,\"1540\":1}}],[\"比如b\",{\"1\":{\"42\":1,\"470\":1,\"656\":1,\"841\":1,\"1035\":1,\"1261\":1,\"1309\":1}}],[\"比如最后注入spel策略\",{\"1\":{\"41\":1,\"1260\":1,\"1308\":1}}],[\"比如用户\",{\"1\":{\"29\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"326\":1,\"332\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1195\":1,\"1296\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1}}],[\"比如jpa\",{\"1\":{\"22\":1,\"245\":1,\"369\":1,\"407\":1,\"538\":1,\"592\":1,\"723\":1,\"778\":1,\"909\":1,\"971\":1,\"1108\":1,\"1188\":1,\"1289\":1,\"1464\":1}}],[\"比如创建任务前需要初始化信息或者校验数据是否合法\",{\"1\":{\"12\":1,\"398\":1,\"583\":1,\"769\":1,\"962\":1,\"1178\":1,\"1279\":1}}],[\"比如发起人审批\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"比如角色\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"比如\",{\"1\":{\"4\":1,\"44\":1,\"47\":1,\"51\":1,\"72\":1,\"78\":1,\"277\":1,\"282\":2,\"423\":1,\"430\":2,\"472\":1,\"475\":1,\"608\":1,\"615\":2,\"658\":1,\"661\":1,\"794\":1,\"801\":2,\"843\":1,\"846\":1,\"987\":1,\"994\":2,\"1037\":1,\"1040\":1,\"1151\":1,\"1170\":1,\"1207\":1,\"1214\":1,\"1220\":2,\"1263\":1,\"1266\":1,\"1271\":1,\"1311\":1,\"1314\":1,\"1318\":1,\"1339\":1,\"1345\":1,\"1496\":1,\"1501\":2}}],[\"如虎添翼\",{\"1\":{\"1673\":1,\"1719\":1}}],[\"如在未集成snack3库的环境下\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"如还为生效\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"如下\",{\"1\":{\"1612\":1}}],[\"如下图中示例可以很容易实现\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"如若关闭\",{\"1\":{\"1286\":1}}],[\"如com\",{\"1\":{\"388\":1,\"759\":1}}],[\"如token\",{\"0\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"如\",{\"1\":{\"265\":2,\"269\":2,\"270\":1,\"277\":1,\"423\":1,\"560\":2,\"564\":2,\"565\":1,\"608\":1,\"746\":2,\"750\":2,\"751\":1,\"794\":1,\"931\":2,\"935\":2,\"936\":1,\"987\":1,\"1132\":2,\"1136\":2,\"1137\":1,\"1207\":1,\"1214\":1,\"1484\":2,\"1488\":2,\"1489\":1,\"1496\":1,\"1585\":2,\"1596\":2,\"1607\":2,\"1638\":2,\"1698\":2}}],[\"如是网关跳过取下一节点\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"如maven3\",{\"1\":{\"137\":1,\"1543\":1}}],[\"如流程引擎集成与使用\",{\"1\":{\"127\":1,\"1533\":1}}],[\"如有遗漏\",{\"1\":{\"123\":1,\"1390\":1}}],[\"如有想法可联系290631660\",{\"1\":{\"104\":1,\"1371\":1}}],[\"如it支持请求\",{\"1\":{\"105\":1,\"1372\":1}}],[\"如发票审核\",{\"1\":{\"105\":1,\"1372\":1}}],[\"如客户咨询\",{\"1\":{\"105\":1,\"1372\":1}}],[\"如请假\",{\"1\":{\"105\":1,\"1372\":1}}],[\"如何处理long类型精度丢失问题\",{\"1\":{\"131\":1,\"1537\":1}}],[\"如何成为赞助商\",{\"1\":{\"108\":1,\"1375\":1}}],[\"如何成为项目贡献者\",{\"0\":{\"90\":1,\"1357\":1}}],[\"如何贡献\",{\"0\":{\"84\":1,\"1351\":1}}],[\"如需还想按照原本的自动完成\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"如需dromara\",{\"1\":{\"128\":1,\"1534\":1}}],[\"如需求还不够清晰\",{\"1\":{\"89\":1,\"1356\":1}}],[\"如需修改默认值\",{\"1\":{\"19\":1,\"404\":1,\"589\":1,\"775\":1,\"968\":1,\"1185\":1,\"1286\":1}}],[\"如org\",{\"1\":{\"70\":1,\"573\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"如flag\",{\"1\":{\"55\":2,\"1161\":2,\"1322\":2}}],[\"如角色和部门等\",{\"1\":{\"27\":1,\"1193\":1,\"1294\":1}}],[\"如包名1\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"如start\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"如果想要共享后端权限\",{\"1\":{\"1653\":1,\"1725\":1}}],[\"如果扩展了条件表达式策略\",{\"1\":{\"1652\":1,\"1724\":1}}],[\"如果没有此配置没有生效\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"如果没有实例id\",{\"1\":{\"10\":1,\"396\":1,\"581\":1,\"767\":1,\"960\":1,\"1176\":1,\"1277\":1}}],[\"如果版本更新\",{\"1\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"如果驳回\",{\"1\":{\"278\":1,\"424\":1,\"609\":1,\"795\":1,\"988\":1,\"1208\":1,\"1215\":1,\"1497\":1}}],[\"如果觉得内置的id\",{\"1\":{\"247\":1,\"375\":1,\"544\":1,\"729\":1,\"915\":1,\"1114\":1,\"1466\":1}}],[\"如果有多个token\",{\"1\":{\"242\":1,\"271\":1,\"906\":1,\"937\":1,\"1105\":1,\"1138\":1,\"1461\":1,\"1490\":1}}],[\"如果有多个监听器\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"如果需要工作流共享业务系统权限\",{\"1\":{\"242\":1,\"271\":1,\"906\":1,\"937\":1,\"1105\":1,\"1138\":1,\"1461\":1,\"1490\":1}}],[\"如果不满足实际业务\",{\"1\":{\"242\":1,\"245\":1,\"251\":1,\"366\":1,\"369\":1,\"379\":1,\"535\":1,\"538\":1,\"548\":1,\"720\":1,\"723\":1,\"733\":1,\"906\":1,\"909\":1,\"919\":1,\"1105\":1,\"1108\":1,\"1118\":1,\"1461\":1,\"1464\":1,\"1470\":1}}],[\"如果指定节点\",{\"1\":{\"192\":1,\"199\":1,\"326\":1,\"332\":1,\"495\":1,\"501\":1,\"680\":1,\"686\":1,\"866\":1,\"872\":1,\"1061\":1,\"1068\":1,\"1411\":1,\"1418\":1}}],[\"如果是对全表的删除或更新操作\",{\"1\":{\"136\":1,\"1542\":1}}],[\"如果是互斥网关则会判断是否满足条件\",{\"1\":{\"119\":1,\"420\":1,\"605\":1,\"791\":1,\"984\":1,\"1204\":1,\"1386\":1}}],[\"如果还不行\",{\"1\":{\"132\":1,\"1538\":1}}],[\"如果内置的接口不满足或者不够支持实际业务开发\",{\"1\":{\"62\":1,\"939\":1,\"1140\":1,\"1329\":1}}],[\"如果截取\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"如果业务系统不开启租户\",{\"1\":{\"32\":1,\"461\":1,\"647\":1,\"832\":1,\"1026\":1,\"1250\":1,\"1299\":1}}],[\"如果业务和工作流引擎中的租户字段不一致\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"如果满足不了需求\",{\"1\":{\"23\":1,\"1189\":1,\"1290\":1}}],[\"如果设置了发起人审批\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"如果\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"如果您的企业也使用了\",{\"1\":{\"0\":1}}],[\"如果您的开源项目也使用了\",{\"1\":{\"0\":1}}],[\"分割不同监听器\",{\"1\":{\"400\":1,\"585\":1,\"771\":1,\"964\":1}}],[\"分页对象\",{\"1\":{\"211\":1,\"344\":1,\"513\":1,\"698\":1,\"884\":1,\"1080\":1,\"1430\":1}}],[\"分页查询\",{\"0\":{\"211\":1,\"344\":1,\"513\":1,\"698\":1,\"884\":1,\"1080\":1,\"1430\":1},\"1\":{\"211\":1,\"344\":1,\"513\":1,\"698\":1,\"884\":1,\"1080\":1,\"1430\":1}}],[\"分页插件\",{\"1\":{\"136\":2,\"1542\":2}}],[\"分发源码时候\",{\"1\":{\"104\":1,\"1371\":1}}],[\"分离部署\",{\"0\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"分派后执行\",{\"1\":{\"1672\":1,\"1718\":1}}],[\"分派\",{\"1\":{\"16\":1,\"1182\":1,\"1283\":1}}],[\"分派监听器执行结束\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"分派监听器开始执行\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"分派监听器实现类例子\",{\"0\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"分派监听器\",{\"1\":{\"8\":1,\"16\":1,\"394\":1,\"579\":1,\"765\":1,\"958\":1,\"1174\":1,\"1182\":1,\"1275\":1,\"1283\":1}}],[\"分派办理人监听器\",{\"1\":{\"3\":1,\"390\":1,\"575\":1,\"761\":1,\"954\":1,\"1169\":1,\"1270\":1,\"1672\":1,\"1718\":1}}],[\"分隔\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"用逗号隔开\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"用逗号分隔\",{\"1\":{\"242\":1,\"271\":1,\"906\":1,\"937\":1,\"1105\":1,\"1138\":1,\"1461\":1,\"1490\":1}}],[\"用来处理超过js数据范围的long类型\",{\"1\":{\"131\":1,\"1537\":1}}],[\"用于流程执行中的数据转递\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"用于分页显示\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"用于it服务请求的处理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"用于管理客户服务请求\",{\"1\":{\"105\":1,\"1372\":1}}],[\"用于管理企业的日常业务流程\",{\"1\":{\"105\":1,\"1372\":1}}],[\"用户权限标识集合\",{\"1\":{\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1}}],[\"用户列表\",{\"1\":{\"269\":1,\"564\":1,\"750\":1,\"935\":1,\"1136\":1,\"1488\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"用户\",{\"1\":{\"269\":1,\"270\":3,\"564\":1,\"565\":3,\"750\":1,\"751\":3,\"935\":1,\"936\":3,\"1136\":1,\"1137\":3,\"1488\":1,\"1489\":3,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"用户自定义排序方案\",{\"0\":{\"230\":1,\"363\":1,\"532\":1,\"717\":1,\"903\":1,\"1099\":1,\"1449\":1},\"1\":{\"230\":1,\"363\":1,\"532\":1,\"717\":1,\"903\":1,\"1099\":1,\"1449\":1}}],[\"用户所拥有的权限标识\",{\"1\":{\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"338\":1,\"507\":1,\"692\":1,\"878\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"用户角色抽取出来\",{\"1\":{\"171\":1,\"1577\":1}}],[\"用户类\",{\"1\":{\"48\":1,\"476\":1,\"662\":1,\"847\":1,\"1041\":1,\"1267\":1,\"1315\":1}}],[\"用户等\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"用\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"time\",{\"1\":{\"303\":2,\"304\":2,\"305\":2,\"306\":2,\"307\":2,\"308\":2,\"309\":2,\"452\":2,\"453\":2,\"454\":2,\"455\":2,\"456\":2,\"457\":2,\"458\":2,\"638\":2,\"639\":2,\"640\":2,\"641\":2,\"642\":2,\"643\":2,\"644\":2,\"823\":2,\"824\":2,\"825\":2,\"826\":2,\"827\":2,\"828\":2,\"829\":2,\"1017\":2,\"1018\":2,\"1019\":2,\"1020\":2,\"1021\":2,\"1022\":2,\"1023\":2,\"1241\":2,\"1242\":2,\"1243\":2,\"1244\":2,\"1245\":2,\"1246\":2,\"1247\":2,\"1522\":2,\"1523\":2,\"1524\":2,\"1525\":2,\"1526\":2,\"1527\":2,\"1528\":2}}],[\"title\",{\"1\":{\"0\":1,\"124\":1,\"1530\":1}}],[\"this\",{\"1\":{\"262\":4,\"557\":4,\"743\":4,\"928\":4,\"1129\":4,\"1481\":4}}],[\"throws\",{\"1\":{\"131\":1,\"258\":1,\"292\":1,\"293\":1,\"295\":2,\"442\":1,\"443\":1,\"445\":2,\"553\":1,\"628\":1,\"629\":1,\"631\":2,\"738\":1,\"813\":1,\"814\":1,\"816\":2,\"924\":1,\"1007\":1,\"1008\":1,\"1010\":2,\"1125\":1,\"1230\":1,\"1231\":1,\"1233\":2,\"1477\":1,\"1511\":1,\"1512\":1,\"1514\":2,\"1537\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1643\":1,\"1644\":1,\"1646\":2,\"1670\":1,\"1693\":1,\"1703\":1,\"1704\":1,\"1706\":2,\"1716\":1}}],[\"throw\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1286\":1,\"1337\":2}}],[\"threadlocal<>\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"threadlocal<string>\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"threadlocal\",{\"1\":{\"32\":4,\"33\":3,\"461\":4,\"462\":3,\"647\":4,\"648\":3,\"832\":4,\"833\":3,\"1026\":4,\"1027\":3,\"1250\":4,\"1251\":3,\"1299\":4,\"1300\":3}}],[\"ttc\",{\"1\":{\"132\":2,\"1538\":2}}],[\"t\",{\"1\":{\"51\":1,\"72\":1,\"78\":1,\"1151\":1,\"1318\":1,\"1339\":1,\"1345\":1}}],[\"target\",{\"1\":{\"304\":2,\"453\":2,\"639\":2,\"743\":1,\"744\":1,\"824\":2,\"1018\":2,\"1242\":2,\"1523\":2}}],[\"tabs页签\",{\"1\":{\"269\":1,\"270\":1,\"564\":1,\"565\":1,\"750\":1,\"751\":1,\"935\":1,\"936\":1,\"1136\":1,\"1137\":1,\"1488\":1,\"1489\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"tableinfohelper\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"tableinfo\",{\"1\":{\"32\":7,\"33\":3,\"461\":7,\"462\":3,\"647\":7,\"648\":3,\"832\":7,\"833\":3,\"1026\":7,\"1027\":3,\"1250\":7,\"1251\":3,\"1286\":5,\"1299\":7,\"1300\":3}}],[\"tablenames\",{\"1\":{\"1286\":2}}],[\"tablename\",{\"1\":{\"32\":6,\"33\":2,\"461\":6,\"462\":2,\"647\":6,\"648\":2,\"832\":6,\"833\":2,\"1026\":6,\"1027\":2,\"1250\":6,\"1251\":2,\"1286\":2,\"1299\":6,\"1300\":2}}],[\"task表的id\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"taskid\",{\"1\":{\"59\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"332\":1,\"333\":1,\"334\":2,\"335\":2,\"336\":2,\"337\":2,\"373\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"542\":1,\"686\":1,\"687\":1,\"688\":2,\"689\":2,\"690\":2,\"691\":2,\"727\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"913\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1112\":1,\"1326\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"taskmapper\",{\"1\":{\"24\":2,\"26\":1,\"409\":2,\"411\":1,\"594\":2,\"596\":1,\"780\":2,\"782\":1,\"973\":2,\"975\":1,\"1190\":2,\"1192\":1,\"1291\":2,\"1293\":1}}],[\"task\",{\"1\":{\"11\":3,\"32\":2,\"39\":3,\"301\":2,\"304\":1,\"397\":3,\"450\":2,\"453\":1,\"461\":2,\"582\":3,\"636\":2,\"639\":1,\"647\":2,\"768\":3,\"821\":2,\"824\":1,\"832\":2,\"961\":3,\"1015\":2,\"1018\":1,\"1026\":2,\"1177\":3,\"1194\":1,\"1239\":2,\"1242\":1,\"1250\":2,\"1258\":3,\"1278\":3,\"1286\":2,\"1299\":2,\"1306\":3,\"1520\":2,\"1523\":1}}],[\"taskserviceimpl\",{\"1\":{\"1194\":1}}],[\"taskservice待办任务接口\",{\"0\":{\"198\":1,\"331\":1,\"500\":1,\"685\":1,\"871\":1,\"1067\":1,\"1417\":1}}],[\"taskservice\",{\"1\":{\"59\":1,\"275\":12,\"373\":1,\"542\":1,\"727\":1,\"913\":1,\"1112\":1,\"1326\":1,\"1494\":12,\"1670\":2,\"1716\":2}}],[\"tasks\",{\"1\":{\"11\":2,\"397\":2,\"582\":2,\"768\":2,\"961\":2,\"1177\":2,\"1278\":2}}],[\"text\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"template>\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"termination\",{\"1\":{\"193\":1,\"200\":1,\"327\":1,\"333\":1,\"496\":1,\"502\":1,\"681\":1,\"687\":1,\"867\":1,\"873\":1,\"1062\":1,\"1069\":1,\"1412\":1,\"1419\":1,\"1670\":2,\"1716\":2}}],[\"test模块的测类\",{\"1\":{\"291\":1,\"441\":1,\"627\":1,\"812\":1,\"1006\":1,\"1229\":1,\"1510\":1}}],[\"test项目中\",{\"1\":{\"291\":1,\"441\":1,\"627\":1,\"812\":1,\"1006\":1,\"1229\":1,\"1510\":1}}],[\"testvariable\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"test\",{\"1\":{\"35\":1,\"39\":1,\"83\":1,\"245\":2,\"369\":2,\"464\":1,\"538\":2,\"650\":1,\"723\":2,\"835\":1,\"909\":2,\"1029\":1,\"1108\":2,\"1253\":1,\"1258\":1,\"1302\":1,\"1306\":1,\"1350\":1,\"1464\":2}}],[\"testleavemap\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"testleavemapper\",{\"1\":{\"10\":5,\"396\":4,\"581\":4,\"767\":4,\"960\":4,\"1176\":5,\"1277\":5}}],[\"testleave\",{\"1\":{\"10\":18,\"45\":1,\"48\":1,\"58\":4,\"59\":1,\"239\":5,\"310\":7,\"372\":4,\"373\":1,\"383\":5,\"396\":16,\"467\":7,\"473\":1,\"476\":1,\"541\":4,\"542\":1,\"568\":5,\"581\":16,\"653\":7,\"659\":1,\"662\":1,\"726\":4,\"727\":1,\"754\":5,\"767\":16,\"838\":7,\"844\":1,\"847\":1,\"912\":4,\"913\":1,\"947\":5,\"960\":16,\"1032\":7,\"1038\":1,\"1041\":1,\"1102\":5,\"1111\":4,\"1112\":1,\"1148\":5,\"1176\":18,\"1256\":7,\"1264\":1,\"1267\":1,\"1277\":18,\"1312\":1,\"1315\":1,\"1325\":4,\"1326\":1,\"1458\":5,\"1529\":7,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"testleaveserviceimpl\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"tenanthandler\",{\"1\":{\"36\":2,\"37\":1,\"243\":3,\"246\":2,\"367\":3,\"370\":2,\"465\":2,\"466\":1,\"536\":3,\"539\":2,\"651\":2,\"652\":1,\"721\":3,\"724\":2,\"836\":2,\"837\":1,\"907\":3,\"910\":2,\"1030\":2,\"1031\":1,\"1106\":3,\"1109\":2,\"1254\":2,\"1255\":1,\"1303\":2,\"1304\":1,\"1462\":3,\"1465\":2,\"1673\":2,\"1719\":2}}],[\"tenantinterceptor\",{\"1\":{\"32\":3,\"461\":3,\"647\":3,\"832\":3,\"1026\":3,\"1250\":3,\"1299\":3}}],[\"tenantlineinnerinterceptor\",{\"1\":{\"32\":2,\"33\":4,\"461\":2,\"462\":4,\"647\":2,\"648\":4,\"832\":2,\"833\":4,\"1026\":2,\"1027\":4,\"1250\":2,\"1251\":4,\"1299\":2,\"1300\":4}}],[\"tenantlinehandler\",{\"1\":{\"32\":1,\"33\":1,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1}}],[\"tenant\",{\"1\":{\"32\":3,\"33\":2,\"35\":1,\"242\":1,\"245\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"366\":1,\"369\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"461\":3,\"462\":2,\"464\":1,\"535\":1,\"538\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"647\":3,\"648\":2,\"650\":1,\"720\":1,\"723\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"832\":3,\"833\":2,\"835\":1,\"906\":1,\"909\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1026\":3,\"1027\":2,\"1029\":1,\"1105\":1,\"1108\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1250\":3,\"1251\":2,\"1253\":1,\"1299\":3,\"1300\":2,\"1302\":1,\"1461\":1,\"1464\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1673\":1,\"1719\":1}}],[\"treefundto<>\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"treefundto<sysdept>\",{\"1\":{\"270\":1,\"565\":1,\"751\":1,\"936\":1,\"1137\":1,\"1489\":1}}],[\"treefundto\",{\"1\":{\"270\":2,\"565\":2,\"751\":2,\"936\":2,\"1137\":2,\"1489\":2}}],[\"try\",{\"1\":{\"67\":1,\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"944\":1,\"952\":2,\"1145\":1,\"1166\":2,\"1286\":1,\"1334\":1,\"1337\":2}}],[\"trim\",{\"1\":{\"55\":2,\"56\":3,\"1161\":2,\"1162\":3,\"1322\":2,\"1323\":3}}],[\"transfer\",{\"1\":{\"201\":1,\"275\":3,\"277\":1,\"334\":1,\"423\":1,\"503\":1,\"608\":1,\"688\":1,\"794\":1,\"874\":1,\"987\":1,\"1070\":1,\"1207\":1,\"1214\":1,\"1420\":1,\"1494\":3,\"1496\":1}}],[\"transactional\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"transaction\",{\"1\":{\"25\":1,\"136\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1,\"1542\":1}}],[\"tran\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"true\",{\"1\":{\"22\":1,\"32\":1,\"33\":1,\"54\":1,\"76\":1,\"133\":3,\"136\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"242\":4,\"245\":3,\"338\":1,\"366\":3,\"369\":3,\"407\":1,\"461\":1,\"462\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"535\":4,\"538\":3,\"592\":1,\"647\":1,\"648\":1,\"692\":1,\"720\":4,\"723\":3,\"743\":1,\"744\":1,\"778\":1,\"832\":1,\"833\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"906\":4,\"909\":3,\"971\":1,\"1026\":1,\"1027\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1105\":4,\"1108\":3,\"1158\":1,\"1160\":1,\"1188\":1,\"1250\":1,\"1251\":1,\"1286\":1,\"1289\":1,\"1299\":1,\"1300\":1,\"1321\":1,\"1343\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1461\":4,\"1464\":3,\"1539\":3,\"1542\":1,\"1673\":3,\"1719\":3}}],[\"total是业务数据总数\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"total\",{\"1\":{\"270\":6,\"565\":6,\"751\":6,\"936\":6,\"1137\":6,\"1489\":6}}],[\"token是业务系统的token\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"token案例\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"token\",{\"0\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1},\"1\":{\"242\":1,\"271\":3,\"906\":1,\"937\":3,\"1105\":1,\"1138\":3,\"1461\":1,\"1490\":3}}],[\"top\",{\"1\":{\"83\":1,\"103\":1,\"111\":1,\"1350\":1,\"1370\":1,\"1378\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1615\":1,\"1649\":1,\"1709\":1}}],[\"tojsonstring\",{\"1\":{\"17\":1,\"402\":1,\"587\":1,\"773\":1,\"966\":1,\"1183\":1,\"1284\":1}}],[\"tolist\",{\"1\":{\"9\":1,\"29\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1195\":1,\"1276\":1,\"1296\":1}}],[\"tostring\",{\"1\":{\"9\":2,\"58\":1,\"131\":1,\"270\":3,\"295\":3,\"310\":1,\"372\":1,\"395\":2,\"445\":3,\"467\":1,\"541\":1,\"565\":3,\"580\":2,\"631\":3,\"653\":1,\"726\":1,\"751\":3,\"766\":2,\"816\":3,\"838\":1,\"912\":1,\"936\":3,\"959\":2,\"1010\":3,\"1032\":1,\"1111\":1,\"1137\":3,\"1175\":2,\"1233\":3,\"1256\":1,\"1276\":2,\"1325\":1,\"1489\":3,\"1514\":3,\"1529\":1,\"1537\":1,\"1646\":2,\"1706\":2}}],[\"typefactory\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"typed\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"type=\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"type\",{\"1\":{\"4\":1,\"124\":1,\"131\":3,\"133\":1,\"155\":1,\"242\":2,\"303\":1,\"304\":3,\"305\":1,\"306\":3,\"307\":3,\"308\":1,\"309\":1,\"366\":2,\"452\":1,\"453\":3,\"454\":1,\"455\":3,\"456\":3,\"457\":1,\"458\":1,\"535\":2,\"638\":1,\"639\":3,\"640\":1,\"641\":3,\"642\":3,\"643\":1,\"644\":1,\"720\":2,\"823\":1,\"824\":3,\"825\":1,\"826\":3,\"827\":3,\"828\":1,\"829\":1,\"906\":2,\"1017\":1,\"1018\":3,\"1019\":1,\"1020\":3,\"1021\":3,\"1022\":1,\"1023\":1,\"1105\":2,\"1170\":1,\"1241\":1,\"1242\":3,\"1243\":1,\"1244\":3,\"1245\":3,\"1246\":1,\"1247\":1,\"1271\":1,\"1461\":2,\"1522\":1,\"1523\":3,\"1524\":1,\"1525\":3,\"1526\":3,\"1527\":1,\"1528\":1,\"1530\":1,\"1537\":3,\"1539\":1,\"1561\":1,\"1673\":1,\"1719\":1}}],[\"type和listener\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"3或者以上\",{\"1\":{\"1286\":1}}],[\"3<\",{\"1\":{\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2}}],[\"3待办任务的委托人权限\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"3自动通过\",{\"1\":{\"305\":1,\"454\":1,\"640\":1,\"825\":1,\"1019\":1,\"1243\":1,\"1524\":1}}],[\"3互斥网关\",{\"1\":{\"304\":1,\"305\":1,\"306\":1,\"307\":2,\"308\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":2,\"457\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":2,\"643\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":2,\"828\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":2,\"1022\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":2,\"1527\":1}}],[\"3委派\",{\"1\":{\"205\":1,\"304\":1,\"338\":1,\"453\":1,\"507\":1,\"639\":1,\"692\":1,\"824\":1,\"878\":1,\"1018\":1,\"1074\":1,\"1242\":1,\"1424\":1,\"1523\":1}}],[\"31\",{\"0\":{\"170\":1,\"1576\":1}}],[\"30\",{\"1\":{\"123\":4,\"1390\":4}}],[\"3\",{\"0\":{\"4\":1,\"10\":1,\"26\":1,\"37\":1,\"41\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":2,\"60\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":2,\"74\":1,\"75\":1,\"76\":1,\"80\":1,\"81\":1,\"82\":1,\"104\":1,\"117\":1,\"133\":1,\"144\":1,\"145\":1,\"147\":1,\"148\":2,\"149\":1,\"150\":1,\"156\":1,\"164\":1,\"169\":1,\"176\":1,\"193\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":2,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"211\":1,\"236\":1,\"252\":1,\"260\":1,\"261\":1,\"262\":1,\"263\":2,\"264\":1,\"265\":1,\"275\":1,\"279\":1,\"285\":1,\"286\":1,\"287\":1,\"288\":2,\"289\":1,\"290\":1,\"294\":1,\"315\":1,\"327\":1,\"331\":1,\"332\":1,\"333\":1,\"334\":2,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"344\":1,\"374\":1,\"380\":1,\"384\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":2,\"397\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"411\":1,\"418\":1,\"425\":1,\"433\":1,\"434\":1,\"435\":1,\"436\":2,\"437\":1,\"438\":1,\"466\":1,\"471\":1,\"483\":1,\"496\":1,\"500\":1,\"501\":1,\"502\":1,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"513\":1,\"543\":1,\"549\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":2,\"559\":1,\"560\":1,\"569\":1,\"578\":1,\"579\":1,\"580\":1,\"581\":2,\"582\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"596\":1,\"603\":1,\"610\":1,\"618\":1,\"619\":1,\"620\":1,\"621\":2,\"622\":1,\"623\":1,\"630\":1,\"652\":1,\"657\":1,\"668\":1,\"681\":1,\"685\":1,\"686\":1,\"687\":1,\"688\":2,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"698\":1,\"728\":1,\"734\":1,\"740\":1,\"741\":1,\"742\":1,\"743\":1,\"744\":2,\"745\":1,\"746\":1,\"755\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":2,\"768\":1,\"769\":1,\"770\":1,\"771\":1,\"772\":1,\"782\":1,\"789\":1,\"796\":1,\"804\":1,\"805\":1,\"806\":1,\"807\":2,\"808\":1,\"809\":1,\"837\":1,\"842\":1,\"854\":1,\"867\":1,\"871\":1,\"872\":1,\"873\":1,\"874\":2,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"884\":1,\"914\":1,\"920\":1,\"926\":1,\"927\":1,\"928\":1,\"929\":2,\"930\":1,\"931\":1,\"941\":1,\"942\":1,\"943\":1,\"944\":1,\"948\":1,\"957\":1,\"958\":1,\"959\":1,\"960\":2,\"961\":1,\"962\":1,\"963\":1,\"964\":1,\"965\":1,\"975\":1,\"982\":1,\"989\":1,\"997\":1,\"998\":1,\"999\":1,\"1000\":2,\"1001\":1,\"1002\":1,\"1009\":1,\"1031\":1,\"1036\":1,\"1047\":1,\"1062\":1,\"1067\":1,\"1068\":1,\"1069\":1,\"1070\":2,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1080\":1,\"1113\":1,\"1119\":1,\"1127\":1,\"1128\":1,\"1129\":1,\"1130\":2,\"1131\":1,\"1132\":1,\"1142\":1,\"1143\":1,\"1144\":1,\"1145\":2,\"1149\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1162\":1,\"1170\":1,\"1176\":1,\"1192\":1,\"1202\":1,\"1209\":1,\"1216\":1,\"1223\":1,\"1224\":1,\"1225\":1,\"1226\":2,\"1227\":1,\"1228\":1,\"1232\":1,\"1255\":1,\"1260\":1,\"1271\":1,\"1277\":1,\"1293\":1,\"1304\":1,\"1308\":1,\"1320\":1,\"1321\":1,\"1322\":1,\"1323\":2,\"1327\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":2,\"1341\":1,\"1342\":1,\"1343\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1371\":1,\"1384\":1,\"1395\":1,\"1412\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":2,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1430\":1,\"1455\":1,\"1471\":1,\"1479\":1,\"1480\":1,\"1481\":1,\"1482\":2,\"1483\":1,\"1484\":1,\"1494\":1,\"1498\":1,\"1504\":1,\"1505\":1,\"1506\":1,\"1507\":2,\"1508\":1,\"1509\":1,\"1513\":1,\"1539\":1,\"1550\":1,\"1551\":1,\"1553\":1,\"1554\":2,\"1555\":1,\"1556\":1,\"1562\":1,\"1570\":1,\"1575\":1,\"1581\":1,\"1592\":1,\"1603\":1,\"1611\":1,\"1614\":1,\"1628\":1,\"1634\":1,\"1645\":1,\"1647\":1,\"1652\":1,\"1653\":2,\"1654\":1,\"1655\":1,\"1661\":1,\"1688\":1,\"1694\":1,\"1705\":1,\"1707\":1,\"1724\":1,\"1725\":2,\"1726\":1,\"1727\":1,\"1733\":1,\"1747\":1,\"1749\":1,\"1751\":2,\"1753\":1,\"1755\":1},\"1\":{\"19\":1,\"27\":1,\"42\":1,\"51\":1,\"72\":1,\"78\":1,\"90\":1,\"121\":1,\"136\":1,\"155\":1,\"238\":1,\"253\":1,\"273\":1,\"276\":1,\"277\":3,\"278\":3,\"282\":1,\"300\":1,\"301\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":2,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"382\":1,\"423\":3,\"424\":3,\"429\":1,\"449\":1,\"450\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":2,\"456\":1,\"457\":1,\"458\":1,\"550\":1,\"567\":1,\"589\":1,\"608\":3,\"609\":3,\"614\":1,\"615\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"635\":1,\"636\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":2,\"642\":1,\"643\":1,\"644\":1,\"653\":1,\"655\":1,\"735\":1,\"741\":1,\"753\":1,\"775\":1,\"794\":3,\"795\":3,\"800\":1,\"801\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":2,\"820\":1,\"821\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":2,\"827\":1,\"828\":1,\"829\":1,\"838\":1,\"840\":1,\"921\":1,\"946\":1,\"968\":1,\"987\":3,\"988\":3,\"993\":1,\"994\":1,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":2,\"1014\":1,\"1015\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":2,\"1021\":1,\"1022\":1,\"1023\":1,\"1032\":1,\"1034\":1,\"1101\":1,\"1120\":1,\"1147\":1,\"1151\":1,\"1185\":1,\"1193\":1,\"1207\":3,\"1208\":3,\"1213\":1,\"1214\":3,\"1215\":3,\"1220\":1,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":2,\"1238\":1,\"1239\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":2,\"1245\":1,\"1246\":1,\"1247\":1,\"1256\":1,\"1286\":1,\"1294\":1,\"1309\":1,\"1318\":1,\"1339\":1,\"1345\":1,\"1357\":1,\"1388\":1,\"1457\":1,\"1472\":1,\"1492\":1,\"1495\":1,\"1496\":3,\"1497\":3,\"1501\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":2,\"1526\":1,\"1527\":1,\"1528\":1,\"1529\":1,\"1542\":1,\"1561\":1,\"1578\":1,\"1579\":1,\"1589\":1,\"1590\":1,\"1592\":1,\"1600\":1,\"1601\":1,\"1620\":1,\"1631\":1,\"1632\":1,\"1640\":1,\"1652\":1,\"1655\":1,\"1680\":1,\"1691\":1,\"1692\":1,\"1700\":1,\"1724\":1,\"1727\":1}}],[\"function\",{\"1\":{\"263\":1,\"265\":1,\"558\":1,\"560\":1,\"744\":1,\"746\":1,\"929\":1,\"931\":1,\"1130\":1,\"1132\":1,\"1482\":1,\"1484\":1}}],[\"from\",{\"1\":{\"155\":2,\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1,\"1561\":2,\"1660\":1,\"1732\":1}}],[\"frameborder=\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"framework\",{\"1\":{\"136\":1,\"1542\":1}}],[\"frameinvoker\",{\"1\":{\"24\":1,\"26\":1,\"409\":1,\"411\":1,\"594\":1,\"596\":1,\"780\":1,\"782\":1,\"973\":1,\"975\":1,\"1190\":1,\"1192\":1,\"1291\":1,\"1293\":1}}],[\"found\",{\"1\":{\"1737\":1}}],[\"fonts目录\",{\"1\":{\"132\":1,\"1538\":1}}],[\"fonts目录下\",{\"1\":{\"132\":1,\"1538\":1}}],[\"fonts\",{\"1\":{\"132\":3,\"1538\":3}}],[\"fork<\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"fork项目到自己仓库\",{\"0\":{\"93\":1,\"1360\":1}}],[\"form\",{\"1\":{\"303\":2,\"304\":2,\"306\":2,\"308\":2,\"452\":2,\"453\":2,\"455\":2,\"457\":2,\"638\":2,\"639\":2,\"641\":2,\"643\":2,\"823\":2,\"824\":2,\"826\":2,\"828\":2,\"1017\":2,\"1018\":2,\"1020\":2,\"1022\":2,\"1241\":2,\"1242\":2,\"1244\":2,\"1246\":2,\"1522\":2,\"1523\":2,\"1525\":2,\"1527\":2}}],[\"format\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"forwarded\",{\"1\":{\"67\":2,\"944\":2,\"1145\":2,\"1334\":2}}],[\"foreach\",{\"1\":{\"32\":2,\"33\":1,\"39\":2,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1258\":2,\"1299\":2,\"1300\":1,\"1306\":2}}],[\"for\",{\"1\":{\"11\":2,\"67\":2,\"397\":2,\"582\":2,\"768\":2,\"944\":2,\"961\":2,\"1145\":2,\"1177\":2,\"1278\":2,\"1286\":1,\"1334\":2}}],[\"fc\",{\"1\":{\"132\":1,\"1538\":1}}],[\"feat\",{\"1\":{\"98\":1,\"145\":1,\"147\":7,\"148\":1,\"149\":4,\"150\":4,\"152\":4,\"154\":5,\"155\":10,\"157\":3,\"1365\":1,\"1550\":1,\"1551\":2,\"1553\":7,\"1554\":1,\"1555\":4,\"1556\":4,\"1558\":4,\"1560\":5,\"1561\":10,\"1563\":3,\"1613\":7}}],[\"fastjson\",{\"1\":{\"1657\":1,\"1729\":1}}],[\"fastjson和gson\",{\"1\":{\"152\":1,\"1558\":1}}],[\"fastjson和gson四种json库\",{\"1\":{\"69\":1,\"387\":1,\"572\":1,\"758\":1,\"951\":1,\"1165\":1,\"1336\":1}}],[\"false\",{\"1\":{\"21\":1,\"32\":2,\"33\":1,\"51\":1,\"72\":1,\"78\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"245\":1,\"338\":1,\"369\":1,\"406\":1,\"461\":2,\"462\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"538\":1,\"591\":1,\"647\":2,\"648\":1,\"692\":1,\"723\":1,\"777\":1,\"832\":2,\"833\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"909\":1,\"970\":1,\"1026\":2,\"1027\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1108\":1,\"1151\":1,\"1187\":1,\"1250\":2,\"1251\":1,\"1286\":1,\"1288\":1,\"1299\":2,\"1300\":1,\"1318\":1,\"1339\":1,\"1345\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1464\":1}}],[\"fileinputstream\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1670\":1,\"1703\":1,\"1716\":1}}],[\"file\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1643\":1,\"1703\":1}}],[\"files\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"filterchaindefinitionmap\",{\"1\":{\"259\":4,\"554\":3,\"739\":4,\"925\":4,\"1126\":4,\"1478\":4}}],[\"filterchain\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"fill\",{\"1\":{\"242\":1,\"245\":1,\"251\":1,\"366\":1,\"369\":1,\"379\":1,\"535\":1,\"538\":1,\"548\":1,\"720\":1,\"723\":1,\"733\":1,\"906\":1,\"909\":1,\"919\":1,\"1105\":1,\"1108\":1,\"1118\":1,\"1461\":1,\"1464\":1,\"1470\":1,\"1673\":1,\"1719\":1}}],[\"fix\",{\"1\":{\"98\":1,\"148\":4,\"149\":2,\"150\":2,\"151\":1,\"152\":2,\"153\":1,\"154\":3,\"155\":14,\"156\":2,\"157\":4,\"166\":1,\"170\":1,\"1365\":1,\"1554\":4,\"1555\":2,\"1556\":2,\"1557\":1,\"1558\":2,\"1559\":1,\"1560\":3,\"1561\":14,\"1562\":2,\"1563\":4,\"1572\":1,\"1576\":1}}],[\"fields\",{\"1\":{\"1286\":2}}],[\"field\",{\"1\":{\"32\":7,\"33\":4,\"461\":7,\"462\":4,\"647\":7,\"648\":4,\"832\":7,\"833\":4,\"1026\":7,\"1027\":4,\"1250\":7,\"1251\":4,\"1286\":6,\"1299\":7,\"1300\":4}}],[\"fieldlist\",{\"1\":{\"32\":4,\"33\":2,\"461\":4,\"462\":2,\"647\":4,\"648\":2,\"832\":4,\"833\":2,\"1026\":4,\"1027\":2,\"1250\":4,\"1251\":2,\"1299\":4,\"1300\":2}}],[\"find\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"final\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"16\":1,\"70\":1,\"131\":5,\"310\":1,\"388\":1,\"395\":1,\"396\":1,\"397\":1,\"467\":1,\"573\":1,\"580\":1,\"581\":1,\"582\":1,\"653\":1,\"759\":1,\"766\":1,\"767\":1,\"768\":1,\"838\":1,\"952\":1,\"959\":1,\"960\":1,\"961\":1,\"1032\":1,\"1166\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":1,\"1256\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":1,\"1337\":1,\"1529\":1,\"1537\":5}}],[\"finishlistener\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"finish\",{\"1\":{\"3\":1,\"4\":1,\"8\":2,\"16\":1,\"390\":1,\"394\":1,\"575\":1,\"579\":1,\"761\":1,\"765\":1,\"954\":1,\"958\":1,\"1169\":1,\"1170\":1,\"1174\":2,\"1182\":1,\"1270\":1,\"1271\":1,\"1275\":2,\"1283\":1,\"1672\":1,\"1718\":1}}],[\"flag为变量和以下方法入参命名一致\",{\"1\":{\"239\":1,\"383\":1,\"568\":1,\"754\":1,\"947\":1,\"1102\":1,\"1148\":1,\"1458\":1}}],[\"flag\",{\"1\":{\"32\":3,\"82\":1,\"238\":1,\"239\":6,\"303\":1,\"304\":1,\"305\":1,\"306\":2,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"383\":6,\"452\":1,\"453\":1,\"454\":1,\"455\":2,\"456\":1,\"457\":1,\"458\":1,\"461\":3,\"467\":1,\"477\":1,\"568\":6,\"638\":1,\"639\":1,\"640\":1,\"641\":2,\"642\":1,\"643\":1,\"644\":1,\"647\":3,\"653\":1,\"663\":1,\"754\":6,\"823\":1,\"824\":1,\"825\":1,\"826\":2,\"827\":1,\"828\":1,\"829\":1,\"832\":3,\"838\":1,\"848\":1,\"947\":6,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":2,\"1021\":1,\"1022\":1,\"1023\":1,\"1026\":3,\"1032\":1,\"1042\":1,\"1101\":1,\"1102\":6,\"1148\":6,\"1155\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":2,\"1245\":1,\"1246\":1,\"1247\":1,\"1250\":3,\"1256\":1,\"1299\":3,\"1349\":1,\"1457\":3,\"1458\":5,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":2,\"1526\":1,\"1527\":1,\"1528\":1,\"1529\":1,\"1551\":2}}],[\"flex扩展包\",{\"1\":{\"157\":1,\"1563\":1}}],[\"flex的solon扩展包\",{\"1\":{\"155\":1,\"1561\":1}}],[\"flex的自带方法\",{\"1\":{\"26\":1,\"411\":1,\"596\":1,\"782\":1,\"975\":1,\"1192\":1,\"1293\":1}}],[\"flex和jpa\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"flex\",{\"0\":{\"26\":1,\"289\":1,\"411\":1,\"437\":1,\"596\":1,\"622\":1,\"782\":1,\"808\":1,\"975\":1,\"1001\":1,\"1192\":1,\"1227\":1,\"1293\":1,\"1508\":1},\"1\":{\"107\":1,\"154\":1,\"289\":3,\"437\":2,\"440\":1,\"622\":3,\"625\":1,\"808\":2,\"811\":1,\"1001\":3,\"1004\":1,\"1227\":3,\"1374\":1,\"1508\":3,\"1560\":1,\"1640\":1,\"1700\":1}}],[\"flow自研了流程图绘制\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"flow后妈妈再也不用担心我加班了\",{\"1\":{\"1668\":1,\"1714\":1}}],[\"flow能给你带来什么\",{\"0\":{\"1668\":1,\"1714\":1}}],[\"flowable和activities确实大而全\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"flow作者\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"flow作为一个国产的工作流引擎\",{\"1\":{\"105\":1,\"1372\":1}}],[\"flow<\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"flow发布1\",{\"0\":{\"1611\":1}}],[\"flowchart\",{\"1\":{\"185\":1,\"321\":1,\"490\":1,\"675\":1,\"861\":1,\"1056\":1,\"1404\":1}}],[\"flowcode\",{\"1\":{\"58\":1,\"191\":1,\"239\":1,\"310\":1,\"325\":1,\"372\":1,\"383\":1,\"467\":1,\"494\":1,\"541\":1,\"568\":1,\"653\":1,\"679\":1,\"726\":1,\"754\":1,\"838\":1,\"865\":1,\"912\":1,\"947\":1,\"1032\":1,\"1060\":1,\"1102\":1,\"1111\":1,\"1148\":1,\"1256\":1,\"1325\":1,\"1410\":1,\"1458\":1,\"1529\":1}}],[\"flowcons\",{\"1\":{\"11\":2,\"17\":1,\"55\":1,\"56\":2,\"397\":2,\"402\":1,\"477\":2,\"582\":2,\"587\":1,\"663\":2,\"768\":2,\"773\":1,\"848\":2,\"961\":2,\"966\":1,\"1042\":2,\"1161\":1,\"1162\":2,\"1177\":2,\"1183\":1,\"1278\":2,\"1284\":1,\"1322\":1,\"1323\":2}}],[\"flow的门面\",{\"1\":{\"1671\":1,\"1717\":1}}],[\"flow的驾驶人\",{\"1\":{\"1670\":1,\"1716\":1}}],[\"flow的xml\",{\"1\":{\"170\":1,\"1576\":1}}],[\"flow的pom\",{\"1\":{\"136\":1,\"1542\":1}}],[\"flowuserdao\",{\"1\":{\"155\":1,\"1561\":1}}],[\"flowuser<\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"flow=\",{\"1\":{\"134\":1,\"1540\":1}}],[\"flow内置的19位雪花算法\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"flow官网挂广告\",{\"1\":{\"128\":1,\"1534\":1}}],[\"flow工作流\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"flow工作流引擎的作者\",{\"1\":{\"1666\":1,\"1712\":1}}],[\"flow工作流引擎数据库主键自增策略实现👇\",{\"1\":{\"131\":1,\"1537\":1}}],[\"flow工作流私人培训\",{\"1\":{\"127\":1,\"1533\":1}}],[\"flow工作流配置\",{\"1\":{\"22\":1,\"35\":1,\"131\":1,\"242\":1,\"245\":1,\"251\":1,\"271\":1,\"288\":2,\"366\":1,\"369\":1,\"379\":1,\"407\":1,\"436\":2,\"464\":1,\"535\":1,\"538\":1,\"548\":1,\"592\":1,\"621\":2,\"650\":1,\"720\":1,\"723\":1,\"733\":1,\"778\":1,\"807\":2,\"835\":1,\"906\":1,\"909\":1,\"919\":1,\"937\":1,\"971\":1,\"1000\":2,\"1029\":1,\"1105\":1,\"1108\":1,\"1118\":1,\"1138\":1,\"1188\":1,\"1226\":2,\"1253\":1,\"1289\":1,\"1302\":1,\"1461\":1,\"1464\":1,\"1470\":1,\"1490\":1,\"1507\":2,\"1537\":1,\"1673\":1,\"1719\":1}}],[\"flow项目非常好\",{\"1\":{\"123\":1,\"1390\":1}}],[\"flow支持跨部门的流程协作\",{\"1\":{\"105\":1,\"1372\":1}}],[\"flow来分析和优化现有业务流程\",{\"1\":{\"105\":1,\"1372\":1}}],[\"flow可用于员工招聘\",{\"1\":{\"105\":1,\"1372\":1}}],[\"flow可以用来跟踪项目任务的状态\",{\"1\":{\"105\":1,\"1372\":1}}],[\"flow源码头部的版权声明\",{\"1\":{\"104\":1,\"1371\":1}}],[\"flow采用apache\",{\"1\":{\"104\":1,\"1371\":1}}],[\"flow国产工作流引擎🎉\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"flowexception\",{\"1\":{\"70\":2,\"388\":2,\"573\":2,\"759\":2,\"952\":2,\"1166\":2,\"1286\":1,\"1337\":2}}],[\"flowstatus变量书写错误的问题\",{\"1\":{\"150\":1,\"1556\":1}}],[\"flowstatus与hisstatus可以不同\",{\"1\":{\"58\":1,\"59\":2,\"372\":1,\"373\":2,\"541\":1,\"542\":2,\"726\":1,\"727\":2,\"912\":1,\"913\":2,\"1111\":1,\"1112\":2,\"1325\":1,\"1326\":2}}],[\"flowstatus\",{\"1\":{\"57\":1,\"58\":5,\"59\":8,\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"239\":1,\"310\":1,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"371\":1,\"372\":5,\"373\":8,\"383\":1,\"467\":1,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"540\":1,\"541\":5,\"542\":8,\"568\":1,\"653\":1,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"725\":1,\"726\":5,\"727\":8,\"754\":1,\"838\":1,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"911\":1,\"912\":5,\"913\":8,\"947\":1,\"1032\":1,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1102\":1,\"1110\":1,\"1111\":5,\"1112\":8,\"1148\":1,\"1256\":1,\"1324\":1,\"1325\":5,\"1326\":8,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1458\":1,\"1529\":1}}],[\"flowskip<\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"flowtablename\",{\"1\":{\"32\":2,\"461\":2,\"647\":2,\"832\":2,\"1026\":2,\"1250\":2,\"1299\":2}}],[\"flowtask<\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"flowtaskmapper\",{\"1\":{\"24\":3,\"26\":1,\"409\":3,\"411\":1,\"594\":3,\"596\":1,\"780\":3,\"782\":1,\"973\":3,\"975\":1,\"1190\":3,\"1192\":1,\"1291\":3,\"1293\":1}}],[\"flowdefinitionmapper\",{\"1\":{\"26\":2,\"411\":2,\"596\":2,\"782\":2,\"975\":2,\"1192\":2,\"1293\":2}}],[\"flowdefinition\",{\"1\":{\"25\":3,\"410\":3,\"595\":3,\"781\":3,\"974\":3,\"1191\":3,\"1292\":3}}],[\"flowdefinition<\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"flownode<\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"flowinstance<\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"flowhistask<\",{\"1\":{\"25\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1}}],[\"flowfactory\",{\"1\":{\"10\":2,\"39\":2,\"396\":2,\"408\":1,\"581\":2,\"593\":1,\"767\":2,\"779\":1,\"960\":2,\"972\":1,\"1176\":2,\"1258\":2,\"1277\":2,\"1306\":2}}],[\"flowparams包含如下字段\",{\"1\":{\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1}}],[\"flowparams对象删除setxxx\",{\"1\":{\"149\":1,\"1555\":1,\"1654\":1,\"1726\":1}}],[\"flowparams\",{\"1\":{\"9\":5,\"28\":1,\"39\":3,\"45\":2,\"48\":2,\"58\":5,\"59\":4,\"191\":1,\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"239\":5,\"275\":4,\"310\":5,\"325\":1,\"326\":1,\"327\":1,\"332\":1,\"333\":1,\"372\":5,\"373\":4,\"383\":5,\"395\":5,\"467\":5,\"473\":2,\"476\":2,\"494\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"541\":5,\"542\":4,\"568\":5,\"580\":5,\"653\":5,\"659\":2,\"662\":2,\"679\":1,\"680\":1,\"681\":1,\"686\":1,\"687\":1,\"726\":5,\"727\":4,\"754\":5,\"766\":5,\"838\":5,\"844\":2,\"847\":2,\"865\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"912\":5,\"913\":4,\"947\":5,\"959\":5,\"1032\":5,\"1038\":2,\"1041\":2,\"1060\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1102\":5,\"1111\":5,\"1112\":4,\"1148\":5,\"1175\":5,\"1194\":1,\"1256\":5,\"1258\":3,\"1264\":2,\"1267\":2,\"1276\":5,\"1295\":1,\"1306\":3,\"1312\":2,\"1315\":2,\"1325\":5,\"1326\":4,\"1410\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1458\":5,\"1494\":4,\"1529\":5,\"1620\":2,\"1621\":2,\"1680\":2,\"1681\":2}}],[\"flow\",{\"1\":{\"0\":3,\"22\":1,\"25\":11,\"32\":7,\"35\":2,\"65\":2,\"66\":1,\"67\":5,\"70\":2,\"104\":1,\"105\":1,\"121\":1,\"131\":1,\"136\":4,\"242\":1,\"245\":5,\"251\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":2,\"259\":2,\"260\":2,\"261\":1,\"262\":2,\"263\":2,\"265\":5,\"271\":5,\"283\":2,\"286\":3,\"287\":3,\"288\":3,\"289\":3,\"290\":2,\"291\":2,\"301\":7,\"303\":2,\"304\":1,\"305\":1,\"366\":1,\"369\":5,\"379\":1,\"388\":2,\"407\":1,\"410\":11,\"431\":2,\"434\":2,\"435\":2,\"436\":3,\"437\":2,\"438\":2,\"441\":2,\"450\":7,\"452\":2,\"453\":1,\"454\":1,\"461\":7,\"464\":2,\"535\":1,\"538\":5,\"548\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":2,\"558\":2,\"560\":5,\"573\":2,\"592\":1,\"595\":11,\"616\":2,\"619\":3,\"620\":3,\"621\":4,\"622\":3,\"623\":2,\"627\":2,\"636\":7,\"638\":2,\"639\":1,\"640\":1,\"647\":7,\"650\":2,\"720\":1,\"723\":5,\"733\":1,\"736\":1,\"737\":2,\"738\":2,\"739\":2,\"740\":2,\"741\":1,\"742\":2,\"743\":5,\"744\":4,\"746\":5,\"759\":2,\"778\":1,\"781\":11,\"802\":2,\"805\":2,\"806\":2,\"807\":3,\"808\":2,\"809\":2,\"812\":2,\"821\":7,\"823\":2,\"824\":1,\"825\":1,\"832\":7,\"835\":2,\"906\":1,\"909\":5,\"919\":1,\"922\":1,\"923\":1,\"924\":2,\"925\":2,\"926\":2,\"927\":1,\"928\":2,\"929\":2,\"931\":5,\"937\":5,\"942\":2,\"943\":1,\"944\":5,\"952\":2,\"971\":1,\"974\":11,\"995\":2,\"998\":3,\"999\":3,\"1000\":3,\"1001\":3,\"1002\":2,\"1006\":2,\"1015\":7,\"1017\":2,\"1018\":1,\"1019\":1,\"1026\":7,\"1029\":2,\"1105\":1,\"1108\":5,\"1118\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1125\":2,\"1126\":2,\"1127\":2,\"1128\":1,\"1129\":2,\"1130\":2,\"1132\":5,\"1138\":5,\"1143\":2,\"1144\":1,\"1145\":5,\"1166\":2,\"1188\":1,\"1191\":11,\"1221\":2,\"1224\":3,\"1225\":3,\"1226\":3,\"1227\":3,\"1228\":2,\"1229\":2,\"1239\":7,\"1241\":2,\"1242\":1,\"1243\":1,\"1250\":7,\"1253\":2,\"1286\":7,\"1289\":1,\"1292\":11,\"1299\":7,\"1302\":2,\"1332\":2,\"1333\":1,\"1334\":5,\"1337\":2,\"1371\":1,\"1372\":1,\"1388\":1,\"1461\":1,\"1464\":5,\"1470\":1,\"1474\":1,\"1475\":1,\"1476\":1,\"1477\":2,\"1478\":2,\"1479\":2,\"1480\":1,\"1481\":2,\"1482\":2,\"1484\":5,\"1490\":5,\"1502\":2,\"1505\":3,\"1506\":3,\"1507\":3,\"1508\":3,\"1509\":2,\"1510\":2,\"1520\":7,\"1522\":2,\"1523\":1,\"1524\":1,\"1537\":1,\"1542\":4,\"1579\":1,\"1580\":2,\"1581\":1,\"1588\":1,\"1590\":1,\"1591\":4,\"1592\":3,\"1599\":1,\"1601\":1,\"1602\":2,\"1603\":1,\"1610\":1,\"1616\":1,\"1625\":1,\"1628\":1,\"1629\":2,\"1630\":1,\"1632\":1,\"1633\":2,\"1634\":1,\"1640\":1,\"1641\":1,\"1647\":1,\"1650\":1,\"1652\":2,\"1653\":1,\"1654\":4,\"1655\":1,\"1659\":1,\"1660\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1673\":1,\"1685\":1,\"1688\":1,\"1689\":2,\"1690\":1,\"1692\":1,\"1693\":2,\"1694\":1,\"1700\":1,\"1701\":1,\"1707\":1,\"1710\":1,\"1719\":1,\"1724\":2,\"1725\":1,\"1726\":4,\"1727\":1,\"1731\":1,\"1732\":1,\"1734\":1,\"1735\":1,\"1736\":1}}],[\"aggregate>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"activity\",{\"1\":{\"303\":1,\"305\":1,\"452\":1,\"454\":1,\"638\":1,\"640\":1,\"823\":1,\"825\":1,\"1017\":1,\"1019\":1,\"1241\":1,\"1243\":1,\"1522\":1,\"1524\":1}}],[\"active\",{\"1\":{\"186\":1,\"195\":1,\"322\":1,\"329\":1,\"491\":1,\"498\":1,\"676\":1,\"683\":1,\"862\":1,\"869\":1,\"1057\":1,\"1064\":1,\"1405\":1,\"1414\":1}}],[\"all\",{\"1\":{\"283\":1,\"431\":1,\"616\":1,\"802\":1,\"995\":1,\"1221\":1,\"1502\":1}}],[\"allow\",{\"1\":{\"133\":1,\"1539\":1}}],[\"authenticated\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"authorization\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"authorization=$\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"authorization1\",{\"1\":{\"242\":1,\"906\":1,\"1105\":1,\"1461\":1}}],[\"authorizehttprequests\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"author\",{\"1\":{\"0\":1,\"16\":1,\"28\":1,\"29\":1,\"37\":1,\"51\":1,\"54\":1,\"55\":1,\"56\":1,\"72\":1,\"75\":1,\"76\":1,\"78\":1,\"81\":1,\"82\":1,\"136\":1,\"243\":1,\"269\":1,\"270\":1,\"367\":1,\"466\":1,\"477\":2,\"536\":1,\"564\":1,\"565\":1,\"652\":1,\"663\":2,\"721\":1,\"750\":1,\"751\":1,\"837\":1,\"848\":2,\"907\":1,\"935\":1,\"936\":1,\"1031\":1,\"1042\":2,\"1106\":1,\"1136\":1,\"1137\":1,\"1151\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1182\":1,\"1194\":1,\"1195\":1,\"1255\":1,\"1283\":1,\"1286\":1,\"1295\":1,\"1296\":1,\"1304\":1,\"1318\":1,\"1321\":1,\"1322\":1,\"1323\":1,\"1339\":1,\"1342\":1,\"1343\":1,\"1345\":1,\"1348\":1,\"1349\":1,\"1462\":1,\"1488\":1,\"1489\":1,\"1542\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"autowired\",{\"1\":{\"270\":3,\"565\":3,\"751\":3,\"936\":3,\"1137\":3,\"1489\":3}}],[\"auto\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"a\",{\"1\":{\"239\":2,\"383\":2,\"568\":2,\"754\":2,\"947\":2,\"1102\":2,\"1148\":2,\"1458\":2}}],[\"anon\",{\"1\":{\"259\":2,\"554\":1,\"739\":2,\"925\":2,\"1126\":2,\"1478\":2}}],[\"any\",{\"1\":{\"306\":1,\"455\":1,\"641\":1,\"826\":1,\"1020\":1,\"1244\":1,\"1525\":1}}],[\"anyrequest\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"anynodecode不为空\",{\"1\":{\"207\":1,\"340\":1,\"509\":1,\"694\":1,\"880\":1,\"1076\":1,\"1426\":1}}],[\"anynodecode\",{\"1\":{\"207\":2,\"340\":2,\"509\":2,\"694\":2,\"880\":2,\"1076\":2,\"1426\":2}}],[\"antmatchers\",{\"1\":{\"258\":1,\"553\":1,\"738\":1,\"924\":1,\"1125\":1,\"1477\":1,\"1580\":1,\"1591\":1,\"1602\":1,\"1633\":1,\"1693\":1}}],[\"annotation\",{\"1\":{\"136\":4,\"1542\":4}}],[\"attack\",{\"1\":{\"136\":1,\"1542\":1}}],[\"atomicboolean\",{\"1\":{\"32\":2,\"461\":2,\"647\":2,\"832\":2,\"1026\":2,\"1250\":2,\"1299\":2}}],[\"apache\",{\"1\":{\"1629\":2,\"1689\":2}}],[\"api是前端访问前缀比如prod\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"api\",{\"1\":{\"262\":3,\"263\":3,\"557\":3,\"558\":3,\"928\":3,\"929\":3,\"1129\":3,\"1130\":3,\"1481\":3,\"1482\":3,\"1654\":2,\"1667\":1,\"1713\":1,\"1726\":2}}],[\"apijson\",{\"1\":{\"121\":1,\"1388\":1}}],[\"approver\",{\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"approval\",{\"1\":{\"277\":1,\"423\":1,\"608\":1,\"794\":1,\"987\":1,\"1207\":1,\"1214\":1,\"1496\":1}}],[\"app\",{\"1\":{\"262\":2,\"263\":2,\"557\":2,\"558\":2,\"928\":2,\"929\":2,\"1129\":2,\"1130\":2,\"1481\":2,\"1482\":2,\"1654\":2,\"1726\":2}}],[\"application\",{\"1\":{\"133\":1,\"1539\":1}}],[\"avatar\",{\"1\":{\"129\":1,\"1535\":1}}],[\"amis\",{\"1\":{\"121\":1,\"1388\":1}}],[\"advanced\",{\"0\":{\"1738\":1,\"1754\":1}}],[\"adru\",{\"1\":{\"157\":2,\"1563\":2}}],[\"admin的application\",{\"1\":{\"136\":1,\"1542\":1}}],[\"admin123\",{\"1\":{\"103\":1,\"111\":1,\"1370\":1,\"1378\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1615\":1,\"1649\":1,\"1709\":1}}],[\"admin\",{\"1\":{\"103\":1,\"111\":1,\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1370\":1,\"1378\":1,\"1511\":1,\"1587\":1,\"1598\":1,\"1609\":1,\"1615\":1,\"1643\":1,\"1649\":1,\"1703\":1,\"1709\":1}}],[\"additionalparam>\",{\"1\":{\"1629\":1,\"1689\":1}}],[\"addinterceptors\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"addinterceptor\",{\"1\":{\"33\":1,\"260\":1,\"462\":1,\"555\":1,\"648\":1,\"740\":1,\"833\":1,\"926\":1,\"1027\":1,\"1127\":1,\"1251\":1,\"1300\":1,\"1479\":1}}],[\"addinnerinterceptor\",{\"1\":{\"32\":1,\"33\":1,\"136\":3,\"461\":1,\"462\":1,\"647\":1,\"648\":1,\"832\":1,\"833\":1,\"1026\":1,\"1027\":1,\"1250\":1,\"1251\":1,\"1299\":1,\"1300\":1,\"1542\":3}}],[\"addpathpatterns\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"addsignature\",{\"1\":{\"203\":1,\"275\":2,\"336\":1,\"505\":1,\"690\":1,\"876\":1,\"1072\":1,\"1422\":1,\"1494\":2}}],[\"addserializer\",{\"1\":{\"131\":6,\"1537\":6}}],[\"addhandlers\",{\"1\":{\"201\":1,\"202\":1,\"203\":1,\"205\":1,\"275\":3,\"334\":2,\"335\":2,\"336\":2,\"337\":2,\"338\":1,\"503\":1,\"504\":1,\"505\":1,\"507\":1,\"688\":2,\"689\":2,\"690\":2,\"691\":2,\"692\":1,\"874\":1,\"875\":1,\"876\":1,\"878\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1074\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1494\":3}}],[\"addr\",{\"1\":{\"67\":2,\"944\":2,\"1145\":2,\"1334\":2}}],[\"addtasks\",{\"1\":{\"39\":4,\"1258\":4,\"1306\":4}}],[\"add\",{\"1\":{\"9\":2,\"29\":2,\"39\":1,\"67\":1,\"75\":1,\"81\":1,\"277\":1,\"395\":2,\"423\":1,\"580\":2,\"608\":1,\"766\":2,\"794\":1,\"944\":1,\"959\":2,\"987\":1,\"1145\":1,\"1154\":1,\"1157\":1,\"1175\":2,\"1195\":2,\"1207\":1,\"1214\":1,\"1258\":1,\"1276\":2,\"1296\":2,\"1306\":1,\"1334\":1,\"1342\":1,\"1348\":1,\"1496\":1}}],[\"addall\",{\"1\":{\"9\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1175\":1,\"1276\":1}}],[\"artifactid>\",{\"1\":{\"65\":2,\"136\":1,\"255\":1,\"256\":1,\"286\":3,\"287\":3,\"288\":2,\"289\":3,\"290\":4,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":4,\"551\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":4,\"736\":1,\"805\":2,\"806\":2,\"807\":2,\"808\":2,\"809\":4,\"922\":1,\"942\":2,\"998\":3,\"999\":3,\"1000\":2,\"1001\":3,\"1002\":4,\"1122\":1,\"1123\":1,\"1143\":2,\"1224\":3,\"1225\":3,\"1226\":2,\"1227\":3,\"1228\":4,\"1332\":2,\"1474\":1,\"1475\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":3,\"1509\":4,\"1542\":1,\"1579\":1,\"1590\":1,\"1601\":1,\"1629\":2,\"1632\":1,\"1640\":1,\"1647\":1,\"1657\":1,\"1689\":2,\"1692\":1,\"1700\":1,\"1707\":1,\"1729\":1}}],[\"arrays\",{\"1\":{\"32\":1,\"39\":2,\"270\":1,\"275\":8,\"295\":3,\"445\":3,\"461\":1,\"565\":1,\"631\":3,\"647\":1,\"751\":1,\"816\":3,\"832\":1,\"936\":1,\"1010\":3,\"1026\":1,\"1137\":1,\"1233\":3,\"1250\":1,\"1258\":2,\"1286\":1,\"1299\":1,\"1306\":2,\"1489\":1,\"1494\":8,\"1514\":3,\"1621\":1,\"1646\":2,\"1670\":2,\"1681\":1,\"1706\":2,\"1716\":2}}],[\"arraylist<>\",{\"1\":{\"9\":1,\"39\":1,\"75\":1,\"81\":1,\"395\":1,\"580\":1,\"766\":1,\"959\":1,\"1154\":1,\"1157\":1,\"1175\":1,\"1258\":1,\"1276\":1,\"1306\":1,\"1342\":1,\"1348\":1}}],[\"aftereval\",{\"1\":{\"55\":2,\"56\":1,\"1161\":2,\"1162\":1,\"1322\":2,\"1323\":1}}],[\"abstract\",{\"1\":{\"55\":2,\"1161\":2,\"1322\":2}}],[\"associated\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"assertutil\",{\"1\":{\"55\":2,\"1161\":2,\"1322\":2}}],[\"assignmentlistener\",{\"1\":{\"11\":2,\"397\":2,\"582\":2,\"768\":2,\"961\":2,\"1177\":2,\"1278\":2}}],[\"assignmentexplistener\",{\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"assignment\",{\"1\":{\"3\":1,\"4\":1,\"8\":2,\"16\":1,\"390\":1,\"394\":2,\"575\":1,\"579\":2,\"761\":1,\"765\":2,\"954\":1,\"958\":2,\"1169\":1,\"1170\":1,\"1174\":2,\"1182\":1,\"1270\":1,\"1271\":1,\"1275\":2,\"1283\":1,\"1672\":1,\"1718\":1}}],[\"aslist\",{\"1\":{\"32\":1,\"39\":2,\"270\":1,\"275\":8,\"295\":3,\"445\":3,\"461\":1,\"565\":1,\"631\":3,\"647\":1,\"751\":1,\"816\":3,\"832\":1,\"936\":1,\"1010\":3,\"1026\":1,\"1137\":1,\"1233\":3,\"1250\":1,\"1258\":2,\"1286\":1,\"1299\":1,\"1306\":2,\"1489\":1,\"1494\":8,\"1514\":3,\"1621\":2,\"1646\":2,\"1670\":2,\"1681\":2,\"1706\":2,\"1716\":2}}],[\"2待办任务的转办人权限\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"2结束节点\",{\"1\":{\"304\":1,\"305\":1,\"306\":1,\"307\":2,\"308\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":2,\"457\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":2,\"643\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":2,\"828\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":2,\"1022\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":2,\"1527\":1}}],[\"2转办\",{\"1\":{\"205\":1,\"304\":1,\"338\":1,\"453\":1,\"507\":1,\"639\":1,\"692\":1,\"824\":1,\"878\":1,\"1018\":1,\"1074\":1,\"1242\":1,\"1424\":1,\"1523\":1}}],[\"21\",{\"0\":{\"167\":1,\"230\":1,\"363\":1,\"532\":1,\"717\":1,\"903\":1,\"1099\":1,\"1449\":1,\"1573\":1},\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"22\",{\"0\":{\"166\":1,\"1572\":1},\"1\":{\"304\":1,\"453\":1,\"639\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"27\",{\"0\":{\"160\":1,\"165\":1,\"1566\":1,\"1571\":1}}],[\"28\",{\"0\":{\"154\":1,\"156\":1,\"157\":1,\"171\":1,\"1560\":1,\"1562\":1,\"1563\":1,\"1577\":1,\"1659\":1,\"1661\":1,\"1662\":1,\"1731\":1,\"1733\":1,\"1734\":1}}],[\"26\",{\"0\":{\"151\":1,\"1557\":1,\"1656\":1,\"1728\":1}}],[\"23\",{\"0\":{\"150\":1,\"161\":1,\"1556\":1,\"1567\":1,\"1655\":1,\"1727\":1}}],[\"25\",{\"0\":{\"147\":1,\"152\":1,\"1553\":1,\"1558\":1,\"1652\":1,\"1657\":1,\"1724\":1,\"1729\":1},\"1\":{\"123\":14,\"1390\":14}}],[\"200\",{\"1\":{\"306\":1,\"307\":1,\"455\":1,\"456\":1,\"641\":1,\"642\":1,\"826\":1,\"827\":1,\"1020\":1,\"1021\":1,\"1244\":1,\"1245\":1,\"1525\":1,\"1526\":1}}],[\"20\",{\"0\":{\"229\":1,\"362\":1,\"531\":1,\"716\":1,\"902\":1,\"1098\":1,\"1448\":1},\"1\":{\"123\":5,\"132\":1,\"303\":1,\"304\":2,\"305\":1,\"306\":2,\"452\":1,\"453\":2,\"454\":1,\"455\":2,\"638\":1,\"639\":2,\"640\":1,\"641\":2,\"823\":1,\"824\":2,\"825\":1,\"826\":2,\"1017\":1,\"1018\":2,\"1019\":1,\"1020\":2,\"1241\":1,\"1242\":2,\"1243\":1,\"1244\":2,\"1390\":5,\"1522\":1,\"1523\":2,\"1524\":1,\"1525\":2,\"1538\":1}}],[\"2023\",{\"0\":{\"170\":1,\"171\":1,\"1576\":1,\"1577\":1}}],[\"2022\",{\"1\":{\"121\":1,\"1388\":1}}],[\"2024\",{\"0\":{\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"1553\":1,\"1554\":1,\"1555\":1,\"1556\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1560\":1,\"1561\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1565\":1,\"1566\":1,\"1567\":1,\"1568\":1,\"1569\":1,\"1570\":1,\"1571\":1,\"1572\":1,\"1573\":1,\"1574\":1,\"1575\":1,\"1652\":1,\"1653\":1,\"1654\":1,\"1655\":1,\"1656\":1,\"1657\":1,\"1658\":1,\"1659\":1,\"1660\":1,\"1661\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1724\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1735\":1,\"1736\":1},\"1\":{\"16\":1,\"123\":20,\"1182\":1,\"1283\":1,\"1390\":20}}],[\"2跳转线设置\",{\"0\":{\"116\":1,\"417\":1,\"602\":1,\"788\":1,\"981\":1,\"1201\":1,\"1383\":1}}],[\"290631660\",{\"1\":{\"104\":1,\"1371\":1}}],[\"2\",{\"0\":{\"3\":1,\"9\":1,\"21\":1,\"22\":1,\"25\":1,\"29\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":2,\"37\":1,\"40\":1,\"52\":1,\"55\":1,\"59\":1,\"63\":1,\"66\":1,\"73\":1,\"76\":1,\"79\":1,\"82\":1,\"103\":1,\"114\":1,\"115\":1,\"116\":1,\"132\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"165\":1,\"170\":1,\"175\":1,\"190\":1,\"191\":1,\"192\":2,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"200\":1,\"210\":1,\"233\":1,\"234\":1,\"235\":2,\"236\":1,\"239\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"249\":1,\"250\":1,\"251\":2,\"252\":1,\"257\":1,\"258\":1,\"259\":2,\"260\":1,\"262\":1,\"268\":1,\"269\":1,\"270\":2,\"274\":1,\"278\":1,\"284\":1,\"287\":1,\"293\":1,\"299\":1,\"314\":1,\"324\":1,\"325\":1,\"326\":2,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"333\":1,\"343\":1,\"367\":1,\"368\":1,\"369\":1,\"370\":1,\"373\":1,\"377\":1,\"378\":1,\"379\":2,\"380\":1,\"383\":1,\"391\":1,\"392\":1,\"395\":1,\"406\":1,\"407\":1,\"410\":1,\"415\":1,\"416\":1,\"417\":1,\"424\":1,\"432\":1,\"435\":1,\"448\":1,\"462\":1,\"463\":1,\"464\":1,\"465\":2,\"466\":1,\"470\":1,\"482\":1,\"493\":1,\"494\":1,\"495\":2,\"496\":1,\"497\":1,\"498\":1,\"499\":1,\"502\":1,\"512\":1,\"536\":1,\"537\":1,\"538\":1,\"539\":1,\"542\":1,\"546\":1,\"547\":1,\"548\":2,\"549\":1,\"552\":1,\"553\":1,\"554\":2,\"555\":1,\"557\":1,\"563\":1,\"564\":1,\"565\":2,\"568\":1,\"576\":1,\"577\":1,\"580\":1,\"591\":1,\"592\":1,\"595\":1,\"600\":1,\"601\":1,\"602\":1,\"609\":1,\"617\":1,\"620\":1,\"629\":1,\"634\":1,\"648\":1,\"649\":1,\"650\":1,\"651\":2,\"652\":1,\"656\":1,\"667\":1,\"678\":1,\"679\":1,\"680\":2,\"681\":1,\"682\":1,\"683\":1,\"684\":1,\"687\":1,\"697\":1,\"721\":1,\"722\":1,\"723\":1,\"724\":1,\"727\":1,\"731\":1,\"732\":1,\"733\":2,\"734\":1,\"737\":1,\"738\":1,\"739\":2,\"740\":1,\"743\":1,\"749\":1,\"750\":1,\"751\":2,\"754\":1,\"762\":1,\"763\":1,\"766\":1,\"777\":1,\"778\":1,\"781\":1,\"786\":1,\"787\":1,\"788\":1,\"795\":1,\"803\":1,\"806\":1,\"819\":1,\"833\":1,\"834\":1,\"835\":1,\"836\":2,\"837\":1,\"841\":1,\"853\":1,\"864\":1,\"865\":1,\"866\":2,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"873\":1,\"883\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"913\":1,\"917\":1,\"918\":1,\"919\":2,\"920\":1,\"923\":1,\"924\":1,\"925\":2,\"926\":1,\"928\":1,\"934\":1,\"935\":1,\"936\":2,\"940\":1,\"943\":1,\"944\":1,\"947\":1,\"955\":1,\"956\":1,\"959\":1,\"970\":1,\"971\":1,\"974\":1,\"979\":1,\"980\":1,\"981\":1,\"988\":1,\"996\":1,\"999\":1,\"1008\":1,\"1013\":1,\"1027\":1,\"1028\":1,\"1029\":1,\"1030\":2,\"1031\":1,\"1035\":1,\"1046\":1,\"1059\":1,\"1060\":1,\"1061\":2,\"1062\":1,\"1063\":1,\"1064\":1,\"1065\":1,\"1066\":1,\"1069\":1,\"1079\":1,\"1102\":1,\"1106\":1,\"1107\":1,\"1108\":1,\"1109\":1,\"1112\":1,\"1116\":1,\"1117\":1,\"1118\":2,\"1119\":1,\"1124\":1,\"1125\":1,\"1126\":2,\"1127\":1,\"1129\":1,\"1135\":1,\"1136\":1,\"1137\":2,\"1141\":1,\"1144\":1,\"1148\":1,\"1152\":1,\"1155\":1,\"1158\":1,\"1161\":1,\"1169\":1,\"1175\":1,\"1187\":1,\"1188\":1,\"1191\":1,\"1195\":1,\"1199\":1,\"1200\":1,\"1201\":1,\"1208\":1,\"1215\":1,\"1222\":1,\"1225\":1,\"1231\":1,\"1237\":1,\"1251\":1,\"1252\":1,\"1253\":1,\"1254\":2,\"1255\":1,\"1259\":1,\"1270\":1,\"1276\":1,\"1288\":1,\"1289\":1,\"1292\":1,\"1296\":1,\"1300\":1,\"1301\":1,\"1302\":1,\"1303\":2,\"1304\":1,\"1307\":1,\"1319\":1,\"1322\":1,\"1326\":1,\"1330\":1,\"1333\":1,\"1340\":1,\"1343\":1,\"1346\":1,\"1349\":1,\"1370\":1,\"1381\":1,\"1382\":1,\"1383\":1,\"1394\":1,\"1409\":1,\"1410\":1,\"1411\":2,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1416\":1,\"1419\":1,\"1429\":1,\"1452\":1,\"1453\":1,\"1454\":2,\"1455\":1,\"1458\":1,\"1462\":1,\"1463\":1,\"1464\":1,\"1465\":1,\"1468\":1,\"1469\":1,\"1470\":2,\"1471\":1,\"1476\":1,\"1477\":1,\"1478\":2,\"1479\":1,\"1481\":1,\"1487\":1,\"1488\":1,\"1489\":2,\"1493\":1,\"1497\":1,\"1503\":1,\"1506\":1,\"1512\":1,\"1518\":1,\"1538\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1560\":1,\"1561\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1571\":1,\"1576\":1,\"1580\":1,\"1584\":1,\"1585\":1,\"1591\":1,\"1595\":1,\"1596\":1,\"1602\":1,\"1606\":1,\"1607\":1,\"1613\":1,\"1625\":1,\"1626\":1,\"1633\":1,\"1637\":1,\"1638\":1,\"1642\":1,\"1643\":1,\"1644\":2,\"1645\":1,\"1646\":1,\"1656\":1,\"1657\":1,\"1658\":1,\"1659\":1,\"1660\":1,\"1661\":1,\"1662\":1,\"1663\":1,\"1685\":1,\"1686\":1,\"1693\":1,\"1697\":1,\"1698\":1,\"1702\":1,\"1703\":1,\"1704\":2,\"1705\":1,\"1706\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1735\":1,\"1745\":1},\"1\":{\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"27\":1,\"32\":1,\"33\":1,\"39\":1,\"40\":1,\"42\":1,\"51\":1,\"56\":3,\"57\":1,\"72\":1,\"78\":1,\"90\":1,\"91\":1,\"104\":1,\"132\":2,\"136\":1,\"137\":1,\"157\":1,\"238\":1,\"239\":1,\"242\":1,\"245\":1,\"253\":1,\"273\":1,\"275\":8,\"276\":2,\"277\":1,\"282\":1,\"295\":3,\"300\":1,\"301\":1,\"303\":1,\"304\":2,\"305\":2,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"366\":1,\"369\":1,\"382\":1,\"394\":1,\"405\":1,\"406\":1,\"407\":1,\"423\":1,\"429\":1,\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2,\"445\":3,\"449\":1,\"450\":1,\"452\":1,\"453\":2,\"454\":2,\"455\":1,\"456\":1,\"457\":1,\"458\":1,\"461\":1,\"462\":1,\"469\":1,\"470\":1,\"535\":1,\"538\":1,\"540\":1,\"550\":1,\"567\":1,\"579\":1,\"589\":1,\"590\":1,\"591\":1,\"592\":1,\"608\":1,\"614\":1,\"615\":1,\"631\":3,\"635\":1,\"636\":1,\"638\":1,\"639\":2,\"640\":2,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"647\":1,\"648\":1,\"653\":1,\"655\":1,\"656\":1,\"720\":1,\"723\":1,\"725\":1,\"735\":1,\"741\":1,\"753\":1,\"765\":1,\"775\":1,\"776\":1,\"777\":1,\"778\":1,\"794\":1,\"800\":1,\"801\":1,\"816\":3,\"820\":1,\"821\":1,\"823\":1,\"824\":2,\"825\":2,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"832\":1,\"833\":1,\"838\":1,\"840\":1,\"841\":1,\"906\":1,\"909\":1,\"911\":1,\"921\":1,\"946\":1,\"958\":1,\"968\":1,\"969\":1,\"970\":1,\"971\":1,\"987\":1,\"993\":2,\"994\":1,\"1010\":3,\"1014\":1,\"1015\":1,\"1017\":1,\"1018\":2,\"1019\":2,\"1020\":1,\"1021\":1,\"1022\":1,\"1023\":1,\"1026\":1,\"1027\":1,\"1032\":1,\"1034\":1,\"1035\":1,\"1101\":1,\"1102\":1,\"1105\":1,\"1108\":1,\"1110\":1,\"1120\":1,\"1147\":1,\"1151\":1,\"1162\":3,\"1185\":1,\"1186\":1,\"1187\":1,\"1188\":1,\"1193\":1,\"1207\":1,\"1213\":2,\"1214\":1,\"1220\":1,\"1233\":3,\"1238\":1,\"1239\":1,\"1241\":1,\"1242\":2,\"1243\":2,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1250\":1,\"1251\":1,\"1256\":1,\"1258\":1,\"1259\":1,\"1261\":2,\"1286\":1,\"1287\":1,\"1288\":1,\"1289\":1,\"1294\":1,\"1299\":1,\"1300\":1,\"1306\":1,\"1307\":1,\"1309\":1,\"1318\":1,\"1323\":3,\"1324\":1,\"1339\":1,\"1345\":1,\"1357\":1,\"1358\":1,\"1371\":1,\"1457\":1,\"1458\":1,\"1461\":1,\"1464\":1,\"1472\":1,\"1492\":1,\"1494\":8,\"1495\":2,\"1496\":1,\"1501\":1,\"1514\":3,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":2,\"1524\":2,\"1525\":1,\"1526\":1,\"1527\":1,\"1528\":1,\"1529\":1,\"1538\":2,\"1542\":1,\"1543\":1,\"1563\":1,\"1580\":1,\"1591\":1,\"1592\":1,\"1602\":1,\"1620\":1,\"1629\":1,\"1633\":1,\"1646\":2,\"1657\":1,\"1659\":1,\"1660\":1,\"1662\":1,\"1663\":1,\"1670\":3,\"1673\":1,\"1680\":1,\"1689\":1,\"1693\":1,\"1706\":2,\"1716\":3,\"1719\":1,\"1729\":1,\"1731\":1,\"1732\":1,\"1734\":1,\"1735\":1}}],[\"24家\",{\"1\":{\"0\":1}}],[\">=\",{\"1\":{\"1676\":1,\"1722\":1}}],[\"><\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\">c\",{\"1\":{\"42\":1,\"470\":1,\"656\":1,\"841\":1,\"1035\":1,\"1261\":1,\"1309\":1}}],[\">\",{\"1\":{\"2\":2,\"9\":1,\"25\":1,\"29\":1,\"32\":2,\"33\":1,\"39\":1,\"131\":2,\"239\":1,\"258\":1,\"260\":1,\"262\":2,\"263\":2,\"270\":9,\"383\":1,\"395\":1,\"410\":1,\"461\":2,\"462\":1,\"553\":1,\"555\":1,\"557\":2,\"558\":2,\"565\":9,\"568\":1,\"580\":1,\"595\":1,\"647\":2,\"648\":1,\"738\":1,\"740\":1,\"743\":2,\"744\":2,\"751\":9,\"754\":1,\"766\":1,\"781\":1,\"832\":2,\"833\":1,\"924\":1,\"926\":1,\"928\":2,\"929\":2,\"936\":9,\"947\":1,\"959\":1,\"974\":1,\"1026\":2,\"1027\":1,\"1102\":1,\"1125\":1,\"1127\":1,\"1129\":2,\"1130\":2,\"1137\":9,\"1148\":1,\"1168\":2,\"1175\":1,\"1191\":1,\"1195\":1,\"1250\":2,\"1251\":1,\"1258\":1,\"1269\":2,\"1276\":1,\"1286\":1,\"1292\":1,\"1296\":1,\"1299\":2,\"1300\":1,\"1306\":1,\"1457\":1,\"1458\":1,\"1477\":1,\"1479\":1,\"1481\":2,\"1482\":2,\"1489\":9,\"1537\":2,\"1551\":2,\"1580\":1,\"1591\":1,\"1602\":1,\"1629\":6,\"1633\":1,\"1676\":1,\"1689\":6,\"1693\":1,\"1722\":1}}],[\"1表示办理人角色和具体办理人\",{\"1\":{\"472\":1}}],[\"1待办任务的审批人权限\",{\"1\":{\"309\":1,\"458\":1,\"644\":1,\"829\":1,\"1023\":1,\"1247\":1,\"1528\":1}}],[\"1审批中\",{\"1\":{\"304\":1,\"305\":1,\"453\":1,\"454\":1,\"639\":1,\"640\":1,\"824\":1,\"825\":1,\"1018\":1,\"1019\":1,\"1242\":1,\"1243\":1,\"1523\":1,\"1524\":1}}],[\"1审批\",{\"1\":{\"304\":1,\"338\":1,\"453\":1,\"639\":1,\"692\":1,\"824\":1,\"1018\":1,\"1242\":1,\"1523\":1}}],[\"1中间节点\",{\"1\":{\"304\":1,\"305\":1,\"306\":1,\"307\":2,\"308\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":2,\"457\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":2,\"643\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":2,\"828\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":2,\"1022\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":2,\"1527\":1}}],[\"1激活\",{\"1\":{\"303\":1,\"305\":1,\"452\":1,\"454\":1,\"638\":1,\"640\":1,\"823\":1,\"825\":1,\"1017\":1,\"1019\":1,\"1241\":1,\"1243\":1,\"1522\":1,\"1524\":1}}],[\"1已发布\",{\"1\":{\"303\":1,\"452\":1,\"638\":1,\"823\":1,\"1017\":1,\"1241\":1,\"1522\":1}}],[\"19\",{\"0\":{\"228\":1,\"361\":1,\"530\":1,\"715\":1,\"901\":1,\"1097\":1,\"1447\":1},\"1\":{\"304\":1,\"306\":1,\"453\":1,\"455\":1,\"639\":1,\"641\":1,\"824\":1,\"826\":1,\"1018\":1,\"1020\":1,\"1242\":1,\"1244\":1,\"1523\":1,\"1525\":1}}],[\"19位\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"1839683148936663047\",{\"1\":{\"746\":3}}],[\"18\",{\"0\":{\"227\":1,\"360\":1,\"529\":1,\"714\":1,\"900\":1,\"1096\":1,\"1446\":1},\"1\":{\"304\":1,\"306\":1,\"453\":1,\"455\":1,\"639\":1,\"641\":1,\"824\":1,\"826\":1,\"1018\":1,\"1020\":1,\"1242\":1,\"1244\":1,\"1523\":1,\"1525\":1}}],[\"13\",{\"0\":{\"158\":1,\"186\":1,\"222\":1,\"355\":1,\"524\":1,\"709\":1,\"895\":1,\"1057\":1,\"1091\":1,\"1405\":1,\"1441\":1,\"1564\":1,\"1663\":1,\"1735\":1},\"1\":{\"276\":2,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"429\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"614\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"800\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"993\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1213\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1495\":2,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1}}],[\"1增量sql\",{\"1\":{\"157\":1,\"1563\":1}}],[\"14\",{\"0\":{\"155\":1,\"187\":1,\"223\":1,\"356\":1,\"525\":1,\"710\":1,\"896\":1,\"1058\":1,\"1092\":1,\"1406\":1,\"1442\":1,\"1561\":1,\"1660\":1,\"1732\":1},\"1\":{\"276\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"429\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"614\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"800\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"993\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1213\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1495\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1}}],[\"14位\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"1232001396254052352l\",{\"1\":{\"1670\":1,\"1716\":1}}],[\"1232001238795685888l\",{\"1\":{\"1670\":1,\"1716\":1}}],[\"1219285650587652096l\",{\"1\":{\"1670\":1,\"1716\":1}}],[\"1219286332145274880l\",{\"1\":{\"295\":2,\"445\":2,\"631\":2,\"816\":2,\"1010\":2,\"1233\":2,\"1514\":2,\"1646\":1,\"1670\":1,\"1706\":1,\"1716\":1}}],[\"1219286332141080576l\",{\"1\":{\"295\":1,\"445\":1,\"631\":1,\"816\":1,\"1010\":1,\"1233\":1,\"1514\":1,\"1646\":1,\"1706\":1}}],[\"1212437969554771968l\",{\"1\":{\"293\":1,\"443\":1,\"629\":1,\"814\":1,\"1008\":1,\"1231\":1,\"1512\":1,\"1644\":1,\"1704\":1}}],[\"12\",{\"0\":{\"148\":1,\"170\":1,\"171\":1,\"185\":1,\"221\":1,\"354\":1,\"492\":1,\"523\":1,\"677\":1,\"708\":1,\"863\":1,\"894\":1,\"1056\":1,\"1090\":1,\"1404\":1,\"1440\":1,\"1554\":1,\"1576\":1,\"1577\":1,\"1653\":1,\"1725\":1},\"1\":{\"276\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"429\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"614\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"800\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"993\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1213\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1495\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1}}],[\"12l\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"1<\",{\"1\":{\"136\":1,\"619\":3,\"620\":3,\"621\":3,\"622\":3,\"623\":2,\"1542\":1,\"1579\":1,\"1601\":1,\"1629\":1,\"1632\":1,\"1689\":1,\"1692\":1}}],[\"1节点设置\",{\"0\":{\"115\":1,\"416\":1,\"601\":1,\"787\":1,\"980\":1,\"1200\":1,\"1382\":1}}],[\"16\",{\"0\":{\"189\":1,\"225\":1,\"358\":1,\"527\":1,\"712\":1,\"898\":1,\"1094\":1,\"1408\":1,\"1444\":1},\"1\":{\"67\":1,\"123\":1,\"304\":1,\"306\":1,\"453\":1,\"455\":1,\"639\":1,\"641\":1,\"824\":1,\"826\":1,\"944\":1,\"1018\":1,\"1020\":1,\"1145\":1,\"1242\":1,\"1244\":1,\"1334\":1,\"1390\":1,\"1523\":1,\"1525\":1}}],[\"15位雪花算法支持\",{\"1\":{\"154\":1,\"1560\":1}}],[\"15位\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"15\",{\"0\":{\"188\":1,\"224\":1,\"357\":1,\"526\":1,\"711\":1,\"897\":1,\"1093\":1,\"1407\":1,\"1443\":1},\"1\":{\"39\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1258\":1,\"1306\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1}}],[\"10<\",{\"1\":{\"434\":2,\"435\":2,\"436\":2,\"437\":2,\"438\":2}}],[\"10失效\",{\"1\":{\"304\":1,\"305\":1,\"453\":1,\"454\":1,\"639\":1,\"640\":1,\"824\":1,\"825\":1,\"1018\":1,\"1019\":1,\"1242\":1,\"1243\":1,\"1523\":1,\"1524\":1}}],[\"101\",{\"1\":{\"48\":1,\"476\":1,\"662\":1,\"847\":1,\"1041\":1,\"1267\":1,\"1315\":1}}],[\"100vh\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"100\",{\"1\":{\"45\":1,\"123\":3,\"262\":2,\"263\":3,\"303\":3,\"304\":5,\"305\":1,\"306\":7,\"307\":4,\"308\":3,\"452\":3,\"453\":5,\"454\":1,\"455\":7,\"456\":4,\"457\":3,\"473\":1,\"557\":2,\"558\":3,\"638\":3,\"639\":5,\"640\":1,\"641\":7,\"642\":4,\"643\":3,\"659\":1,\"743\":2,\"744\":3,\"823\":3,\"824\":5,\"825\":1,\"826\":7,\"827\":4,\"828\":3,\"844\":1,\"928\":2,\"929\":3,\"1017\":3,\"1018\":5,\"1019\":1,\"1020\":7,\"1021\":4,\"1022\":3,\"1038\":1,\"1129\":2,\"1130\":3,\"1241\":3,\"1242\":5,\"1243\":1,\"1244\":7,\"1245\":4,\"1246\":3,\"1264\":1,\"1312\":1,\"1390\":3,\"1481\":2,\"1482\":3,\"1522\":3,\"1523\":5,\"1524\":1,\"1525\":7,\"1526\":4,\"1527\":3,\"1620\":1,\"1621\":1,\"1680\":1,\"1681\":1}}],[\"100l\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1,\"1621\":2,\"1681\":2}}],[\"102l\",{\"1\":{\"39\":1,\"1258\":1,\"1306\":1}}],[\"10\",{\"0\":{\"150\":1,\"151\":1,\"183\":1,\"219\":1,\"322\":1,\"352\":1,\"445\":1,\"490\":1,\"521\":1,\"675\":1,\"706\":1,\"816\":1,\"861\":1,\"892\":1,\"1054\":1,\"1088\":1,\"1402\":1,\"1438\":1,\"1556\":1,\"1557\":1,\"1655\":1,\"1656\":1,\"1727\":1,\"1728\":1,\"1745\":1},\"1\":{\"39\":1,\"123\":2,\"238\":1,\"276\":1,\"303\":1,\"304\":2,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"382\":1,\"429\":1,\"452\":1,\"453\":2,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"567\":1,\"614\":1,\"638\":1,\"639\":2,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"753\":1,\"800\":1,\"823\":1,\"824\":2,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"946\":1,\"993\":1,\"1017\":1,\"1018\":2,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1101\":1,\"1147\":1,\"1213\":1,\"1241\":1,\"1242\":2,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1258\":1,\"1306\":1,\"1390\":2,\"1457\":1,\"1495\":1,\"1522\":1,\"1523\":2,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1629\":1,\"1689\":1}}],[\"1l\",{\"1\":{\"25\":1,\"136\":1,\"410\":1,\"595\":1,\"781\":1,\"974\":1,\"1191\":1,\"1292\":1,\"1542\":1}}],[\"17\",{\"0\":{\"162\":1,\"226\":1,\"359\":1,\"528\":1,\"713\":1,\"899\":1,\"1095\":1,\"1445\":1,\"1568\":1},\"1\":{\"16\":1,\"132\":2,\"304\":1,\"306\":1,\"453\":1,\"455\":1,\"639\":1,\"641\":1,\"824\":1,\"826\":1,\"1018\":1,\"1020\":1,\"1182\":1,\"1242\":1,\"1244\":1,\"1283\":1,\"1523\":1,\"1525\":1,\"1538\":2}}],[\"11\",{\"0\":{\"147\":1,\"148\":1,\"149\":1,\"184\":1,\"220\":1,\"323\":1,\"353\":1,\"446\":1,\"447\":1,\"448\":1,\"491\":1,\"522\":1,\"676\":1,\"707\":1,\"817\":1,\"818\":1,\"819\":1,\"862\":1,\"893\":1,\"1055\":1,\"1089\":1,\"1403\":1,\"1439\":1,\"1553\":1,\"1554\":1,\"1555\":1,\"1652\":1,\"1653\":1,\"1654\":1,\"1724\":1,\"1725\":1,\"1726\":1},\"1\":{\"16\":1,\"123\":2,\"132\":1,\"276\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"429\":1,\"452\":1,\"453\":1,\"454\":1,\"455\":1,\"456\":1,\"457\":1,\"614\":1,\"638\":1,\"639\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"800\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"993\":1,\"1017\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1182\":1,\"1213\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1283\":1,\"1390\":2,\"1457\":1,\"1495\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1538\":1}}],[\"1\",{\"0\":{\"2\":1,\"8\":1,\"14\":1,\"15\":1,\"19\":1,\"20\":2,\"21\":1,\"24\":1,\"28\":1,\"31\":1,\"32\":2,\"33\":1,\"35\":1,\"39\":1,\"51\":1,\"54\":1,\"58\":1,\"62\":1,\"65\":1,\"72\":1,\"75\":1,\"78\":1,\"81\":1,\"102\":1,\"113\":1,\"131\":1,\"149\":1,\"157\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":2,\"167\":1,\"173\":1,\"174\":2,\"175\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"191\":1,\"199\":1,\"207\":1,\"209\":1,\"232\":1,\"234\":1,\"238\":1,\"241\":1,\"242\":2,\"243\":1,\"245\":1,\"246\":1,\"248\":1,\"250\":1,\"254\":1,\"258\":1,\"267\":1,\"269\":1,\"273\":1,\"277\":1,\"283\":1,\"286\":1,\"292\":1,\"298\":1,\"312\":1,\"313\":2,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"325\":1,\"332\":1,\"340\":1,\"342\":1,\"365\":1,\"366\":2,\"367\":1,\"369\":1,\"370\":1,\"372\":1,\"376\":1,\"378\":1,\"382\":1,\"390\":1,\"394\":1,\"400\":1,\"401\":1,\"404\":1,\"405\":2,\"406\":1,\"409\":1,\"414\":1,\"423\":1,\"431\":1,\"434\":1,\"447\":1,\"460\":1,\"461\":2,\"462\":1,\"464\":1,\"469\":1,\"479\":1,\"480\":2,\"481\":2,\"482\":1,\"483\":1,\"484\":1,\"485\":1,\"486\":1,\"487\":1,\"488\":1,\"489\":1,\"490\":1,\"491\":1,\"492\":1,\"494\":1,\"501\":1,\"509\":1,\"511\":1,\"534\":1,\"535\":2,\"536\":1,\"538\":1,\"539\":1,\"541\":1,\"545\":1,\"547\":1,\"551\":1,\"553\":1,\"562\":1,\"564\":1,\"567\":1,\"575\":1,\"579\":1,\"585\":1,\"586\":1,\"589\":1,\"590\":2,\"591\":1,\"594\":1,\"599\":1,\"608\":1,\"616\":1,\"619\":1,\"628\":1,\"633\":1,\"646\":1,\"647\":2,\"648\":1,\"650\":1,\"655\":1,\"665\":1,\"666\":2,\"667\":1,\"668\":1,\"669\":1,\"670\":1,\"671\":1,\"672\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"679\":1,\"686\":1,\"694\":1,\"696\":1,\"719\":1,\"720\":2,\"721\":1,\"723\":1,\"724\":1,\"726\":1,\"730\":1,\"732\":1,\"736\":1,\"738\":1,\"742\":1,\"748\":1,\"750\":1,\"753\":1,\"761\":1,\"765\":1,\"771\":1,\"772\":1,\"775\":1,\"776\":2,\"777\":1,\"780\":1,\"785\":1,\"794\":1,\"802\":1,\"805\":1,\"818\":1,\"831\":1,\"832\":2,\"833\":1,\"835\":1,\"840\":1,\"850\":1,\"851\":2,\"852\":2,\"853\":1,\"854\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"859\":1,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"865\":1,\"872\":1,\"880\":1,\"882\":1,\"905\":1,\"906\":2,\"907\":1,\"909\":1,\"910\":1,\"912\":1,\"916\":1,\"918\":1,\"922\":1,\"924\":1,\"933\":1,\"935\":1,\"939\":1,\"942\":1,\"946\":1,\"954\":1,\"958\":1,\"964\":1,\"965\":1,\"968\":1,\"969\":2,\"970\":1,\"973\":1,\"978\":1,\"987\":1,\"995\":1,\"998\":1,\"1007\":1,\"1012\":1,\"1025\":1,\"1026\":2,\"1027\":1,\"1029\":1,\"1034\":1,\"1044\":1,\"1045\":2,\"1046\":1,\"1047\":1,\"1048\":1,\"1049\":1,\"1050\":1,\"1051\":1,\"1052\":1,\"1053\":1,\"1054\":1,\"1055\":1,\"1056\":1,\"1057\":1,\"1058\":1,\"1060\":1,\"1068\":1,\"1076\":1,\"1078\":1,\"1101\":1,\"1104\":1,\"1105\":2,\"1106\":1,\"1108\":1,\"1109\":1,\"1111\":1,\"1115\":1,\"1117\":1,\"1121\":1,\"1125\":1,\"1134\":1,\"1136\":1,\"1140\":1,\"1143\":1,\"1147\":1,\"1151\":1,\"1154\":1,\"1157\":1,\"1160\":1,\"1168\":1,\"1174\":1,\"1180\":1,\"1181\":1,\"1185\":1,\"1186\":2,\"1187\":1,\"1190\":1,\"1194\":1,\"1198\":1,\"1207\":1,\"1214\":1,\"1221\":1,\"1224\":1,\"1230\":1,\"1236\":1,\"1249\":1,\"1250\":2,\"1251\":1,\"1253\":1,\"1258\":1,\"1269\":1,\"1275\":1,\"1281\":1,\"1282\":1,\"1286\":1,\"1287\":2,\"1288\":1,\"1291\":1,\"1295\":1,\"1298\":1,\"1299\":2,\"1300\":1,\"1302\":1,\"1306\":1,\"1318\":1,\"1321\":1,\"1325\":1,\"1329\":1,\"1332\":1,\"1339\":1,\"1342\":1,\"1345\":1,\"1348\":1,\"1369\":1,\"1380\":1,\"1392\":1,\"1393\":2,\"1394\":1,\"1395\":1,\"1396\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1404\":1,\"1405\":1,\"1406\":1,\"1407\":1,\"1408\":1,\"1410\":1,\"1418\":1,\"1426\":1,\"1428\":1,\"1451\":1,\"1453\":1,\"1457\":1,\"1460\":1,\"1461\":2,\"1462\":1,\"1464\":1,\"1465\":1,\"1467\":1,\"1469\":1,\"1473\":1,\"1477\":1,\"1486\":1,\"1488\":1,\"1492\":1,\"1496\":1,\"1502\":1,\"1505\":1,\"1511\":1,\"1517\":1,\"1537\":1,\"1555\":1,\"1563\":1,\"1565\":1,\"1566\":1,\"1567\":1,\"1568\":1,\"1569\":1,\"1570\":1,\"1571\":1,\"1572\":2,\"1573\":1,\"1579\":1,\"1583\":1,\"1585\":1,\"1590\":1,\"1594\":1,\"1596\":1,\"1601\":1,\"1605\":1,\"1607\":1,\"1612\":1,\"1624\":1,\"1626\":1,\"1632\":1,\"1636\":1,\"1638\":1,\"1641\":1,\"1643\":1,\"1654\":1,\"1662\":1,\"1664\":1,\"1684\":1,\"1686\":1,\"1692\":1,\"1696\":1,\"1698\":1,\"1701\":1,\"1703\":1,\"1726\":1,\"1734\":1,\"1736\":1,\"1747\":1},\"1\":{\"19\":2,\"23\":1,\"27\":1,\"31\":1,\"38\":1,\"39\":3,\"40\":1,\"41\":1,\"42\":1,\"51\":1,\"57\":1,\"61\":1,\"67\":2,\"69\":1,\"72\":1,\"78\":1,\"90\":1,\"91\":1,\"123\":2,\"136\":2,\"155\":1,\"238\":1,\"239\":2,\"247\":1,\"253\":1,\"261\":1,\"273\":1,\"275\":16,\"276\":1,\"277\":5,\"278\":5,\"282\":1,\"294\":1,\"295\":3,\"300\":1,\"301\":1,\"303\":6,\"304\":5,\"305\":5,\"306\":4,\"307\":4,\"308\":4,\"309\":3,\"310\":1,\"382\":1,\"383\":1,\"384\":1,\"394\":1,\"404\":1,\"423\":5,\"424\":5,\"428\":1,\"429\":1,\"444\":1,\"445\":3,\"449\":1,\"450\":1,\"452\":6,\"453\":5,\"454\":5,\"455\":4,\"456\":4,\"457\":4,\"458\":3,\"469\":1,\"470\":1,\"472\":3,\"540\":1,\"544\":1,\"550\":1,\"556\":1,\"567\":1,\"568\":1,\"569\":1,\"572\":1,\"574\":1,\"579\":1,\"589\":2,\"608\":5,\"609\":5,\"613\":1,\"614\":1,\"615\":1,\"630\":1,\"631\":3,\"635\":1,\"636\":1,\"638\":6,\"639\":5,\"640\":5,\"641\":4,\"642\":4,\"643\":4,\"644\":3,\"646\":1,\"653\":1,\"655\":1,\"656\":1,\"725\":1,\"729\":1,\"735\":1,\"741\":1,\"753\":1,\"754\":1,\"755\":1,\"758\":1,\"760\":1,\"765\":1,\"775\":2,\"794\":5,\"795\":5,\"799\":1,\"800\":1,\"801\":1,\"815\":1,\"816\":3,\"820\":1,\"821\":1,\"823\":6,\"824\":5,\"825\":5,\"826\":4,\"827\":4,\"828\":4,\"829\":3,\"831\":1,\"838\":1,\"840\":1,\"841\":1,\"911\":1,\"915\":1,\"921\":1,\"927\":1,\"944\":2,\"946\":1,\"947\":1,\"948\":1,\"951\":1,\"953\":1,\"958\":1,\"968\":2,\"987\":5,\"988\":5,\"992\":1,\"993\":1,\"994\":1,\"1009\":1,\"1010\":3,\"1014\":1,\"1015\":1,\"1017\":6,\"1018\":5,\"1019\":5,\"1020\":4,\"1021\":4,\"1022\":4,\"1023\":3,\"1025\":1,\"1032\":1,\"1034\":1,\"1035\":1,\"1101\":1,\"1102\":2,\"1110\":1,\"1114\":1,\"1120\":1,\"1128\":1,\"1139\":1,\"1145\":2,\"1147\":1,\"1148\":1,\"1149\":1,\"1151\":1,\"1165\":1,\"1185\":2,\"1189\":1,\"1193\":1,\"1207\":5,\"1208\":5,\"1212\":1,\"1213\":1,\"1214\":5,\"1215\":5,\"1219\":1,\"1220\":1,\"1232\":1,\"1233\":3,\"1238\":1,\"1239\":1,\"1241\":6,\"1242\":5,\"1243\":5,\"1244\":4,\"1245\":4,\"1246\":4,\"1247\":3,\"1249\":1,\"1256\":1,\"1257\":1,\"1258\":3,\"1259\":1,\"1260\":1,\"1261\":1,\"1286\":2,\"1290\":1,\"1294\":1,\"1298\":1,\"1305\":1,\"1306\":3,\"1307\":1,\"1308\":1,\"1309\":1,\"1318\":1,\"1324\":1,\"1328\":1,\"1334\":2,\"1336\":1,\"1339\":1,\"1345\":1,\"1357\":1,\"1358\":1,\"1390\":2,\"1457\":1,\"1458\":2,\"1466\":1,\"1472\":1,\"1480\":1,\"1492\":1,\"1494\":16,\"1495\":1,\"1496\":5,\"1497\":5,\"1501\":1,\"1513\":1,\"1514\":3,\"1519\":1,\"1520\":1,\"1522\":6,\"1523\":5,\"1524\":5,\"1525\":4,\"1526\":4,\"1527\":4,\"1528\":3,\"1529\":1,\"1542\":2,\"1561\":1,\"1578\":1,\"1580\":1,\"1581\":1,\"1591\":1,\"1592\":1,\"1600\":1,\"1602\":1,\"1603\":1,\"1620\":1,\"1631\":1,\"1633\":1,\"1634\":1,\"1645\":1,\"1646\":2,\"1655\":1,\"1659\":1,\"1660\":1,\"1662\":2,\"1663\":1,\"1664\":2,\"1670\":2,\"1680\":1,\"1691\":1,\"1693\":1,\"1694\":1,\"1705\":1,\"1706\":2,\"1716\":2,\"1727\":1,\"1731\":1,\"1732\":1,\"1734\":2,\"1735\":1,\"1736\":2}}],[\"监听办理过程的不同环节\",{\"1\":{\"389\":1,\"574\":1,\"760\":1,\"953\":1}}],[\"监听办理过程的不同时期\",{\"1\":{\"1\":1,\"1167\":1,\"1268\":1}}],[\"监听器生命周期\",{\"1\":{\"1672\":1,\"1718\":1}}],[\"监听器生命周期图\",{\"0\":{\"6\":1,\"392\":1,\"577\":1,\"763\":1,\"956\":1,\"1172\":1,\"1273\":1}}],[\"监听器可以说是工作流引擎的上限\",{\"1\":{\"1672\":1,\"1718\":1}}],[\"监听器管理\",{\"0\":{\"1672\":1,\"1718\":1}}],[\"监听器配置页面ui调整\",{\"1\":{\"1613\":1}}],[\"监听器使用\",{\"0\":{\"393\":1,\"578\":1,\"764\":1,\"957\":1}}],[\"监听器问题修复\",{\"1\":{\"157\":1,\"1563\":1}}],[\"监听器优化配置\",{\"1\":{\"147\":1,\"1553\":1}}],[\"监听器等对象获取不到\",{\"0\":{\"134\":1,\"1540\":1}}],[\"监听器等\",{\"1\":{\"115\":1,\"416\":1,\"601\":1,\"787\":1,\"980\":1,\"1200\":1,\"1382\":1}}],[\"监听器与流程变量\",{\"1\":{\"102\":1,\"1369\":1,\"1586\":1,\"1597\":1,\"1608\":1,\"1614\":1,\"1648\":1,\"1668\":1,\"1708\":1,\"1714\":1}}],[\"监听器表达式实现类\",{\"0\":{\"76\":1,\"1158\":1,\"1343\":1}}],[\"监听器表达式策略实现类集合\",{\"1\":{\"75\":1,\"1157\":1,\"1342\":1}}],[\"监听器表达式策略接口\",{\"1\":{\"75\":1,\"1157\":1,\"1342\":1}}],[\"监听器表达式接口\",{\"0\":{\"75\":1,\"1157\":1,\"1342\":1}}],[\"监听器表达式\",{\"0\":{\"74\":1,\"1156\":1,\"1341\":1}}],[\"监听器表达式扩展\",{\"0\":{\"71\":1,\"1338\":1}}],[\"监听器参数使用\",{\"0\":{\"17\":1,\"402\":1,\"587\":1,\"773\":1,\"966\":1,\"1183\":1,\"1284\":1}}],[\"监听器变量新增返回节点信息\",{\"1\":{\"1571\":1}}],[\"监听器变量新增返回结点信息\",{\"1\":{\"165\":1}}],[\"监听器变量\",{\"1\":{\"9\":1,\"10\":1,\"16\":4,\"395\":1,\"396\":1,\"580\":1,\"581\":1,\"766\":1,\"767\":1,\"959\":1,\"960\":1,\"1175\":1,\"1176\":1,\"1182\":4,\"1276\":1,\"1277\":1,\"1283\":4}}],[\"监听器接口\",{\"1\":{\"8\":1,\"394\":1,\"579\":1,\"765\":1,\"958\":1,\"1174\":1,\"1275\":1}}],[\"监听器路径\",{\"1\":{\"4\":2,\"303\":1,\"306\":1,\"452\":1,\"455\":1,\"638\":1,\"641\":1,\"823\":1,\"826\":1,\"1017\":1,\"1020\":1,\"1170\":2,\"1241\":1,\"1244\":1,\"1271\":2,\"1522\":1,\"1525\":1}}],[\"监听器类型和监听器路径\",{\"1\":{\"400\":1,\"585\":1,\"771\":1,\"964\":1}}],[\"监听器类型\",{\"0\":{\"390\":1,\"575\":1,\"761\":1,\"954\":1},\"1\":{\"4\":1,\"303\":1,\"306\":1,\"452\":1,\"455\":1,\"638\":1,\"641\":1,\"823\":1,\"826\":1,\"1017\":1,\"1020\":1,\"1170\":1,\"1241\":1,\"1244\":1,\"1271\":1,\"1522\":1,\"1525\":1,\"1672\":1,\"1718\":1}}],[\"监听器设置\",{\"0\":{\"4\":1,\"1170\":1,\"1271\":1},\"1\":{\"4\":1,\"1170\":1,\"1271\":1}}],[\"监听器小类\",{\"0\":{\"3\":1,\"1169\":1,\"1270\":1}}],[\"监听器大类\",{\"0\":{\"2\":1,\"1168\":1,\"1269\":1}}],[\"监听器\",{\"0\":{\"1\":1,\"389\":1,\"574\":1,\"760\":1,\"953\":1,\"1167\":1,\"1268\":1}}],[\"在一些特殊场景下\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"在某些情况下\",{\"1\":{\"1667\":1,\"1713\":1}}],[\"在pom\",{\"1\":{\"1630\":1,\"1690\":1}}],[\"在监听器中\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"在执行流程时\",{\"1\":{\"310\":1,\"467\":1,\"653\":1,\"838\":1,\"1032\":1,\"1256\":1,\"1529\":1}}],[\"在执行互斥网关时候\",{\"1\":{\"237\":1,\"1100\":1,\"1456\":1}}],[\"在开始之前\",{\"1\":{\"282\":1,\"430\":1,\"615\":1,\"801\":1,\"994\":1,\"1220\":1,\"1501\":1}}],[\"在前端加载设计器页面路径后面\",{\"1\":{\"271\":1,\"937\":1,\"1138\":1,\"1490\":1}}],[\"在使用mybatis扩展包时\",{\"1\":{\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1673\":1,\"1719\":1}}],[\"在人力资源管理中\",{\"1\":{\"105\":1,\"1372\":1}}],[\"在项目管理中\",{\"1\":{\"105\":1,\"1372\":1}}],[\"在resource目录下新建meta\",{\"1\":{\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1}}],[\"在流程变量中传入$\",{\"1\":{\"1620\":1,\"1680\":1}}],[\"在流程定义中配置\",{\"1\":{\"2\":1,\"391\":1,\"576\":1,\"762\":1,\"955\":1,\"1168\":1,\"1269\":1}}],[\"在流程节点中配置\",{\"1\":{\"2\":1,\"391\":1,\"576\":1,\"762\":1,\"955\":1,\"1168\":1,\"1269\":1}}],[\"在办理流程过程中\",{\"1\":{\"1\":1,\"389\":1,\"574\":1,\"760\":1,\"953\":1,\"1167\":1,\"1268\":1}}],[\"在此\",{\"1\":{\"0\":4}}],[\"成员项目\",{\"1\":{\"0\":1}}],[\"个人详情\",{\"1\":{\"0\":1}}],[\"个人\",{\"1\":{\"0\":1,\"83\":2,\"1350\":2}}],[\"正在使用\",{\"1\":{\"0\":1}}],[\"io\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"ioexception\",{\"1\":{\"70\":1,\"131\":1,\"388\":1,\"573\":1,\"759\":1,\"952\":1,\"1166\":1,\"1337\":1,\"1537\":1}}],[\"img\",{\"1\":{\"1626\":1,\"1627\":1,\"1630\":2,\"1686\":1,\"1687\":1,\"1690\":2}}],[\"importxml\",{\"1\":{\"176\":1,\"292\":1,\"313\":1,\"442\":1,\"481\":1,\"628\":1,\"666\":1,\"813\":1,\"852\":1,\"1007\":1,\"1047\":1,\"1230\":1,\"1395\":1,\"1511\":1,\"1643\":1,\"1670\":1,\"1703\":1,\"1716\":1}}],[\"import\",{\"1\":{\"136\":8,\"263\":3,\"558\":3,\"744\":1,\"929\":3,\"1130\":3,\"1482\":3,\"1542\":8}}],[\"impl\",{\"1\":{\"10\":1,\"1176\":1,\"1277\":1}}],[\"implements\",{\"1\":{\"9\":1,\"10\":1,\"11\":1,\"16\":1,\"29\":1,\"32\":1,\"33\":1,\"37\":1,\"55\":1,\"70\":1,\"76\":1,\"82\":1,\"243\":1,\"248\":1,\"260\":1,\"270\":1,\"310\":1,\"367\":1,\"376\":1,\"388\":1,\"395\":1,\"396\":1,\"397\":1,\"461\":1,\"462\":1,\"466\":1,\"467\":1,\"477\":1,\"536\":1,\"545\":1,\"555\":1,\"565\":1,\"573\":1,\"580\":1,\"581\":1,\"582\":1,\"647\":1,\"648\":1,\"652\":1,\"653\":1,\"663\":1,\"721\":1,\"730\":1,\"740\":1,\"751\":1,\"759\":1,\"766\":1,\"767\":1,\"768\":1,\"832\":1,\"833\":1,\"837\":1,\"838\":1,\"848\":1,\"907\":1,\"916\":1,\"926\":1,\"936\":1,\"952\":1,\"959\":1,\"960\":1,\"961\":1,\"1026\":1,\"1027\":1,\"1031\":1,\"1032\":1,\"1042\":1,\"1106\":1,\"1115\":1,\"1127\":1,\"1137\":1,\"1155\":1,\"1158\":1,\"1161\":1,\"1166\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1182\":1,\"1195\":1,\"1250\":1,\"1251\":1,\"1255\":1,\"1256\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":1,\"1286\":1,\"1296\":1,\"1299\":1,\"1300\":1,\"1304\":1,\"1322\":1,\"1337\":1,\"1343\":1,\"1349\":1,\"1462\":1,\"1467\":1,\"1479\":1,\"1489\":1,\"1529\":1}}],[\"illegalaccessexception\",{\"1\":{\"1286\":1}}],[\"ignore为false\",{\"1\":{\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"338\":1,\"507\":1,\"692\":1,\"878\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"ignore\",{\"1\":{\"192\":1,\"193\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"338\":1,\"495\":1,\"496\":1,\"501\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"692\":1,\"866\":1,\"867\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"1061\":1,\"1062\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1411\":1,\"1412\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1}}],[\"ignoretable\",{\"1\":{\"32\":2,\"33\":1,\"461\":2,\"462\":1,\"647\":2,\"648\":1,\"832\":2,\"833\":1,\"1026\":2,\"1027\":1,\"1250\":2,\"1251\":1,\"1299\":2,\"1300\":1}}],[\"izbp18ilgi6s1lkbmmfo2jz\",{\"1\":{\"132\":2,\"1538\":2}}],[\"it服务管理\",{\"1\":{\"105\":1,\"1372\":1}}],[\"item\",{\"1\":{\"0\":3,\"124\":3,\"129\":4,\"1530\":3,\"1535\":4}}],[\"ip\",{\"1\":{\"67\":1,\"261\":1,\"265\":1,\"556\":1,\"560\":1,\"927\":1,\"931\":1,\"944\":1,\"1128\":1,\"1132\":1,\"1145\":1,\"1334\":1,\"1480\":1,\"1484\":1,\"1581\":1,\"1603\":1,\"1634\":1,\"1694\":1}}],[\"id>\",{\"1\":{\"1629\":5,\"1630\":1,\"1689\":5,\"1690\":1}}],[\"ideaprojects\",{\"1\":{\"292\":1,\"442\":1,\"628\":1,\"813\":1,\"1007\":1,\"1230\":1,\"1511\":1,\"1628\":1,\"1629\":2,\"1643\":1,\"1688\":1,\"1689\":2,\"1703\":1}}],[\"id=1839683148936663047\",{\"1\":{\"265\":2,\"560\":2,\"931\":2,\"1132\":2,\"1484\":2}}],[\"id=\",{\"1\":{\"265\":1,\"560\":1,\"931\":1,\"1132\":1,\"1484\":1}}],[\"id=$\",{\"1\":{\"261\":1,\"262\":1,\"263\":1,\"265\":1,\"556\":1,\"557\":1,\"558\":1,\"560\":1,\"927\":1,\"928\":1,\"929\":1,\"931\":1,\"1128\":1,\"1129\":1,\"1130\":1,\"1132\":1,\"1480\":1,\"1481\":1,\"1482\":1,\"1484\":1,\"1581\":1,\"1603\":1,\"1634\":1,\"1654\":1,\"1694\":1,\"1726\":1}}],[\"id=xxx\",{\"1\":{\"67\":1,\"944\":1,\"1145\":1,\"1334\":1}}],[\"idfill\",{\"1\":{\"248\":1,\"376\":1,\"545\":1,\"730\":1,\"916\":1,\"1115\":1,\"1467\":1}}],[\"id设置正序排列\",{\"0\":{\"225\":1,\"358\":1,\"527\":1,\"712\":1,\"898\":1,\"1094\":1,\"1444\":1},\"1\":{\"225\":1,\"358\":1,\"527\":1,\"712\":1,\"898\":1,\"1094\":1,\"1444\":1}}],[\"ids\",{\"1\":{\"181\":1,\"210\":2,\"221\":2,\"317\":1,\"343\":2,\"354\":2,\"486\":1,\"512\":2,\"523\":2,\"671\":1,\"697\":2,\"708\":2,\"857\":1,\"883\":2,\"894\":2,\"1052\":1,\"1079\":2,\"1090\":2,\"1400\":1,\"1429\":2,\"1440\":2}}],[\"id内存策略新增14\",{\"1\":{\"154\":1,\"1560\":1}}],[\"id生成器类型\",{\"1\":{\"131\":1,\"242\":1,\"366\":1,\"535\":1,\"720\":1,\"906\":1,\"1105\":1,\"1461\":1,\"1537\":1}}],[\"id精度丢失\",{\"0\":{\"131\":1,\"1537\":1}}],[\"idutils\",{\"1\":{\"58\":1,\"248\":1,\"310\":1,\"372\":1,\"376\":1,\"467\":1,\"541\":1,\"545\":1,\"653\":1,\"726\":1,\"730\":1,\"838\":1,\"912\":1,\"916\":1,\"1032\":1,\"1111\":1,\"1115\":1,\"1256\":1,\"1325\":1,\"1467\":1,\"1529\":1}}],[\"id\",{\"1\":{\"32\":2,\"33\":1,\"58\":3,\"177\":1,\"178\":2,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"195\":1,\"196\":1,\"209\":2,\"219\":2,\"239\":1,\"303\":2,\"304\":5,\"305\":4,\"306\":3,\"307\":3,\"308\":4,\"309\":2,\"310\":3,\"315\":1,\"316\":1,\"318\":1,\"319\":1,\"320\":1,\"322\":1,\"323\":1,\"329\":1,\"330\":1,\"342\":2,\"352\":2,\"372\":3,\"383\":1,\"452\":2,\"453\":5,\"454\":4,\"455\":3,\"456\":3,\"457\":4,\"458\":2,\"461\":2,\"462\":1,\"467\":3,\"482\":1,\"483\":2,\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"491\":1,\"492\":1,\"498\":1,\"499\":1,\"511\":2,\"521\":2,\"541\":3,\"568\":1,\"638\":2,\"639\":5,\"640\":4,\"641\":3,\"642\":3,\"643\":4,\"644\":2,\"647\":2,\"648\":1,\"653\":3,\"667\":1,\"668\":2,\"669\":1,\"670\":1,\"672\":1,\"673\":1,\"674\":1,\"676\":1,\"677\":1,\"683\":1,\"684\":1,\"696\":2,\"706\":2,\"726\":3,\"754\":1,\"823\":2,\"824\":5,\"825\":4,\"826\":3,\"827\":3,\"828\":4,\"829\":2,\"832\":2,\"833\":1,\"838\":3,\"853\":1,\"854\":2,\"855\":1,\"856\":1,\"858\":1,\"859\":1,\"860\":1,\"862\":1,\"863\":1,\"869\":1,\"870\":1,\"882\":2,\"892\":2,\"912\":3,\"947\":1,\"1017\":2,\"1018\":5,\"1019\":4,\"1020\":3,\"1021\":3,\"1022\":4,\"1023\":2,\"1026\":2,\"1027\":1,\"1032\":3,\"1048\":1,\"1049\":2,\"1050\":1,\"1051\":1,\"1053\":1,\"1054\":1,\"1055\":1,\"1057\":1,\"1058\":1,\"1064\":1,\"1065\":1,\"1078\":2,\"1088\":2,\"1102\":1,\"1111\":3,\"1148\":1,\"1241\":2,\"1242\":5,\"1243\":4,\"1244\":3,\"1245\":3,\"1246\":4,\"1247\":2,\"1250\":2,\"1251\":1,\"1256\":3,\"1299\":2,\"1300\":1,\"1325\":3,\"1396\":1,\"1397\":2,\"1398\":1,\"1399\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1405\":1,\"1406\":1,\"1407\":1,\"1408\":1,\"1414\":1,\"1415\":1,\"1428\":2,\"1438\":2,\"1458\":1,\"1522\":2,\"1523\":5,\"1524\":4,\"1525\":3,\"1526\":3,\"1527\":4,\"1528\":2,\"1529\":3}}],[\"i++\",{\"1\":{\"11\":1,\"397\":1,\"582\":1,\"768\":1,\"961\":1,\"1177\":1,\"1278\":1}}],[\"i\",{\"1\":{\"11\":4,\"123\":1,\"397\":4,\"582\":4,\"768\":4,\"961\":4,\"1177\":4,\"1278\":4,\"1390\":1}}],[\"isolaction\",{\"1\":{\"245\":1,\"369\":1,\"538\":1,\"723\":1,\"909\":1,\"1108\":1,\"1464\":1}}],[\"is\",{\"1\":{\"176\":1,\"303\":1,\"313\":1,\"452\":1,\"481\":1,\"638\":1,\"666\":1,\"823\":1,\"852\":1,\"1017\":1,\"1047\":1,\"1241\":1,\"1395\":1,\"1522\":1}}],[\"issue是社区的交流地\",{\"1\":{\"87\":1,\"1354\":1}}],[\"isintercept\",{\"1\":{\"51\":2,\"54\":1,\"72\":2,\"78\":2,\"1151\":2,\"1160\":1,\"1318\":2,\"1321\":1,\"1339\":2,\"1345\":2}}],[\"isnumeric\",{\"1\":{\"56\":1,\"1162\":1,\"1323\":1}}],[\"isnull\",{\"1\":{\"10\":2,\"55\":1,\"248\":1,\"376\":1,\"396\":1,\"545\":1,\"581\":1,\"730\":1,\"767\":1,\"916\":1,\"960\":1,\"1115\":1,\"1161\":1,\"1176\":2,\"1277\":2,\"1322\":1,\"1467\":1}}],[\"isnotempty\",{\"1\":{\"11\":1,\"17\":1,\"70\":2,\"388\":2,\"397\":1,\"402\":1,\"573\":2,\"582\":1,\"587\":1,\"759\":2,\"768\":1,\"773\":1,\"952\":2,\"961\":1,\"966\":1,\"1166\":2,\"1177\":1,\"1183\":1,\"1278\":1,\"1284\":1,\"1337\":2}}],[\"isnotnull\",{\"1\":{\"10\":2,\"82\":1,\"248\":5,\"376\":5,\"396\":2,\"477\":1,\"545\":5,\"581\":2,\"663\":1,\"730\":5,\"767\":2,\"848\":1,\"916\":5,\"960\":2,\"1042\":1,\"1115\":5,\"1155\":1,\"1176\":2,\"1277\":2,\"1349\":1,\"1467\":5}}],[\"isempty\",{\"1\":{\"9\":1,\"55\":1,\"82\":3,\"395\":1,\"477\":3,\"580\":1,\"663\":3,\"766\":1,\"848\":3,\"959\":1,\"1042\":3,\"1155\":3,\"1161\":1,\"1175\":1,\"1276\":1,\"1322\":1,\"1349\":3}}],[\"iframe中访问设计器接口由\",{\"1\":{\"1654\":1,\"1726\":1}}],[\"iframe>\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"iframeurl\",{\"1\":{\"263\":2,\"558\":2,\"744\":2,\"929\":2,\"1130\":2,\"1482\":2}}],[\"iframe\",{\"1\":{\"263\":1,\"558\":1,\"744\":1,\"929\":1,\"1130\":1,\"1482\":1}}],[\"iframe监听组件内设计器保存事件\",{\"1\":{\"262\":1,\"263\":1,\"557\":1,\"558\":1,\"743\":1,\"744\":1,\"928\":1,\"929\":1,\"1129\":1,\"1130\":1,\"1481\":1,\"1482\":1}}],[\"iframeloaded\",{\"1\":{\"262\":2,\"263\":2,\"557\":2,\"558\":2,\"743\":2,\"744\":2,\"928\":2,\"929\":2,\"1129\":2,\"1130\":2,\"1481\":2,\"1482\":2}}],[\"if\",{\"1\":{\"9\":2,\"10\":5,\"11\":1,\"17\":1,\"29\":3,\"32\":3,\"33\":1,\"56\":1,\"58\":1,\"59\":2,\"70\":2,\"82\":3,\"131\":1,\"248\":4,\"270\":3,\"372\":1,\"373\":2,\"376\":4,\"388\":2,\"395\":2,\"396\":4,\"397\":1,\"402\":1,\"461\":3,\"462\":1,\"477\":3,\"541\":1,\"542\":2,\"545\":4,\"565\":3,\"573\":2,\"580\":2,\"581\":4,\"582\":1,\"587\":1,\"647\":3,\"648\":1,\"663\":3,\"726\":1,\"727\":2,\"730\":4,\"751\":3,\"759\":2,\"766\":2,\"767\":4,\"768\":1,\"773\":1,\"832\":3,\"833\":1,\"848\":3,\"912\":1,\"913\":2,\"916\":4,\"936\":3,\"952\":2,\"959\":2,\"960\":4,\"961\":1,\"966\":1,\"1026\":3,\"1027\":1,\"1042\":3,\"1111\":1,\"1112\":2,\"1115\":4,\"1137\":3,\"1155\":3,\"1162\":1,\"1166\":2,\"1175\":2,\"1176\":5,\"1177\":1,\"1183\":1,\"1195\":3,\"1250\":3,\"1251\":1,\"1276\":2,\"1277\":5,\"1278\":1,\"1284\":1,\"1286\":2,\"1296\":3,\"1299\":3,\"1300\":1,\"1323\":1,\"1325\":1,\"1326\":2,\"1337\":2,\"1349\":3,\"1467\":4,\"1489\":3,\"1537\":1}}],[\"inner\",{\"1\":{\"136\":3,\"1542\":3}}],[\"include\",{\"1\":{\"134\":1,\"1540\":1}}],[\"invocationtargetexception\",{\"1\":{\"132\":1,\"1538\":1}}],[\"initialization\",{\"1\":{\"133\":2,\"1539\":2}}],[\"initflow\",{\"0\":{\"133\":1,\"1539\":1},\"1\":{\"133\":1,\"1539\":1}}],[\"init\",{\"1\":{\"98\":1,\"1365\":1}}],[\"index\",{\"1\":{\"67\":5,\"261\":1,\"262\":1,\"263\":1,\"265\":5,\"556\":1,\"557\":1,\"558\":1,\"560\":5,\"746\":1,\"927\":1,\"928\":1,\"929\":1,\"931\":5,\"944\":5,\"1128\":1,\"1129\":1,\"1130\":1,\"1132\":5,\"1145\":5,\"1334\":5,\"1480\":1,\"1481\":1,\"1482\":1,\"1484\":5,\"1581\":1,\"1603\":1,\"1634\":1,\"1654\":1,\"1694\":1,\"1726\":1}}],[\"inf\",{\"1\":{\"66\":1,\"70\":1,\"388\":1,\"573\":1,\"759\":1,\"943\":1,\"952\":1,\"1144\":1,\"1166\":1,\"1333\":1,\"1337\":1}}],[\"info\",{\"1\":{\"9\":2,\"10\":2,\"11\":2,\"16\":8,\"17\":1,\"310\":2,\"395\":2,\"396\":2,\"397\":2,\"402\":1,\"467\":2,\"580\":2,\"581\":2,\"582\":2,\"587\":1,\"653\":2,\"766\":2,\"767\":2,\"768\":2,\"773\":1,\"838\":2,\"959\":2,\"960\":2,\"961\":2,\"966\":1,\"1032\":2,\"1175\":2,\"1176\":2,\"1177\":2,\"1182\":8,\"1183\":1,\"1256\":2,\"1276\":2,\"1277\":2,\"1278\":2,\"1283\":8,\"1284\":1,\"1529\":2}}],[\"inject\",{\"1\":{\"33\":1,\"462\":1,\"648\":1,\"833\":1,\"1027\":1,\"1251\":1,\"1300\":1}}],[\"insertflow改为公共方法\",{\"1\":{\"1551\":1}}],[\"insertfill\",{\"1\":{\"248\":1,\"376\":1,\"545\":1,\"730\":1,\"916\":1,\"1115\":1,\"1467\":1}}],[\"inserttestleave\",{\"1\":{\"10\":1,\"58\":1,\"239\":1,\"310\":1,\"372\":1,\"383\":1,\"396\":1,\"467\":1,\"541\":1,\"568\":1,\"581\":1,\"653\":1,\"726\":1,\"754\":1,\"767\":1,\"838\":1,\"912\":1,\"947\":1,\"960\":1,\"1032\":1,\"1102\":1,\"1111\":1,\"1148\":1,\"1176\":1,\"1256\":1,\"1277\":1,\"1325\":1,\"1458\":1,\"1529\":1}}],[\"insservice流程实例接口\",{\"0\":{\"190\":1,\"324\":1,\"493\":1,\"678\":1,\"864\":1,\"1059\":1,\"1409\":1}}],[\"insservice\",{\"1\":{\"45\":1,\"48\":1,\"58\":1,\"59\":1,\"162\":1,\"239\":1,\"294\":1,\"295\":3,\"310\":1,\"372\":1,\"373\":1,\"383\":1,\"444\":1,\"445\":3,\"467\":1,\"473\":1,\"476\":1,\"541\":1,\"542\":1,\"568\":1,\"630\":1,\"631\":3,\"653\":1,\"659\":1,\"662\":1,\"726\":1,\"727\":1,\"754\":1,\"815\":1,\"816\":3,\"838\":1,\"844\":1,\"847\":1,\"912\":1,\"913\":1,\"947\":1,\"1009\":1,\"1010\":3,\"1032\":1,\"1038\":1,\"1041\":1,\"1102\":1,\"1111\":1,\"1112\":1,\"1148\":1,\"1232\":1,\"1233\":3,\"1256\":1,\"1264\":1,\"1267\":1,\"1312\":1,\"1315\":1,\"1325\":1,\"1326\":1,\"1458\":1,\"1513\":1,\"1514\":3,\"1529\":1,\"1568\":1,\"1620\":1,\"1621\":1,\"1645\":1,\"1646\":2,\"1670\":2,\"1680\":1,\"1681\":1,\"1705\":1,\"1706\":2,\"1716\":2}}],[\"instanceof\",{\"1\":{\"396\":1,\"581\":1,\"767\":1,\"960\":1}}],[\"instance表的id\",{\"1\":{\"304\":1,\"308\":1,\"453\":1,\"457\":1,\"639\":1,\"643\":1,\"824\":1,\"828\":1,\"1018\":1,\"1022\":1,\"1242\":1,\"1246\":1,\"1523\":1,\"1527\":1}}],[\"instanceids\",{\"1\":{\"194\":1,\"328\":1,\"497\":1,\"682\":1,\"868\":1,\"1063\":1,\"1413\":1}}],[\"instanceid\",{\"1\":{\"185\":1,\"192\":1,\"193\":1,\"321\":1,\"326\":1,\"327\":1,\"490\":1,\"495\":1,\"496\":1,\"675\":1,\"680\":1,\"681\":1,\"861\":1,\"866\":1,\"867\":1,\"1056\":1,\"1061\":1,\"1062\":1,\"1404\":1,\"1411\":1,\"1412\":1}}],[\"instance\",{\"1\":{\"10\":9,\"11\":3,\"17\":2,\"32\":1,\"45\":2,\"48\":2,\"58\":2,\"59\":4,\"131\":7,\"239\":3,\"295\":9,\"301\":1,\"304\":1,\"308\":1,\"310\":4,\"372\":2,\"373\":4,\"383\":3,\"396\":8,\"397\":3,\"402\":2,\"445\":9,\"450\":1,\"453\":1,\"457\":1,\"461\":1,\"467\":4,\"473\":2,\"476\":2,\"541\":2,\"542\":4,\"568\":3,\"581\":8,\"582\":3,\"587\":2,\"631\":9,\"636\":1,\"639\":1,\"643\":1,\"647\":1,\"653\":4,\"659\":2,\"662\":2,\"726\":2,\"727\":4,\"754\":3,\"767\":8,\"768\":3,\"773\":2,\"816\":9,\"821\":1,\"824\":1,\"828\":1,\"832\":1,\"838\":4,\"844\":2,\"847\":2,\"912\":2,\"913\":4,\"947\":3,\"960\":8,\"961\":3,\"966\":2,\"1010\":9,\"1015\":1,\"1018\":1,\"1022\":1,\"1026\":1,\"1032\":4,\"1038\":2,\"1041\":2,\"1102\":3,\"1111\":2,\"1112\":4,\"1148\":3,\"1176\":9,\"1177\":3,\"1183\":2,\"1233\":9,\"1239\":1,\"1242\":1,\"1246\":1,\"1250\":1,\"1256\":4,\"1264\":2,\"1267\":2,\"1277\":9,\"1278\":3,\"1284\":2,\"1286\":1,\"1299\":1,\"1312\":2,\"1315\":2,\"1325\":2,\"1326\":4,\"1458\":3,\"1514\":9,\"1520\":1,\"1523\":1,\"1527\":1,\"1529\":4,\"1537\":7,\"1620\":2,\"1621\":2,\"1646\":6,\"1670\":4,\"1680\":2,\"1681\":2,\"1706\":6,\"1716\":4}}],[\"integer\",{\"1\":{\"58\":1,\"131\":6,\"310\":1,\"372\":1,\"467\":1,\"541\":1,\"653\":1,\"726\":1,\"838\":1,\"912\":1,\"1032\":1,\"1111\":1,\"1256\":1,\"1325\":1,\"1529\":1,\"1537\":6}}],[\"interceptorregistry\",{\"1\":{\"260\":1,\"555\":1,\"740\":1,\"926\":1,\"1127\":1,\"1479\":1}}],[\"interceptor\",{\"1\":{\"32\":3,\"33\":3,\"136\":8,\"461\":3,\"462\":3,\"647\":3,\"648\":3,\"832\":3,\"833\":3,\"1026\":3,\"1027\":3,\"1250\":3,\"1251\":3,\"1299\":3,\"1300\":3,\"1542\":8}}],[\"interface\",{\"1\":{\"8\":1,\"28\":1,\"51\":1,\"54\":1,\"72\":1,\"75\":1,\"78\":1,\"81\":1,\"269\":1,\"394\":1,\"477\":1,\"564\":1,\"579\":1,\"663\":1,\"750\":1,\"765\":1,\"848\":1,\"935\":1,\"958\":1,\"1042\":1,\"1136\":1,\"1151\":1,\"1154\":1,\"1157\":1,\"1160\":1,\"1174\":1,\"1194\":1,\"1275\":1,\"1295\":1,\"1318\":1,\"1321\":1,\"1339\":1,\"1342\":1,\"1345\":1,\"1348\":1,\"1488\":1,\"1585\":1,\"1596\":1,\"1607\":1,\"1638\":1,\"1698\":1}}],[\"int\",{\"1\":{\"11\":1,\"239\":1,\"383\":1,\"397\":1,\"568\":1,\"582\":1,\"754\":1,\"768\":1,\"947\":1,\"961\":1,\"1102\":1,\"1148\":1,\"1177\":1,\"1278\":1,\"1458\":1}}],[\"introduction\",{\"0\":{\"1741\":1,\"1757\":1}}],[\"intro\",{\"1\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
